Run: 50
/cm/local/apps/slurm/var/spool/job1046452/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1489/1489.pkl
working on 
../data/c/1489/class_full_MCAR_0.1_3
1.5128698348999023
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-12 12:40:42,115] A new study created in memory with name: no-name-d42a9b2e-d5d0-4b52-b8e4-cc942f9232a0
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-12 12:40:42,255] Trial 2 finished with value: 0.426336916018996 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 2 with value: 0.426336916018996.
[I 2024-11-12 12:40:42,355] Trial 0 finished with value: 0.16331552652316264 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.16331552652316264.
[I 2024-11-12 12:40:42,457] Trial 8 finished with value: 0.45026490363452537 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.16331552652316264.
running
running
running
[I 2024-11-12 12:40:42,608] Trial 5 finished with value: 0.16331552652316264 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.16331552652316264.
running
[I 2024-11-12 12:40:42,777] Trial 12 finished with value: 0.16331552652316264 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.16331552652316264.
running
[I 2024-11-12 12:40:43,636] Trial 1 finished with value: 0.1546570839933888 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1452, 'weights': 'uniform'}. Best is trial 1 with value: 0.1546570839933888.
running
[I 2024-11-12 12:40:43,831] Trial 21 finished with value: 0.16157956426483205 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.1546570839933888.
running
[I 2024-11-12 12:40:44,089] Trial 16 finished with value: 0.16441179812143975 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4012, 'weights': 'distance'}. Best is trial 1 with value: 0.1546570839933888.
running
[I 2024-11-12 12:40:45,416] Trial 17 finished with value: 0.15646153748014213 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.1546570839933888.
running
[I 2024-11-12 12:40:46,236] Trial 24 finished with value: 0.16441179812143975 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3311, 'weights': 'distance'}. Best is trial 1 with value: 0.1546570839933888.
running
[I 2024-11-12 12:40:46,388] Trial 20 finished with value: 0.1669465515696666 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 1 with value: 0.1546570839933888.
running
[I 2024-11-12 12:40:48,784] Trial 18 finished with value: 0.13171290565983046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:40:49,705] Trial 9 finished with value: 0.34213172028036476 and parameters: {'model_name': 'GAIN', 'batch_size': 95, 'hint_rate': 0.8435857167821785, 'alpha': 33, 'iterations': 1, 'learning_rate': 0.0018377128993844786, 'p_miss': 0.18675749588627397}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:40:51,654] Trial 27 finished with value: 0.3534574295886081 and parameters: {'model_name': 'GAIN', 'batch_size': 27, 'hint_rate': 0.04070120879652356, 'alpha': 81, 'iterations': 1, 'learning_rate': 0.021742859386764877, 'p_miss': 0.050194258491245106}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:40:52,960] Trial 14 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.3018478939281352, 'alpha': 20, 'iterations': 20, 'learning_rate': 0.0007279658971834189, 'p_miss': 0.058985519641558515}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:41:02,893] Trial 30 finished with value: 0.13171290565983046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:42:17,553] Trial 13 finished with value: 0.33797303879388885 and parameters: {'model_name': 'GAIN', 'batch_size': 69, 'hint_rate': 0.5750643353618683, 'alpha': 25, 'iterations': 60, 'learning_rate': 0.004465315594439982, 'p_miss': 0.28121494885762566}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:42:17,987] Trial 25 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.5123735803486773, 'alpha': 73, 'iterations': 316, 'learning_rate': 0.014187968297393017, 'p_miss': 0.09480722668978134}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:42:31,989] Trial 3 finished with value: 0.35445277903400196 and parameters: {'model_name': 'GAIN', 'batch_size': 387, 'hint_rate': 0.7194086013350369, 'alpha': 26, 'iterations': 68, 'learning_rate': 0.0002723488412070812, 'p_miss': 0.03451900778707527}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:42:42,415] Trial 34 finished with value: 0.13171290565983046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:48:16,042] Trial 23 finished with value: 0.16880412627114905 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 140, 'learning_rate': 0.00013951797290586148, 'p_miss': 0.2839196122820608}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:48:26,491] Trial 36 finished with value: 0.13171290565983046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:48:36,951] Trial 37 finished with value: 0.13171290565983046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:48:42,390] Trial 38 finished with value: 0.15617117922773827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 18 with value: 0.13171290565983046.
running
[I 2024-11-12 12:54:14,683] Trial 19 finished with value: 0.12066486858054501 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 12:54:24,286] Trial 22 finished with value: 0.12106775522062008 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:02:53,902] Trial 39 finished with value: 0.12196300565483886 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:03:25,266] Trial 26 finished with value: 0.1692416920690995 and parameters: {'model_name': 'VAE', 'batch_size': 47, 'iterations': 434, 'learning_rate': 0.0007493036305607018, 'p_miss': 0.20179014484551214}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:07:31,544] Trial 10 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.10144639231598128, 'alpha': 73, 'iterations': 5652, 'learning_rate': 0.054878994152825614, 'p_miss': 0.20521664155342254}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:08:20,914] Trial 40 finished with value: 0.12074561191517404 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:11:47,809] Trial 15 finished with value: 0.36963541944403555 and parameters: {'model_name': 'GAIN', 'batch_size': 443, 'hint_rate': 0.40555070029495693, 'alpha': 32, 'iterations': 1103, 'learning_rate': 0.005709850724888837, 'p_miss': 0.09574380413997376}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:13:18,804] Trial 4 finished with value: 0.36687544761490687 and parameters: {'model_name': 'GAIN', 'batch_size': 57, 'hint_rate': 0.5513167225746569, 'alpha': 23, 'iterations': 1294, 'learning_rate': 0.008501516588775026, 'p_miss': 0.11352393381643214}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:14:51,173] Trial 7 finished with value: 0.3522065715445108 and parameters: {'model_name': 'GAIN', 'batch_size': 42, 'hint_rate': 0.22198132959552855, 'alpha': 66, 'iterations': 1403, 'learning_rate': 0.00021147551784239603, 'p_miss': 0.07040736044169224}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:16:50,982] Trial 43 finished with value: 0.13147594547672017 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:21:15,809] Trial 44 finished with value: 0.13176326614825803 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:21:44,495] Trial 45 finished with value: 0.13107569299253174 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:25:36,660] Trial 46 finished with value: 0.13213801857348045 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:27:20,179] Trial 47 finished with value: 0.1316063978488444 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:27:50,646] Trial 53 finished with value: 0.17172270534963038 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 7, 'learning_rate': 0.08856091268038496, 'p_miss': 0.14934050446039415}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:27:53,206] Trial 54 finished with value: 0.13668401020388316 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 290, 'weights': 'uniform'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:28:39,500] Trial 48 finished with value: 0.13442223135481518 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:31:33,767] Trial 49 finished with value: 0.12133816075942032 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:35:58,980] Trial 50 finished with value: 0.12244067591183598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 19 with value: 0.12066486858054501.
running
[I 2024-11-12 13:36:11,257] Trial 51 finished with value: 0.12044385249329789 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.12044385249329789.
running
[I 2024-11-12 13:40:17,053] Trial 52 finished with value: 0.12091618647279537 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.12044385249329789.
running
[I 2024-11-12 13:42:31,454] Trial 55 finished with value: 0.11983285776585587 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.11983285776585587.
running
[I 2024-11-12 13:43:24,098] Trial 56 finished with value: 0.1225913159887851 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.11983285776585587.
running
[I 2024-11-12 13:43:24,359] Trial 62 finished with value: 0.45026490363452537 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 55 with value: 0.11983285776585587.
running
[I 2024-11-12 13:43:54,283] Trial 6 finished with value: 0.18151960110565535 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1308, 'learning_rate': 0.00018589002122140538, 'p_miss': 0.2738920026158257}. Best is trial 55 with value: 0.11983285776585587.
running
[I 2024-11-12 13:43:57,658] Trial 63 finished with value: 0.246000299673297 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 55 with value: 0.11983285776585587.
running
[I 2024-11-12 13:43:58,722] Trial 64 finished with value: 0.15608114794139502 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.11983285776585587.
running
[I 2024-11-12 13:44:01,117] Trial 65 finished with value: 0.1579937035522352 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2174, 'weights': 'uniform'}. Best is trial 55 with value: 0.11983285776585587.
running
[I 2024-11-12 13:46:16,688] Trial 57 finished with value: 0.1211063129231346 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.11983285776585587.
running
[I 2024-11-12 13:50:59,170] Trial 59 finished with value: 0.11932027758422473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 13:51:01,175] Trial 58 finished with value: 0.12200917603737818 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 13:55:14,458] Trial 60 finished with value: 0.11989788800234451 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 13:55:14,990] Trial 71 finished with value: 0.426336916018996 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 13:57:33,440] Trial 61 finished with value: 0.12176580371627788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 13:58:44,567] Trial 66 finished with value: 0.12155820567669307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 13:58:53,401] Trial 67 finished with value: 0.12142794407491 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 13:59:29,987] Trial 75 finished with value: 0.17365524557217302 and parameters: {'model_name': 'VAE', 'batch_size': 958, 'iterations': 6, 'learning_rate': 0.0018004159053576698, 'p_miss': 0.24393096834295735}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 13:59:38,625] Trial 76 finished with value: 0.1570531833857451 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:00:54,667] Trial 68 finished with value: 0.12038135274133965 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:03:31,241] Trial 70 finished with value: 0.14986184611636838 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:05:22,860] Trial 69 finished with value: 0.1206184065674861 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:05:24,865] Trial 80 finished with value: 0.1456225791313652 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10, 'weights': 'distance'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:07:39,337] Trial 72 finished with value: 0.15039412273130495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:14:05,698] Trial 77 finished with value: 0.1217378744941365 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:14:06,203] Trial 83 finished with value: 0.16157956426483205 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:14:16,447] Trial 84 finished with value: 0.15617119607861182 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:15:13,384] Trial 78 finished with value: 0.122256964953719 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:17:55,909] Trial 79 finished with value: 0.12230589609946407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:19:39,693] Trial 81 finished with value: 0.12020083911646265 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:21:51,175] Trial 29 finished with value: 0.19801353043099096 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1965, 'learning_rate': 0.00011432331626566879, 'p_miss': 0.2974481412496308}. Best is trial 59 with value: 0.11932027758422473.
running
[I 2024-11-12 14:22:05,002] Trial 82 finished with value: 0.11899975670682446 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 14:29:08,309] Trial 86 finished with value: 0.12038460279508492 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 14:31:47,860] Trial 87 finished with value: 0.11989590662734799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 14:56:45,628] Trial 88 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.9290605486998464, 'alpha': 99, 'iterations': 7650, 'learning_rate': 0.030426759406651196, 'p_miss': 0.020372601100200616}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 14:56:48,569] Trial 93 finished with value: 0.15608117441363883 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 14:57:37,698] Trial 11 finished with value: 0.17295968633740033 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 2062, 'learning_rate': 0.00033861730624801977, 'p_miss': 0.26644021304670457}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 14:59:02,784] Trial 85 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.9644961845394346, 'alpha': 0, 'iterations': 9258, 'learning_rate': 0.029289990164554587, 'p_miss': 0.012161180339869876}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:01:41,838] Trial 89 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.983871735531163, 'alpha': 98, 'iterations': 8058, 'learning_rate': 0.031097324513996993, 'p_miss': 0.021011322910621716}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:10:27,949] Trial 94 finished with value: 0.12184738213094173 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:11:39,084] Trial 95 finished with value: 0.12093003864913714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:13:00,853] Trial 96 finished with value: 0.12138754669849328 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:13:12,452] Trial 100 finished with value: 0.13269105310438417 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:15:41,588] Trial 97 finished with value: 0.123023533767155 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:20:04,150] Trial 92 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.9254089461885113, 'alpha': 0, 'iterations': 9816, 'learning_rate': 0.029463514859223685, 'p_miss': 0.15644749263264027}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:24:22,774] Trial 98 finished with value: 0.12270549843718492 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:25:40,356] Trial 99 finished with value: 0.12057361732025237 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:27:31,131] Trial 101 finished with value: 0.12299317626797177 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:30:01,141] Trial 102 finished with value: 0.12019518345515082 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:34:23,346] Trial 103 finished with value: 0.1221345474405418 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:36:19,256] Trial 90 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.9170222661055157, 'alpha': 100, 'iterations': 7255, 'learning_rate': 0.036230553137108344, 'p_miss': 0.14640195842312556}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:38:27,716] Trial 104 finished with value: 0.11960404583897088 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:39:05,576] Trial 105 finished with value: 0.13206514842324285 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:42:07,166] Trial 106 finished with value: 0.12187003751259548 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:42:18,874] Trial 112 finished with value: 0.17320596201134295 and parameters: {'model_name': 'VAE', 'batch_size': 138, 'iterations': 3, 'learning_rate': 0.0005502580746862852, 'p_miss': 0.22926650968321116}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:42:22,058] Trial 113 finished with value: 0.15878529437937897 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2411, 'weights': 'uniform'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:42:34,660] Trial 114 finished with value: 0.1311270711098778 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:43:04,275] Trial 115 finished with value: 0.24409285041271675 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:44:56,436] Trial 107 finished with value: 0.12092180134779298 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:48:11,701] Trial 108 finished with value: 0.13308657087761305 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 82 with value: 0.11899975670682446.
running
[I 2024-11-12 15:51:06,966] Trial 109 finished with value: 0.11891785160152876 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 15:51:54,997] Trial 110 finished with value: 0.1354825362942533 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 15:53:55,839] Trial 111 finished with value: 0.12023932736462184 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 15:53:56,140] Trial 121 finished with value: 0.45026490363452537 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 15:57:47,401] Trial 116 finished with value: 0.12247083943427817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 15:59:37,442] Trial 117 finished with value: 0.12212871914913337 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:02:40,377] Trial 118 finished with value: 0.12135693219034249 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:05:24,581] Trial 119 finished with value: 0.1203795345037969 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:06:08,869] Trial 120 finished with value: 0.12182871838180805 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:08:21,563] Trial 122 finished with value: 0.12205601784389548 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:12:12,056] Trial 123 finished with value: 0.1205242931473803 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:14:10,016] Trial 124 finished with value: 0.12147430877840566 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:17:12,781] Trial 125 finished with value: 0.12036288818906912 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:19:44,488] Trial 126 finished with value: 0.12141375502190352 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:19:48,257] Trial 132 finished with value: 0.15608121530742486 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:20:17,525] Trial 127 finished with value: 0.1205532209228162 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:21:29,671] Trial 134 finished with value: 0.16845066913899204 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 25, 'learning_rate': 0.0013281837695198965, 'p_miss': 0.12760017793631723}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:21:33,454] Trial 135 finished with value: 0.16441179812143975 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4323, 'weights': 'distance'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:22:40,324] Trial 128 finished with value: 0.12226735414862411 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:26:48,403] Trial 129 finished with value: 0.12154098783651064 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:28:38,384] Trial 130 finished with value: 0.1217519190057466 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:31:35,955] Trial 131 finished with value: 0.12113661309667745 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:34:11,666] Trial 133 finished with value: 0.12152592115990427 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:34:40,269] Trial 141 finished with value: 0.246000299673297 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:35:45,550] Trial 136 finished with value: 0.11978989066351631 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:35:45,885] Trial 143 finished with value: 0.16157956426483205 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:37:21,312] Trial 137 finished with value: 0.12100395213953041 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:37:34,201] Trial 145 finished with value: 0.13186709323447815 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:41:25,935] Trial 138 finished with value: 0.12138860260656985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:43:11,522] Trial 139 finished with value: 0.12049705866634004 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:45:42,572] Trial 142 finished with value: 0.18605115191751256 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:46:09,791] Trial 140 finished with value: 0.12212102145689833 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:50:11,113] Trial 144 finished with value: 0.12184895365146228 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:52:10,502] Trial 146 finished with value: 0.12046169348277136 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:52:37,656] Trial 147 finished with value: 0.18535050573381734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:57:50,627] Trial 148 finished with value: 0.12134274280997451 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 16:57:55,131] Trial 154 finished with value: 0.1560811998309368 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:00:15,958] Trial 149 finished with value: 0.12053421201859824 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:00:38,282] Trial 150 finished with value: 0.1227126374983833 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:04:27,491] Trial 151 finished with value: 0.11981771134503924 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:06:33,967] Trial 152 finished with value: 0.1224143403205209 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:07:11,867] Trial 153 finished with value: 0.1199403095460172 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:12:16,792] Trial 155 finished with value: 0.11935218104994272 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:14:44,208] Trial 156 finished with value: 0.12078897620750118 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:14:59,591] Trial 162 finished with value: 0.1684181037693999 and parameters: {'model_name': 'VAE', 'batch_size': 203, 'iterations': 2, 'learning_rate': 0.00983453299886284, 'p_miss': 0.17892644823779763}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:15:01,293] Trial 157 finished with value: 0.12277984227237711 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:15:03,683] Trial 164 finished with value: 0.15220038577826414 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1188, 'weights': 'uniform'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:18:38,354] Trial 158 finished with value: 0.12012815622485902 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:20:51,018] Trial 159 finished with value: 0.12156496987802387 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:21:38,939] Trial 160 finished with value: 0.12195599459399638 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:26:41,441] Trial 161 finished with value: 0.12150463225468781 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:29:14,860] Trial 163 finished with value: 0.12114559419533744 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:29:17,219] Trial 165 finished with value: 0.12242936871823877 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:32:46,746] Trial 166 finished with value: 0.1208634417653474 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:32:57,936] Trial 172 finished with value: 0.1561713327025948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:35:23,584] Trial 167 finished with value: 0.12191038688303146 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:35:24,365] Trial 174 finished with value: 0.426336916018996 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:35:36,805] Trial 175 finished with value: 0.13077112780386985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:36:19,269] Trial 168 finished with value: 0.1203403042136683 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:41:14,014] Trial 169 finished with value: 0.12109138459481184 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:43:42,018] Trial 170 finished with value: 0.12215536438281607 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:43:52,123] Trial 171 finished with value: 0.12224212663407666 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:47:13,203] Trial 173 finished with value: 0.1210938209765023 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:50:08,484] Trial 176 finished with value: 0.12088016840253105 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:50:58,271] Trial 177 finished with value: 0.12282058898762249 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:55:41,097] Trial 178 finished with value: 0.12130965419727913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:58:05,889] Trial 179 finished with value: 0.12209535349858931 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 17:58:26,899] Trial 180 finished with value: 0.12146355292036341 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:01:24,942] Trial 181 finished with value: 0.12091783960721843 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:04:35,538] Trial 182 finished with value: 0.1234556225862367 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:05:33,535] Trial 183 finished with value: 0.12192204503950514 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:09:56,692] Trial 184 finished with value: 0.11989261586504019 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:10:25,949] Trial 190 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.7036633770729395, 'alpha': 50, 'iterations': 16, 'learning_rate': 0.0037250024746739814, 'p_miss': 0.23675025274161393}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:12:36,263] Trial 185 finished with value: 0.12174424274257753 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:13:01,454] Trial 186 finished with value: 0.1216189117546527 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:15:40,947] Trial 187 finished with value: 0.12106571306764027 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:18:28,081] Trial 91 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.9858068398924905, 'alpha': 100, 'iterations': 8642, 'learning_rate': 0.03503230500699817, 'p_miss': 0.1640141969188789}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:18:36,787] Trial 195 finished with value: 0.1573508228260052 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 109 with value: 0.11891785160152876.
running
[I 2024-11-12 18:18:59,822] Trial 188 finished with value: 0.11876967941502632 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 188 with value: 0.11876967941502632.
running
[I 2024-11-12 18:20:06,445] Trial 189 finished with value: 0.12303801018172926 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 188 with value: 0.11876967941502632.
running
[I 2024-11-12 18:24:30,282] Trial 191 finished with value: 0.119852878583283 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 188 with value: 0.11876967941502632.
running
[I 2024-11-12 18:26:46,591] Trial 192 finished with value: 0.12171495000686065 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 18:27:16,714] Trial 193 finished with value: 0.11882707475361107 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 18:29:21,588] Trial 194 finished with value: 0.12010345976138533 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 18:31:54,057] Trial 196 finished with value: 0.1211802303019307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 18:32:09,939] Trial 197 finished with value: 0.12090410328948012 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 18:33:03,603] Trial 198 finished with value: 0.12273823166686282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 18:36:01,894] Trial 199 finished with value: 0.11902074459050453 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:04:01,666] Trial 31 finished with value: 0.16862791038895186 and parameters: {'model_name': 'VAE', 'batch_size': 736, 'iterations': 6017, 'learning_rate': 0.00010191979841371184, 'p_miss': 0.29743496467877617}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:15:33,789] Trial 35 finished with value: 0.1684623722519602 and parameters: {'model_name': 'VAE', 'batch_size': 579, 'iterations': 6318, 'learning_rate': 0.06903939435548258, 'p_miss': 0.2977607882839018}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:38:33,642] Trial 28 finished with value: 0.21431069364421776 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9343, 'learning_rate': 0.08939344079885882, 'p_miss': 0.01001305802659433}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:48:21,115] Trial 42 finished with value: 0.16828034004060108 and parameters: {'model_name': 'VAE', 'batch_size': 742, 'iterations': 7277, 'learning_rate': 0.09936323780366539, 'p_miss': 0.18351048939953132}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:49:21,674] Trial 33 finished with value: 0.16813918608329906 and parameters: {'model_name': 'VAE', 'batch_size': 507, 'iterations': 8251, 'learning_rate': 0.00010496443333726991, 'p_miss': 0.29918102369588584}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:49:28,455] Trial 32 finished with value: 0.16864759664044332 and parameters: {'model_name': 'VAE', 'batch_size': 721, 'iterations': 8553, 'learning_rate': 0.00012882911831521793, 'p_miss': 0.27474502759321817}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:55:04,935] Trial 41 finished with value: 0.16822348360185693 and parameters: {'model_name': 'VAE', 'batch_size': 747, 'iterations': 9732, 'learning_rate': 0.06551086273427804, 'p_miss': 0.17746970550431845}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:55:08,647] Trial 73 finished with value: 0.17303285490294568 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 9808, 'learning_rate': 0.0018551374920349427, 'p_miss': 0.015962028344759183}. Best is trial 188 with value: 0.11876967941502632.
[I 2024-11-12 19:56:01,996] Trial 74 finished with value: 0.17198022110657404 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 8716, 'learning_rate': 0.0015124943660062523, 'p_miss': 0.013630915694450546}. Best is trial 188 with value: 0.11876967941502632.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.11876967941502632
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8262022449816115
Generation:   4%|▍         | 1/25 [02:25<58:21, 145.88s/it]Generation:  2
Best f1_score score: 0.8296198586020754
Generation:   8%|▊         | 2/25 [02:40<26:21, 68.78s/it] Generation:  3
Best f1_score score: 0.8296198586020754
Generation:  12%|█▏        | 3/25 [02:52<15:43, 42.88s/it]Generation:  4
Best f1_score score: 0.8333186805759226
Generation:  16%|█▌        | 4/25 [03:24<13:31, 38.65s/it]Generation:  5
Best f1_score score: 0.8333186805759226
Generation:  20%|██        | 5/25 [03:48<11:07, 33.38s/it]Generation:  6
Best f1_score score: 0.8333186805759226
Generation:  24%|██▍       | 6/25 [04:03<08:30, 26.84s/it]Generation:  7
Best f1_score score: 0.8333186805759226
Generation:  28%|██▊       | 7/25 [04:16<06:44, 22.49s/it]Generation:  8
Best f1_score score: 0.8335505572024398
Generation:  32%|███▏      | 8/25 [06:18<15:18, 54.04s/it]Generation:  9
Best f1_score score: 0.8335505572024398
Generation:  36%|███▌      | 9/25 [06:37<11:31, 43.20s/it]Generation:  10
Best f1_score score: 0.8335505572024398
Generation:  40%|████      | 10/25 [07:19<10:43, 42.87s/it]Generation:  11
Best f1_score score: 0.8396706864619794
Generation:  44%|████▍     | 11/25 [08:51<13:29, 57.81s/it]Generation:  12
Best f1_score score: 0.8396706864619794
Generation:  48%|████▊     | 12/25 [09:07<09:46, 45.15s/it]Generation:  13
Best f1_score score: 0.8404662978912535
Generation:  52%|█████▏    | 13/25 [09:26<07:24, 37.07s/it]Generation:  14
Best f1_score score: 0.8415315144968014
Generation:  56%|█████▌    | 14/25 [09:46<05:52, 32.07s/it]Generation:  15
Best f1_score score: 0.8415315144968014
Generation:  60%|██████    | 15/25 [10:05<04:40, 28.07s/it]Generation:  16
Best f1_score score: 0.8415315144968014
Generation:  64%|██████▍   | 16/25 [10:23<03:45, 25.07s/it]Generation:  17
Best f1_score score: 0.8415315144968014
Generation:  68%|██████▊   | 17/25 [10:43<03:08, 23.53s/it]Generation:  18
Best f1_score score: 0.8415315144968014
Generation:  72%|███████▏  | 18/25 [11:05<02:41, 23.00s/it]Generation:  19
Best f1_score score: 0.8415315144968014
Generation:  76%|███████▌  | 19/25 [11:29<02:19, 23.27s/it]Generation:  20
Best f1_score score: 0.8415315144968014
Generation:  80%|████████  | 20/25 [11:48<01:50, 22.10s/it]Generation:  21
Best f1_score score: 0.8415315144968014
Generation:  84%|████████▍ | 21/25 [12:10<01:28, 22.06s/it]Generation:  22
Best f1_score score: 0.8415315144968014
Generation:  88%|████████▊ | 22/25 [12:34<01:08, 22.79s/it]Generation:  23
Best f1_score score: 0.8415315144968014
Generation:  92%|█████████▏| 23/25 [12:55<00:44, 22.22s/it]Generation:  24
Best f1_score score: 0.8415315144968014
Generation:  96%|█████████▌| 24/25 [13:20<00:22, 22.94s/it]Generation:  25
Best f1_score score: 0.8415315144968014
Generation: 100%|██████████| 25/25 [14:23<00:00, 35.07s/it]Generation: 100%|██████████| 25/25 [14:27<00:00, 34.70s/it]
2024-11-12 20:11:54,441 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42413' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-517cd59f157fc470f6fab3a5fae55ce9', 'ndarray-3b057068c741f9bfa307684ac9b0b8e8'} (stimulus_id='handle-worker-cleanup-1731471114.4410658')
Fitted
Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features=0.5091777198692,
                                        min_samples_leaf=2, min_samples_split=9,
                                        n_estimators=128))])
score start
train score: {'auroc': 0.9979476334309201, 'accuracy': 0.9715475364330326, 'balanced_accuracy': 0.9752566490329313, 'logloss': 0.1500567218887142, 'f1': 0.9663282045274284}
original test score: {'auroc': 0.9631505276892331, 'accuracy': 0.9093432007400555, 'balanced_accuracy': 0.9091016070160371, 'logloss': 0.25473902423130906, 'f1': 0.8943695957372132}
imputed test score: {'auroc': 0.9481518489768279, 'accuracy': 0.8926919518963923, 'balanced_accuracy': 0.8899388078682676, 'logloss': 0.28162459751491375, 'f1': 0.8751702278464883}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4af0> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.8041683980672015
Generation:   4%|▍         | 1/25 [04:46<1:54:37, 286.56s/it]Generation:  2
Best f1_score score: 0.8041683980672015
Generation:   8%|▊         | 2/25 [09:35<1:50:19, 287.79s/it]Generation:  3
Best f1_score score: 0.8153597693530592
Generation:  12%|█▏        | 3/25 [14:24<1:45:51, 288.69s/it]Generation:  4
Best f1_score score: 0.8256933990662552
Generation:  16%|█▌        | 4/25 [19:28<1:43:02, 294.39s/it]Generation:  5
Best f1_score score: 0.8358600296889254
Generation:  20%|██        | 5/25 [24:22<1:38:07, 294.39s/it]Generation:  6
Best f1_score score: 0.8358600296889254
Generation:  24%|██▍       | 6/25 [29:14<1:32:57, 293.57s/it]Generation:  7
Best f1_score score: 0.8358600296889254
Generation:  28%|██▊       | 7/25 [34:08<1:28:08, 293.82s/it]Generation:  8
Best f1_score score: 0.8358600296889254
Generation:  32%|███▏      | 8/25 [39:04<1:23:24, 294.36s/it]Generation:  9
Best f1_score score: 0.8358600296889254
Generation:  36%|███▌      | 9/25 [44:04<1:18:58, 296.15s/it]Generation:  10
Best f1_score score: 0.8358600296889254
Generation:  40%|████      | 10/25 [49:02<1:14:09, 296.64s/it]Generation:  11
Best f1_score score: 0.8358600296889254
Generation:  44%|████▍     | 11/25 [53:53<1:08:51, 295.12s/it]Generation:  12
Best f1_score score: 0.8358600296889254
Generation:  48%|████▊     | 12/25 [58:48<1:03:54, 294.94s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d76bf0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.8358600296889254
Generation:  52%|█████▏    | 13/25 [1:03:40<58:48, 294.02s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d7b430> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  14
Best f1_score score: 0.8358600296889254
Generation:  56%|█████▌    | 14/25 [1:03:53<38:21, 209.21s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fa81690> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.8358600296889254
Generation:  60%|██████    | 15/25 [1:08:45<39:02, 234.29s/it]Generation:  16
Best f1_score score: 0.8358600296889254
Generation:  64%|██████▍   | 16/25 [1:13:35<37:39, 251.02s/it]Generation:  17
Best f1_score score: 0.8379112955578485
Generation:  68%|██████▊   | 17/25 [1:18:27<35:05, 263.18s/it]Generation:  18
Best f1_score score: 0.8379112955578485
Generation:  72%|███████▏  | 18/25 [1:23:15<31:34, 270.63s/it]Generation:  19
Best f1_score score: 0.8379112955578485
Generation:  76%|███████▌  | 19/25 [1:29:17<29:49, 298.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fd4fb20> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.8379112955578485
Generation:  80%|████████  | 20/25 [1:34:08<24:40, 296.01s/it]Generation:  21
Best f1_score score: 0.8379112955578485
Generation:  84%|████████▍ | 21/25 [1:39:00<19:39, 294.76s/it]Generation:  22
Best f1_score score: 0.8379112955578485
Generation:  88%|████████▊ | 22/25 [1:43:49<14:39, 293.00s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d5c760> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.8379112955578485
Generation:  92%|█████████▏| 23/25 [1:48:39<09:44, 292.17s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e34eb00> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.8379112955578485
Generation:  96%|█████████▌| 24/25 [1:54:41<05:13, 313.08s/it]Generation:  25
Best f1_score score: 0.8379112955578485
Generation: 100%|██████████| 25/25 [2:02:16<00:00, 355.57s/it]Generation: 100%|██████████| 25/25 [2:02:16<00:00, 293.45s/it]
2024-11-12 22:15:31,057 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:35181' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-517cd59f157fc470f6fab3a5fae55ce9', 'DataFrame-55e1e2e2281af4876ec3edca78e5569c'} (stimulus_id='handle-worker-cleanup-1731478531.057202')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=RandomForestRegressor(),
                                  imputation_order='roman',
                                  initial_strategy='median',
                                  n_nearest_features=38)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features=0.9543651806011,
                                      min_samples_leaf=2, min_samples_split=6,
                                      n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9933854140057374, 'accuracy': 0.9449456396021282, 'balanced_accuracy': 0.9543562602857005, 'logloss': 0.1920955135408092, 'f1': 0.9361435831895923}
test score: {'auroc': 0.9462112078220225, 'accuracy': 0.8880666049953746, 'balanced_accuracy': 0.8903579037772309, 'logloss': 0.32402054863760604, 'f1': 0.8711189411339278}
original test score: {'auroc': 0.9608300163509341, 'accuracy': 0.9010175763182239, 'balanced_accuracy': 0.9041343914644822, 'logloss': 0.30025522023869883, 'f1': 0.8856757384518826}
score end
1489
lvl
0.1
type
MCAR
num_run
3
class_full
finished
all finished
full run takes
9.608327011863391
hours
DONE
