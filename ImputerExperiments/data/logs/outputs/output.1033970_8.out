Run: 8
/cm/local/apps/slurm/var/spool/job1033970/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/881/881.pkl
working on 
../data/c/881/class_full_MAR_0.5_1
2.3961164951324463
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-31 08:01:47,575] A new study created in memory with name: no-name-eeac888f-678a-4a7b-be74-a658155fcd73
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-31 08:01:48,619] Trial 0 finished with value: 0.5354261784779614 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.5354261784779614.
running
[I 2024-10-31 08:01:49,018] Trial 4 finished with value: 0.37278376903182453 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.37278376903182453.
running
[I 2024-10-31 08:01:49,284] Trial 9 finished with value: 0.4972674455268031 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.37278376903182453.
running
[I 2024-10-31 08:01:49,522] Trial 3 finished with value: 0.4972674455268031 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.37278376903182453.
[I 2024-10-31 08:01:49,651] Trial 6 finished with value: 0.4972674455268031 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.37278376903182453.
running
running
[I 2024-10-31 08:01:49,807] Trial 16 finished with value: 0.31845021083610725 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 16 with value: 0.31845021083610725.
running
[I 2024-10-31 08:01:51,545] Trial 17 finished with value: 0.4972674455268031 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 16 with value: 0.31845021083610725.
running
[I 2024-10-31 08:02:10,424] Trial 22 finished with value: 0.3776260466745597 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 16 with value: 0.31845021083610725.
running
[I 2024-10-31 08:02:16,570] Trial 13 finished with value: 0.30604884270653054 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 13107, 'weights': 'uniform'}. Best is trial 13 with value: 0.30604884270653054.
running
[I 2024-10-31 08:02:17,020] Trial 7 finished with value: 0.28957765625658016 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4778, 'weights': 'distance'}. Best is trial 7 with value: 0.28957765625658016.
running
[I 2024-10-31 08:02:18,232] Trial 15 finished with value: 0.3054096864514323 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12605, 'weights': 'uniform'}. Best is trial 7 with value: 0.28957765625658016.
running
[I 2024-10-31 08:02:19,259] Trial 20 finished with value: 0.2896857808395066 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4844, 'weights': 'distance'}. Best is trial 7 with value: 0.28957765625658016.
running
[I 2024-10-31 08:02:22,943] Trial 19 finished with value: 0.3169615689565385 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 23328, 'weights': 'uniform'}. Best is trial 7 with value: 0.28957765625658016.
running
[I 2024-10-31 08:02:23,835] Trial 14 finished with value: 0.2829083065217025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 14 with value: 0.2829083065217025.
running
[I 2024-10-31 08:02:24,864] Trial 21 finished with value: 0.31050596601955255 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 30386, 'weights': 'distance'}. Best is trial 14 with value: 0.2829083065217025.
running
[I 2024-10-31 08:02:27,618] Trial 2 finished with value: 0.5064754892415214 and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.3108085893965283, 'alpha': 66, 'iterations': 1, 'learning_rate': 0.05706154106001631, 'p_miss': 0.288314103547236}. Best is trial 14 with value: 0.2829083065217025.
running
[I 2024-10-31 08:02:29,615] Trial 28 finished with value: 0.5325045489269927 and parameters: {'model_name': 'GAIN', 'batch_size': 61, 'hint_rate': 0.2553667836009136, 'alpha': 97, 'iterations': 2, 'learning_rate': 0.00045601616113672485, 'p_miss': 0.028924041732938}. Best is trial 14 with value: 0.2829083065217025.
running
[I 2024-10-31 08:02:29,894] Trial 12 finished with value: 0.5229121317628486 and parameters: {'model_name': 'GAIN', 'batch_size': 870, 'hint_rate': 0.22146906214381681, 'alpha': 75, 'iterations': 2, 'learning_rate': 0.00011745016893708757, 'p_miss': 0.0975554349675149}. Best is trial 14 with value: 0.2829083065217025.
running
[I 2024-10-31 08:02:30,436] Trial 5 finished with value: 0.2814500215826407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:02:39,820] Trial 24 finished with value: 0.519603313589901 and parameters: {'model_name': 'GAIN', 'batch_size': 373, 'hint_rate': 0.6179665937397785, 'alpha': 19, 'iterations': 9, 'learning_rate': 0.008210920744755693, 'p_miss': 0.16783722930115996}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:02:51,052] Trial 25 finished with value: 0.32848888628237427 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 25, 'learning_rate': 0.01540512962339281, 'p_miss': 0.16534497896988354}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:04,328] Trial 30 finished with value: 0.2829083065217025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:04,899] Trial 29 finished with value: 0.2829083065217025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:07,957] Trial 33 finished with value: 0.2829083065217025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:08,448] Trial 31 finished with value: 0.2829083065217025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:10,797] Trial 32 finished with value: 0.2829083065217025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:15,481] Trial 34 finished with value: 0.2820034224249996 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:24,403] Trial 35 finished with value: 0.2815939586449079 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:37,358] Trial 8 finished with value: 0.2994952242982901 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:39,123] Trial 36 finished with value: 0.2815939586449079 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:50,949] Trial 37 finished with value: 0.2829083065217025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:53,061] Trial 23 finished with value: 0.29900882426395403 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:57,223] Trial 38 finished with value: 0.2814500215826407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:03:59,598] Trial 1 finished with value: 0.39040988424641065 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 5 with value: 0.2814500215826407.
running
[I 2024-10-31 08:04:03,582] Trial 39 finished with value: 0.2811377688620297 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.2811377688620297.
running
[I 2024-10-31 08:04:20,416] Trial 26 finished with value: 0.28099494268363784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 26 with value: 0.28099494268363784.
running
[I 2024-10-31 08:04:45,598] Trial 27 finished with value: 0.533415742847699 and parameters: {'model_name': 'GAIN', 'batch_size': 68, 'hint_rate': 0.533580223189079, 'alpha': 73, 'iterations': 194, 'learning_rate': 0.029591114716765086, 'p_miss': 0.04840976388432544}. Best is trial 26 with value: 0.28099494268363784.
running
[I 2024-10-31 08:04:50,068] Trial 40 finished with value: 0.30275745359271633 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 26 with value: 0.28099494268363784.
running
[I 2024-10-31 08:05:02,668] Trial 43 finished with value: 0.2814465419317214 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 26 with value: 0.28099494268363784.
running
[I 2024-10-31 08:18:43,988] Trial 11 finished with value: 0.32144596259428043 and parameters: {'model_name': 'VAE', 'batch_size': 111, 'iterations': 1197, 'learning_rate': 0.00039908783569303204, 'p_miss': 0.054093993052494765}. Best is trial 26 with value: 0.28099494268363784.
running
[I 2024-10-31 08:19:03,546] Trial 10 finished with value: 0.3655885019185657 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 1902, 'learning_rate': 0.0002684841789382679, 'p_miss': 0.29595534556528186}. Best is trial 26 with value: 0.28099494268363784.
running
[I 2024-10-31 08:19:29,212] Trial 56 finished with value: 0.28095255243353784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 56 with value: 0.28095255243353784.
running
[I 2024-10-31 08:19:54,669] Trial 57 finished with value: 0.28095255243353784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 56 with value: 0.28095255243353784.
running
[I 2024-10-31 08:20:21,773] Trial 58 finished with value: 0.28095255243353784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 56 with value: 0.28095255243353784.
running
[I 2024-10-31 08:20:49,349] Trial 59 finished with value: 0.28095255243353784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 56 with value: 0.28095255243353784.
running
[I 2024-10-31 08:20:55,438] Trial 49 finished with value: 0.4012328770971223 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2294, 'learning_rate': 0.001273630464487696, 'p_miss': 0.28813576664565893}. Best is trial 56 with value: 0.28095255243353784.
running
[I 2024-10-31 08:21:25,436] Trial 60 finished with value: 0.28095257530012857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 56 with value: 0.28095255243353784.
running
[I 2024-10-31 08:21:34,102] Trial 61 finished with value: 0.28095257530012857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 56 with value: 0.28095255243353784.
running
[I 2024-10-31 08:22:00,630] Trial 62 finished with value: 0.2809525406788267 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 62 with value: 0.2809525406788267.
running
[I 2024-10-31 08:22:08,757] Trial 63 finished with value: 0.2809525406788267 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 62 with value: 0.2809525406788267.
running
[I 2024-10-31 08:22:29,531] Trial 64 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:22:59,045] Trial 66 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:31:33,042] Trial 50 finished with value: 0.42438882255809035 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3936, 'learning_rate': 0.0012102847901856518, 'p_miss': 0.29607385663104674}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:43:26,320] Trial 44 finished with value: 0.4327869482374328 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6155, 'learning_rate': 0.001043316886068696, 'p_miss': 0.29850766488887953}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:46:44,323] Trial 51 finished with value: 0.38696592428962234 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6109, 'learning_rate': 0.0009808702336360792, 'p_miss': 0.2991206257884924}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:46:44,545] Trial 70 finished with value: 0.31845021083610725 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:47:09,516] Trial 47 finished with value: 0.40751307011557775 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7014, 'learning_rate': 0.0012641194172781996, 'p_miss': 0.25204494289914053}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:47:33,312] Trial 52 finished with value: 0.38159815993496776 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6333, 'learning_rate': 0.0015444127015144425, 'p_miss': 0.2873182970758626}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:51:57,797] Trial 45 finished with value: 0.40413359873027044 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9479, 'learning_rate': 0.0014833675714107132, 'p_miss': 0.2824835928814303}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:53:54,543] Trial 53 finished with value: 0.38605420954939074 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8047, 'learning_rate': 0.0013328202413601003, 'p_miss': 0.2976844600699642}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:55:56,087] Trial 55 finished with value: 0.3971359391580701 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7761, 'learning_rate': 0.0018139188505340474, 'p_miss': 0.2963491923932554}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:56:02,228] Trial 48 finished with value: 0.43868795940045463 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9641, 'learning_rate': 0.0012813478527392967, 'p_miss': 0.29890457546901605}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:56:18,350] Trial 76 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:56:23,706] Trial 77 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 08:57:32,980] Trial 54 finished with value: 0.38982394164353923 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9690, 'learning_rate': 0.0016201310788745416, 'p_miss': 0.27091331310569833}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:15:49,392] Trial 46 finished with value: 0.287384111581422 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:16:04,078] Trial 81 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:16:22,019] Trial 82 finished with value: 0.2809525690472343 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:16:38,931] Trial 83 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:16:45,081] Trial 84 finished with value: 0.5300422668215099 and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.8393276041000028, 'alpha': 3, 'iterations': 279, 'learning_rate': 0.004933010797808121, 'p_miss': 0.20038254403027625}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:16:45,405] Trial 85 finished with value: 0.37278376903182453 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:17:01,725] Trial 86 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:17:18,583] Trial 87 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:17:35,978] Trial 88 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:17:52,457] Trial 89 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:18:10,167] Trial 90 finished with value: 0.2809525389523002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:18:46,566] Trial 91 finished with value: 0.28112137079529587 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 64 with value: 0.2809525389523002.
running
[I 2024-10-31 09:35:29,746] Trial 42 finished with value: 0.280603837672357 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 42 with value: 0.280603837672357.
running
[I 2024-10-31 09:35:33,407] Trial 41 finished with value: 0.28052211263881344 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 41 with value: 0.28052211263881344.
running
[I 2024-10-31 09:35:39,874] Trial 93 finished with value: 0.31845021083610725 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 32095, 'weights': 'uniform'}. Best is trial 41 with value: 0.28052211263881344.
running
[I 2024-10-31 09:35:43,940] Trial 94 finished with value: 0.31845021083610725 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 30709, 'weights': 'uniform'}. Best is trial 41 with value: 0.28052211263881344.
running
[I 2024-10-31 09:43:47,297] Trial 18 finished with value: 0.2787763286813285 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 18 with value: 0.2787763286813285.
running
[I 2024-10-31 10:00:27,302] Trial 65 finished with value: 0.27919879419555643 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 18 with value: 0.2787763286813285.
running
[I 2024-10-31 10:00:47,026] Trial 67 finished with value: 0.278638640801912 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:09:18,272] Trial 68 finished with value: 0.27920947595848256 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:20:56,092] Trial 69 finished with value: 0.2788344306488896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:24:26,126] Trial 71 finished with value: 0.2788693922405754 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:24:26,747] Trial 102 finished with value: 0.5215817665285943 and parameters: {'model_name': 'GAIN', 'batch_size': 18, 'hint_rate': 0.9767240402331814, 'alpha': 36, 'iterations': 11, 'learning_rate': 0.08649704130707153, 'p_miss': 0.11119829196107002}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:25:13,945] Trial 73 finished with value: 0.2791805913624552 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:27:23,850] Trial 72 finished with value: 0.27947995068759346 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:29:30,997] Trial 74 finished with value: 0.2793867331984273 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:31:45,876] Trial 75 finished with value: 0.27955236595296545 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:33:45,023] Trial 79 finished with value: 0.279011086119195 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 67 with value: 0.278638640801912.
running
[I 2024-10-31 10:33:46,341] Trial 78 finished with value: 0.2786198314135497 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 10:35:15,453] Trial 80 finished with value: 0.2788297238894136 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 10:54:02,120] Trial 92 finished with value: 0.2795251833938545 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 10:54:02,351] Trial 111 finished with value: 0.5354261784779614 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:01:01,725] Trial 95 finished with value: 0.28308305356362984 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:02:26,689] Trial 96 finished with value: 0.2815085155594126 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:09:14,791] Trial 97 finished with value: 0.2822719070871126 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:10:58,464] Trial 112 finished with value: 0.32132726025345615 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:25:46,704] Trial 98 finished with value: 0.2824545883684574 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:26:11,241] Trial 99 finished with value: 0.2828792236604042 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:30:30,381] Trial 114 finished with value: 0.3121963506144548 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:34:47,096] Trial 100 finished with value: 0.28242103707849686 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:46:14,177] Trial 101 finished with value: 0.28226019472198305 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:49:42,672] Trial 103 finished with value: 0.2816505361043439 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:50:28,512] Trial 104 finished with value: 0.28265206108437474 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:50:38,906] Trial 123 finished with value: 0.5015527974263264 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.04792564745332917, 'alpha': 42, 'iterations': 649, 'learning_rate': 0.00010053828479371412, 'p_miss': 0.22119464125229166}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:54:37,021] Trial 105 finished with value: 0.28179588716986653 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:54:49,921] Trial 106 finished with value: 0.2826554148657646 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:55:01,423] Trial 125 finished with value: 0.3055679145590192 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:57:40,392] Trial 107 finished with value: 0.2817851081379132 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:59:05,077] Trial 108 finished with value: 0.28199255618297314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 11:59:05,561] Trial 109 finished with value: 0.28200580084120497 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 12:00:36,556] Trial 110 finished with value: 0.2818534555738078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 12:27:09,367] Trial 113 finished with value: 0.27976643678797786 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 12:27:24,471] Trial 132 finished with value: 0.30758521231159336 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21007, 'weights': 'distance'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 12:27:24,670] Trial 133 finished with value: 0.5354261784779614 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 12:35:30,301] Trial 115 finished with value: 0.2798620308292774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 12:37:26,532] Trial 116 finished with value: 0.2805905264328524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 13:00:32,926] Trial 117 finished with value: 0.27979468356363146 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 13:01:12,138] Trial 118 finished with value: 0.2790303108483011 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 13:05:25,958] Trial 119 finished with value: 0.2793065344316544 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 13:09:47,755] Trial 120 finished with value: 0.2790630587915549 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.2786198314135497.
running
[I 2024-10-31 13:21:15,022] Trial 121 finished with value: 0.2785304043901064 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:24:40,018] Trial 122 finished with value: 0.2789176420115809 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:25:21,901] Trial 124 finished with value: 0.27894272836169076 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:29:53,789] Trial 126 finished with value: 0.2786301863420019 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:32:08,919] Trial 127 finished with value: 0.27955510529780475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:32:34,008] Trial 145 finished with value: 0.3059684421582789 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:33:14,142] Trial 128 finished with value: 0.2789548052783074 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:34:03,926] Trial 130 finished with value: 0.27880903644362487 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:34:06,800] Trial 129 finished with value: 0.27901860349549124 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 13:35:23,741] Trial 131 finished with value: 0.2793392193140033 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 14:02:15,988] Trial 134 finished with value: 0.2795351618810626 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 14:10:23,284] Trial 135 finished with value: 0.279265926880215 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 14:12:13,647] Trial 136 finished with value: 0.2789498806253992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 14:35:32,564] Trial 137 finished with value: 0.27945226029400494 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 14:35:34,282] Trial 154 finished with value: 0.525017422216405 and parameters: {'model_name': 'GAIN', 'batch_size': 168, 'hint_rate': 0.7202412038651601, 'alpha': 95, 'iterations': 78, 'learning_rate': 0.010620482324504335, 'p_miss': 0.11783679078722722}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 14:36:07,467] Trial 138 finished with value: 0.27985193603767433 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 121 with value: 0.2785304043901064.
running
[I 2024-10-31 14:40:13,152] Trial 139 finished with value: 0.2784285179140468 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 139 with value: 0.2784285179140468.
running
[I 2024-10-31 14:44:46,821] Trial 140 finished with value: 0.27817236796819234 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 14:56:12,208] Trial 141 finished with value: 0.27931559098839437 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 14:59:39,190] Trial 142 finished with value: 0.2792065407258642 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:00:05,233] Trial 143 finished with value: 0.27925721043010576 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:04:45,194] Trial 144 finished with value: 0.2790147225512817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:04:59,181] Trial 162 finished with value: 0.3140851846859333 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 20464, 'weights': 'uniform'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:07:56,295] Trial 147 finished with value: 0.27963675188689263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:08:00,813] Trial 164 finished with value: 0.2809533122634517 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:08:41,570] Trial 148 finished with value: 0.2791130573379075 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:08:51,569] Trial 149 finished with value: 0.2784082742728467 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:09:29,595] Trial 146 finished with value: 0.27840135396919075 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:10:10,959] Trial 150 finished with value: 0.2796466823380756 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:28:15,820] Trial 157 finished with value: 0.2990735076893182 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:37:27,201] Trial 151 finished with value: 0.2796377008047372 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:37:27,597] Trial 171 finished with value: 0.37278376903182453 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:45:49,763] Trial 152 finished with value: 0.2788152000182104 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:46:12,891] Trial 173 finished with value: 0.3055679145590192 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 15:47:33,401] Trial 153 finished with value: 0.2788520865742673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:10:52,082] Trial 155 finished with value: 0.2794482539155056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:11:24,228] Trial 156 finished with value: 0.2787454884916377 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:19:58,759] Trial 158 finished with value: 0.2788706723764384 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:31:30,115] Trial 159 finished with value: 0.27911115744534165 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:34:51,085] Trial 160 finished with value: 0.27942921864719394 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:35:27,517] Trial 161 finished with value: 0.27952619402641743 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:40:47,839] Trial 163 finished with value: 0.2795540424694954 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:43:18,599] Trial 165 finished with value: 0.27902101261353957 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:43:51,796] Trial 166 finished with value: 0.27974312653778827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:44:04,999] Trial 167 finished with value: 0.2792482907016989 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:45:21,718] Trial 169 finished with value: 0.27907230575218217 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 16:46:22,793] Trial 168 finished with value: 0.2785151891444452 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:03:07,694] Trial 170 finished with value: 0.2788771511039959 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:12:09,543] Trial 172 finished with value: 0.2790849039404102 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:12:12,933] Trial 189 finished with value: 0.28095332435689413 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:20:47,845] Trial 174 finished with value: 0.2789060557415953 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:22:06,797] Trial 175 finished with value: 0.2791310929844443 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:22:07,913] Trial 192 finished with value: 0.5213521063706191 and parameters: {'model_name': 'GAIN', 'batch_size': 40, 'hint_rate': 0.418658731761731, 'alpha': 1, 'iterations': 45, 'learning_rate': 0.003642541035839788, 'p_miss': 0.13972948684389866}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:45:21,942] Trial 176 finished with value: 0.27872928688333787 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:45:53,529] Trial 177 finished with value: 0.27899678171904674 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:50:01,467] Trial 186 finished with value: 0.29174874290422936 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:50:02,705] Trial 185 finished with value: 0.2876050551707786 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 17:54:34,154] Trial 178 finished with value: 0.2788925046273296 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 18:05:59,473] Trial 179 finished with value: 0.2794325750774231 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
running
[I 2024-10-31 18:09:27,478] Trial 180 finished with value: 0.27908070547697855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:10:08,643] Trial 181 finished with value: 0.27943779022332216 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:15:30,310] Trial 182 finished with value: 0.28016549306912947 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:16:58,543] Trial 190 finished with value: 0.29122281778044257 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:17:45,854] Trial 183 finished with value: 0.27862919463895824 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:18:22,797] Trial 184 finished with value: 0.2797985341574346 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:22:52,175] Trial 187 finished with value: 0.2787235499794497 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:37:36,167] Trial 188 finished with value: 0.27925532791207563 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:52:07,259] Trial 194 finished with value: 0.2883373391437619 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:52:57,382] Trial 195 finished with value: 0.2878908073094574 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:55:20,130] Trial 191 finished with value: 0.2785570346554325 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 18:56:46,416] Trial 193 finished with value: 0.2787358069419689 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 19:22:33,025] Trial 199 finished with value: 0.283873490379885 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 19:24:48,142] Trial 196 finished with value: 0.27942969025059083 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 19:24:57,157] Trial 197 finished with value: 0.2796450590460404 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
[I 2024-10-31 19:30:15,217] Trial 198 finished with value: 0.2785957949213489 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 140 with value: 0.27817236796819234.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
dtype: int64
0.27817236796819234
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'arabic'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547411cfd0> 

Generation:  1
Best f1_score score: 0.8594490503054901
Generation:   4%|▍         | 1/25 [10:02<4:01:01, 602.54s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554743f87c0> 

Generation:  2
Best f1_score score: 0.860710449159461
Generation:   8%|▊         | 2/25 [20:05<3:51:10, 603.08s/it]Generation:  3
Best f1_score score: 0.860710449159461
Generation:  12%|█▏        | 3/25 [21:40<2:16:02, 371.01s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546f95c040> 

Generation:  4
Best f1_score score: 0.860710449159461
Generation:  16%|█▌        | 4/25 [31:43<2:41:53, 462.56s/it]Generation:  5
Best f1_score score: 0.860710449159461
Generation:  20%|██        | 5/25 [32:50<1:46:33, 319.70s/it]Generation:  6
Best f1_score score: 0.860710449159461
Generation:  24%|██▍       | 6/25 [34:03<1:14:45, 236.09s/it]Generation:  7
Best f1_score score: 0.860710449159461
Generation:  28%|██▊       | 7/25 [34:57<52:53, 176.28s/it]  Generation:  8
Best f1_score score: 0.860710449159461
Generation:  32%|███▏      | 8/25 [36:12<40:51, 144.23s/it]Generation:  9
Best f1_score score: 0.860710449159461
Generation:  36%|███▌      | 9/25 [39:53<44:50, 168.17s/it]Generation:  10
Best f1_score score: 0.860710449159461
Generation:  40%|████      | 10/25 [41:13<35:15, 141.03s/it]Generation:  11
Best f1_score score: 0.860710449159461
Generation:  44%|████▍     | 11/25 [42:14<27:08, 116.32s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546f4a27d0> 

Generation:  12
Best f1_score score: 0.860710449159461
Generation:  48%|████▊     | 12/25 [52:21<57:35, 265.83s/it]Generation:  13
Best f1_score score: 0.860710449159461
Generation:  52%|█████▏    | 13/25 [58:34<59:40, 298.34s/it]Generation:  14
Best f1_score score: 0.860710449159461
Generation:  56%|█████▌    | 14/25 [1:00:53<45:49, 249.94s/it]Generation:  15
Best f1_score score: 0.860710449159461
Generation:  60%|██████    | 15/25 [1:01:40<31:29, 188.97s/it]Generation:  16
Best f1_score score: 0.860710449159461
Generation:  64%|██████▍   | 16/25 [1:02:01<20:43, 138.20s/it]Generation:  17
Best f1_score score: 0.8611436412714989
Generation:  68%|██████▊   | 17/25 [1:02:38<14:23, 107.89s/it]Generation:  18
Best f1_score score: 0.8611877116221731
Generation:  72%|███████▏  | 18/25 [1:05:41<15:13, 130.50s/it]Generation:  19
Best f1_score score: 0.8611877116221731
Generation:  76%|███████▌  | 19/25 [1:07:39<12:39, 126.62s/it]Generation:  20
Best f1_score score: 0.8611877116221731
Generation:  80%|████████  | 20/25 [1:08:02<07:58, 95.74s/it] Generation:  21
Best f1_score score: 0.8611877116221731
Generation:  84%|████████▍ | 21/25 [1:08:41<05:14, 78.53s/it]Generation:  22
Best f1_score score: 0.8611877116221731
Generation:  88%|████████▊ | 22/25 [1:10:34<04:26, 88.83s/it]Generation:  23
Best f1_score score: 0.8611877116221731
Generation:  92%|█████████▏| 23/25 [1:11:58<02:55, 87.50s/it]Generation:  24
Best f1_score score: 0.8611877116221731
Generation:  96%|█████████▌| 24/25 [1:15:27<02:04, 124.03s/it]Generation:  25
Best f1_score score: 0.8611877116221731
Generation: 100%|██████████| 25/25 [1:17:25<00:00, 122.15s/it]Generation: 100%|██████████| 25/25 [1:17:29<00:00, 185.98s/it]
2024-10-31 21:14:57,688 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46829' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-16205b9c29c2cbd81f55a3a14ad321d1', 'ndarray-9cd6b2174f8d6e932092b7fd7aa7046b'} (stimulus_id='handle-worker-cleanup-1730434497.6887307')
Fitted
Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy',
                                      max_features=0.7460930636308,
                                      min_samples_leaf=5, min_samples_split=6,
                                      n_jobs=1))])
score start
train score: {'auroc': 0.9767738565065, 'accuracy': 0.880143496657877, 'balanced_accuracy': 0.8961269606863667, 'logloss': 0.2281390007528763, 'f1': 0.8791568213076115}
original test score: {'auroc': 0.9984644331906894, 'accuracy': 0.9727740986019132, 'balanced_accuracy': 0.9752120910654296, 'logloss': 0.11600980033831335, 'f1': 0.9719076708179195}
imputed test score: {'auroc': 0.968500039993601, 'accuracy': 0.9406426293843513, 'balanced_accuracy': 0.9487221419572869, 'logloss': 0.21406507933325802, 'f1': 0.9394337180258527}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155434ce85b0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741a4130> 

Generation:  1
Best f1_score score: 0.8649259571106264
Generation:   4%|▍         | 1/25 [10:02<4:01:03, 602.64s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474189030> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741bb760> 

Generation:  2
Best f1_score score: 0.8662324077435937
Generation:   8%|▊         | 2/25 [20:06<3:51:21, 603.53s/it]Generation:  3
Best f1_score score: 0.8679970302235451
Generation:  12%|█▏        | 3/25 [25:16<2:52:09, 469.54s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155414e102b0> 

Generation:  4
Best f1_score score: 0.8679970302235451
Generation:  16%|█▌        | 4/25 [35:21<3:03:00, 522.89s/it]Generation:  5
Best f1_score score: 0.8679970302235451
Generation:  20%|██        | 5/25 [43:34<2:50:42, 512.14s/it]Generation:  6
Best f1_score score: 0.8679970302235451
Generation:  24%|██▍       | 6/25 [48:51<2:21:07, 445.66s/it]Generation:  7
Best f1_score score: 0.8679970302235451
Generation:  28%|██▊       | 7/25 [53:49<1:59:15, 397.55s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545aa19de0> 

Generation:  8
Best f1_score score: 0.8679970302235451
Generation:  32%|███▏      | 8/25 [1:03:56<2:11:30, 464.17s/it]Generation:  9
Best f1_score score: 0.8679970302235451
Generation:  36%|███▌      | 9/25 [1:07:23<1:42:17, 383.61s/it]Generation:  10
Best f1_score score: 0.8679970302235451
Generation:  40%|████      | 10/25 [1:12:45<1:31:08, 364.60s/it]Generation:  11
Best f1_score score: 0.8679970302235451
Generation:  44%|████▍     | 11/25 [1:16:38<1:15:44, 324.60s/it]Generation:  12
Best f1_score score: 0.8679970302235451
Generation:  48%|████▊     | 12/25 [1:17:19<51:36, 238.16s/it]  Generation:  13
Best f1_score score: 0.8679970302235451
Generation:  52%|█████▏    | 13/25 [1:18:13<36:26, 182.24s/it]Generation:  14
Best f1_score score: 0.8679970302235451
Generation:  56%|█████▌    | 14/25 [1:22:04<36:08, 197.16s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546f1b06d0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.8680928551142134
Generation:  60%|██████    | 15/25 [1:22:40<24:46, 148.65s/it]Generation:  16
Best f1_score score: 0.8680928551142134
Generation:  64%|██████▍   | 16/25 [1:26:25<25:44, 171.65s/it]Generation:  17
Best f1_score score: 0.8682881496881603
Generation:  68%|██████▊   | 17/25 [1:28:15<20:22, 152.84s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546e6cb7c0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a69e620> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  18
Best f1_score score: 0.8682881496881603
Generation:  72%|███████▏  | 18/25 [1:31:43<19:47, 169.66s/it]Generation:  19
Best f1_score score: 0.8682881496881603
Generation:  76%|███████▌  | 19/25 [1:35:37<18:53, 188.87s/it]Generation:  20
Best f1_score score: 0.8682881496881603
Generation:  80%|████████  | 20/25 [1:39:28<16:47, 201.56s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546c1a8760> 

Generation:  21
Best f1_score score: 0.8682881496881603
Generation:  84%|████████▍ | 21/25 [1:49:35<21:33, 323.28s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546ee3ac80> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.8682881496881603
Generation:  88%|████████▊ | 22/25 [1:53:38<14:57, 299.29s/it]Generation:  23
Best f1_score score: 0.8682881496881603
Generation:  92%|█████████▏| 23/25 [1:57:37<09:21, 280.93s/it]Generation:  24
Best f1_score score: 0.8682881496881603
Generation:  96%|█████████▌| 24/25 [2:01:39<04:29, 269.38s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553b87cb0d0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  25
Best f1_score score: 0.8682881496881603
Generation: 100%|██████████| 25/25 [2:05:21<00:00, 255.10s/it]Generation: 100%|██████████| 25/25 [2:05:21<00:00, 300.85s/it]
2024-10-31 23:20:32,109 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:44323' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-c1a8e1b0f2f69bc86f42da01fa596b72', 'ndarray-16205b9c29c2cbd81f55a3a14ad321d1'} (stimulus_id='handle-worker-cleanup-1730442032.109686')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='constant')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features=0.9988255355876,
                                      min_samples_leaf=2, min_samples_split=18,
                                      n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.992516637454007, 'accuracy': 0.9197277242901821, 'balanced_accuracy': 0.9316036962785659, 'logloss': 0.16666530798493107, 'f1': 0.9185849224189923}
test score: {'auroc': 0.9200497920332746, 'accuracy': 0.7542310522442973, 'balanced_accuracy': 0.6962276035834267, 'logloss': 0.9354444080108589, 'f1': 0.6969110576923077}
original test score: {'auroc': 0.9998591475363942, 'accuracy': 0.9937454010301693, 'balanced_accuracy': 0.9936754494280915, 'logloss': 0.03170716422708236, 'f1': 0.9935055515092424}
score end
881
lvl
0.5
type
MAR
num_run
1
class_full
finished
all finished
full run takes
15.31515463511149
hours
DONE
