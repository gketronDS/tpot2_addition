Run: 27
/cm/local/apps/slurm/var/spool/job1032650/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/871/871.pkl
working on 
../data/c/871/class_full_MCAR_0.3_2
0.5606904029846191
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-30 10:14:11,022] A new study created in memory with name: no-name-acb64964-f71c-4eed-a5cf-79173f4e0474
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-30 10:14:11,347] Trial 4 finished with value: 0.43530587761082884 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.43530587761082884.
running
[I 2024-10-30 10:14:11,665] Trial 16 finished with value: 0.14010131879329052 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:12,035] Trial 6 finished with value: 0.18616979834181613 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 284, 'weights': 'distance'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:12,244] Trial 1 finished with value: 0.17365696868685046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1147, 'weights': 'uniform'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:12,374] Trial 3 finished with value: 0.17487493375689384 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1862, 'weights': 'uniform'}. Best is trial 16 with value: 0.14010131879329052.
[I 2024-10-30 10:14:12,481] Trial 12 finished with value: 0.17433671805919984 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1588, 'weights': 'uniform'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:12,585] Trial 10 finished with value: 0.1878312259244244 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1164, 'weights': 'distance'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:12,681] Trial 11 finished with value: 0.17411138603519422 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1499, 'weights': 'uniform'}. Best is trial 16 with value: 0.14010131879329052.
running
running
[I 2024-10-30 10:14:12,935] Trial 9 finished with value: 0.18889145972578417 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2246, 'weights': 'distance'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:13,084] Trial 23 finished with value: 0.14010131879329052 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:13,256] Trial 24 finished with value: 0.43530587761082884 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:13,882] Trial 5 finished with value: 0.17296185237714337 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:17,777] Trial 18 finished with value: 0.1905843398432938 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:20,884] Trial 25 finished with value: 0.26691519955776954 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:22,434] Trial 2 finished with value: 0.3941585961077171 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.6758146366300211, 'alpha': 97, 'iterations': 3, 'learning_rate': 0.007353597992623274, 'p_miss': 0.12231214124353122}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:26,700] Trial 20 finished with value: 0.1515856432772699 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 2, 'learning_rate': 0.04544658653140965, 'p_miss': 0.05208255714107125}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:27,184] Trial 31 finished with value: 0.14010131879329052 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:27,692] Trial 32 finished with value: 0.14010131879329052 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:28,034] Trial 33 finished with value: 0.17613459397579384 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:29,155] Trial 15 finished with value: 0.21644211743152092 and parameters: {'model_name': 'VAE', 'batch_size': 64, 'iterations': 3, 'learning_rate': 0.09920782578814892, 'p_miss': 0.07290157071888588}. Best is trial 16 with value: 0.14010131879329052.
running
[I 2024-10-30 10:14:45,476] Trial 19 finished with value: 0.12660131493202845 and parameters: {'model_name': 'VAE', 'batch_size': 787, 'iterations': 6, 'learning_rate': 0.000607591964638258, 'p_miss': 0.19564380634193093}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:15:01,691] Trial 0 finished with value: 0.13233734094173982 and parameters: {'model_name': 'VAE', 'batch_size': 537, 'iterations': 8, 'learning_rate': 0.0019033039399647715, 'p_miss': 0.2891620677994352}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:15:23,326] Trial 13 finished with value: 0.3654227134045107 and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.142308240644369, 'alpha': 77, 'iterations': 41, 'learning_rate': 0.00010137661182109987, 'p_miss': 0.2684652560543798}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:17:39,367] Trial 14 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.7908646066746747, 'alpha': 59, 'iterations': 638, 'learning_rate': 0.03184136556403353, 'p_miss': 0.06133622037915105}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:20:48,785] Trial 39 finished with value: 0.13024019351021496 and parameters: {'model_name': 'VAE', 'batch_size': 945, 'iterations': 37, 'learning_rate': 0.0009987558178815442, 'p_miss': 0.2648572829801136}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:22:24,779] Trial 7 finished with value: 0.13242413300753403 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 120, 'learning_rate': 0.00021163799689800247, 'p_miss': 0.25274441636643596}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:24:02,430] Trial 28 finished with value: 0.1500863022531789 and parameters: {'model_name': 'VAE', 'batch_size': 70, 'iterations': 174, 'learning_rate': 0.0006466380288790862, 'p_miss': 0.2520157277552204}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:24:17,824] Trial 29 finished with value: 0.14945374095844258 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 185, 'learning_rate': 0.0005536212710301405, 'p_miss': 0.034271317161437415}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:24:44,786] Trial 41 finished with value: 0.12715727328896023 and parameters: {'model_name': 'VAE', 'batch_size': 976, 'iterations': 25, 'learning_rate': 0.0009179617405826616, 'p_miss': 0.20902627861894513}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:24:50,413] Trial 40 finished with value: 0.13182253711305528 and parameters: {'model_name': 'VAE', 'batch_size': 927, 'iterations': 49, 'learning_rate': 0.0006072522244152834, 'p_miss': 0.2765917724451005}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:25:07,339] Trial 42 finished with value: 0.14195749602804825 and parameters: {'model_name': 'VAE', 'batch_size': 947, 'iterations': 11, 'learning_rate': 0.0014416174973860725, 'p_miss': 0.19378239304321737}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:25:18,802] Trial 26 finished with value: 0.1864187190246927 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:25:37,200] Trial 21 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.18447399974866313, 'alpha': 65, 'iterations': 2075, 'learning_rate': 0.011193892226691107, 'p_miss': 0.03652697913726147}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:25:49,202] Trial 43 finished with value: 0.14220479496432598 and parameters: {'model_name': 'VAE', 'batch_size': 917, 'iterations': 16, 'learning_rate': 0.00209232742862933, 'p_miss': 0.1902641244733745}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:26:21,168] Trial 38 finished with value: 0.14551049636600338 and parameters: {'model_name': 'VAE', 'batch_size': 881, 'iterations': 119, 'learning_rate': 0.0005602372370895176, 'p_miss': 0.26942791759630336}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:26:26,765] Trial 45 finished with value: 0.1367096160352595 and parameters: {'model_name': 'VAE', 'batch_size': 291, 'iterations': 16, 'learning_rate': 0.0022880083478456, 'p_miss': 0.19730294266267126}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:26:43,404] Trial 44 finished with value: 0.14047763861165988 and parameters: {'model_name': 'VAE', 'batch_size': 869, 'iterations': 22, 'learning_rate': 0.0015237482036625685, 'p_miss': 0.18382211954870648}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:26:44,049] Trial 47 finished with value: 0.12872860913928322 and parameters: {'model_name': 'VAE', 'batch_size': 319, 'iterations': 23, 'learning_rate': 0.0006004396073690527, 'p_miss': 0.2064426253430664}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:27:04,283] Trial 53 finished with value: 0.1275625333238557 and parameters: {'model_name': 'VAE', 'batch_size': 246, 'iterations': 6, 'learning_rate': 0.00024783217001075354, 'p_miss': 0.22579128909878227}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:27:10,757] Trial 54 finished with value: 0.14301834433587562 and parameters: {'model_name': 'VAE', 'batch_size': 238, 'iterations': 1, 'learning_rate': 0.00024653994135937374, 'p_miss': 0.22451459492559486}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:27:11,466] Trial 46 finished with value: 0.12702347042966883 and parameters: {'model_name': 'VAE', 'batch_size': 295, 'iterations': 30, 'learning_rate': 0.0005362268275411661, 'p_miss': 0.19997795978802413}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:27:37,581] Trial 48 finished with value: 0.12987555754405816 and parameters: {'model_name': 'VAE', 'batch_size': 295, 'iterations': 27, 'learning_rate': 0.0005652596828844567, 'p_miss': 0.19980878150206077}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:27:38,832] Trial 56 finished with value: 0.13235424247984354 and parameters: {'model_name': 'VAE', 'batch_size': 216, 'iterations': 6, 'learning_rate': 0.000271054741343068, 'p_miss': 0.2210554518269587}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:27:54,544] Trial 55 finished with value: 0.1392136989333876 and parameters: {'model_name': 'VAE', 'batch_size': 219, 'iterations': 8, 'learning_rate': 0.00026378413039002097, 'p_miss': 0.1491828074192692}. Best is trial 19 with value: 0.12660131493202845.
running
[I 2024-10-30 10:28:04,162] Trial 58 finished with value: 0.12453437253684616 and parameters: {'model_name': 'VAE', 'batch_size': 150, 'iterations': 6, 'learning_rate': 0.0003512187063024656, 'p_miss': 0.1501684482095371}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:06,819] Trial 57 finished with value: 0.12586178026674594 and parameters: {'model_name': 'VAE', 'batch_size': 146, 'iterations': 6, 'learning_rate': 0.00025358708342695723, 'p_miss': 0.1527718298921163}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:12,583] Trial 61 finished with value: 0.12951093947703546 and parameters: {'model_name': 'VAE', 'batch_size': 119, 'iterations': 1, 'learning_rate': 0.00010511838331729198, 'p_miss': 0.15442410711963517}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:15,026] Trial 59 finished with value: 0.13276394042451287 and parameters: {'model_name': 'VAE', 'batch_size': 141, 'iterations': 5, 'learning_rate': 0.00010227567357123993, 'p_miss': 0.16187758718242257}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:18,532] Trial 62 finished with value: 0.3952348891698234 and parameters: {'model_name': 'GAIN', 'batch_size': 128, 'hint_rate': 0.42757079290838107, 'alpha': 7, 'iterations': 3, 'learning_rate': 0.00036018391213187207, 'p_miss': 0.12564446041007754}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:19,323] Trial 63 finished with value: 0.3978867406059967 and parameters: {'model_name': 'GAIN', 'batch_size': 429, 'hint_rate': 0.9491725218116251, 'alpha': 6, 'iterations': 2, 'learning_rate': 0.0009566145067497712, 'p_miss': 0.12020807974397944}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:20,166] Trial 64 finished with value: 0.18906187866452143 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3021, 'weights': 'distance'}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:20,425] Trial 49 finished with value: 0.13736059700909256 and parameters: {'model_name': 'VAE', 'batch_size': 243, 'iterations': 29, 'learning_rate': 0.000631237597136838, 'p_miss': 0.20766237947201693}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:21,347] Trial 65 finished with value: 0.18906187866452143 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3047, 'weights': 'distance'}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:22,377] Trial 60 finished with value: 0.13871349935318095 and parameters: {'model_name': 'VAE', 'batch_size': 99, 'iterations': 5, 'learning_rate': 0.00012802137956824912, 'p_miss': 0.15773026586574576}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:46,866] Trial 50 finished with value: 0.138589479004439 and parameters: {'model_name': 'VAE', 'batch_size': 211, 'iterations': 41, 'learning_rate': 0.0008472283182683432, 'p_miss': 0.21386056148963656}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:58,466] Trial 66 finished with value: 0.1338374469298456 and parameters: {'model_name': 'VAE', 'batch_size': 464, 'iterations': 8, 'learning_rate': 0.00017521683041576896, 'p_miss': 0.23340156221035147}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:28:59,519] Trial 68 finished with value: 0.14198852258785416 and parameters: {'model_name': 'VAE', 'batch_size': 494, 'iterations': 9, 'learning_rate': 0.00017169369571287929, 'p_miss': 0.23236646252037807}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:02,300] Trial 67 finished with value: 0.1305820721301894 and parameters: {'model_name': 'VAE', 'batch_size': 496, 'iterations': 8, 'learning_rate': 0.00015421582293816653, 'p_miss': 0.22829799040897514}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:04,709] Trial 71 finished with value: 0.17440830611226638 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:06,783] Trial 72 finished with value: 0.1753767066427538 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:09,699] Trial 73 finished with value: 0.1753767066427538 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:19,476] Trial 69 finished with value: 0.1271275780751041 and parameters: {'model_name': 'VAE', 'batch_size': 568, 'iterations': 10, 'learning_rate': 0.00036966231090012583, 'p_miss': 0.22586851652425555}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:38,651] Trial 77 finished with value: 0.14213892501055253 and parameters: {'model_name': 'VAE', 'batch_size': 609, 'iterations': 4, 'learning_rate': 0.00038322168112422055, 'p_miss': 0.17352950577986861}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:40,302] Trial 70 finished with value: 0.12706187771072452 and parameters: {'model_name': 'VAE', 'batch_size': 513, 'iterations': 11, 'learning_rate': 0.0003753354168710156, 'p_miss': 0.17808352238994424}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:44,959] Trial 51 finished with value: 0.12976811579592681 and parameters: {'model_name': 'VAE', 'batch_size': 203, 'iterations': 43, 'learning_rate': 0.0007250764221568919, 'p_miss': 0.2244707294697293}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:29:47,137] Trial 37 finished with value: 0.13983345348166368 and parameters: {'model_name': 'VAE', 'batch_size': 949, 'iterations': 204, 'learning_rate': 0.00025095693324208467, 'p_miss': 0.28363590929734117}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:30:03,074] Trial 76 finished with value: 0.12916184165124953 and parameters: {'model_name': 'VAE', 'batch_size': 373, 'iterations': 12, 'learning_rate': 0.0003178146126413715, 'p_miss': 0.1838772592697517}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:30:11,570] Trial 82 finished with value: 0.13265271655250127 and parameters: {'model_name': 'VAE', 'batch_size': 36, 'iterations': 2, 'learning_rate': 0.005495342861110748, 'p_miss': 0.13965128355045242}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:30:23,398] Trial 78 finished with value: 0.1319354144116848 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 14, 'learning_rate': 0.00034111982694416774, 'p_miss': 0.13669476571824588}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:30:28,955] Trial 52 finished with value: 0.14585197805722422 and parameters: {'model_name': 'VAE', 'batch_size': 226, 'iterations': 55, 'learning_rate': 0.0003371038064890682, 'p_miss': 0.2242165138207648}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:30:32,456] Trial 79 finished with value: 0.15210523701645087 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 14, 'learning_rate': 0.006075204983218253, 'p_miss': 0.13821119686043137}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:30:47,673] Trial 86 finished with value: 0.1265672966727973 and parameters: {'model_name': 'VAE', 'batch_size': 604, 'iterations': 3, 'learning_rate': 0.00042298431563659266, 'p_miss': 0.2501806083106106}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:30:49,565] Trial 80 finished with value: 0.13725305520906356 and parameters: {'model_name': 'VAE', 'batch_size': 636, 'iterations': 13, 'learning_rate': 0.00038027923443473575, 'p_miss': 0.12371856461493687}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:30:56,290] Trial 81 finished with value: 0.12727293367445788 and parameters: {'model_name': 'VAE', 'batch_size': 573, 'iterations': 14, 'learning_rate': 0.0003713209515717257, 'p_miss': 0.13481243732088816}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:32:37,538] Trial 74 finished with value: 0.1374410930255575 and parameters: {'model_name': 'VAE', 'batch_size': 64, 'iterations': 72, 'learning_rate': 0.0003496108042129914, 'p_miss': 0.17330660355917907}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:32:45,302] Trial 90 finished with value: 0.3749300792059828 and parameters: {'model_name': 'GAIN', 'batch_size': 684, 'hint_rate': 0.41703956415867577, 'alpha': 30, 'iterations': 3, 'learning_rate': 0.00043762307094276403, 'p_miss': 0.2470481472746304}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:32:45,868] Trial 91 finished with value: 0.19427969992244593 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'uniform'}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:32:46,382] Trial 92 finished with value: 0.17613459397579384 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:32:58,110] Trial 93 finished with value: 0.13178929437283943 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3, 'learning_rate': 0.00020675002138731294, 'p_miss': 0.17307512931785818}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:33:02,005] Trial 84 finished with value: 0.3891258372132099 and parameters: {'model_name': 'GAIN', 'batch_size': 588, 'hint_rate': 0.43943117605357995, 'alpha': 30, 'iterations': 90, 'learning_rate': 0.0004295910037265964, 'p_miss': 0.17104529172854546}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:33:04,628] Trial 89 finished with value: 0.36865413405547864 and parameters: {'model_name': 'GAIN', 'batch_size': 61, 'hint_rate': 0.43299644080638755, 'alpha': 34, 'iterations': 87, 'learning_rate': 0.0004458582441076249, 'p_miss': 0.2521189007409568}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:33:50,363] Trial 85 finished with value: 0.38245440111034457 and parameters: {'model_name': 'GAIN', 'batch_size': 628, 'hint_rate': 0.4078814690407562, 'alpha': 31, 'iterations': 108, 'learning_rate': 0.00047575914689470915, 'p_miss': 0.17224911529495907}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:34:11,283] Trial 75 finished with value: 0.12931120167014937 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 80, 'learning_rate': 0.0003450676605023012, 'p_miss': 0.17025627500251952}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:34:13,536] Trial 83 finished with value: 0.13936745076520984 and parameters: {'model_name': 'VAE', 'batch_size': 589, 'iterations': 72, 'learning_rate': 0.0004166192676443911, 'p_miss': 0.1704196837263553}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:34:47,162] Trial 95 finished with value: 0.13075073479249893 and parameters: {'model_name': 'VAE', 'batch_size': 368, 'iterations': 21, 'learning_rate': 0.0011904726803470562, 'p_miss': 0.2506183814497598}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:35:17,857] Trial 96 finished with value: 0.13038639996177945 and parameters: {'model_name': 'VAE', 'batch_size': 641, 'iterations': 26, 'learning_rate': 0.0009583550876650198, 'p_miss': 0.24318235980790592}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:35:33,000] Trial 98 finished with value: 0.131114940820185 and parameters: {'model_name': 'VAE', 'batch_size': 382, 'iterations': 21, 'learning_rate': 0.0011952627376508838, 'p_miss': 0.10566474632545282}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:35:33,911] Trial 97 finished with value: 0.13078880651233252 and parameters: {'model_name': 'VAE', 'batch_size': 359, 'iterations': 18, 'learning_rate': 0.0008305738401160772, 'p_miss': 0.24396454645491497}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:35:42,559] Trial 101 finished with value: 0.13459523275586974 and parameters: {'model_name': 'VAE', 'batch_size': 766, 'iterations': 4, 'learning_rate': 0.0007232299964428054, 'p_miss': 0.10444981693898273}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:36:14,952] Trial 100 finished with value: 0.1276544434897583 and parameters: {'model_name': 'VAE', 'batch_size': 359, 'iterations': 19, 'learning_rate': 0.0008079928752495682, 'p_miss': 0.2984278531198498}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:36:45,846] Trial 87 finished with value: 0.13131906003395327 and parameters: {'model_name': 'VAE', 'batch_size': 575, 'iterations': 87, 'learning_rate': 0.0004430415499990305, 'p_miss': 0.25444738102237724}. Best is trial 58 with value: 0.12453437253684616.
running
[I 2024-10-30 10:36:59,983] Trial 105 finished with value: 0.12251194755881545 and parameters: {'model_name': 'VAE', 'batch_size': 972, 'iterations': 7, 'learning_rate': 0.0005230836904418531, 'p_miss': 0.2077608304813773}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:37:05,664] Trial 106 finished with value: 0.127612046412885 and parameters: {'model_name': 'VAE', 'batch_size': 166, 'iterations': 6, 'learning_rate': 0.00023193563114445905, 'p_miss': 0.2069683467741783}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:37:47,062] Trial 107 finished with value: 0.13572453109306284 and parameters: {'model_name': 'VAE', 'batch_size': 903, 'iterations': 10, 'learning_rate': 0.0005403698077409396, 'p_miss': 0.2103875948502283}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:38:04,254] Trial 108 finished with value: 0.12797327958872096 and parameters: {'model_name': 'VAE', 'batch_size': 800, 'iterations': 10, 'learning_rate': 0.0005457654503382216, 'p_miss': 0.18622688640618384}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:38:06,002] Trial 88 finished with value: 0.13665992469817673 and parameters: {'model_name': 'VAE', 'batch_size': 568, 'iterations': 103, 'learning_rate': 0.0004236634714249819, 'p_miss': 0.09914580032131953}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:38:06,483] Trial 111 finished with value: 0.43530587761082884 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:38:13,220] Trial 17 finished with value: 0.18307935386520224 and parameters: {'model_name': 'VAE', 'batch_size': 102, 'iterations': 411, 'learning_rate': 0.0007811131034384268, 'p_miss': 0.172185553290902}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:38:27,221] Trial 109 finished with value: 0.13750303633557012 and parameters: {'model_name': 'VAE', 'batch_size': 740, 'iterations': 7, 'learning_rate': 0.0005505506937656461, 'p_miss': 0.18796349548556582}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:41:09,434] Trial 114 finished with value: 0.14128615203944936 and parameters: {'model_name': 'VAE', 'batch_size': 994, 'iterations': 33, 'learning_rate': 0.0002722076302076041, 'p_miss': 0.197623631656008}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:41:10,635] Trial 115 finished with value: 0.17132899406906432 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 639, 'weights': 'uniform'}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:41:14,423] Trial 113 finished with value: 0.18717649986551949 and parameters: {'model_name': 'VAE', 'batch_size': 993, 'iterations': 33, 'learning_rate': 0.022486358450406384, 'p_miss': 0.19764586819729424}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:41:22,066] Trial 112 finished with value: 0.12707093460384514 and parameters: {'model_name': 'VAE', 'batch_size': 981, 'iterations': 36, 'learning_rate': 0.00019922493936283281, 'p_miss': 0.19810363747800894}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:41:32,284] Trial 117 finished with value: 0.1313389044413389 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 5, 'learning_rate': 0.0002694139927421681, 'p_miss': 0.21301842308825156}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:41:32,506] Trial 116 finished with value: 0.12886999560298557 and parameters: {'model_name': 'VAE', 'batch_size': 285, 'iterations': 4, 'learning_rate': 0.00020343664029836458, 'p_miss': 0.2142571399004227}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:41:42,691] Trial 120 finished with value: 0.14490175915195266 and parameters: {'model_name': 'VAE', 'batch_size': 446, 'iterations': 2, 'learning_rate': 0.0002934665110283205, 'p_miss': 0.14632365641222855}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:43:55,312] Trial 118 finished with value: 0.13076190247033087 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 47, 'learning_rate': 0.00020007780495240424, 'p_miss': 0.21529167875593008}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:44:45,679] Trial 22 finished with value: 0.14957634161499353 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 411, 'learning_rate': 0.00020227793638281767, 'p_miss': 0.2406379457172608}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:44:55,165] Trial 123 finished with value: 0.18904698395110464 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:45:41,172] Trial 121 finished with value: 0.13327796092741617 and parameters: {'model_name': 'VAE', 'batch_size': 750, 'iterations': 49, 'learning_rate': 0.000650769990093885, 'p_miss': 0.2036480517128305}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:45:56,838] Trial 124 finished with value: 0.1325797954827402 and parameters: {'model_name': 'VAE', 'batch_size': 790, 'iterations': 10, 'learning_rate': 0.003219123165764015, 'p_miss': 0.20170764873751662}. Best is trial 105 with value: 0.12251194755881545.
running
[I 2024-10-30 10:46:31,867] Trial 126 finished with value: 0.12230338909217069 and parameters: {'model_name': 'VAE', 'batch_size': 274, 'iterations': 7, 'learning_rate': 0.0003005904722034231, 'p_miss': 0.23309391438757537}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 10:46:41,928] Trial 125 finished with value: 0.13866494288018896 and parameters: {'model_name': 'VAE', 'batch_size': 494, 'iterations': 11, 'learning_rate': 0.0034761176098441304, 'p_miss': 0.1812930060786469}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 10:56:55,529] Trial 104 finished with value: 0.1763787010804855 and parameters: {'model_name': 'VAE', 'batch_size': 167, 'iterations': 368, 'learning_rate': 0.0005300000238275454, 'p_miss': 0.20921128525285787}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 10:57:33,116] Trial 129 finished with value: 0.13521530629291265 and parameters: {'model_name': 'VAE', 'batch_size': 86, 'iterations': 7, 'learning_rate': 0.00016323671569548406, 'p_miss': 0.2630594490386468}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 10:59:00,140] Trial 130 finished with value: 0.12573908845315496 and parameters: {'model_name': 'VAE', 'batch_size': 315, 'iterations': 16, 'learning_rate': 0.0002923644603610902, 'p_miss': 0.2344250696991108}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 10:59:22,194] Trial 131 finished with value: 0.13544914813564024 and parameters: {'model_name': 'VAE', 'batch_size': 290, 'iterations': 5, 'learning_rate': 0.00030839412690237557, 'p_miss': 0.23395238820567402}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 11:42:44,338] Trial 122 finished with value: 0.15792009102605936 and parameters: {'model_name': 'VAE', 'batch_size': 765, 'iterations': 609, 'learning_rate': 0.00014743578755938645, 'p_miss': 0.16115918712744037}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 11:43:11,693] Trial 133 finished with value: 0.1291402225670177 and parameters: {'model_name': 'VAE', 'batch_size': 185, 'iterations': 7, 'learning_rate': 0.00021942429831697024, 'p_miss': 0.01802449578310486}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 12:02:24,094] Trial 36 finished with value: 0.17713509870140196 and parameters: {'model_name': 'VAE', 'batch_size': 935, 'iterations': 1513, 'learning_rate': 0.00012792308741275716, 'p_miss': 0.27476860297452466}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 12:03:27,755] Trial 135 finished with value: 0.12283053534982917 and parameters: {'model_name': 'VAE', 'batch_size': 413, 'iterations': 16, 'learning_rate': 0.0006539304182215308, 'p_miss': 0.21934931823214654}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 12:22:36,530] Trial 110 finished with value: 0.185690600668182 and parameters: {'model_name': 'VAE', 'batch_size': 287, 'iterations': 1722, 'learning_rate': 0.00030400933269944075, 'p_miss': 0.19748648127528953}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:03:35,459] Trial 127 finished with value: 0.18541098050524535 and parameters: {'model_name': 'VAE', 'batch_size': 176, 'iterations': 2313, 'learning_rate': 0.00013678539652611516, 'p_miss': 0.018806068916743912}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:08:41,298] Trial 128 finished with value: 0.18458927287224297 and parameters: {'model_name': 'VAE', 'batch_size': 176, 'iterations': 2391, 'learning_rate': 0.00013665973640335048, 'p_miss': 0.26175989647558723}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:09:49,103] Trial 139 finished with value: 0.12685031267643537 and parameters: {'model_name': 'VAE', 'batch_size': 435, 'iterations': 16, 'learning_rate': 0.0006806834734308524, 'p_miss': 0.2177181362318749}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:11:02,779] Trial 140 finished with value: 0.1371610827766508 and parameters: {'model_name': 'VAE', 'batch_size': 431, 'iterations': 15, 'learning_rate': 0.0006757471077253278, 'p_miss': 0.21977238284876666}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:11:23,330] Trial 141 finished with value: 0.13504880144278847 and parameters: {'model_name': 'VAE', 'batch_size': 498, 'iterations': 4, 'learning_rate': 0.00018571989095101778, 'p_miss': 0.23817546575958276}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:11:23,586] Trial 142 finished with value: 0.43530587761082884 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:12:42,410] Trial 143 finished with value: 0.13491000668742745 and parameters: {'model_name': 'VAE', 'batch_size': 410, 'iterations': 17, 'learning_rate': 0.0004661118375965841, 'p_miss': 0.23156048082679023}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:13:19,093] Trial 144 finished with value: 0.13421471205319618 and parameters: {'model_name': 'VAE', 'batch_size': 324, 'iterations': 8, 'learning_rate': 0.00023597643753381982, 'p_miss': 0.22115946991443114}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:13:20,819] Trial 145 finished with value: 0.18906187866452143 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2419, 'weights': 'distance'}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:14:28,947] Trial 146 finished with value: 0.13434375806089704 and parameters: {'model_name': 'VAE', 'batch_size': 255, 'iterations': 13, 'learning_rate': 0.0006352105214915681, 'p_miss': 0.19193136771049554}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:16:37,260] Trial 147 finished with value: 0.13224556547898403 and parameters: {'model_name': 'VAE', 'batch_size': 515, 'iterations': 24, 'learning_rate': 0.0005146592933014761, 'p_miss': 0.218716028701598}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:22:16,191] Trial 148 finished with value: 0.14285474856707192 and parameters: {'model_name': 'VAE', 'batch_size': 678, 'iterations': 60, 'learning_rate': 0.0003797060560427826, 'p_miss': 0.1810908973379538}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:24:21,663] Trial 149 finished with value: 0.13121427900667731 and parameters: {'model_name': 'VAE', 'batch_size': 138, 'iterations': 27, 'learning_rate': 0.0011078857812496373, 'p_miss': 0.22937163876579536}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:33:27,886] Trial 102 finished with value: 0.186218905209188 and parameters: {'model_name': 'VAE', 'batch_size': 808, 'iterations': 2420, 'learning_rate': 0.0008038021398675463, 'p_miss': 0.20588412924607216}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:33:54,219] Trial 34 finished with value: 0.3984130706931659 and parameters: {'model_name': 'GAIN', 'batch_size': 550, 'hint_rate': 0.1258436115851762, 'alpha': 0, 'iterations': 6583, 'learning_rate': 0.0001047010272957481, 'p_miss': 0.29508188856199313}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:36:51,070] Trial 150 finished with value: 0.1789964158891768 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:37:19,312] Trial 153 finished with value: 0.1255675069850268 and parameters: {'model_name': 'VAE', 'batch_size': 337, 'iterations': 6, 'learning_rate': 0.0003177792542415544, 'p_miss': 0.2371670853817484}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:38:03,963] Trial 154 finished with value: 0.12962733614062055 and parameters: {'model_name': 'VAE', 'batch_size': 417, 'iterations': 9, 'learning_rate': 0.0003142055145833128, 'p_miss': 0.23809836418608588}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:38:31,541] Trial 155 finished with value: 0.1478760205851848 and parameters: {'model_name': 'VAE', 'batch_size': 345, 'iterations': 6, 'learning_rate': 0.000374554717621681, 'p_miss': 0.2255990903028046}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:39:49,821] Trial 156 finished with value: 0.14049293991404052 and parameters: {'model_name': 'VAE', 'batch_size': 251, 'iterations': 17, 'learning_rate': 0.00048402133663997344, 'p_miss': 0.14997733177055106}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:40:50,078] Trial 157 finished with value: 0.1276519819707982 and parameters: {'model_name': 'VAE', 'batch_size': 494, 'iterations': 12, 'learning_rate': 0.0006026247514778073, 'p_miss': 0.2583192213626178}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:41:04,662] Trial 158 finished with value: 0.12931667887267909 and parameters: {'model_name': 'VAE', 'batch_size': 676, 'iterations': 3, 'learning_rate': 0.0002612586246476378, 'p_miss': 0.23695617365407204}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:44:22,103] Trial 159 finished with value: 0.12872040954024527 and parameters: {'model_name': 'VAE', 'batch_size': 855, 'iterations': 38, 'learning_rate': 0.0007371600014063396, 'p_miss': 0.19287590983541725}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:44:51,489] Trial 160 finished with value: 0.13158621652047814 and parameters: {'model_name': 'VAE', 'batch_size': 572, 'iterations': 5, 'learning_rate': 0.0014079700197633653, 'p_miss': 0.21700758274748647}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:45:39,683] Trial 161 finished with value: 0.13113565425256407 and parameters: {'model_name': 'VAE', 'batch_size': 335, 'iterations': 9, 'learning_rate': 0.00034063966713611404, 'p_miss': 0.24223859525487024}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:45:51,946] Trial 151 finished with value: 0.1795424214651858 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:46:30,225] Trial 152 finished with value: 0.18273055664781973 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:47:54,636] Trial 163 finished with value: 0.13995406081619444 and parameters: {'model_name': 'VAE', 'batch_size': 426, 'iterations': 31, 'learning_rate': 0.0004082164101596679, 'p_miss': 0.2725594039720781}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:48:07,807] Trial 164 finished with value: 0.12773982559383754 and parameters: {'model_name': 'VAE', 'batch_size': 412, 'iterations': 22, 'learning_rate': 0.0008965176388005347, 'p_miss': 0.24862608288167526}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:48:21,186] Trial 162 finished with value: 0.13610176961588463 and parameters: {'model_name': 'VAE', 'batch_size': 415, 'iterations': 31, 'learning_rate': 0.0003939578674739705, 'p_miss': 0.2246838605476709}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:49:17,803] Trial 165 finished with value: 0.12974182821524544 and parameters: {'model_name': 'VAE', 'batch_size': 107, 'iterations': 20, 'learning_rate': 0.0008920815372049777, 'p_miss': 0.20328437027918023}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:49:35,478] Trial 167 finished with value: 0.12951307397909306 and parameters: {'model_name': 'VAE', 'batch_size': 555, 'iterations': 13, 'learning_rate': 0.0002894082737111882, 'p_miss': 0.14258089165814913}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:49:37,860] Trial 166 finished with value: 0.18618024060983 and parameters: {'model_name': 'VAE', 'batch_size': 536, 'iterations': 15, 'learning_rate': 0.07676119970388294, 'p_miss': 0.14495303613712027}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:50:05,220] Trial 169 finished with value: 0.12627171794956948 and parameters: {'model_name': 'VAE', 'batch_size': 667, 'iterations': 6, 'learning_rate': 0.0004898311438064637, 'p_miss': 0.15453560923758108}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:50:13,600] Trial 170 finished with value: 0.12801826054009574 and parameters: {'model_name': 'VAE', 'batch_size': 628, 'iterations': 6, 'learning_rate': 0.0005063224267028916, 'p_miss': 0.16639987208286267}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:50:35,995] Trial 172 finished with value: 0.1251041974575775 and parameters: {'model_name': 'VAE', 'batch_size': 942, 'iterations': 4, 'learning_rate': 0.0004536744888690059, 'p_miss': 0.15349955686415234}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:50:36,803] Trial 168 finished with value: 0.18610726345101286 and parameters: {'model_name': 'VAE', 'batch_size': 535, 'iterations': 14, 'learning_rate': 0.08232827708177864, 'p_miss': 0.1621263858290764}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:50:37,471] Trial 174 finished with value: 0.43530587761082884 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:50:40,705] Trial 171 finished with value: 0.127358211403288 and parameters: {'model_name': 'VAE', 'batch_size': 677, 'iterations': 6, 'learning_rate': 0.0005053680819623811, 'p_miss': 0.15422706842308723}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:50:59,181] Trial 173 finished with value: 0.12571967749635915 and parameters: {'model_name': 'VAE', 'batch_size': 879, 'iterations': 4, 'learning_rate': 0.00044814645151432914, 'p_miss': 0.1537283848889795}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:51:00,860] Trial 175 finished with value: 0.14089752153471222 and parameters: {'model_name': 'VAE', 'batch_size': 858, 'iterations': 4, 'learning_rate': 0.0003307066084204536, 'p_miss': 0.15630986107492398}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:51:02,544] Trial 176 finished with value: 0.1416941066682791 and parameters: {'model_name': 'VAE', 'batch_size': 846, 'iterations': 4, 'learning_rate': 0.0006245818781594564, 'p_miss': 0.20939442027074015}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:51:21,704] Trial 177 finished with value: 0.13057446325405253 and parameters: {'model_name': 'VAE', 'batch_size': 993, 'iterations': 4, 'learning_rate': 0.000437907505875071, 'p_miss': 0.12922435358126644}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:51:30,406] Trial 179 finished with value: 0.13482920111794483 and parameters: {'model_name': 'VAE', 'batch_size': 997, 'iterations': 5, 'learning_rate': 0.00043188744166125574, 'p_miss': 0.12879186372720153}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:51:32,118] Trial 178 finished with value: 0.1280861951966943 and parameters: {'model_name': 'VAE', 'batch_size': 986, 'iterations': 5, 'learning_rate': 0.0004446997719164459, 'p_miss': 0.12975971490645788}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:51:41,758] Trial 180 finished with value: 0.1297054708276706 and parameters: {'model_name': 'VAE', 'batch_size': 720, 'iterations': 3, 'learning_rate': 0.00023534959255645227, 'p_miss': 0.15174043637958567}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:51:43,411] Trial 183 finished with value: 0.18671066874853084 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 664, 'weights': 'distance'}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:51:55,735] Trial 181 finished with value: 0.13962268710609008 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7, 'learning_rate': 0.0002633031333222261, 'p_miss': 0.1511795554352991}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:52:06,463] Trial 185 finished with value: 0.13179886259694784 and parameters: {'model_name': 'VAE', 'batch_size': 300, 'iterations': 2, 'learning_rate': 0.0003470687887432847, 'p_miss': 0.1802453143442461}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:52:10,156] Trial 182 finished with value: 0.13183436638206594 and parameters: {'model_name': 'VAE', 'batch_size': 711, 'iterations': 7, 'learning_rate': 0.0002342190558234983, 'p_miss': 0.1512655526344063}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:52:15,281] Trial 184 finished with value: 0.14237179301127761 and parameters: {'model_name': 'VAE', 'batch_size': 216, 'iterations': 7, 'learning_rate': 0.0003533714162733457, 'p_miss': 0.17843585104566675}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:52:29,405] Trial 99 finished with value: 0.18595356600626278 and parameters: {'model_name': 'VAE', 'batch_size': 354, 'iterations': 3480, 'learning_rate': 0.0010991627496335444, 'p_miss': 0.1084801188403723}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:52:48,717] Trial 189 finished with value: 0.39112869863194605 and parameters: {'model_name': 'GAIN', 'batch_size': 805, 'hint_rate': 0.6715591979338622, 'alpha': 100, 'iterations': 9, 'learning_rate': 0.0007260970016853119, 'p_miss': 0.16475072825343715}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:05,188] Trial 186 finished with value: 0.14764354247582706 and parameters: {'model_name': 'VAE', 'batch_size': 798, 'iterations': 8, 'learning_rate': 0.0005751333419168546, 'p_miss': 0.16527829109298786}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:13,817] Trial 187 finished with value: 0.12726150556950183 and parameters: {'model_name': 'VAE', 'batch_size': 801, 'iterations': 11, 'learning_rate': 0.0007121530813221214, 'p_miss': 0.1647421772398086}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:15,766] Trial 188 finished with value: 0.14356529547490857 and parameters: {'model_name': 'VAE', 'batch_size': 808, 'iterations': 10, 'learning_rate': 0.000592567217168952, 'p_miss': 0.16349944201830316}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:27,899] Trial 190 finished with value: 0.13364856794029642 and parameters: {'model_name': 'VAE', 'batch_size': 258, 'iterations': 11, 'learning_rate': 0.0005910731854921987, 'p_miss': 0.22992437620919579}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:29,884] Trial 193 finished with value: 0.12924700288477958 and parameters: {'model_name': 'VAE', 'batch_size': 603, 'iterations': 3, 'learning_rate': 0.0003053953237627746, 'p_miss': 0.21253496941016645}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:38,788] Trial 192 finished with value: 0.1258647776928519 and parameters: {'model_name': 'VAE', 'batch_size': 260, 'iterations': 5, 'learning_rate': 0.0005627070350429423, 'p_miss': 0.21202690089481702}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:45,031] Trial 194 finished with value: 0.12739728242772608 and parameters: {'model_name': 'VAE', 'batch_size': 621, 'iterations': 3, 'learning_rate': 0.00029835934417863047, 'p_miss': 0.21096353018166367}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:56,719] Trial 191 finished with value: 0.1292644145939485 and parameters: {'model_name': 'VAE', 'batch_size': 620, 'iterations': 10, 'learning_rate': 0.000504455388719608, 'p_miss': 0.2275353318869544}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:53:59,451] Trial 195 finished with value: 0.13530403648590172 and parameters: {'model_name': 'VAE', 'batch_size': 662, 'iterations': 5, 'learning_rate': 0.0004846487230886277, 'p_miss': 0.20030459402085204}. Best is trial 126 with value: 0.12230338909217069.
running
[I 2024-10-30 13:54:00,456] Trial 196 finished with value: 0.12672347160664965 and parameters: {'model_name': 'VAE', 'batch_size': 309, 'iterations': 5, 'learning_rate': 0.0005103975771674835, 'p_miss': 0.2017438315505237}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 13:54:09,744] Trial 197 finished with value: 0.12837976184082325 and parameters: {'model_name': 'VAE', 'batch_size': 313, 'iterations': 6, 'learning_rate': 0.00047740936184783185, 'p_miss': 0.20243236189392716}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 13:54:24,148] Trial 198 finished with value: 0.12464892944149034 and parameters: {'model_name': 'VAE', 'batch_size': 316, 'iterations': 6, 'learning_rate': 0.0003888586398364196, 'p_miss': 0.22027234648139882}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 13:54:25,849] Trial 199 finished with value: 0.12609086027984742 and parameters: {'model_name': 'VAE', 'batch_size': 459, 'iterations': 6, 'learning_rate': 0.00037958620114866544, 'p_miss': 0.22196589931568977}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 13:55:45,407] Trial 132 finished with value: 0.18663432924727819 and parameters: {'model_name': 'VAE', 'batch_size': 175, 'iterations': 3197, 'learning_rate': 0.0002418888552658617, 'p_miss': 0.23781525845713308}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 13:57:45,659] Trial 35 finished with value: 0.3858454535448278 and parameters: {'model_name': 'GAIN', 'batch_size': 993, 'hint_rate': 0.03115875407632801, 'alpha': 4, 'iterations': 6962, 'learning_rate': 0.00012663081623391948, 'p_miss': 0.27793101405882803}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 14:02:38,252] Trial 8 finished with value: 0.21373535395240545 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5284, 'learning_rate': 0.003002196038624803, 'p_miss': 0.04671199614326177}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 14:06:04,050] Trial 27 finished with value: 0.19173896128348575 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 3792, 'learning_rate': 0.00016586637710629972, 'p_miss': 0.16397062552992145}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 14:17:46,944] Trial 94 finished with value: 0.18554697755415522 and parameters: {'model_name': 'VAE', 'batch_size': 379, 'iterations': 4514, 'learning_rate': 0.0013262558165358532, 'p_miss': 0.10329184080251025}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 14:42:52,109] Trial 103 finished with value: 0.18640739146414986 and parameters: {'model_name': 'VAE', 'batch_size': 805, 'iterations': 4331, 'learning_rate': 0.0007217027511007894, 'p_miss': 0.21054678656648745}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 14:52:34,754] Trial 134 finished with value: 0.1855197566678135 and parameters: {'model_name': 'VAE', 'batch_size': 430, 'iterations': 4879, 'learning_rate': 0.0006790007062374753, 'p_miss': 0.23725679901964794}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 15:00:21,159] Trial 137 finished with value: 0.1854522492404871 and parameters: {'model_name': 'VAE', 'batch_size': 416, 'iterations': 4677, 'learning_rate': 0.00048494283803187396, 'p_miss': 0.2286486440701625}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 15:02:16,452] Trial 30 finished with value: 0.19993024157109188 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8096, 'learning_rate': 0.00010126666599608408, 'p_miss': 0.2807039986731189}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 15:06:13,899] Trial 119 finished with value: 0.185719581769962 and parameters: {'model_name': 'VAE', 'batch_size': 285, 'iterations': 8058, 'learning_rate': 0.00020955256301757625, 'p_miss': 0.14905820638901698}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 15:07:20,260] Trial 138 finished with value: 0.18546163086634185 and parameters: {'model_name': 'VAE', 'batch_size': 420, 'iterations': 5162, 'learning_rate': 0.0006677966882834376, 'p_miss': 0.23671079327090808}. Best is trial 126 with value: 0.12230338909217069.
[I 2024-10-30 15:07:35,608] Trial 136 finished with value: 0.1853224944707243 and parameters: {'model_name': 'VAE', 'batch_size': 269, 'iterations': 7410, 'learning_rate': 0.0006998405732919216, 'p_miss': 0.21836850432274027}. Best is trial 126 with value: 0.12230338909217069.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.12230338909217069
{'model_name': 'VAE', 'batch_size': 274, 'iterations': 7, 'learning_rate': 0.0003005904722034231, 'p_miss': 0.23309391438757537}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.525622589152295
Generation:   4%|▍         | 1/25 [00:07<02:57,  7.41s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474713490> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  2
Best f1_score score: 0.525622589152295
Generation:   8%|▊         | 2/25 [00:33<06:56, 18.11s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746ff430> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  3
Best f1_score score: 0.525622589152295
Generation:  12%|█▏        | 3/25 [00:40<04:55, 13.42s/it]Generation:  4
Best f1_score score: 0.5317960151706351
Generation:  16%|█▌        | 4/25 [00:53<04:38, 13.28s/it]Generation:  5
Best f1_score score: 0.5317960151706351
Generation:  20%|██        | 5/25 [01:29<07:04, 21.21s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c69c30> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  6
Best f1_score score: 0.5317960151706351
Generation:  24%|██▍       | 6/25 [01:39<05:34, 17.62s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465be1750> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465b70100> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.5317960151706351
Generation:  28%|██▊       | 7/25 [01:49<04:28, 14.94s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f49d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.5317960151706351
Generation:  32%|███▏      | 8/25 [02:00<03:55, 13.87s/it]Generation:  9
Best f1_score score: 0.5317960151706351
Generation:  36%|███▌      | 9/25 [02:12<03:31, 13.19s/it]Generation:  10
Best f1_score score: 0.5317960151706351
Generation:  40%|████      | 10/25 [02:32<03:49, 15.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c88a30> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.5317960151706351
Generation:  44%|████▍     | 11/25 [02:54<04:01, 17.22s/it]Generation:  12
Best f1_score score: 0.5317960151706351
Generation:  48%|████▊     | 12/25 [03:07<03:26, 15.92s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465ad7be0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  13
Best f1_score score: 0.5317960151706351
Generation:  52%|█████▏    | 13/25 [03:39<04:11, 20.95s/it]Generation:  14
Best f1_score score: 0.5317960151706351
Generation:  56%|█████▌    | 14/25 [03:55<03:32, 19.33s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c15c90> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  15
Best f1_score score: 0.5333257881946368
Generation:  60%|██████    | 15/25 [04:06<02:48, 16.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546537a2c0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f333d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546596e380> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  16
Best f1_score score: 0.5333257881946368
Generation:  64%|██████▍   | 16/25 [06:10<07:23, 49.26s/it]Generation:  17
Best f1_score score: 0.5333257881946368
Generation:  68%|██████▊   | 17/25 [06:22<05:02, 37.84s/it]Generation:  18
Best f1_score score: 0.5333257881946368
Generation:  72%|███████▏  | 18/25 [06:35<03:33, 30.52s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465b38520> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  19
Best f1_score score: 0.5333257881946368
Generation:  76%|███████▌  | 19/25 [06:50<02:34, 25.69s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f29e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  20
Best f1_score score: 0.5333257881946368
Generation:  80%|████████  | 20/25 [07:08<01:57, 23.42s/it]Generation:  21
Best f1_score score: 0.5346068794236786
Generation:  84%|████████▍ | 21/25 [07:27<01:28, 22.15s/it]Generation:  22
Best f1_score score: 0.5346068794236786
Generation:  88%|████████▊ | 22/25 [07:41<00:59, 19.68s/it]Generation:  23
Best f1_score score: 0.5346068794236786
Generation:  92%|█████████▏| 23/25 [07:56<00:36, 18.31s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c88580> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.5346068794236786
Generation:  96%|█████████▌| 24/25 [08:18<00:19, 19.38s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465751150> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  25
Best f1_score score: 0.5346068794236786
Generation: 100%|██████████| 25/25 [08:39<00:00, 19.92s/it]Generation: 100%|██████████| 25/25 [08:42<00:00, 20.92s/it]
2024-10-30 15:16:26,837 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:44969' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-bc4208520aa147cba4da9f08bb09870e', 'ndarray-2c00092ba1cd743626b416db9c976854'} (stimulus_id='handle-worker-cleanup-1730326586.8374274')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(max_depth=10, n_estimators=88, n_jobs=1,
                                num_leaves=38, verbose=-1))])
score start
train score: {'auroc': 0.9668848196828317, 'accuracy': 0.898635477582846, 'balanced_accuracy': 0.898635477582846, 'logloss': 0.4421816904517724, 'f1': 0.8986231078711884}
original test score: {'auroc': 0.5078900320458762, 'accuracy': 0.5, 'balanced_accuracy': 0.5, 'logloss': 0.7135816427129495, 'f1': 0.49995867427060087}
imputed test score: {'auroc': 0.49259571597233937, 'accuracy': 0.512987012987013, 'balanced_accuracy': 0.512987012987013, 'logloss': 0.7576194952711655, 'f1': 0.5128876022936035}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0e50> 
 Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.5067692320118236
Generation:   4%|▍         | 1/25 [02:30<1:00:02, 150.10s/it]Generation:  2
Best f1_score score: 0.5226857544679431
Generation:   8%|▊         | 2/25 [04:52<55:52, 145.76s/it]  Generation:  3
Best f1_score score: 0.5226857544679431
Generation:  12%|█▏        | 3/25 [05:13<32:35, 88.87s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e597010> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.5226857544679431
Generation:  16%|█▌        | 4/25 [07:41<39:08, 111.85s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd1390> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  5
Best f1_score score: 0.5226857544679431
Generation:  20%|██        | 5/25 [08:01<26:14, 78.70s/it] Generation:  6
Best f1_score score: 0.5226857544679431
Generation:  24%|██▍       | 6/25 [09:51<28:22, 89.63s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745ca3b0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.5226857544679431
Generation:  28%|██▊       | 7/25 [10:50<23:52, 79.59s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545307b370> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457026b60> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  8
Best f1_score score: 0.5226857544679431
Generation:  32%|███▏      | 8/25 [15:10<38:47, 136.89s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474232a40> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  9
Best f1_score score: 0.5226857544679431
Generation:  36%|███▌      | 9/25 [17:32<36:57, 138.61s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545505f820> 
 Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 911, in fit
    X, y = self._validate_data(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.5226857544679431
Generation:  40%|████      | 10/25 [20:39<38:22, 153.51s/it]Generation:  11
Best f1_score score: 0.5226857544679431
Generation:  44%|████▍     | 11/25 [21:55<30:17, 129.84s/it]Generation:  12
Best f1_score score: 0.5226857544679431
Generation:  48%|████▊     | 12/25 [23:33<26:01, 120.11s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455324d60> 
 Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 911, in fit
    X, y = self._validate_data(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554575ddf30> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.5226857544679431
Generation:  52%|█████▏    | 13/25 [25:28<23:42, 118.58s/it]Generation:  14
Best f1_score score: 0.5233464491868052
Generation:  56%|█████▌    | 14/25 [26:34<18:49, 102.68s/it]Generation:  15
Best f1_score score: 0.5233464491868052
Generation:  60%|██████    | 15/25 [29:01<19:18, 115.87s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554528fcbe0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554574f8670> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.5233464491868052
Generation:  64%|██████▍   | 16/25 [30:03<14:58, 99.85s/it] Generation:  17
Best f1_score score: 0.5263218108929741
Generation:  68%|██████▊   | 17/25 [31:41<13:14, 99.26s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457513910> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  18
Best f1_score score: 0.5263218108929741
Generation:  72%|███████▏  | 18/25 [34:21<13:41, 117.41s/it]Generation:  19
Best f1_score score: 0.5263218108929741
Generation:  76%|███████▌  | 19/25 [36:42<12:28, 124.71s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554575c1ed0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.5263218108929741
Generation:  80%|████████  | 20/25 [37:12<07:59, 96.00s/it] Generation:  21
Best f1_score score: 0.5263218108929741
Generation:  84%|████████▍ | 21/25 [41:43<09:54, 148.65s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454b7a3e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15544f7e4d90> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.5263218108929741
Generation:  88%|████████▊ | 22/25 [42:05<05:32, 110.70s/it]Generation:  23
Best f1_score score: 0.5263218108929741
Generation:  92%|█████████▏| 23/25 [49:45<07:10, 215.46s/it]Generation:  24
Best f1_score score: 0.5263218108929741
Generation:  96%|█████████▌| 24/25 [52:09<03:13, 193.95s/it]Generation:  25
Best f1_score score: 0.5263218108929741
Generation: 100%|██████████| 25/25 [59:12<00:00, 262.87s/it]Generation: 100%|██████████| 25/25 [59:12<00:00, 142.12s/it]
2024-10-30 16:15:48,279 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33185' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-8a687f8ab4e33a2e44f0e6c7d5042ad4', 'ndarray-2c00092ba1cd743626b416db9c976854'} (stimulus_id='handle-worker-cleanup-1730330148.2793548')
Fitted
Pipeline(steps=[('vaeimputer',
                 VAEImputer(batch_size=1, code_size=1,
                            decoder_hidden_sizes=[1, 2],
                            encoder_hidden_sizes=[2, 1], iterations=47,
                            learning_rate=0.002961673394,
                            p_miss=0.2908934882688, split_size=1)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(metric='euclidean', n_jobs=1,
                                      n_neighbors=98, p=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.524802397783258, 'accuracy': 0.5084470435347629, 'balanced_accuracy': 0.5003248862897985, 'logloss': 0.6991301195214968, 'f1': 0.5079906606956546}
test score: {'auroc': 0.49284870973182665, 'accuracy': 0.4766233766233766, 'balanced_accuracy': 0.4792207792207792, 'logloss': 0.7046229062425083, 'f1': 0.5213687407014898}
failed on 
../data/c/871/class_full_MCAR_0.3_2
'numpy.ndarray' object has no attribute 'to_numpy'
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/ImputerExperiments/Locally_run_code/utils.py", line 33, in score
    this_auroc_score = sklearn.metrics.get_scorer("roc_auc_ovr")(est, X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 940, in predict_proba
    return self.fitted_pipeline_.predict_proba(X,**predict_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 720, in predict_proba
    Xt = transform.transform(Xt)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 688, in transform
    features = torch.from_numpy(X.to_numpy()) #X features
AttributeError: 'numpy.ndarray' object has no attribute 'to_numpy'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/ImputerExperiments/Locally_run_code/utils.py", line 686, in loop_through_tasks
    ori_test_score = score(tpot_space, X_test, y_test, r_or_c=r_or_c)
  File "/common/ketrong/tpotexp/tpot2/ImputerExperiments/Locally_run_code/utils.py", line 35, in score
    y_preds = est.predict(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 930, in predict
    preds = self.fitted_pipeline_.predict(X,**predict_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 600, in predict
    Xt = transform.transform(Xt)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 688, in transform
    features = torch.from_numpy(X.to_numpy()) #X features
AttributeError: 'numpy.ndarray' object has no attribute 'to_numpy'

full run takes
6.029636260271072
hours
DONE
