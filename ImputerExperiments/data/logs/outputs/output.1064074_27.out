Run: 27
/cm/local/apps/slurm/var/spool/job1064074/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/40685/40685.pkl
working on 
../data/c/40685/class_full_MCAR_0.3_2
4.852591037750244
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-19 07:35:07,873] A new study created in memory with name: no-name-378dec55-589f-4c20-b415-fab3f0b8ed58
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-19 07:35:08,521] Trial 12 finished with value: 0.44821654910979475 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 12 with value: 0.44821654910979475.
running
[I 2024-11-19 07:35:08,725] Trial 0 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:16,524] Trial 11 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.6156869582364837, 'alpha': 36, 'iterations': 10, 'learning_rate': 0.0674389669093666, 'p_miss': 0.1347332345260801}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:16,808] Trial 7 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.4380241413439215, 'alpha': 10, 'iterations': 3, 'learning_rate': 0.0238153674463284, 'p_miss': 0.05137478077059334}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:17,667] Trial 18 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:19,942] Trial 6 finished with value: 0.40258340829958134 and parameters: {'model_name': 'GAIN', 'batch_size': 121, 'hint_rate': 0.3294854931952623, 'alpha': 11, 'iterations': 1, 'learning_rate': 0.016274684842062615, 'p_miss': 0.17347996754895675}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:22,368] Trial 10 finished with value: 0.381850113305782 and parameters: {'model_name': 'GAIN', 'batch_size': 146, 'hint_rate': 0.4274300404503156, 'alpha': 100, 'iterations': 4, 'learning_rate': 0.029177149638740837, 'p_miss': 0.29077406001889927}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:45,637] Trial 4 finished with value: 0.14207927411855706 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:46,954] Trial 23 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:49,023] Trial 8 finished with value: 0.1421185105527711 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:52,620] Trial 24 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.4937889934386964, 'alpha': 13, 'iterations': 4, 'learning_rate': 0.02586562152267101, 'p_miss': 0.0166758679283416}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:35:57,426] Trial 22 finished with value: 0.14221654964845945 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:16,354] Trial 13 finished with value: 0.14255348326519673 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6491, 'weights': 'uniform'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:26,697] Trial 1 finished with value: 0.1425401576922305 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16317, 'weights': 'uniform'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:31,905] Trial 5 finished with value: 0.1425836254357838 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21336, 'weights': 'uniform'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:54,556] Trial 15 finished with value: 0.4100557220927749 and parameters: {'model_name': 'GAIN', 'batch_size': 522, 'hint_rate': 0.9200420171194914, 'alpha': 84, 'iterations': 120, 'learning_rate': 0.00024946378154925495, 'p_miss': 0.1433637334136923}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:55,896] Trial 3 finished with value: 0.16134795722444106 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 97, 'learning_rate': 0.009984580544421395, 'p_miss': 0.11136083998075012}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:57,128] Trial 32 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:57,518] Trial 25 finished with value: 0.14251154516939535 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10486, 'weights': 'uniform'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:57,682] Trial 9 finished with value: 0.14208842696858334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:58,769] Trial 33 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:58,923] Trial 35 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:36:59,279] Trial 34 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:37:00,328] Trial 36 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:37:00,681] Trial 37 finished with value: 0.3912170955051237 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:37:01,151] Trial 38 finished with value: 0.3912170955051237 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:37:01,563] Trial 39 finished with value: 0.14261919413402593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:37:04,138] Trial 27 finished with value: 0.1663545866368034 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7966, 'weights': 'distance'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:37:38,231] Trial 2 finished with value: 0.15748713190983127 and parameters: {'model_name': 'VAE', 'batch_size': 59, 'iterations': 107, 'learning_rate': 0.0029850700467604864, 'p_miss': 0.13179592413513347}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:37:39,474] Trial 44 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:56:45,344] Trial 20 finished with value: 0.42566902096307474 and parameters: {'model_name': 'GAIN', 'batch_size': 26, 'hint_rate': 0.7140083556530719, 'alpha': 17, 'iterations': 939, 'learning_rate': 0.01912803341437013, 'p_miss': 0.0827219178649249}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:56:46,809] Trial 46 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 07:56:48,322] Trial 47 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 08:07:43,639] Trial 21 finished with value: 0.424528670275674 and parameters: {'model_name': 'GAIN', 'batch_size': 351, 'hint_rate': 0.533153414119214, 'alpha': 47, 'iterations': 1200, 'learning_rate': 0.00017269343472251948, 'p_miss': 0.0713819496049875}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 08:20:05,838] Trial 17 finished with value: 0.1457420112307968 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 08:21:23,039] Trial 19 finished with value: 0.15901786099562795 and parameters: {'model_name': 'VAE', 'batch_size': 69, 'iterations': 1036, 'learning_rate': 0.002034432514380282, 'p_miss': 0.25833132279716703}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 08:36:53,280] Trial 14 finished with value: 0.15280773584032983 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 09:43:49,038] Trial 16 finished with value: 0.16035932656230134 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 10:57:59,484] Trial 41 finished with value: 0.22951094378445216 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3370, 'learning_rate': 0.0005654268517084916, 'p_miss': 0.29827506527311404}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 10:58:00,915] Trial 54 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 10:58:02,232] Trial 55 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 10:58:03,775] Trial 56 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 10:58:05,427] Trial 57 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 10:58:06,949] Trial 58 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 10:58:08,108] Trial 59 finished with value: 0.14261919413402593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 10:58:08,985] Trial 60 finished with value: 0.44821654910979475 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:27:41,805] Trial 49 finished with value: 0.1747166760921448 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4278, 'learning_rate': 0.0009310309556550402, 'p_miss': 0.2205406372201466}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:27:43,012] Trial 62 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:27:44,324] Trial 63 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:27:45,641] Trial 64 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:28:39,905] Trial 65 finished with value: 0.16498685458707402 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 43361, 'weights': 'distance'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:28:41,364] Trial 66 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:28:42,764] Trial 67 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:28:44,245] Trial 68 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:28:45,706] Trial 69 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:31:08,382] Trial 70 finished with value: 0.13244271053163265 and parameters: {'model_name': 'VAE', 'batch_size': 987, 'iterations': 21, 'learning_rate': 0.0001007834925814448, 'p_miss': 0.20218954062144276}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:31:09,764] Trial 71 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:31:10,757] Trial 72 finished with value: 0.14261919413402593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:32:23,240] Trial 73 finished with value: 0.16489542460375362 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:32:25,018] Trial 74 finished with value: 0.3912170955051237 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:33:19,168] Trial 75 finished with value: 0.16498685458707402 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 37030, 'weights': 'distance'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:33:20,418] Trial 76 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:33:21,311] Trial 77 finished with value: 0.44821654910979475 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:33:22,945] Trial 78 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:33:24,415] Trial 79 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:33:25,707] Trial 80 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:48:16,452] Trial 50 finished with value: 0.180730796141906 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4369, 'learning_rate': 0.0009150109187458739, 'p_miss': 0.22233565549308226}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:48:26,285] Trial 82 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.022525239208982972, 'alpha': 68, 'iterations': 26, 'learning_rate': 0.00670569140870094, 'p_miss': 0.019992230342104234}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:48:27,224] Trial 83 finished with value: 0.44821654910979475 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:50:10,998] Trial 84 finished with value: 0.1689537273909057 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:50:12,864] Trial 85 finished with value: 0.3912170955051237 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:50:14,311] Trial 86 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:50:15,889] Trial 87 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:50:17,326] Trial 88 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:50:18,867] Trial 89 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:50:20,511] Trial 90 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:50:22,083] Trial 91 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:52:01,369] Trial 92 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.038681921079730064, 'alpha': 66, 'iterations': 314, 'learning_rate': 0.0067231551209934615, 'p_miss': 0.1817159318157195}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:04,343] Trial 93 finished with value: 0.16504656422566816 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 31223, 'weights': 'distance'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:05,706] Trial 94 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:14,431] Trial 95 finished with value: 0.15408756546177454 and parameters: {'model_name': 'VAE', 'batch_size': 205, 'iterations': 1, 'learning_rate': 0.09714906711990003, 'p_miss': 0.10662805894165156}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:16,038] Trial 96 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:17,525] Trial 97 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:19,094] Trial 98 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:20,186] Trial 99 finished with value: 0.14261919413402593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:21,749] Trial 100 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:23,272] Trial 101 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:25,010] Trial 102 finished with value: 0.3912170955051237 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:46,468] Trial 103 finished with value: 0.14232303729363324 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:47,909] Trial 104 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:49,614] Trial 105 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:51,102] Trial 106 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:52,583] Trial 107 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:54,135] Trial 108 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:55,685] Trial 109 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:56,970] Trial 110 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 12:53:57,867] Trial 111 finished with value: 0.14261919413402593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:12:50,986] Trial 112 finished with value: 0.1488839413414846 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 333, 'learning_rate': 0.00042030712005456283, 'p_miss': 0.2660452903755861}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:12,029] Trial 113 finished with value: 0.3883658938106957 and parameters: {'model_name': 'GAIN', 'batch_size': 39, 'hint_rate': 0.22706977726093425, 'alpha': 33, 'iterations': 46, 'learning_rate': 0.001697672832522253, 'p_miss': 0.24617509485841754}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:44,931] Trial 114 finished with value: 0.14984133594974827 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 13, 'weights': 'uniform'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:46,447] Trial 115 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:47,915] Trial 116 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:49,414] Trial 117 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:50,320] Trial 118 finished with value: 0.44821654910979475 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:51,627] Trial 119 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:53,220] Trial 120 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:54,723] Trial 121 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:56,100] Trial 122 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:14:57,674] Trial 123 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:07,951] Trial 124 finished with value: 0.25210521480542186 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:09,786] Trial 125 finished with value: 0.3912170955051237 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:11,191] Trial 126 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:12,622] Trial 127 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:14,256] Trial 128 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:15,716] Trial 129 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:16,776] Trial 130 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:17,847] Trial 131 finished with value: 0.44821654910979475 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:16:19,269] Trial 132 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:17:20,126] Trial 133 finished with value: 0.1651462468872927 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 27051, 'weights': 'distance'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:21:22,985] Trial 53 finished with value: 0.18891631218878585 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3685, 'learning_rate': 0.000705697873331148, 'p_miss': 0.20983221186540557}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:21:24,206] Trial 135 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:21:25,716] Trial 136 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:21:27,062] Trial 137 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:21:28,507] Trial 138 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:21:29,557] Trial 139 finished with value: 0.14261919413402593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:29:17,726] Trial 140 finished with value: 0.4330077858440119 and parameters: {'model_name': 'GAIN', 'batch_size': 664, 'hint_rate': 0.9258127109353063, 'alpha': 66, 'iterations': 255, 'learning_rate': 0.045307429896138104, 'p_miss': 0.043090537865343656}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:29:19,005] Trial 141 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:29:20,462] Trial 142 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:20,095] Trial 143 finished with value: 0.14295024050186453 and parameters: {'model_name': 'VAE', 'batch_size': 329, 'iterations': 9, 'learning_rate': 0.00482066298789333, 'p_miss': 0.17262270978919453}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:21,485] Trial 144 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:22,761] Trial 145 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:24,116] Trial 146 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:25,751] Trial 147 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:27,290] Trial 148 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:28,723] Trial 149 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:30,198] Trial 150 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:30:31,603] Trial 151 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:03,210] Trial 152 finished with value: 0.16596558281520596 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:04,572] Trial 153 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:06,291] Trial 154 finished with value: 0.3912170955051237 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:07,888] Trial 155 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:09,268] Trial 156 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:10,745] Trial 157 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:12,220] Trial 158 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:13,646] Trial 159 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:14,391] Trial 160 finished with value: 0.44821654910979475 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:15,800] Trial 161 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:16,928] Trial 162 finished with value: 0.14261919413402593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:32:57,661] Trial 163 finished with value: 0.14261919413402593 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 45753, 'weights': 'uniform'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:07,282] Trial 164 finished with value: 0.41648151011966333 and parameters: {'model_name': 'GAIN', 'batch_size': 20, 'hint_rate': 0.739964647337705, 'alpha': 93, 'iterations': 1, 'learning_rate': 0.0014835437695013673, 'p_miss': 0.10635547204485987}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:08,777] Trial 165 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:10,162] Trial 166 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:11,541] Trial 167 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:12,887] Trial 168 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:14,510] Trial 169 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:15,913] Trial 170 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:17,433] Trial 171 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:18,932] Trial 172 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:33:20,421] Trial 173 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:56:01,228] Trial 51 finished with value: 0.17798530307275323 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 5936, 'learning_rate': 0.0007150816877434196, 'p_miss': 0.20781768879425222}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:56:03,154] Trial 175 finished with value: 0.3912170955051237 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:56:04,597] Trial 176 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:56:06,125] Trial 177 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:56:07,635] Trial 178 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:56:09,191] Trial 179 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 13:56:20,220] Trial 180 finished with value: 0.12553817884912108 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2, 'learning_rate': 0.00010866933411058944, 'p_miss': 0.08026208950953752}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:20:34,641] Trial 42 finished with value: 0.22105758375150394 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7314, 'learning_rate': 0.0004255961016301386, 'p_miss': 0.27261596626000273}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:30,001] Trial 182 finished with value: 0.253369904832327 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:31,577] Trial 183 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:33,063] Trial 184 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:34,588] Trial 185 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:36,242] Trial 186 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:37,682] Trial 187 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:39,173] Trial 188 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:40,585] Trial 189 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:41,567] Trial 190 finished with value: 0.44821654910979475 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:42,851] Trial 191 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:21:44,308] Trial 192 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:22:47,313] Trial 193 finished with value: 0.16498774333677718 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 35220, 'weights': 'distance'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:22:48,656] Trial 194 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:22:49,810] Trial 195 finished with value: 0.14261919413402593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:22:51,266] Trial 196 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:22:52,619] Trial 197 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:22:54,033] Trial 198 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
running
[I 2024-11-19 14:22:55,491] Trial 199 finished with value: 0.05587115524870294 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 14:26:23,419] Trial 181 finished with value: 0.1408138804282124 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 14:43:27,109] Trial 174 finished with value: 0.15363423872680282 and parameters: {'model_name': 'VAE', 'batch_size': 74, 'iterations': 1530, 'learning_rate': 0.0002716025480472107, 'p_miss': 0.2412918316887162}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 15:12:08,955] Trial 45 finished with value: 0.15691185649264075 and parameters: {'model_name': 'VAE', 'batch_size': 872, 'iterations': 5853, 'learning_rate': 0.00018014406446783903, 'p_miss': 0.2912601418739831}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 15:59:37,097] Trial 81 finished with value: 0.41476513316508895 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.01725208854659893, 'alpha': 70, 'iterations': 9233, 'learning_rate': 0.007049041198966423, 'p_miss': 0.23957079280967156}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:04:22,245] Trial 29 finished with value: 0.15793806984919873 and parameters: {'model_name': 'VAE', 'batch_size': 761, 'iterations': 6722, 'learning_rate': 0.00010387962777718652, 'p_miss': 0.2882205215307546}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:13:41,867] Trial 48 finished with value: 0.15714738829669114 and parameters: {'model_name': 'VAE', 'batch_size': 983, 'iterations': 6553, 'learning_rate': 0.00012661694973547467, 'p_miss': 0.22645404741031205}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:14:20,744] Trial 28 finished with value: 0.1566469077854639 and parameters: {'model_name': 'VAE', 'batch_size': 580, 'iterations': 8168, 'learning_rate': 0.0001934294023799686, 'p_miss': 0.28266521084326934}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:24:40,350] Trial 30 finished with value: 0.1584377567789447 and parameters: {'model_name': 'VAE', 'batch_size': 653, 'iterations': 7837, 'learning_rate': 0.0001065692528588362, 'p_miss': 0.2940097031471055}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:35:06,321] Trial 52 finished with value: 0.1727166769942047 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 9758, 'learning_rate': 0.0004872319762115059, 'p_miss': 0.1996489975408581}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:39:47,145] Trial 43 finished with value: 0.15661658188306427 and parameters: {'model_name': 'VAE', 'batch_size': 769, 'iterations': 8419, 'learning_rate': 0.0005707547932617868, 'p_miss': 0.29311467617697123}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:40:13,079] Trial 31 finished with value: 0.15978006188072236 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 9635, 'learning_rate': 0.00013988412755875087, 'p_miss': 0.28146648431348265}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:42:23,339] Trial 40 finished with value: 0.23219777191026933 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9362, 'learning_rate': 0.0007687284788343849, 'p_miss': 0.2919850516624849}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:42:49,089] Trial 61 finished with value: 0.1761346254554396 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 9976, 'learning_rate': 0.001162088604727018, 'p_miss': 0.19290006863195805}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:43:57,522] Trial 26 finished with value: 0.15723588870365915 and parameters: {'model_name': 'VAE', 'batch_size': 646, 'iterations': 9172, 'learning_rate': 0.0001682072089541472, 'p_miss': 0.27399297869985934}. Best is trial 0 with value: 0.05587115524870294.
[I 2024-11-19 16:50:21,232] Trial 134 finished with value: 0.1562227420924665 and parameters: {'model_name': 'VAE', 'batch_size': 733, 'iterations': 7432, 'learning_rate': 0.05124036572359202, 'p_miss': 0.0547826660559364}. Best is trial 0 with value: 0.05587115524870294.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
dtype: int64
0.05587115524870294
{'model_name': 'SimpleImputer', 'strategy': 'median'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4ac0> 

Generation:  1
Best f1_score score: 0.5368493758055684
Generation:   4%|▍         | 1/25 [10:00<4:00:21, 600.91s/it]Generation:  2
Best f1_score score: 0.627282311696658
Generation:   8%|▊         | 2/25 [10:11<1:37:09, 253.45s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474736a40> 

Generation:  3
Best f1_score score: 0.6421634851089676
Generation:  12%|█▏        | 3/25 [20:15<2:31:38, 413.58s/it]Generation:  4
Best f1_score score: 0.7327872429607101
Generation:  16%|█▌        | 4/25 [23:44<1:56:30, 332.86s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554671d2260> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e48430> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f09870> 

Generation:  5
Best f1_score score: 0.7327872429607101
Generation:  20%|██        | 5/25 [33:49<2:23:43, 431.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464733790> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  6
Best f1_score score: 0.7327872429607101
Generation:  24%|██▍       | 6/25 [38:12<1:58:21, 373.75s/it]Generation:  7
Best f1_score score: 0.7327872429607101
Generation:  28%|██▊       | 7/25 [42:12<1:39:00, 330.04s/it]Generation:  8
Best f1_score score: 0.7567583280096521
Generation:  32%|███▏      | 8/25 [42:34<1:05:45, 232.10s/it]Generation:  9
Best f1_score score: 0.7760330779227603
Generation:  36%|███▌      | 9/25 [43:39<47:56, 179.80s/it]  Generation:  10
Best f1_score score: 0.7760330779227603
Generation:  40%|████      | 10/25 [45:40<40:25, 161.73s/it]Generation:  11
Best f1_score score: 0.7760330779227603
Generation:  44%|████▍     | 11/25 [47:33<34:13, 146.66s/it]Generation:  12
Best f1_score score: 0.7760330779227603
Generation:  48%|████▊     | 12/25 [47:57<23:43, 109.48s/it]Generation:  13
Best f1_score score: 0.7760330779227603
Generation:  52%|█████▏    | 13/25 [48:57<18:52, 94.40s/it] Generation:  14
Best f1_score score: 0.7760330779227603
Generation:  56%|█████▌    | 14/25 [57:40<41:02, 223.83s/it]Generation:  15
Best f1_score score: 0.779094735120536
Generation:  60%|██████    | 15/25 [1:06:41<53:15, 319.59s/it]Generation:  16
Best f1_score score: 0.779094735120536
Generation:  64%|██████▍   | 16/25 [1:07:50<36:37, 244.15s/it]Generation:  17
Best f1_score score: 0.779094735120536
Generation:  68%|██████▊   | 17/25 [1:09:24<26:32, 199.01s/it]Generation:  18
Best f1_score score: 0.779094735120536
Generation:  72%|███████▏  | 18/25 [1:11:01<19:37, 168.27s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fac50> 

Generation:  19
Best f1_score score: 0.7959556045796712
Generation:  76%|███████▌  | 19/25 [1:21:12<30:07, 301.32s/it]Generation:  20
Best f1_score score: 0.7959556045796712
Generation:  80%|████████  | 20/25 [1:22:10<19:01, 228.33s/it]Generation:  21
Best f1_score score: 0.7984499087528636
Generation:  84%|████████▍ | 21/25 [1:24:09<13:01, 195.43s/it]Generation:  22
Best f1_score score: 0.7984499087528636
Generation:  88%|████████▊ | 22/25 [1:27:12<09:35, 191.71s/it]Generation:  23
Best f1_score score: 0.798494680451301
Generation:  92%|█████████▏| 23/25 [1:29:09<05:38, 169.17s/it]Generation:  24
Best f1_score score: 0.798494680451301
Generation:  96%|█████████▌| 24/25 [1:29:44<02:08, 128.87s/it]Generation:  25
Best f1_score score: 0.798494680451301
Generation: 100%|██████████| 25/25 [1:33:47<00:00, 163.20s/it]Generation: 100%|██████████| 25/25 [1:33:50<00:00, 225.23s/it]
2024-11-19 18:24:22,469 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:41763' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-08e2b28cd26b443d1296bc2cda8a08c0', 'ndarray-e4f02c9950387188809e0ffa889a97a6'} (stimulus_id='handle-worker-cleanup-1732069462.4696069')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(boosting_type='goss', class_weight='balanced',
                                max_depth=10, n_estimators=90, n_jobs=1,
                                num_leaves=195, verbose=-1))])
score start
train score: {'auroc': 0.9999746945773961, 'accuracy': 0.9944612068965517, 'balanced_accuracy': 0.9985574576878802, 'logloss': 0.017280208435967323, 'f1': 0.9783406054466937}
original test score: {'auroc': 0.9999999558255322, 'accuracy': 0.9993965517241379, 'balanced_accuracy': 0.9998257723522709, 'logloss': 0.0015254718980586071, 'f1': 0.9562542315627388}
imputed test score: {'auroc': 0.9975899520197101, 'accuracy': 0.9892241379310345, 'balanced_accuracy': 0.8267132663665604, 'logloss': 0.03150851531240889, 'f1': 0.8062826179245635}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a5a20> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a43a0> 

Generation:  1
Best f1_score score: 0.548170260056773
Generation:   4%|▍         | 1/25 [10:02<4:01:08, 602.86s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746ffb20> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a57e0> 

Generation:  2
Best f1_score score: 0.548170260056773
Generation:   8%|▊         | 2/25 [20:07<3:51:36, 604.18s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547471a020> 

Generation:  3
Best f1_score score: 0.6859912465447623
Generation:  12%|█▏        | 3/25 [30:12<3:41:32, 604.19s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466a95a20> 

Generation:  4
Best f1_score score: 0.6859912465447623
Generation:  16%|█▌        | 4/25 [40:16<3:31:32, 604.41s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f04d90> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15548648b0d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554673e1840> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d08d60> 

Generation:  5
Best f1_score score: 0.6859912465447623
Generation:  20%|██        | 5/25 [50:22<3:21:37, 604.85s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fce20> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553afbd6410> 

Generation:  6
Best f1_score score: 0.6898796013142977
Generation:  24%|██▍       | 6/25 [1:00:27<3:11:30, 604.77s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f2d750> 

Generation:  7
Best f1_score score: 0.7455689729975832
Generation:  28%|██▊       | 7/25 [1:10:31<3:01:25, 604.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554678aa950> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4040> 

Generation:  8
Best f1_score score: 0.7455689729975832
Generation:  32%|███▏      | 8/25 [1:20:37<2:51:23, 604.93s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546508a320> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d0c520> 

Generation:  9
Best f1_score score: 0.7719811966246747
Generation:  36%|███▌      | 9/25 [1:30:43<2:41:23, 605.21s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467356710> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554650a0ee0> 

Generation:  10
Best f1_score score: 0.7719811966246747
Generation:  40%|████      | 10/25 [1:40:48<2:31:17, 605.18s/it]Generation:  11
Best f1_score score: 0.7719811966246747
Generation:  44%|████▍     | 11/25 [1:50:10<2:18:10, 592.19s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fc430> 

Generation:  12
Best f1_score score: 0.7790313421636984
Generation:  48%|████▊     | 12/25 [2:00:16<2:09:13, 596.42s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554647d9fc0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546720d8a0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546788ddb0> 

Generation:  13
Best f1_score score: 0.7790313421636984
Generation:  52%|█████▏    | 13/25 [2:10:21<1:59:45, 598.79s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465193c70> 

Generation:  14
Best f1_score score: 0.7851491769484509
Generation:  56%|█████▌    | 14/25 [2:20:27<1:50:10, 600.97s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467909420> 

Generation:  15
Best f1_score score: 0.7851491769484509
Generation:  60%|██████    | 15/25 [2:30:32<1:40:23, 602.37s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0a5c0> 

Generation:  16
Best f1_score score: 0.7851491769484509
Generation:  64%|██████▍   | 16/25 [2:40:38<1:30:30, 603.36s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554599ffeb0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.7851491769484509
Generation:  68%|██████▊   | 17/25 [2:49:50<1:18:23, 587.99s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554513b59f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a7640> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0f5b0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554646435b0> 

Generation:  18
Best f1_score score: 0.7851491769484509
Generation:  72%|███████▏  | 18/25 [2:59:58<1:09:17, 593.87s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466984a00> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545280a140> 

Generation:  19
Best f1_score score: 0.7851491769484509
Generation:  76%|███████▌  | 19/25 [3:10:04<59:45, 597.56s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546731e650> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fd930> 

Generation:  20
Best f1_score score: 0.7851491769484509
Generation:  80%|████████  | 20/25 [3:20:12<50:04, 600.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451dbd240> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554678ed840> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c32e00> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a39f30> 

Generation:  21
Best f1_score score: 0.7851491769484509
Generation:  84%|████████▍ | 21/25 [3:30:21<40:12, 603.25s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ec00d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554549e6140> 

Generation:  22
Best f1_score score: 0.7909727132932092
Generation:  88%|████████▊ | 22/25 [3:40:31<30:15, 605.04s/it]Generation:  23
Best f1_score score: 0.7909727132932092
Generation:  92%|█████████▏| 23/25 [3:49:38<19:35, 587.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155449cf61a0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15534aac9090> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466f6f2e0> 

Generation:  24
Best f1_score score: 0.7909727132932092
Generation:  96%|█████████▌| 24/25 [3:59:46<09:53, 593.89s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554679193f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546594ef50> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466ff3fa0> 

Generation:  25
Best f1_score score: 0.7909727132932092
Generation: 100%|██████████| 25/25 [4:09:54<00:00, 598.03s/it]Generation: 100%|██████████| 25/25 [4:09:54<00:00, 599.78s/it]
2024-11-19 22:35:00,961 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37569' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-08e2b28cd26b443d1296bc2cda8a08c0', 'DataFrame-003dbac5233ec0f35cd0463e8d79aeae'} (stimulus_id='handle-worker-cleanup-1732084500.9618416')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer()),
                ('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features=0.6713730395576,
                                        min_samples_split=9,
                                        n_estimators=128))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9999968826456039, 'accuracy': 0.9973491379310345, 'balanced_accuracy': 0.9993867414736071, 'logloss': 0.009859979350793543, 'f1': 0.950207212733363}
test score: {'auroc': 0.959272638163425, 'accuracy': 0.9907758620689655, 'balanced_accuracy': 0.83608278939562, 'logloss': 0.04169837460176636, 'f1': 0.7806478160615874}
original test score: {'auroc': 0.9999832675153912, 'accuracy': 0.9988793103448276, 'balanced_accuracy': 0.9855262539369153, 'logloss': 0.0033583561479090876, 'f1': 0.9201988398532962}
score end
40685
lvl
0.3
type
MCAR
num_run
2
class_full
finished
all finished
full run takes
15.003570481340091
hours
DONE
