Run: 12
/cm/local/apps/slurm/var/spool/job1023776/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/737/737.pkl
working on 
../data/c/737/class_full_MNAR_0.5_1
0.4758641719818115
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-25 19:31:20,959] A new study created in memory with name: no-name-f6fd06bf-651d-4ecc-bf95-f786d2840808
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-25 19:31:21,228] Trial 9 finished with value: 0.3850552662033145 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 9 with value: 0.3850552662033145.
[I 2024-10-25 19:31:21,337] Trial 14 finished with value: 0.20330073002442087 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:21,453] Trial 1 finished with value: 0.20330073002442087 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 14 with value: 0.20330073002442087.
[I 2024-10-25 19:31:21,549] Trial 11 finished with value: 0.31173330391028153 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 14 with value: 0.20330073002442087.
running
running
[I 2024-10-25 19:31:21,658] Trial 6 finished with value: 0.3850552662033145 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 14 with value: 0.20330073002442087.
running
running
[I 2024-10-25 19:31:21,869] Trial 20 finished with value: 0.3850552662033145 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:22,348] Trial 5 finished with value: 0.20918379481904906 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 609, 'weights': 'uniform'}. Best is trial 14 with value: 0.20330073002442087.
[I 2024-10-25 19:31:22,456] Trial 4 finished with value: 0.239479907139118 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 175, 'weights': 'distance'}. Best is trial 14 with value: 0.20330073002442087.
running
running
[I 2024-10-25 19:31:22,698] Trial 23 finished with value: 0.20330073002442087 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:22,903] Trial 17 finished with value: 0.20330073002442087 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1965, 'weights': 'uniform'}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:23,116] Trial 22 finished with value: 0.3850552662033145 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:23,462] Trial 18 finished with value: 0.2380914155929345 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1602, 'weights': 'distance'}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:23,989] Trial 24 finished with value: 0.20579603041217148 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1481, 'weights': 'uniform'}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:25,106] Trial 12 finished with value: 0.20687041663256217 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:26,064] Trial 0 finished with value: 0.2089637644936182 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 14 with value: 0.20330073002442087.
running
[I 2024-10-25 19:31:26,851] Trial 16 finished with value: 0.20302293651349013 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 16 with value: 0.20302293651349013.
running
[I 2024-10-25 19:31:28,499] Trial 13 finished with value: 0.21579537974489046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 16 with value: 0.20302293651349013.
running
[I 2024-10-25 19:31:29,128] Trial 7 finished with value: 0.28324244302659163 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 16 with value: 0.20302293651349013.
running
[I 2024-10-25 19:31:29,399] Trial 27 finished with value: 0.22086520767405085 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 16 with value: 0.20302293651349013.
running
[I 2024-10-25 19:31:29,905] Trial 19 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.39818138900133804, 'alpha': 25, 'iterations': 9, 'learning_rate': 0.0002549099279003776, 'p_miss': 0.12693275288560307}. Best is trial 16 with value: 0.20302293651349013.
running
[I 2024-10-25 19:31:30,282] Trial 15 finished with value: 0.3732961994702086 and parameters: {'model_name': 'GAIN', 'batch_size': 41, 'hint_rate': 0.10931167385107346, 'alpha': 90, 'iterations': 1, 'learning_rate': 0.00021046045127676543, 'p_miss': 0.0722246213266855}. Best is trial 16 with value: 0.20302293651349013.
running
[I 2024-10-25 19:31:30,586] Trial 33 finished with value: 0.3439885276336234 and parameters: {'model_name': 'GAIN', 'batch_size': 262, 'hint_rate': 0.3676364136487429, 'alpha': 56, 'iterations': 1, 'learning_rate': 0.035676301613827406, 'p_miss': 0.21867874665132592}. Best is trial 16 with value: 0.20302293651349013.
running
[I 2024-10-25 19:31:30,820] Trial 2 finished with value: 0.1371967795959818 and parameters: {'model_name': 'VAE', 'batch_size': 86, 'iterations': 1, 'learning_rate': 0.0002251917600859234, 'p_miss': 0.2707702106844727}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:31:31,544] Trial 25 finished with value: 0.3526513712680054 and parameters: {'model_name': 'GAIN', 'batch_size': 28, 'hint_rate': 0.35136526151608777, 'alpha': 41, 'iterations': 3, 'learning_rate': 0.0003931978044155744, 'p_miss': 0.2383136260472986}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:31:37,946] Trial 28 finished with value: 0.29520098834221764 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:31:38,401] Trial 26 finished with value: 0.3616183346815035 and parameters: {'model_name': 'GAIN', 'batch_size': 725, 'hint_rate': 0.38042375176178267, 'alpha': 28, 'iterations': 16, 'learning_rate': 0.026635316660182214, 'p_miss': 0.23302555083933424}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:32:18,152] Trial 32 finished with value: 0.3681588626189858 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.17958907981994354, 'alpha': 45, 'iterations': 44, 'learning_rate': 0.0038520353444702797, 'p_miss': 0.13597764509195556}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:34:30,432] Trial 31 finished with value: 0.24016016932888645 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 63, 'learning_rate': 0.030150636322440985, 'p_miss': 0.18688502353804656}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:34:43,466] Trial 30 finished with value: 0.37738973929477676 and parameters: {'model_name': 'GAIN', 'batch_size': 417, 'hint_rate': 0.91058684001713, 'alpha': 43, 'iterations': 107, 'learning_rate': 0.07035016252747685, 'p_miss': 0.13531471227634143}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:38:53,635] Trial 8 finished with value: 0.21467305811266696 and parameters: {'model_name': 'VAE', 'batch_size': 362, 'iterations': 119, 'learning_rate': 0.031414801920031946, 'p_miss': 0.10361368279058607}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:40:52,154] Trial 3 finished with value: 0.21847124072436816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 19:50:27,651] Trial 29 finished with value: 0.21578548012342122 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 331, 'learning_rate': 0.0008763791779043752, 'p_miss': 0.017601408495262094}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:02:05,819] Trial 42 finished with value: 0.22298913112291938 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 563, 'learning_rate': 0.0018818193937794098, 'p_miss': 0.2982798341099459}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:02:06,125] Trial 48 finished with value: 0.20330073002442087 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:15:21,784] Trial 34 finished with value: 0.21319706958941334 and parameters: {'model_name': 'VAE', 'batch_size': 63, 'iterations': 887, 'learning_rate': 0.032891056727173705, 'p_miss': 0.22802080362732363}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:15:22,011] Trial 50 finished with value: 0.20330073002442087 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:15:22,326] Trial 51 finished with value: 0.20330073002442087 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:08,918] Trial 41 finished with value: 0.2508461327611094 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1231, 'learning_rate': 0.002558590487932019, 'p_miss': 0.28423221786711894}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:14,707] Trial 53 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:20,423] Trial 54 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:25,472] Trial 55 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:30,655] Trial 56 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:36,255] Trial 57 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:42,212] Trial 58 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:47,687] Trial 59 finished with value: 0.20238744281456658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:58:55,543] Trial 60 finished with value: 0.20540110351555127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:59:02,421] Trial 61 finished with value: 0.20569521729220092 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:59:08,070] Trial 62 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:59:15,073] Trial 63 finished with value: 0.20569521729220092 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 20:59:20,213] Trial 64 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:08:56,875] Trial 65 finished with value: 0.22430757586478692 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:09:02,799] Trial 66 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:09:09,082] Trial 67 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:09:15,378] Trial 68 finished with value: 0.20248006216193595 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:09:23,562] Trial 69 finished with value: 0.20540110351555127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:09:29,466] Trial 70 finished with value: 0.20238744281456658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:24:19,237] Trial 44 finished with value: 0.21298951887609402 and parameters: {'model_name': 'VAE', 'batch_size': 96, 'iterations': 1768, 'learning_rate': 0.001672782391951108, 'p_miss': 0.2692614238663943}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:24:24,434] Trial 72 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:24:25,624] Trial 73 finished with value: 0.23737899738558194 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2375, 'weights': 'distance'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:24:32,929] Trial 74 finished with value: 0.20569521729220092 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:24:38,567] Trial 75 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:24:44,095] Trial 76 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:24:49,282] Trial 77 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:24:54,056] Trial 78 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:25:01,242] Trial 79 finished with value: 0.20569521729220092 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:47:50,736] Trial 40 finished with value: 0.2125752352357632 and parameters: {'model_name': 'VAE', 'batch_size': 938, 'iterations': 1868, 'learning_rate': 0.004555170695331048, 'p_miss': 0.29433953138179125}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:47:51,515] Trial 81 finished with value: 0.20741287034087183 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 816, 'weights': 'uniform'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:48:25,312] Trial 39 finished with value: 0.21323651072624697 and parameters: {'model_name': 'VAE', 'batch_size': 844, 'iterations': 1923, 'learning_rate': 0.0024425301789451214, 'p_miss': 0.29583060997801947}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:56:01,790] Trial 82 finished with value: 0.21806493976906088 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:56:10,536] Trial 84 finished with value: 0.21236502355168269 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:56:18,013] Trial 85 finished with value: 0.20540110351555127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:56:22,478] Trial 83 finished with value: 0.21605129083011274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:56:23,204] Trial 86 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:56:28,035] Trial 87 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:56:28,941] Trial 88 finished with value: 0.20248085070148286 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 21:56:33,134] Trial 89 finished with value: 0.20248085070148286 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:17:37,342] Trial 49 finished with value: 0.21322017302905744 and parameters: {'model_name': 'VAE', 'batch_size': 89, 'iterations': 2353, 'learning_rate': 0.005291454591509366, 'p_miss': 0.298748349831642}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:17:47,484] Trial 92 finished with value: 0.2993466776800121 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:17:48,979] Trial 93 finished with value: 0.23737899738558194 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2461, 'weights': 'distance'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:17:57,460] Trial 43 finished with value: 0.21086130334804393 and parameters: {'model_name': 'VAE', 'batch_size': 145, 'iterations': 2775, 'learning_rate': 0.00211386311134127, 'p_miss': 0.28376854466212054}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:18:07,087] Trial 95 finished with value: 0.2159722198710392 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:18:12,681] Trial 96 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:18:15,847] Trial 97 finished with value: 0.20763134692829155 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:18:21,165] Trial 98 finished with value: 0.20260768501892462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:18:25,994] Trial 99 finished with value: 0.20228035930487157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:18:34,223] Trial 100 finished with value: 0.3596969201054992 and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.8083129181808528, 'alpha': 6, 'iterations': 4, 'learning_rate': 0.0001274768613587925, 'p_miss': 0.1858927959539581}. Best is trial 2 with value: 0.1371967795959818.
running
[I 2024-10-25 22:19:51,827] Trial 101 finished with value: 0.13057829390177478 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 20, 'learning_rate': 0.0007502138005350207, 'p_miss': 0.17986441233543252}. Best is trial 101 with value: 0.13057829390177478.
running
[I 2024-10-25 22:20:57,442] Trial 102 finished with value: 0.13273491003730034 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 16, 'learning_rate': 0.000623490599113759, 'p_miss': 0.1815697574783353}. Best is trial 101 with value: 0.13057829390177478.
running
[I 2024-10-25 22:21:48,836] Trial 103 finished with value: 0.13056092744053752 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 12, 'learning_rate': 0.0006664097525867882, 'p_miss': 0.17811347983276793}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:22:48,202] Trial 104 finished with value: 0.1338821010544941 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 21, 'learning_rate': 0.0007359070184235577, 'p_miss': 0.17783543042260513}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:23:47,676] Trial 45 finished with value: 0.23337595789736526 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 2675, 'learning_rate': 0.0009886590924010161, 'p_miss': 0.2962007446417052}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:24:22,848] Trial 105 finished with value: 0.13285647718654128 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 22, 'learning_rate': 0.0006885598906798667, 'p_miss': 0.1759250373908325}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:25:11,261] Trial 106 finished with value: 0.13398611342375277 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 21, 'learning_rate': 0.0005873750795298047, 'p_miss': 0.1787718185781343}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:25:37,313] Trial 107 finished with value: 0.13835418796541346 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 20, 'learning_rate': 0.000559142129117608, 'p_miss': 0.17644145436031802}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:26:28,130] Trial 108 finished with value: 0.13069902659525176 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 22, 'learning_rate': 0.0005521770984431612, 'p_miss': 0.17906836379146093}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:26:48,480] Trial 109 finished with value: 0.13429973049906468 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 21, 'learning_rate': 0.00046878040342412307, 'p_miss': 0.1731694351431213}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:27:27,909] Trial 110 finished with value: 0.1339927494335536 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 21, 'learning_rate': 0.0005695760612467655, 'p_miss': 0.1767650546276612}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:27:48,898] Trial 111 finished with value: 0.13381463642511865 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 21, 'learning_rate': 0.0005879814001893712, 'p_miss': 0.1775498543610126}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:28:50,334] Trial 112 finished with value: 0.13393131820662404 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 23, 'learning_rate': 0.0007266093136438537, 'p_miss': 0.16823467645833923}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:28:55,511] Trial 113 finished with value: 0.13271453215896012 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 23, 'learning_rate': 0.0006114031809133336, 'p_miss': 0.16866068250048954}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:29:27,974] Trial 115 finished with value: 0.1389196136278174 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 10, 'learning_rate': 0.0009539923675085238, 'p_miss': 0.1932842289519824}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:30:35,500] Trial 114 finished with value: 0.13558386153482252 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 28, 'learning_rate': 0.0007946155090921808, 'p_miss': 0.16240497599755066}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:31:08,534] Trial 116 finished with value: 0.1345965982524974 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 25, 'learning_rate': 0.0006450370838866616, 'p_miss': 0.1602626822726558}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:31:14,101] Trial 117 finished with value: 0.13763193518206224 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 12, 'learning_rate': 0.0004931659676992841, 'p_miss': 0.19992152463021087}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:31:39,872] Trial 118 finished with value: 0.13507915136873258 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 10, 'learning_rate': 0.0004275341113121902, 'p_miss': 0.2009232024328782}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:32:30,050] Trial 38 finished with value: 0.2123878802538932 and parameters: {'model_name': 'VAE', 'batch_size': 806, 'iterations': 2695, 'learning_rate': 0.002718816684279574, 'p_miss': 0.29588778144845657}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:33:21,294] Trial 119 finished with value: 0.13672677361012525 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 37, 'learning_rate': 0.00034688454927679256, 'p_miss': 0.1671409157771117}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:33:30,432] Trial 120 finished with value: 0.1366759765703535 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 39, 'learning_rate': 0.0012027765224187185, 'p_miss': 0.16943635840316093}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:33:48,312] Trial 123 finished with value: 0.13897725725265525 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 5, 'learning_rate': 0.0006615842154574759, 'p_miss': 0.14888968683783785}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:34:51,764] Trial 124 finished with value: 0.1314184965035375 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 16, 'learning_rate': 0.00024975927901903493, 'p_miss': 0.18100290914053735}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:34:53,985] Trial 121 finished with value: 0.1409308556702197 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 40, 'learning_rate': 0.0011627829470420748, 'p_miss': 0.16303227556254787}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:35:36,259] Trial 125 finished with value: 0.13063639234565005 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 14, 'learning_rate': 0.00024774717379883273, 'p_miss': 0.15058858177950318}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:35:49,782] Trial 126 finished with value: 0.13899745957556725 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 15, 'learning_rate': 0.00029206009905281697, 'p_miss': 0.18284058132744258}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:36:09,265] Trial 128 finished with value: 0.13653587596868796 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6, 'learning_rate': 0.00019534513641319002, 'p_miss': 0.15364689754090366}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:36:31,329] Trial 127 finished with value: 0.14099078008725252 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 15, 'learning_rate': 0.0002512079594753142, 'p_miss': 0.15271951542604797}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:36:57,133] Trial 130 finished with value: 0.13690564269973354 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 7, 'learning_rate': 0.0007541834058401877, 'p_miss': 0.20391758816089897}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:37:02,643] Trial 129 finished with value: 0.14041374764881415 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 15, 'learning_rate': 0.00020630432238406566, 'p_miss': 0.2065034730934734}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:40:31,334] Trial 132 finished with value: 0.13480567091119358 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 67, 'learning_rate': 0.0003868614400916318, 'p_miss': 0.18624050310861695}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:42:14,944] Trial 133 finished with value: 0.13181211590620306 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 30, 'learning_rate': 0.0007147490972454477, 'p_miss': 0.14207939994562718}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:44:21,567] Trial 134 finished with value: 0.14520819379444805 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 30, 'learning_rate': 0.001453723987134444, 'p_miss': 0.11538690720340339}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:44:57,353] Trial 135 finished with value: 0.13830527558687217 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 10, 'learning_rate': 0.0007579715364573407, 'p_miss': 0.13983938797354228}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:46:23,853] Trial 136 finished with value: 0.13745979490289734 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 21, 'learning_rate': 0.000593407183766687, 'p_miss': 0.17884060137448524}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:47:18,368] Trial 137 finished with value: 0.1437170786324781 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 15, 'learning_rate': 0.0003446436284434815, 'p_miss': 0.17327690784074237}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:48:48,437] Trial 138 finished with value: 0.13543620399987638 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 27, 'learning_rate': 0.0008783385011415158, 'p_miss': 0.14418628795607388}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:51:39,860] Trial 139 finished with value: 0.13887499058664088 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 44, 'learning_rate': 0.00015424491311414926, 'p_miss': 0.18764758185357705}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:53:10,658] Trial 140 finished with value: 0.13523901036768674 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 17, 'learning_rate': 0.0004809932800212706, 'p_miss': 0.12647028642249597}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 22:57:42,556] Trial 52 finished with value: 0.21193707106055 and parameters: {'model_name': 'VAE', 'batch_size': 98, 'iterations': 3176, 'learning_rate': 0.00012057106029352871, 'p_miss': 0.2964776330440864}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:00:06,443] Trial 141 finished with value: 0.15098331221707628 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 114, 'learning_rate': 0.00064100766470909, 'p_miss': 0.16443276991784558}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:03:15,118] Trial 143 finished with value: 0.14375612773056423 and parameters: {'model_name': 'VAE', 'batch_size': 48, 'iterations': 59, 'learning_rate': 0.0011407808546075925, 'p_miss': 0.19490963308164388}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:05:03,397] Trial 144 finished with value: 0.13483530762292023 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 30, 'learning_rate': 0.0008055241888271443, 'p_miss': 0.2124708892750042}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:05:06,601] Trial 142 finished with value: 0.15104246037198193 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 131, 'learning_rate': 0.0006836887604682955, 'p_miss': 0.16516381098482674}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:05:37,256] Trial 145 finished with value: 0.1316088018810541 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 8, 'learning_rate': 0.00032271797400729906, 'p_miss': 0.17884058453464288}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:06:10,958] Trial 146 finished with value: 0.131273488590877 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 20, 'learning_rate': 0.0005229784446702547, 'p_miss': 0.17834366677888405}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:06:20,931] Trial 147 finished with value: 0.13950038543932985 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 12, 'learning_rate': 0.00030656556979327475, 'p_miss': 0.1799598661331649}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:06:41,013] Trial 148 finished with value: 0.13773736023383953 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 8, 'learning_rate': 0.00032941174509344695, 'p_miss': 0.18962429433019212}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:07:24,852] Trial 150 finished with value: 0.13915759727194538 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 13, 'learning_rate': 0.0004589340809335122, 'p_miss': 0.1697271666616706}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:35:06,494] Trial 46 finished with value: 0.23877729955634147 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 3766, 'learning_rate': 0.0011975428486845061, 'p_miss': 0.28517735686561135}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:36:21,570] Trial 152 finished with value: 0.1383483246914441 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 20, 'learning_rate': 0.00041527727022886714, 'p_miss': 0.15730609934626189}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:36:47,147] Trial 153 finished with value: 0.1442355900678845 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 8, 'learning_rate': 0.008871931417514212, 'p_miss': 0.19216815555906425}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:36:47,588] Trial 154 finished with value: 0.31173330391028153 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:38:18,497] Trial 155 finished with value: 0.13474942554495634 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 29, 'learning_rate': 0.0002486017313932355, 'p_miss': 0.17419719597248137}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:39:33,499] Trial 156 finished with value: 0.13513281877314762 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 19, 'learning_rate': 0.0005438267757467296, 'p_miss': 0.1812176663367487}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:40:37,926] Trial 157 finished with value: 0.13774221782248053 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 23, 'learning_rate': 0.0009374960834953463, 'p_miss': 0.17925133525037293}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:41:22,158] Trial 158 finished with value: 0.13582476369412694 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 12, 'learning_rate': 0.0005440955998898419, 'p_miss': 0.15899753050595072}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:44:18,445] Trial 159 finished with value: 0.14394546254407162 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 52, 'learning_rate': 0.0006932483189892524, 'p_miss': 0.17001572020988795}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:46:11,543] Trial 160 finished with value: 0.1311790596598446 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 33, 'learning_rate': 0.00017151084969536126, 'p_miss': 0.07285355906466291}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:46:43,818] Trial 161 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.6942310954539346, 'alpha': 97, 'iterations': 35, 'learning_rate': 0.0001708929587657959, 'p_miss': 0.06994324490008502}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:47:40,505] Trial 162 finished with value: 0.14122234379501003 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 18, 'learning_rate': 0.00013867117800381388, 'p_miss': 0.09371837302616565}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:47:51,410] Trial 163 finished with value: 0.1352140554753187 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 3, 'learning_rate': 0.00027226661902887944, 'p_miss': 0.07850437734271543}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:48:52,213] Trial 164 finished with value: 0.13261053371631823 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 23, 'learning_rate': 0.00039355534795392714, 'p_miss': 0.027745223013135888}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:49:22,752] Trial 165 finished with value: 0.1347991159196574 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 11, 'learning_rate': 0.00037599883864536816, 'p_miss': 0.012637107275382375}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-25 23:51:28,486] Trial 166 finished with value: 0.14516790396044255 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 25, 'learning_rate': 0.00021127681490455913, 'p_miss': 0.04771356319659813}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 00:48:17,260] Trial 10 finished with value: 0.23000566232725816 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 6576, 'learning_rate': 0.0002957760119692814, 'p_miss': 0.19034865062996092}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 00:49:13,600] Trial 168 finished with value: 0.13829635057143713 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 16, 'learning_rate': 0.0005114365583044827, 'p_miss': 0.19269624709101965}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 00:51:11,480] Trial 169 finished with value: 0.13336494701896986 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 34, 'learning_rate': 0.0004516553024926644, 'p_miss': 0.03465190122497516}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 00:51:12,453] Trial 170 finished with value: 0.20624084430589842 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1017, 'weights': 'uniform'}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 00:53:09,625] Trial 171 finished with value: 0.136184338949871 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 33, 'learning_rate': 0.00010772569635993266, 'p_miss': 0.04064081211531441}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 00:56:01,014] Trial 172 finished with value: 0.13793523848389821 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 48, 'learning_rate': 0.0004291449375414905, 'p_miss': 0.03684448729252056}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 00:57:40,663] Trial 173 finished with value: 0.13578670285079267 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 26, 'learning_rate': 0.0005844990378462391, 'p_miss': 0.04701616324514084}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 00:58:31,322] Trial 174 finished with value: 0.1365102963123327 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 15, 'learning_rate': 0.000241389102705863, 'p_miss': 0.1865105839930825}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:00:28,534] Trial 175 finished with value: 0.13561812437364618 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 36, 'learning_rate': 0.00036368771661480956, 'p_miss': 0.019860267185646423}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:01:55,097] Trial 176 finished with value: 0.1370393336708059 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 21, 'learning_rate': 0.000741000977787777, 'p_miss': 0.17325721272409816}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:03:15,522] Trial 177 finished with value: 0.13866053605827017 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 25, 'learning_rate': 0.00047629035943800555, 'p_miss': 0.024228132044043435}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:04:20,421] Trial 178 finished with value: 0.14279068929665925 and parameters: {'model_name': 'VAE', 'batch_size': 33, 'iterations': 17, 'learning_rate': 0.000977827361161503, 'p_miss': 0.15097396945625635}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:04:50,725] Trial 179 finished with value: 0.13312734068083878 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 9, 'learning_rate': 0.00018147064459066842, 'p_miss': 0.18362871213831675}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:05:12,205] Trial 180 finished with value: 0.13965202786238212 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6, 'learning_rate': 0.00018455989929386246, 'p_miss': 0.1995586058749975}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:05:51,305] Trial 181 finished with value: 0.1409499997853406 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 10, 'learning_rate': 0.0002750018748861516, 'p_miss': 0.18579882794390323}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:09:15,633] Trial 182 finished with value: 0.1368703547455225 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 77, 'learning_rate': 0.0001576679243554461, 'p_miss': 0.25128584160548745}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:09:15,914] Trial 183 finished with value: 0.31173330391028153 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:10:08,079] Trial 184 finished with value: 0.13453740584924603 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 13, 'learning_rate': 0.0005977606497632651, 'p_miss': 0.027602858029599647}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:10:36,570] Trial 185 finished with value: 0.13128903395256333 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 9, 'learning_rate': 0.0002222076487278592, 'p_miss': 0.17833882848913926}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:10:49,411] Trial 186 finished with value: 0.13656415683955653 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 4, 'learning_rate': 0.00023728305529404286, 'p_miss': 0.17703493492985034}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:11:21,603] Trial 187 finished with value: 0.13495243948558405 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 8, 'learning_rate': 0.0003049356512254641, 'p_miss': 0.05955860508215402}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:12:15,369] Trial 188 finished with value: 0.13955135765562413 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 13, 'learning_rate': 0.0003958745864154078, 'p_miss': 0.18302772214995372}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:12:55,042] Trial 189 finished with value: 0.13574083053114186 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 9, 'learning_rate': 0.00021933606958658483, 'p_miss': 0.16569821465451082}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:13:55,962] Trial 190 finished with value: 0.13387266640453893 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 18, 'learning_rate': 0.0008326527117971292, 'p_miss': 0.19560611951825793}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:14:19,789] Trial 191 finished with value: 0.3612473931132755 and parameters: {'model_name': 'GAIN', 'batch_size': 26, 'hint_rate': 0.6574809873632301, 'alpha': 73, 'iterations': 16, 'learning_rate': 0.0008640712178196357, 'p_miss': 0.19822834201192274}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:14:39,776] Trial 192 finished with value: 0.1383639659419289 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 6, 'learning_rate': 0.0005076969595502969, 'p_miss': 0.18912137994687536}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:15:46,016] Trial 193 finished with value: 0.14133037561117517 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 19, 'learning_rate': 0.00018401407281636132, 'p_miss': 0.20580231083594397}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:17:40,749] Trial 194 finished with value: 0.13471887226659485 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 32, 'learning_rate': 0.00043733565587960097, 'p_miss': 0.1723125269368484}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:19:16,268] Trial 195 finished with value: 0.13746377499096377 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 24, 'learning_rate': 0.000652951755893971, 'p_miss': 0.13024521015356094}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:20:00,500] Trial 196 finished with value: 0.13209683421406482 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 14, 'learning_rate': 0.0008173902043166249, 'p_miss': 0.18181666959409593}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:20:38,793] Trial 197 finished with value: 0.138113529241955 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 13, 'learning_rate': 0.0008297169227065054, 'p_miss': 0.17940675381475896}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:21:09,399] Trial 198 finished with value: 0.13806395805449007 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 10, 'learning_rate': 0.0010187298395848002, 'p_miss': 0.19576242555567594}. Best is trial 103 with value: 0.13056092744053752.
running
[I 2024-10-26 01:22:10,494] Trial 199 finished with value: 0.13357627043767778 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 18, 'learning_rate': 0.0006360230733765021, 'p_miss': 0.16027210082435273}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 01:43:41,195] Trial 80 finished with value: 0.21314043262680826 and parameters: {'model_name': 'VAE', 'batch_size': 132, 'iterations': 4526, 'learning_rate': 0.00010470825763299087, 'p_miss': 0.18247504171987}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 02:15:08,606] Trial 21 finished with value: 0.229263552673551 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8357, 'learning_rate': 0.019982622185190903, 'p_miss': 0.06726000996199524}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 02:43:13,080] Trial 47 finished with value: 0.21140667828043552 and parameters: {'model_name': 'VAE', 'batch_size': 96, 'iterations': 8587, 'learning_rate': 0.0020534560992777743, 'p_miss': 0.29811813425591804}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 02:44:31,669] Trial 37 finished with value: 0.2431551483537538 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8139, 'learning_rate': 0.08672913781285596, 'p_miss': 0.2633504270284697}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 02:51:29,260] Trial 149 finished with value: 0.21322346481455862 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 5210, 'learning_rate': 0.0004204424343063976, 'p_miss': 0.1919664345242904}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:17:33,402] Trial 35 finished with value: 0.21251624870407979 and parameters: {'model_name': 'VAE', 'batch_size': 660, 'iterations': 8140, 'learning_rate': 0.0839865718027132, 'p_miss': 0.26210271428908627}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:23:12,972] Trial 131 finished with value: 0.2165965456523348 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 7338, 'learning_rate': 0.0004148628172025821, 'p_miss': 0.1873015457903488}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:23:14,683] Trial 36 finished with value: 0.21280090731778972 and parameters: {'model_name': 'VAE', 'batch_size': 754, 'iterations': 8378, 'learning_rate': 0.03356315190451634, 'p_miss': 0.2793960521754239}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:27:56,097] Trial 71 finished with value: 0.2104571177667644 and parameters: {'model_name': 'VAE', 'batch_size': 151, 'iterations': 7042, 'learning_rate': 0.00010790724470159825, 'p_miss': 0.1921362808355348}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:43:25,510] Trial 94 finished with value: 0.2280221269344544 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 8802, 'learning_rate': 0.00013589859225380973, 'p_miss': 0.17965348088296407}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:46:59,617] Trial 151 finished with value: 0.21263294460639975 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 8559, 'learning_rate': 0.00041798675485908346, 'p_miss': 0.15483984344146717}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:47:20,796] Trial 167 finished with value: 0.22741476920200934 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 7814, 'learning_rate': 0.00048204510882067004, 'p_miss': 0.03672437644142261}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:47:54,345] Trial 91 finished with value: 0.21165545574368463 and parameters: {'model_name': 'VAE', 'batch_size': 159, 'iterations': 9837, 'learning_rate': 0.00010042026528625811, 'p_miss': 0.17889439709221122}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:48:20,193] Trial 122 finished with value: 0.21058912064907878 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 9445, 'learning_rate': 0.0011665073262644504, 'p_miss': 0.14704176230673294}. Best is trial 103 with value: 0.13056092744053752.
[I 2024-10-26 03:48:37,520] Trial 90 finished with value: 0.21311910545691903 and parameters: {'model_name': 'VAE', 'batch_size': 132, 'iterations': 9778, 'learning_rate': 0.008751326043121439, 'p_miss': 0.1821661589780063}. Best is trial 103 with value: 0.13056092744053752.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.13056092744053752
{'model_name': 'VAE', 'batch_size': 13, 'iterations': 12, 'learning_rate': 0.0006664097525867882, 'p_miss': 0.17811347983276793}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f8e50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.5057480771536562
Generation:   4%|▍         | 1/25 [00:11<04:37, 11.55s/it]Generation:  2
Best f1_score score: 0.5204791045938172
Generation:   8%|▊         | 2/25 [00:30<06:12, 16.19s/it]Generation:  3
Best f1_score score: 0.5234245164038065
Generation:  12%|█▏        | 3/25 [01:13<10:21, 28.23s/it]Generation:  4
Best f1_score score: 0.5234245164038065
Generation:  16%|█▌        | 4/25 [01:56<11:52, 33.93s/it]Generation:  5
Best f1_score score: 0.5234245164038065
Generation:  20%|██        | 5/25 [02:14<09:26, 28.33s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c840a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  6
Best f1_score score: 0.5234245164038065
Generation:  24%|██▍       | 6/25 [02:33<07:58, 25.17s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465936b30> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.5234245164038065
Generation:  28%|██▊       | 7/25 [02:51<06:49, 22.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465934a00> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.5237757502527121
Generation:  32%|███▏      | 8/25 [03:11<06:09, 21.74s/it]Generation:  9
Best f1_score score: 0.5237757502527121
Generation:  36%|███▌      | 9/25 [03:27<05:23, 20.24s/it]Generation:  10
Best f1_score score: 0.5237757502527121
Generation:  40%|████      | 10/25 [03:51<05:17, 21.16s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f29cc0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547471d210> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.530264858778439
Generation:  44%|████▍     | 11/25 [04:12<04:56, 21.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465648760> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  12
Best f1_score score: 0.530264858778439
Generation:  48%|████▊     | 12/25 [04:36<04:47, 22.08s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f338b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  13
Best f1_score score: 0.530264858778439
Generation:  52%|█████▏    | 13/25 [05:11<05:11, 25.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f55870> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.530264858778439
Generation:  56%|█████▌    | 14/25 [05:35<04:39, 25.43s/it]Generation:  15
Best f1_score score: 0.530264858778439
Generation:  60%|██████    | 15/25 [05:58<04:05, 24.54s/it]Generation:  16
Best f1_score score: 0.530264858778439
Generation:  64%|██████▍   | 16/25 [06:20<03:33, 23.77s/it]Generation:  17
Best f1_score score: 0.530264858778439
Generation:  68%|██████▊   | 17/25 [06:47<03:18, 24.85s/it]Generation:  18
Best f1_score score: 0.530264858778439
Generation:  72%|███████▏  | 18/25 [07:15<03:01, 25.91s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554658d0b50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  19
Best f1_score score: 0.5312037663459879
Generation:  76%|███████▌  | 19/25 [09:10<05:16, 52.67s/it]Generation:  20
Best f1_score score: 0.5333452757762931
Generation:  80%|████████  | 20/25 [09:46<03:58, 47.64s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554657832b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f30c40> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  21
Best f1_score score: 0.5349998029230261
Generation:  84%|████████▍ | 21/25 [10:23<02:57, 44.34s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554658e8940> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  22
Best f1_score score: 0.5349998029230261
Generation:  88%|████████▊ | 22/25 [11:04<02:09, 43.25s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474739bd0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  23
Best f1_score score: 0.5349998029230261
Generation:  92%|█████████▏| 23/25 [11:54<01:31, 45.54s/it]Generation:  24
Best f1_score score: 0.5349998029230261
Generation:  96%|█████████▌| 24/25 [12:40<00:45, 45.43s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465ad70d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  25
Best f1_score score: 0.5364070311493137
Generation: 100%|██████████| 25/25 [13:18<00:00, 43.44s/it]Generation: 100%|██████████| 25/25 [13:27<00:00, 32.31s/it]
2024-10-26 04:02:12,894 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45829' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-bc1ee22df90b340c13f4c4b70d48b351', 'ndarray-3edcde457b9eee8cf6e57b4ddd519453'} (stimulus_id='handle-worker-cleanup-1729940532.8946583')
Fitted
Pipeline(steps=[('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.6641404915671,
                                    n_estimators=174))])
score start
train score: {'auroc': 0.7123661347035335, 'accuracy': 0.6519114688128773, 'balanced_accuracy': 0.651894195564469, 'logloss': 0.691483394016034, 'f1': 0.6518932044416582}
original test score: {'auroc': 0.46705682852179664, 'accuracy': 0.45980707395498394, 'balanced_accuracy': 0.4590123252543635, 'logloss': 0.693156519935433, 'f1': 0.45570464205350447}
imputed test score: {'auroc': 0.49726507568864253, 'accuracy': 0.5032154340836013, 'balanced_accuracy': 0.5029055339564894, 'logloss': 0.6935347117681494, 'f1': 0.5025352331405055}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4700> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1fe80> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.7298187576643516
Generation:   4%|▍         | 1/25 [01:54<45:38, 114.09s/it]Generation:  2
Best f1_score score: 0.7298187576643516
Generation:   8%|▊         | 2/25 [02:27<25:29, 66.51s/it] Generation:  3
Best f1_score score: 0.7298187576643516
Generation:  12%|█▏        | 3/25 [04:25<33:07, 90.33s/it]Generation:  4
Best f1_score score: 0.7298187576643516
Generation:  16%|█▌        | 4/25 [06:23<35:25, 101.24s/it]Generation:  5
Best f1_score score: 0.7298187576643516
Generation:  20%|██        | 5/25 [08:24<36:01, 108.05s/it]Generation:  6
Best f1_score score: 0.7298187576643516
Generation:  24%|██▍       | 6/25 [10:23<35:29, 112.06s/it]Generation:  7
Best f1_score score: 0.7298187576643516
Generation:  28%|██▊       | 7/25 [12:44<36:25, 121.42s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474229fc0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  8
Best f1_score score: 0.7368031018034761
Generation:  32%|███▏      | 8/25 [14:41<33:59, 119.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452e223b0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  9
Best f1_score score: 0.7368031018034761
Generation:  36%|███▌      | 9/25 [17:20<35:13, 132.08s/it]Generation:  10
Best f1_score score: 0.7368031018034761
Generation:  40%|████      | 10/25 [19:20<32:06, 128.44s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d23c10> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.7368031018034761
Generation:  44%|████▍     | 11/25 [21:16<29:06, 124.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452d92320> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.7368031018034761
Generation:  48%|████▊     | 12/25 [23:13<26:29, 122.28s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155436f09300> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.7400186384624677
Generation:  52%|█████▏    | 13/25 [23:21<17:33, 87.79s/it] Generation:  14
Best f1_score score: 0.7400186384624677
Generation:  56%|█████▌    | 14/25 [25:17<17:37, 96.12s/it]Generation:  15
Best f1_score score: 0.7400186384624677
Generation:  60%|██████    | 15/25 [26:35<15:06, 90.64s/it]Generation:  16
Best f1_score score: 0.7400186384624677
Generation:  64%|██████▍   | 16/25 [30:27<19:59, 133.31s/it]Generation:  17
Best f1_score score: 0.7400186384624677
Generation:  68%|██████▊   | 17/25 [32:22<17:02, 127.76s/it]Generation:  18
Best f1_score score: 0.7400186384624677
Generation:  72%|███████▏  | 18/25 [32:28<10:37, 91.03s/it] Generation:  19
Best f1_score score: 0.7400186384624677
Generation:  76%|███████▌  | 19/25 [33:49<08:48, 88.09s/it]Generation:  20
Best f1_score score: 0.7400186384624677
Generation:  80%|████████  | 20/25 [35:46<08:04, 96.82s/it]Generation:  21
Best f1_score score: 0.7417637607927687
Generation:  84%|████████▍ | 21/25 [41:32<11:26, 171.62s/it]Generation:  22
Best f1_score score: 0.7425575340066394
Generation:  88%|████████▊ | 22/25 [43:29<07:45, 155.10s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545762c430> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.7435029306044372
Generation:  92%|█████████▏| 23/25 [45:26<04:47, 143.80s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554552484f0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.7435029306044372
Generation:  96%|█████████▌| 24/25 [47:26<02:16, 136.69s/it]Generation:  25
Best f1_score score: 0.7435029306044372
Generation: 100%|██████████| 25/25 [47:40<00:00, 99.87s/it] Generation: 100%|██████████| 25/25 [47:40<00:00, 114.42s/it]
2024-10-26 04:50:01,825 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45243' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-bc1ee22df90b340c13f4c4b70d48b351', 'DataFrame-62e86b766ea8326a7e9863ff13e327ee'} (stimulus_id='handle-worker-cleanup-1729943401.8251348')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=Ridge(), imputation_order='roman',
                                  initial_strategy='constant',
                                  n_nearest_features=10)),
                ('xgbclassifier',
                 XGBClassifier(base_score=None, booster=None, callbacks=None,
                               colsample_bylevel=None, colsample_bynode=None,
                               colsample_bytree=None, device=None,
                               early_stopping_rounds=None,
                               enable_categorical=Fa...
                               feature_types=None, gamma=0.0063062651926,
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None,
                               learning_rate=0.2205216099743, max_bin=None,
                               max_cat_threshold=None, max_cat_to_onehot=None,
                               max_delta_step=None, max_depth=10,
                               max_leaves=None, min_child_weight=16,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=100, n_jobs=1,
                               nthread=1, num_parallel_tree=None, ...))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.8992758383018638, 'accuracy': 0.8189134808853119, 'balanced_accuracy': 0.818650580806314, 'logloss': 0.4203943644573904, 'f1': 0.818613844812283}
test score: {'auroc': 0.7937225990569939, 'accuracy': 0.7106109324758842, 'balanced_accuracy': 0.7098705434692696, 'logloss': 0.5499876392098152, 'f1': 0.7085741058878651}
original test score: {'auroc': 0.9072555629084291, 'accuracy': 0.815112540192926, 'balanced_accuracy': 0.8145214657953512, 'logloss': 0.3925029159862528, 'f1': 0.8142246808731674}
score end
737
lvl
0.5
type
MNAR
num_run
1
class_full
finished
all finished
full run takes
9.314697619477908
hours
DONE
