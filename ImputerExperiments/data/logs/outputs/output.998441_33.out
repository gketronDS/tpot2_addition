Run: 33
/cm/local/apps/slurm/var/spool/job998441/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/32/32.pkl
working on 
../data/c/32/class_full_MNAR_0.01_2
3.1255037784576416
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-13 04:44:46,064] A new study created in memory with name: no-name-d2275dc1-100a-481a-a359-441312543b8a
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-13 04:44:46,904] Trial 2 finished with value: 0.5141199579707634 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 2 with value: 0.5141199579707634.
running
[I 2024-10-13 04:44:59,420] Trial 16 finished with value: 0.19302361978602695 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1024, 'weights': 'uniform'}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:01,396] Trial 13 finished with value: 0.2586144594716121 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3677, 'weights': 'uniform'}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:02,304] Trial 3 finished with value: 0.27624328171858537 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5042, 'weights': 'uniform'}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:03,915] Trial 4 finished with value: 0.22361364963948724 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3086, 'weights': 'distance'}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:05,739] Trial 0 finished with value: 0.2670311563171438 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7089, 'weights': 'distance'}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:06,605] Trial 7 finished with value: 0.2670311563171438 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7935, 'weights': 'distance'}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:06,874] Trial 14 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.40581669334310344, 'alpha': 13, 'iterations': 17, 'learning_rate': 0.0024356280867828175, 'p_miss': 0.0647577598557366}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:08,335] Trial 15 finished with value: 0.25770633801573073 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5874, 'weights': 'distance'}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:08,731] Trial 1 finished with value: 0.3332555005770999 and parameters: {'model_name': 'VAE', 'batch_size': 78, 'iterations': 2, 'learning_rate': 0.003995585993586299, 'p_miss': 0.27449826845177544}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:10,577] Trial 19 finished with value: 0.5483024808330051 and parameters: {'model_name': 'GAIN', 'batch_size': 122, 'hint_rate': 0.9050246554268385, 'alpha': 66, 'iterations': 5, 'learning_rate': 0.0017063271795747096, 'p_miss': 0.20350277878772313}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:12,082] Trial 23 finished with value: 0.5557482856968251 and parameters: {'model_name': 'GAIN', 'batch_size': 37, 'hint_rate': 0.602509378779934, 'alpha': 83, 'iterations': 2, 'learning_rate': 0.0007409551578205561, 'p_miss': 0.1520858696972088}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:13,273] Trial 21 finished with value: 0.5744247220030407 and parameters: {'model_name': 'GAIN', 'batch_size': 16, 'hint_rate': 0.39243136764204006, 'alpha': 96, 'iterations': 8, 'learning_rate': 0.00012724561360750872, 'p_miss': 0.04287173833323212}. Best is trial 16 with value: 0.19302361978602695.
running
[I 2024-10-13 04:45:13,474] Trial 18 finished with value: 0.1787818585463207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 758, 'weights': 'uniform'}. Best is trial 18 with value: 0.1787818585463207.
running
[I 2024-10-13 04:45:15,598] Trial 22 finished with value: 0.3349287073281629 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 7, 'learning_rate': 0.002398080967146003, 'p_miss': 0.10666385829499457}. Best is trial 18 with value: 0.1787818585463207.
running
[I 2024-10-13 04:45:26,348] Trial 10 finished with value: 0.17714259793020093 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 10 with value: 0.17714259793020093.
running
[I 2024-10-13 04:45:27,190] Trial 24 finished with value: 0.23028767126697539 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3553, 'weights': 'distance'}. Best is trial 10 with value: 0.17714259793020093.
running
[I 2024-10-13 04:45:28,177] Trial 12 finished with value: 0.30086998919580005 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 16, 'learning_rate': 0.0780483700319065, 'p_miss': 0.08700204863579976}. Best is trial 10 with value: 0.17714259793020093.
running
[I 2024-10-13 04:45:39,958] Trial 5 finished with value: 0.24398802425223312 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 10 with value: 0.17714259793020093.
running
[I 2024-10-13 04:46:03,666] Trial 30 finished with value: 0.24677246957068713 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 10 with value: 0.17714259793020093.
running
[I 2024-10-13 04:46:05,324] Trial 25 finished with value: 0.16061859118098884 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 25 with value: 0.16061859118098884.
running
[I 2024-10-13 04:46:10,611] Trial 29 finished with value: 0.1519936459833434 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 29 with value: 0.1519936459833434.
running
[I 2024-10-13 04:46:15,781] Trial 33 finished with value: 0.1834273789608364 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 29 with value: 0.1519936459833434.
running
[I 2024-10-13 04:46:20,796] Trial 32 finished with value: 0.17714259793020093 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 29 with value: 0.1519936459833434.
running
[I 2024-10-13 04:46:21,224] Trial 31 finished with value: 0.17714259793020093 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 29 with value: 0.1519936459833434.
running
[I 2024-10-13 04:46:36,107] Trial 34 finished with value: 0.15525716188893762 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 29 with value: 0.1519936459833434.
running
[I 2024-10-13 04:46:41,816] Trial 6 finished with value: 0.10361185245677831 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 6 with value: 0.10361185245677831.
running
[I 2024-10-13 04:46:55,756] Trial 11 finished with value: 0.5544429892136807 and parameters: {'model_name': 'GAIN', 'batch_size': 19, 'hint_rate': 0.35247317864649746, 'alpha': 43, 'iterations': 130, 'learning_rate': 0.015514307947104776, 'p_miss': 0.1423477698904}. Best is trial 6 with value: 0.10361185245677831.
running
[I 2024-10-13 04:46:56,514] Trial 43 finished with value: 0.5807957870148359 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 6 with value: 0.10361185245677831.
running
[I 2024-10-13 04:47:05,747] Trial 35 finished with value: 0.15494529370326796 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'roman'}. Best is trial 6 with value: 0.10361185245677831.
running
[I 2024-10-13 04:47:08,485] Trial 36 finished with value: 0.15824871281448014 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'roman'}. Best is trial 6 with value: 0.10361185245677831.
running
[I 2024-10-13 04:47:14,607] Trial 37 finished with value: 0.15241867309259197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 6 with value: 0.10361185245677831.
running
[I 2024-10-13 04:47:15,504] Trial 38 finished with value: 0.15241867309259197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 6 with value: 0.10361185245677831.
running
[I 2024-10-13 04:47:47,157] Trial 26 finished with value: 0.09280146759467447 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 26 with value: 0.09280146759467447.
running
[I 2024-10-13 04:47:47,654] Trial 49 finished with value: 0.2989168297659669 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 26 with value: 0.09280146759467447.
running
[I 2024-10-13 04:47:49,784] Trial 8 finished with value: 0.23998710373172005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 26 with value: 0.09280146759467447.
running
[I 2024-10-13 04:48:42,124] Trial 28 finished with value: 0.21430908226633522 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 26 with value: 0.09280146759467447.
running
[I 2024-10-13 04:49:52,158] Trial 48 finished with value: 0.09237748579639099 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 48 with value: 0.09237748579639099.
running
[I 2024-10-13 04:49:56,300] Trial 47 finished with value: 0.09237748579639099 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 48 with value: 0.09237748579639099.
running
[I 2024-10-13 04:50:14,305] Trial 42 finished with value: 0.21486160324486187 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 48 with value: 0.09237748579639099.
running
[I 2024-10-13 04:50:14,562] Trial 50 finished with value: 0.09290366838977651 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 48 with value: 0.09237748579639099.
running
[I 2024-10-13 04:50:15,505] Trial 51 finished with value: 0.0903946939762582 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.0903946939762582.
running
[I 2024-10-13 04:50:37,709] Trial 52 finished with value: 0.0903946939762582 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.0903946939762582.
running
[I 2024-10-13 04:51:11,256] Trial 56 finished with value: 0.09290366838977651 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.0903946939762582.
running
[I 2024-10-13 05:01:53,601] Trial 20 finished with value: 0.29866040809823285 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 629, 'learning_rate': 0.03594021231109568, 'p_miss': 0.2594229738064512}. Best is trial 51 with value: 0.0903946939762582.
running
[I 2024-10-13 05:01:54,234] Trial 60 finished with value: 0.3100114065102112 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 51 with value: 0.0903946939762582.
running
[I 2024-10-13 05:02:55,157] Trial 61 finished with value: 0.0903946939762582 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.0903946939762582.
running
[I 2024-10-13 05:03:55,971] Trial 62 finished with value: 0.09245466722422997 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.0903946939762582.
running
[I 2024-10-13 06:08:31,060] Trial 9 finished with value: 0.08580320388428164 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 9 with value: 0.08580320388428164.
running
[I 2024-10-13 06:11:46,942] Trial 27 finished with value: 0.08504807495252899 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 27 with value: 0.08504807495252899.
running
[I 2024-10-13 06:13:34,108] Trial 44 finished with value: 0.08467915571166315 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 44 with value: 0.08467915571166315.
running
[I 2024-10-13 06:13:35,171] Trial 46 finished with value: 0.08412931951768836 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 46 with value: 0.08412931951768836.
running
[I 2024-10-13 06:13:36,179] Trial 40 finished with value: 0.08563086077488966 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 46 with value: 0.08412931951768836.
running
[I 2024-10-13 06:13:39,709] Trial 39 finished with value: 0.08412202389771799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 06:14:10,772] Trial 41 finished with value: 0.08593093094052487 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 06:14:11,618] Trial 70 finished with value: 0.3100114065102112 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 06:14:27,556] Trial 45 finished with value: 0.08504379041515135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 06:30:10,449] Trial 63 finished with value: 0.08481455639501914 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 07:10:20,139] Trial 68 finished with value: 0.3062901535315699 and parameters: {'model_name': 'VAE', 'batch_size': 718, 'iterations': 613, 'learning_rate': 0.00010295814481348949, 'p_miss': 0.21225751574727714}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 07:44:36,822] Trial 66 finished with value: 0.0849770590492495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 08:29:58,953] Trial 57 finished with value: 0.29785743229591705 and parameters: {'model_name': 'VAE', 'batch_size': 625, 'iterations': 3060, 'learning_rate': 0.00010829850548837921, 'p_miss': 0.29204583331049355}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 08:39:52,018] Trial 17 finished with value: 0.592429373806739 and parameters: {'model_name': 'GAIN', 'batch_size': 707, 'hint_rate': 0.6379250444149475, 'alpha': 20, 'iterations': 6708, 'learning_rate': 0.0002698906913816297, 'p_miss': 0.2973608848519665}. Best is trial 39 with value: 0.08412202389771799.
running
[I 2024-10-13 09:59:27,469] Trial 76 finished with value: 0.08370938295211551 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 10:11:12,982] Trial 77 finished with value: 0.08379297062909821 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 10:50:27,887] Trial 73 finished with value: 0.3464768441195911 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4318, 'learning_rate': 0.00011014409973709972, 'p_miss': 0.014703645693216166}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 11:02:02,607] Trial 65 finished with value: 0.29752108017175855 and parameters: {'model_name': 'VAE', 'batch_size': 718, 'iterations': 3384, 'learning_rate': 0.00010423653413715719, 'p_miss': 0.21804821995231077}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 11:04:08,775] Trial 72 finished with value: 0.29754658598560585 and parameters: {'model_name': 'VAE', 'batch_size': 939, 'iterations': 3198, 'learning_rate': 0.00020201714184636132, 'p_miss': 0.22366731360900732}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 11:22:11,716] Trial 78 finished with value: 0.0873829079324326 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 11:22:21,794] Trial 83 finished with value: 0.22698401200122992 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1961, 'weights': 'uniform'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 11:24:25,613] Trial 84 finished with value: 0.5821712388150942 and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.029511038548739377, 'alpha': 0, 'iterations': 78, 'learning_rate': 0.011327693728168265, 'p_miss': 0.11590477152230011}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 11:35:48,226] Trial 79 finished with value: 0.08755016631813006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 11:52:14,760] Trial 74 finished with value: 0.3463840651535818 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4453, 'learning_rate': 0.00043475232046966106, 'p_miss': 0.016150890482405117}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 12:02:22,624] Trial 59 finished with value: 0.297631616384164 and parameters: {'model_name': 'VAE', 'batch_size': 859, 'iterations': 5866, 'learning_rate': 0.00010250780639636129, 'p_miss': 0.2877770255672415}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 12:13:37,054] Trial 80 finished with value: 0.0882527342368976 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 12:22:46,546] Trial 81 finished with value: 0.08804086056522056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 12:25:59,914] Trial 82 finished with value: 0.08841159511727674 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 12:44:36,192] Trial 85 finished with value: 0.08869774967767885 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 13:03:42,922] Trial 86 finished with value: 0.0843416782153508 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 76 with value: 0.08370938295211551.
running
[I 2024-10-13 13:19:41,355] Trial 87 finished with value: 0.08353339841699363 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 13:28:48,882] Trial 88 finished with value: 0.08357086011105648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 13:31:09,301] Trial 58 finished with value: 0.29760882668941047 and parameters: {'model_name': 'VAE', 'batch_size': 770, 'iterations': 6559, 'learning_rate': 0.00010262394074202415, 'p_miss': 0.2921923727922116}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 13:40:57,431] Trial 89 finished with value: 0.08394980091864886 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 13:48:32,412] Trial 90 finished with value: 0.08476370961713249 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 13:53:14,149] Trial 91 finished with value: 0.0842130402185675 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:02:07,373] Trial 54 finished with value: 0.2975801698750419 and parameters: {'model_name': 'VAE', 'batch_size': 780, 'iterations': 6861, 'learning_rate': 0.00016349335984509587, 'p_miss': 0.2916426207492968}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:05:47,977] Trial 55 finished with value: 0.29791353858536607 and parameters: {'model_name': 'VAE', 'batch_size': 547, 'iterations': 8145, 'learning_rate': 0.00013275929084229999, 'p_miss': 0.28929468422635046}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:09:51,487] Trial 92 finished with value: 0.08501848698287466 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:11:27,470] Trial 64 finished with value: 0.29780951761105534 and parameters: {'model_name': 'VAE', 'batch_size': 378, 'iterations': 8421, 'learning_rate': 0.0001212160921695971, 'p_miss': 0.21183140074258905}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:24:51,249] Trial 67 finished with value: 0.29760494167502044 and parameters: {'model_name': 'VAE', 'batch_size': 994, 'iterations': 6525, 'learning_rate': 0.00015911390969824987, 'p_miss': 0.2125065157463038}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:28:20,757] Trial 93 finished with value: 0.08481107826192869 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:43:18,104] Trial 94 finished with value: 0.08524131934434287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:45:02,252] Trial 75 finished with value: 0.3502378568677399 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8409, 'learning_rate': 0.013923426595908155, 'p_miss': 0.022682585793802057}. Best is trial 87 with value: 0.08353339841699363.
running
[I 2024-10-13 14:51:01,610] Trial 95 finished with value: 0.0830514225466834 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 14:54:15,677] Trial 96 finished with value: 0.08331363356517518 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:02:46,478] Trial 97 finished with value: 0.08396235766557206 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:08:50,964] Trial 98 finished with value: 0.08369961511079971 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:09:02,499] Trial 111 finished with value: 0.2670311563171438 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8736, 'weights': 'distance'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:09:08,293] Trial 112 finished with value: 0.5497822764621968 and parameters: {'model_name': 'GAIN', 'batch_size': 163, 'hint_rate': 0.07348909449760205, 'alpha': 42, 'iterations': 1, 'learning_rate': 0.006209152159241561, 'p_miss': 0.17744710473753167}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:12:10,530] Trial 105 finished with value: 0.14205057485228648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:13:53,814] Trial 99 finished with value: 0.0837996045427353 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:16:34,260] Trial 115 finished with value: 0.1517162796720263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:17:34,509] Trial 71 finished with value: 0.29779512694383614 and parameters: {'model_name': 'VAE', 'batch_size': 764, 'iterations': 7209, 'learning_rate': 0.00010575413633283818, 'p_miss': 0.21908439783566358}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:23:18,455] Trial 100 finished with value: 0.08332619248564443 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:27:03,015] Trial 101 finished with value: 0.08376023142059105 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:27:06,910] Trial 102 finished with value: 0.08812656928757293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:28:09,976] Trial 103 finished with value: 0.08735139804851702 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:41:43,036] Trial 104 finished with value: 0.08872604833683558 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:53:44,950] Trial 53 finished with value: 0.29743809353597345 and parameters: {'model_name': 'VAE', 'batch_size': 988, 'iterations': 9005, 'learning_rate': 0.09952190882891003, 'p_miss': 0.28826454812284946}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:58:35,266] Trial 106 finished with value: 0.0858907617617677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 15:59:54,540] Trial 107 finished with value: 0.08623477471824371 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:05:55,565] Trial 108 finished with value: 0.08830673330564713 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:08:58,264] Trial 109 finished with value: 0.08860508867694862 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:09:45,975] Trial 69 finished with value: 0.2975838511982555 and parameters: {'model_name': 'VAE', 'batch_size': 827, 'iterations': 9742, 'learning_rate': 0.00010938259249806644, 'p_miss': 0.1974062322253996}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:12:22,071] Trial 125 finished with value: 0.26053496601674847 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:15:44,568] Trial 110 finished with value: 0.08813421154814423 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:20:30,503] Trial 113 finished with value: 0.0875738081052253 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:20:30,731] Trial 131 finished with value: 0.2989168297659669 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:22:54,355] Trial 114 finished with value: 0.08512421254789485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:24:30,839] Trial 133 finished with value: 0.14724737575357424 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:26:12,967] Trial 116 finished with value: 0.08535069495579303 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:26:41,529] Trial 117 finished with value: 0.08569786799054056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:31:32,280] Trial 118 finished with value: 0.08500525639930495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:34:28,792] Trial 119 finished with value: 0.08653280327958035 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:34:40,357] Trial 120 finished with value: 0.08608605047856081 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:35:14,226] Trial 121 finished with value: 0.08608832587414292 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:35:18,090] Trial 140 finished with value: 0.28275644440517295 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5561, 'weights': 'uniform'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:46:19,774] Trial 122 finished with value: 0.08497154920645537 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:49:33,434] Trial 124 finished with value: 0.09274470130225695 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:53:45,575] Trial 127 finished with value: 0.09526516426539387 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:54:15,131] Trial 128 finished with value: 0.09445362633970474 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:54:28,242] Trial 145 finished with value: 0.5232877039109178 and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.9853652266803911, 'alpha': 66, 'iterations': 305, 'learning_rate': 0.0010213731716434368, 'p_miss': 0.261895519239291}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:55:10,781] Trial 123 finished with value: 0.08533938249748779 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 16:59:44,698] Trial 130 finished with value: 0.09497072057256394 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:07:06,266] Trial 134 finished with value: 0.09472988163592938 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:08:07,886] Trial 126 finished with value: 0.08309941204454217 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:13:37,023] Trial 129 finished with value: 0.08370624862858055 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:16:56,299] Trial 138 finished with value: 0.09528470798996115 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:21:19,726] Trial 132 finished with value: 0.08378826562546182 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:21:20,002] Trial 153 finished with value: 0.5807957870148359 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:26:03,570] Trial 135 finished with value: 0.08353465678791307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:26:25,803] Trial 136 finished with value: 0.0831538325240207 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:28:43,379] Trial 142 finished with value: 0.09587586533398888 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:31:07,442] Trial 137 finished with value: 0.0838939924257719 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:34:07,205] Trial 139 finished with value: 0.08333231191464827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:34:54,271] Trial 141 finished with value: 0.08380109432613889 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:48:45,693] Trial 143 finished with value: 0.08322552675821596 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:50:15,198] Trial 161 finished with value: 0.14724737575357424 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:54:08,323] Trial 144 finished with value: 0.08356606800986952 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:54:34,258] Trial 163 finished with value: 0.14718327494410158 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:55:13,372] Trial 146 finished with value: 0.08370234665957224 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 17:55:44,819] Trial 147 finished with value: 0.08493501175069613 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 18:00:16,549] Trial 148 finished with value: 0.08361852902956371 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 18:07:23,240] Trial 149 finished with value: 0.08389827577810009 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 18:08:13,577] Trial 150 finished with value: 0.0833671420368006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 18:13:42,526] Trial 151 finished with value: 0.08319704739741893 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 95 with value: 0.0830514225466834.
running
[I 2024-10-13 18:16:58,180] Trial 152 finished with value: 0.08278180364167377 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:21:14,638] Trial 154 finished with value: 0.08340821791434277 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:21:17,675] Trial 172 finished with value: 0.29891571793527044 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6723, 'weights': 'uniform'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:21:19,258] Trial 173 finished with value: 0.5729084684748139 and parameters: {'model_name': 'GAIN', 'batch_size': 58, 'hint_rate': 0.7821938047635472, 'alpha': 25, 'iterations': 37, 'learning_rate': 0.03696763223697358, 'p_miss': 0.1290657888491989}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:26:05,613] Trial 155 finished with value: 0.08400149540987609 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:26:28,090] Trial 156 finished with value: 0.0836682892495663 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:28:54,504] Trial 157 finished with value: 0.08339433698107172 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:31:08,820] Trial 158 finished with value: 0.08338744811219855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:34:01,322] Trial 159 finished with value: 0.08428320332212295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:34:52,238] Trial 160 finished with value: 0.08311628065373067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:49:17,574] Trial 162 finished with value: 0.08419582118134175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:53:33,137] Trial 164 finished with value: 0.08347332277682823 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:54:10,203] Trial 165 finished with value: 0.0832454755601888 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:54:39,836] Trial 166 finished with value: 0.08459078722406868 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 18:59:21,541] Trial 167 finished with value: 0.08562549638191329 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:06:02,805] Trial 168 finished with value: 0.08436272327913774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:07:05,370] Trial 169 finished with value: 0.08458105951469523 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:12:33,770] Trial 170 finished with value: 0.08444771990629937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:15:32,751] Trial 171 finished with value: 0.08350158822515168 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:19:56,310] Trial 174 finished with value: 0.08379695707645511 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:20:17,926] Trial 190 finished with value: 0.1471888991011892 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:20:18,374] Trial 191 finished with value: 0.5141199579707634 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:25:02,451] Trial 175 finished with value: 0.084194054381312 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:25:28,497] Trial 176 finished with value: 0.08386289794235266 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:27:50,679] Trial 177 finished with value: 0.08317158826990263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:28:07,494] Trial 195 finished with value: 0.11430322506018804 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:30:23,693] Trial 178 finished with value: 0.08406914583664452 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:33:09,922] Trial 179 finished with value: 0.08389441365469588 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:33:55,179] Trial 180 finished with value: 0.08322037914523407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
running
[I 2024-10-13 19:48:38,386] Trial 181 finished with value: 0.08421934095412766 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 19:51:54,852] Trial 192 finished with value: 0.11022938724192506 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 19:52:54,402] Trial 193 finished with value: 0.12423087394481247 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 19:53:17,872] Trial 182 finished with value: 0.08336523352727454 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 19:53:24,584] Trial 183 finished with value: 0.08317927934694624 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 19:54:00,446] Trial 184 finished with value: 0.08317693826156629 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 19:58:19,004] Trial 185 finished with value: 0.08336403686989377 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:04:18,464] Trial 186 finished with value: 0.08425522829345217 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:05:19,589] Trial 187 finished with value: 0.08385144891503697 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:10:16,821] Trial 188 finished with value: 0.08328087747718549 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:13:05,912] Trial 189 finished with value: 0.08322092920593448 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:21:59,263] Trial 194 finished with value: 0.08399947027773073 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:24:04,633] Trial 196 finished with value: 0.0836271522627076 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:26:08,087] Trial 197 finished with value: 0.08379851054370908 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:28:25,562] Trial 198 finished with value: 0.08360847593398948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
[I 2024-10-13 20:29:06,927] Trial 199 finished with value: 0.08372344885537217 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 152 with value: 0.08278180364167377.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0.08278180364167377
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9872067526504106
Generation:   4%|▍         | 1/25 [00:19<07:54, 19.75s/it]Generation:  2
Best f1_score score: 0.9930747664057661
Generation:   8%|▊         | 2/25 [00:56<11:27, 29.90s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474703310> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  3
Best f1_score score: 0.9930747664057661
Generation:  12%|█▏        | 3/25 [02:32<21:55, 59.78s/it]Generation:  4
Best f1_score score: 0.9930747664057661
Generation:  16%|█▌        | 4/25 [02:53<15:39, 44.76s/it]Generation:  5
Best f1_score score: 0.9930747664057661
Generation:  20%|██        | 5/25 [03:19<12:40, 38.02s/it]Generation:  6
Best f1_score score: 0.9930747664057661
Generation:  24%|██▍       | 6/25 [03:39<10:02, 31.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e10ca0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  7
Best f1_score score: 0.9930747664057661
Generation:  28%|██▊       | 7/25 [04:39<12:19, 41.10s/it]Generation:  8
Best f1_score score: 0.9930747664057661
Generation:  32%|███▏      | 8/25 [08:31<28:52, 101.91s/it]Generation:  9
Best f1_score score: 0.9930747664057661
Generation:  36%|███▌      | 9/25 [08:56<20:41, 77.61s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554679bdcc0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  10
Best f1_score score: 0.9950641140540751
Generation:  40%|████      | 10/25 [09:39<16:47, 67.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467bb4ac0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  11
Best f1_score score: 0.9950641140540751
Generation:  44%|████▍     | 11/25 [10:47<15:40, 67.21s/it]Generation:  12
Best f1_score score: 0.9950641140540751
Generation:  48%|████▊     | 12/25 [11:49<14:16, 65.87s/it]Generation:  13
Best f1_score score: 0.9950641140540751
Generation:  52%|█████▏    | 13/25 [13:03<13:38, 68.24s/it]Generation:  14
Best f1_score score: 0.9950641140540751
Generation:  56%|█████▌    | 14/25 [13:59<11:49, 64.49s/it]Generation:  15
Best f1_score score: 0.9950641140540751
Generation:  60%|██████    | 15/25 [15:32<12:10, 73.08s/it]Generation:  16
Best f1_score score: 0.9950641140540751
Generation:  64%|██████▍   | 16/25 [16:38<10:39, 71.06s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546541dd50> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554650c86d0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  17
Best f1_score score: 0.9950641140540751
Generation:  68%|██████▊   | 17/25 [17:26<08:32, 64.08s/it]Generation:  18
Best f1_score score: 0.9950641140540751
Generation:  72%|███████▏  | 18/25 [22:21<15:33, 133.38s/it]Generation:  19
Best f1_score score: 0.9960077523704631
Generation:  76%|███████▌  | 19/25 [24:00<12:18, 123.06s/it]Generation:  20
Best f1_score score: 0.9960077523704631
Generation:  80%|████████  | 20/25 [25:11<08:57, 107.56s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546537ef80> 

Generation:  21
Best f1_score score: 0.9960077523704631
Generation:  84%|████████▍ | 21/25 [35:21<17:12, 258.16s/it]Generation:  22
Best f1_score score: 0.9960077523704631
Generation:  88%|████████▊ | 22/25 [37:09<10:39, 213.08s/it]Generation:  23
Best f1_score score: 0.9960077523704631
Generation:  92%|█████████▏| 23/25 [38:13<05:37, 168.54s/it]Generation:  24
Best f1_score score: 0.9960077523704631
Generation:  96%|█████████▌| 24/25 [39:52<02:27, 147.57s/it]Generation:  25
Best f1_score score: 0.9960077523704631
Generation: 100%|██████████| 25/25 [40:59<00:00, 123.37s/it]Generation: 100%|██████████| 25/25 [41:02<00:00, 98.49s/it] 
2024-10-13 21:22:38,123 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:40823' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-43b3f1f1519cef9204d9df3fe7f7335b', 'ndarray-fed8befc2245e625416df05404071976'} (stimulus_id='handle-worker-cleanup-1728879758.1233878')
Fitted
Pipeline(steps=[('svc',
                 SVC(C=5.8036959618387, gamma=0.6328842239905, max_iter=3000,
                     probability=True))])
score start
train score: {'auroc': 0.9999841882937419, 'accuracy': 0.9982940975776186, 'balanced_accuracy': 0.998259185920023, 'logloss': 0.01200130704354257, 'f1': 0.9982814884722642}
original test score: {'auroc': 0.9999785633904269, 'accuracy': 0.9959072305593452, 'balanced_accuracy': 0.9958816915942041, 'logloss': 0.020484910642624674, 'f1': 0.9959184129250817}
imputed test score: {'auroc': 0.9999780865960112, 'accuracy': 0.9954524783992724, 'balanced_accuracy': 0.995407757944915, 'logloss': 0.020678903498669732, 'f1': 0.9954456076702339}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014640>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d44100> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.9871768723435463
Generation:   4%|▍         | 1/25 [01:37<38:53, 97.23s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d22680> 

Generation:  2
Best f1_score score: 0.993386753366687
Generation:   8%|▊         | 2/25 [11:40<2:31:26, 395.05s/it]Generation:  3
Best f1_score score: 0.993386753366687
Generation:  12%|█▏        | 3/25 [12:24<1:26:03, 234.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4970> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.993386753366687
Generation:  16%|█▌        | 4/25 [12:57<54:13, 154.92s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554571ad870> 

Generation:  5
Best f1_score score: 0.993386753366687
Generation:  20%|██        | 5/25 [23:00<1:45:33, 316.65s/it]Generation:  6
Best f1_score score: 0.993386753366687
Generation:  24%|██▍       | 6/25 [27:10<1:33:01, 293.77s/it]Generation:  7
Best f1_score score: 0.993386753366687
Generation:  28%|██▊       | 7/25 [27:54<1:03:39, 212.18s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456bb3a60> 

Generation:  8
Best f1_score score: 0.9947548083516393
Generation:  32%|███▏      | 8/25 [37:59<1:35:36, 337.46s/it]Generation:  9
Best f1_score score: 0.9947548083516393
Generation:  36%|███▌      | 9/25 [38:47<1:05:48, 246.78s/it]Generation:  10
Best f1_score score: 0.9948595433917203
Generation:  40%|████      | 10/25 [44:52<1:10:50, 283.34s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554744ebd30> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d60910> 

Generation:  11
Best f1_score score: 0.9948595433917203
Generation:  44%|████▍     | 11/25 [54:57<1:29:04, 381.72s/it]Generation:  12
Best f1_score score: 0.9948595433917203
Generation:  48%|████▊     | 12/25 [56:20<1:03:00, 290.79s/it]Generation:  13
Best f1_score score: 0.9953256537599581
Generation:  52%|█████▏    | 13/25 [57:49<45:58, 229.87s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554548e0670> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  14
Best f1_score score: 0.9953256537599581
Generation:  56%|█████▌    | 14/25 [1:00:46<39:13, 213.91s/it]Generation:  15
Best f1_score score: 0.9954309950563118
Generation:  60%|██████    | 15/25 [1:03:18<32:29, 195.00s/it]Generation:  16
Best f1_score score: 0.9954309950563118
Generation:  64%|██████▍   | 16/25 [1:09:20<36:49, 245.52s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474240e20> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545be44280> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.9954309950563118
Generation:  68%|██████▊   | 17/25 [1:09:42<23:46, 178.33s/it]Generation:  18
Best f1_score score: 0.9955445122730436
Generation:  72%|███████▏  | 18/25 [1:11:13<17:43, 151.87s/it]Generation:  19
Best f1_score score: 0.9955445122730436
Generation:  76%|███████▌  | 19/25 [1:12:52<13:36, 136.16s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545baccca0> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.9956538076017531
Generation:  80%|████████  | 20/25 [1:14:37<10:34, 126.86s/it]Generation:  21
Best f1_score score: 0.9958806441711665
Generation:  84%|████████▍ | 21/25 [1:18:04<10:03, 150.81s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454648700> 

Generation:  22
Best f1_score score: 0.9959940835392205
Generation:  88%|████████▊ | 22/25 [1:28:10<14:22, 287.36s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456bf39a0> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.9959940835392205
Generation:  92%|█████████▏| 23/25 [1:29:15<07:21, 220.80s/it]Generation:  24
Best f1_score score: 0.9959940835392205
Generation:  96%|█████████▌| 24/25 [1:34:29<04:08, 248.57s/it]Generation:  25
Best f1_score score: 0.9959940835392205
Generation: 100%|██████████| 25/25 [1:36:40<00:00, 213.21s/it]Generation: 100%|██████████| 25/25 [1:36:40<00:00, 232.00s/it]
2024-10-13 22:59:36,144 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33511' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-43b3f1f1519cef9204d9df3fe7f7335b', 'DataFrame-c3bffe93bb21e60470e6f099226c279f'} (stimulus_id='handle-worker-cleanup-1728885576.1444688')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=KNeighborsRegressor(),
                                  imputation_order='descending',
                                  initial_strategy='most_frequent',
                                  n_nearest_features=78)),
                ('svc',
                 SVC(C=76.4428428626376, gamma=2.0871439601643, max_iter=3000,
                     probability=True))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 1.0, 'accuracy': 0.9998862731718412, 'balanced_accuracy': 0.9998815165876778, 'logloss': 0.0049279564466343925, 'f1': 0.9998861082127373}
test score: {'auroc': 0.9999824788530173, 'accuracy': 0.9949977262391997, 'balanced_accuracy': 0.9950044986117479, 'logloss': 0.019144978384145604, 'f1': 0.9950237708324297}
original test score: {'auroc': 0.9999827172502253, 'accuracy': 0.9949977262391997, 'balanced_accuracy': 0.9950044986117479, 'logloss': 0.019131957111773665, 'f1': 0.9950237708324297}
score end
32
lvl
0.01
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
18.253857300016616
hours
DONE
