Run: 26
/cm/local/apps/slurm/var/spool/job1024497/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/737/737.pkl
working on 
../data/c/737/class_full_MCAR_0.1_2
0.07769560813903809
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-25 23:12:16,824] A new study created in memory with name: no-name-d187387c-5982-4e12-8aeb-0e7ca0a622ae
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-25 23:12:16,999] Trial 9 finished with value: 0.5299824282615824 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 9 with value: 0.5299824282615824.
[I 2024-10-25 23:12:17,000] Trial 13 finished with value: 0.5299824282615824 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 9 with value: 0.5299824282615824.
running
running
[I 2024-10-25 23:12:17,217] Trial 11 finished with value: 0.13272331578975036 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.13272331578975036.
[I 2024-10-25 23:12:17,326] Trial 15 finished with value: 0.5299824282615824 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 11 with value: 0.13272331578975036.
running
running
[I 2024-10-25 23:12:17,788] Trial 3 finished with value: 0.11278816585815976 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 186, 'weights': 'uniform'}. Best is trial 3 with value: 0.11278816585815976.
running
[I 2024-10-25 23:12:17,955] Trial 12 finished with value: 0.13156132766194834 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1740, 'weights': 'uniform'}. Best is trial 3 with value: 0.11278816585815976.
running
[I 2024-10-25 23:12:18,076] Trial 6 finished with value: 0.13000064020988053 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1523, 'weights': 'uniform'}. Best is trial 3 with value: 0.11278816585815976.
running
[I 2024-10-25 23:12:18,318] Trial 7 finished with value: 0.1318332334679071 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1792, 'weights': 'uniform'}. Best is trial 3 with value: 0.11278816585815976.
running
[I 2024-10-25 23:12:18,469] Trial 19 finished with value: 0.10411904032165642 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 113, 'weights': 'distance'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:18,605] Trial 20 finished with value: 0.5299824282615824 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:18,742] Trial 16 finished with value: 0.12586167602926024 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 893, 'weights': 'uniform'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:18,861] Trial 23 finished with value: 0.12488625520059904 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:19,934] Trial 27 finished with value: 0.11016677337578022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:20,300] Trial 8 finished with value: 0.11030288757125165 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:20,995] Trial 28 finished with value: 0.11016677337578022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:22,485] Trial 18 finished with value: 0.12635714808855963 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:23,797] Trial 5 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.08733679023856279, 'alpha': 35, 'iterations': 9, 'learning_rate': 0.0014116376429020637, 'p_miss': 0.11786280123449777}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:24,176] Trial 2 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5326296030464919, 'alpha': 79, 'iterations': 10, 'learning_rate': 0.024783076851721125, 'p_miss': 0.23886471307423507}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:30,703] Trial 30 finished with value: 0.1783868865427414 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 2, 'learning_rate': 0.00021809651716028558, 'p_miss': 0.26100267900226043}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:35,942] Trial 0 finished with value: 0.1694455292214893 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 4, 'learning_rate': 0.008768496378946932, 'p_miss': 0.031660816134118135}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:40,899] Trial 35 finished with value: 0.12166205469006233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:41,882] Trial 24 finished with value: 0.17342721194728464 and parameters: {'model_name': 'VAE', 'batch_size': 67, 'iterations': 6, 'learning_rate': 0.0012212074976313183, 'p_miss': 0.09809067729643199}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:42,350] Trial 21 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.7917557055218176, 'alpha': 54, 'iterations': 90, 'learning_rate': 0.002277709255628152, 'p_miss': 0.06492138358823359}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:43,703] Trial 26 finished with value: 0.17359365065578214 and parameters: {'model_name': 'VAE', 'batch_size': 243, 'iterations': 7, 'learning_rate': 0.0005004109604183478, 'p_miss': 0.07137901330016463}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:45,673] Trial 36 finished with value: 0.11016677337578022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:47,081] Trial 37 finished with value: 0.11016677337578022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:47,324] Trial 38 finished with value: 0.11016677337578022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:12:49,008] Trial 39 finished with value: 0.11016677337578022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:13:31,133] Trial 10 finished with value: 0.38873337361725097 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.8030021689959559, 'alpha': 81, 'iterations': 64, 'learning_rate': 0.03067855398770617, 'p_miss': 0.22238278228479946}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:14:30,074] Trial 14 finished with value: 0.14507915759502427 and parameters: {'model_name': 'VAE', 'batch_size': 97, 'iterations': 35, 'learning_rate': 0.03967817410235378, 'p_miss': 0.16968836543878713}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:14:36,716] Trial 4 finished with value: 0.15481707745753867 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 49, 'learning_rate': 0.002662799586558838, 'p_miss': 0.025633136261133997}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:24:10,599] Trial 43 finished with value: 0.11452087331125535 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:24:16,889] Trial 47 finished with value: 0.11016670647129818 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:24:23,262] Trial 48 finished with value: 0.11016670647129818 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:24:31,960] Trial 49 finished with value: 0.1109261861747459 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 19 with value: 0.10411904032165642.
running
[I 2024-10-25 23:24:33,356] Trial 50 finished with value: 0.10384084733686472 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 25, 'weights': 'distance'}. Best is trial 50 with value: 0.10384084733686472.
running
[I 2024-10-25 23:24:34,570] Trial 51 finished with value: 0.10327039277627321 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 30, 'weights': 'distance'}. Best is trial 51 with value: 0.10327039277627321.
running
[I 2024-10-25 23:24:36,352] Trial 52 finished with value: 0.10748335701341567 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 193, 'weights': 'distance'}. Best is trial 51 with value: 0.10327039277627321.
running
[I 2024-10-25 23:24:37,638] Trial 53 finished with value: 0.11290513201447254 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12, 'weights': 'distance'}. Best is trial 51 with value: 0.10327039277627321.
running
[I 2024-10-25 23:24:39,678] Trial 54 finished with value: 0.11139859521565462 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 375, 'weights': 'distance'}. Best is trial 51 with value: 0.10327039277627321.
running
[I 2024-10-25 23:24:41,884] Trial 55 finished with value: 0.11407380200783457 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 553, 'weights': 'distance'}. Best is trial 51 with value: 0.10327039277627321.
running
[I 2024-10-25 23:24:43,668] Trial 56 finished with value: 0.10242856824436893 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 51, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:45,118] Trial 57 finished with value: 0.10484113627521385 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 23, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:46,396] Trial 58 finished with value: 0.10265468273223485 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 36, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:47,634] Trial 59 finished with value: 0.15954413909306464 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:49,388] Trial 60 finished with value: 0.11447482377332338 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 581, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:51,574] Trial 61 finished with value: 0.12298381199745893 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2435, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:52,324] Trial 41 finished with value: 0.11654799208607876 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:53,781] Trial 62 finished with value: 0.11235621459951317 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 437, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:54,342] Trial 63 finished with value: 0.1110695369067837 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 356, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:55,214] Trial 64 finished with value: 0.10982245315524297 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 291, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:55,682] Trial 65 finished with value: 0.15954413909306464 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:56,334] Trial 66 finished with value: 0.12303699709124476 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:57,024] Trial 67 finished with value: 0.10281754735157649 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 35, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:57,821] Trial 42 finished with value: 0.11835595791231383 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:24:58,226] Trial 68 finished with value: 0.10802532500165118 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 214, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:25:39,229] Trial 44 finished with value: 0.11994938953252417 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:26:25,717] Trial 40 finished with value: 0.11816172932354593 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:26:34,997] Trial 45 finished with value: 0.1178121099920506 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:27:24,349] Trial 46 finished with value: 0.11685710549578796 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:33:58,567] Trial 1 finished with value: 0.43744528786298986 and parameters: {'model_name': 'GAIN', 'batch_size': 443, 'hint_rate': 0.29266740348183934, 'alpha': 90, 'iterations': 704, 'learning_rate': 0.05353058540518402, 'p_miss': 0.16954978439464144}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:33:59,571] Trial 76 finished with value: 0.10658276421614957 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 170, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:39:07,000] Trial 29 finished with value: 0.15803170370360298 and parameters: {'model_name': 'VAE', 'batch_size': 386, 'iterations': 409, 'learning_rate': 0.00017815648885453257, 'p_miss': 0.05790609520523467}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-25 23:55:55,843] Trial 22 finished with value: 0.17223523671816407 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 830, 'learning_rate': 0.0002428544496362505, 'p_miss': 0.032435748187773505}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:03,888] Trial 78 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.9717063287532954, 'alpha': 0, 'iterations': 9352, 'learning_rate': 0.01013965741179844, 'p_miss': 0.2011830719543459}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:04,586] Trial 80 finished with value: 0.11071497543242412 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 14, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:05,539] Trial 81 finished with value: 0.10761615635450542 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 199, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:06,522] Trial 82 finished with value: 0.10613271924593641 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 160, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:07,158] Trial 83 finished with value: 0.12824173252227947 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:08,120] Trial 84 finished with value: 0.1156998256840839 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 677, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:10,996] Trial 85 finished with value: 0.39253866350743 and parameters: {'model_name': 'GAIN', 'batch_size': 827, 'hint_rate': 0.056730489124904526, 'alpha': 4, 'iterations': 1, 'learning_rate': 0.008315932723566009, 'p_miss': 0.2926323373624901}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:11,885] Trial 86 finished with value: 0.10722588533361317 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 187, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:12,620] Trial 87 finished with value: 0.10641467293940891 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 166, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:13,627] Trial 88 finished with value: 0.10525393283960785 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 140, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:14,480] Trial 89 finished with value: 0.11051585858566819 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 328, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:14,895] Trial 90 finished with value: 0.12488625520059904 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:15,723] Trial 91 finished with value: 0.10496086630313058 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 133, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:16,592] Trial 92 finished with value: 0.10486891521963608 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 131, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:17,414] Trial 93 finished with value: 0.11973133999561063 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1210, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:18,156] Trial 94 finished with value: 0.1190885820071077 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 413, 'weights': 'uniform'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:18,886] Trial 95 finished with value: 0.10349709869889381 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 99, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:19,819] Trial 96 finished with value: 0.10385266017760289 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 108, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:20,700] Trial 97 finished with value: 0.10946011756750171 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 274, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:21,467] Trial 98 finished with value: 0.10634973030472458 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 99, 'weights': 'uniform'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:22,331] Trial 99 finished with value: 0.10349709869889381 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 99, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:47,475] Trial 25 finished with value: 0.15137852433154148 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 1285, 'learning_rate': 0.01360660962642412, 'p_miss': 0.11309557315837329}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:18:47,852] Trial 101 finished with value: 0.5299824282615824 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:40:13,549] Trial 17 finished with value: 0.1544510826760198 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 1591, 'learning_rate': 0.00010157134019287092, 'p_miss': 0.19540110920911444}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:28,072] Trial 79 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.9577943532616108, 'alpha': 5, 'iterations': 6843, 'learning_rate': 0.009330253092560371, 'p_miss': 0.2878669947133966}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:29,028] Trial 104 finished with value: 0.10988392497647281 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 294, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:29,966] Trial 105 finished with value: 0.10427723158088634 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 119, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:31,009] Trial 106 finished with value: 0.10365717035358561 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 104, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:31,867] Trial 107 finished with value: 0.10365882920005667 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 103, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:32,693] Trial 108 finished with value: 0.10319599575818432 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 93, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:33,581] Trial 109 finished with value: 0.1096140857382634 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 283, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:34,536] Trial 110 finished with value: 0.10331037624296409 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 96, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:35,612] Trial 111 finished with value: 0.12792203354565052 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1219, 'weights': 'uniform'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:36,724] Trial 112 finished with value: 0.11326974967442383 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 498, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 00:52:37,871] Trial 113 finished with value: 0.11846604027928916 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 993, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:42,430] Trial 75 finished with value: 0.441151843984951 and parameters: {'model_name': 'GAIN', 'batch_size': 768, 'hint_rate': 0.1529105504270477, 'alpha': 0, 'iterations': 5094, 'learning_rate': 0.0001336481960598395, 'p_miss': 0.16802471814413916}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:46,162] Trial 115 finished with value: 0.15666924003747512 and parameters: {'model_name': 'VAE', 'batch_size': 77, 'iterations': 1, 'learning_rate': 0.0887770899080485, 'p_miss': 0.13379983625271544}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:46,906] Trial 116 finished with value: 0.10298670893724013 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 86, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:47,926] Trial 117 finished with value: 0.10306697525386191 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 84, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:48,920] Trial 118 finished with value: 0.1223656601874847 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1732, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:49,697] Trial 119 finished with value: 0.1091694962878009 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 260, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:50,403] Trial 120 finished with value: 0.10242856824436893 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 51, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:51,192] Trial 121 finished with value: 0.10257331602604884 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:52,053] Trial 122 finished with value: 0.10254892980891721 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:52,949] Trial 123 finished with value: 0.10300493205293013 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 34, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:53,145] Trial 124 finished with value: 0.13272331578975036 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:53,856] Trial 125 finished with value: 0.19756612007775423 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:54,667] Trial 126 finished with value: 0.10836843436418533 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 226, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:55,706] Trial 127 finished with value: 0.12298381199745893 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2308, 'weights': 'distance'}. Best is trial 56 with value: 0.10242856824436893.
running
[I 2024-10-26 01:27:56,421] Trial 128 finished with value: 0.1023776747971584 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 50, 'weights': 'distance'}. Best is trial 128 with value: 0.1023776747971584.
running
[I 2024-10-26 01:27:57,128] Trial 129 finished with value: 0.13945772116206054 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'distance'}. Best is trial 128 with value: 0.1023776747971584.
running
[I 2024-10-26 01:27:57,972] Trial 130 finished with value: 0.10265020619402536 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 53, 'weights': 'distance'}. Best is trial 128 with value: 0.1023776747971584.
running
[I 2024-10-26 01:27:58,761] Trial 131 finished with value: 0.10250679370924085 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 68, 'weights': 'distance'}. Best is trial 128 with value: 0.1023776747971584.
running
[I 2024-10-26 01:27:59,611] Trial 132 finished with value: 0.1023756279401093 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 49, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:28:00,396] Trial 133 finished with value: 0.10808204851615275 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 216, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:31:07,658] Trial 74 finished with value: 0.43893633347798877 and parameters: {'model_name': 'GAIN', 'batch_size': 724, 'hint_rate': 0.013448575898802828, 'alpha': 2, 'iterations': 4792, 'learning_rate': 0.00011988591034272966, 'p_miss': 0.18478815986975178}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:18,340] Trial 135 finished with value: 0.17496148659962799 and parameters: {'model_name': 'VAE', 'batch_size': 179, 'iterations': 20, 'learning_rate': 0.0004964689753061612, 'p_miss': 0.14543823332266223}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:19,150] Trial 136 finished with value: 0.10260839995991082 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 41, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:19,965] Trial 137 finished with value: 0.10242856824436893 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 51, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:20,709] Trial 138 finished with value: 0.10765891426025509 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 202, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:21,458] Trial 139 finished with value: 0.10246750431707403 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 56, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:22,460] Trial 140 finished with value: 0.10312953400418554 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 33, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:23,484] Trial 141 finished with value: 0.1076207816358552 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 200, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:24,257] Trial 142 finished with value: 0.10263736398559895 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 54, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:25,051] Trial 143 finished with value: 0.11143112825236105 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 166, 'weights': 'uniform'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:26,078] Trial 144 finished with value: 0.11114332118362973 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 361, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:27,090] Trial 145 finished with value: 0.10265020619402536 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 53, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:28,048] Trial 146 finished with value: 0.10253605359480511 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 60, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:28,753] Trial 147 finished with value: 0.102513084111441 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 62, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:29,611] Trial 148 finished with value: 0.1057271279252329 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 151, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:30,435] Trial 149 finished with value: 0.10257331602604884 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:31,467] Trial 150 finished with value: 0.10894545659182238 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 245, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:32,437] Trial 151 finished with value: 0.10619856727304966 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 161, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:33,162] Trial 152 finished with value: 0.10257934203820929 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 61, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:33,551] Trial 153 finished with value: 0.5299824282615824 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:34,209] Trial 154 finished with value: 0.12303699709124476 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:35,026] Trial 155 finished with value: 0.10646434534553173 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 167, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:35,788] Trial 156 finished with value: 0.10257934203820929 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 61, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:36,886] Trial 157 finished with value: 0.10254892980891721 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:37,858] Trial 158 finished with value: 0.10252257968897598 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 66, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:38,737] Trial 159 finished with value: 0.1057271279252329 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 151, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:32:39,600] Trial 160 finished with value: 0.10291365216639585 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 80, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:35:12,665] Trial 134 finished with value: 0.1589334305798123 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 163, 'learning_rate': 0.0005604382784851304, 'p_miss': 0.25706277398958877}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:35:13,602] Trial 162 finished with value: 0.10822482871840908 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 220, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:35:14,550] Trial 163 finished with value: 0.1102620222215398 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 316, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:01,961] Trial 161 finished with value: 0.4203013900974155 and parameters: {'model_name': 'GAIN', 'batch_size': 41, 'hint_rate': 0.46901466833091, 'alpha': 34, 'iterations': 190, 'learning_rate': 0.005040074362528846, 'p_miss': 0.25476645994435543}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:02,710] Trial 165 finished with value: 0.10525393283960785 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 140, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:03,765] Trial 166 finished with value: 0.10257331602604884 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:04,608] Trial 167 finished with value: 0.1025550784482642 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 69, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:05,583] Trial 168 finished with value: 0.10427723158088634 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 119, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:06,378] Trial 169 finished with value: 0.10254418552916693 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 73, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:07,376] Trial 170 finished with value: 0.10499117260127969 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 134, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:08,163] Trial 171 finished with value: 0.12344181521222874 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'uniform'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:09,191] Trial 172 finished with value: 0.10866287434688435 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 236, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:10,041] Trial 173 finished with value: 0.1035428995427798 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 101, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:10,938] Trial 174 finished with value: 0.10729811446457956 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 188, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:11,640] Trial 175 finished with value: 0.15954413909306464 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:12,468] Trial 176 finished with value: 0.10250679370924085 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 68, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:13,349] Trial 177 finished with value: 0.1025550784482642 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 69, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:14,456] Trial 178 finished with value: 0.10424776853570121 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 118, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:15,485] Trial 179 finished with value: 0.117258246889177 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 832, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:16,257] Trial 180 finished with value: 0.10244023083675666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 57, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:17,159] Trial 181 finished with value: 0.10427723158088634 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 119, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:18,265] Trial 182 finished with value: 0.1202214331834617 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1295, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:19,093] Trial 183 finished with value: 0.10265113159839048 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 59, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:19,387] Trial 184 finished with value: 0.13272331578975036 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:20,331] Trial 185 finished with value: 0.10680226629025742 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 175, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:21,060] Trial 186 finished with value: 0.10246750431707403 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 56, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:22,216] Trial 187 finished with value: 0.1023776747971584 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 50, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:22,987] Trial 188 finished with value: 0.12824173252227947 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:23,889] Trial 189 finished with value: 0.10385266017760289 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 108, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:24,849] Trial 190 finished with value: 0.10244023083675666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 57, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:30,598] Trial 191 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.4967962131292057, 'alpha': 61, 'iterations': 20, 'learning_rate': 0.018558416727317156, 'p_miss': 0.09585957150005714}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:31,512] Trial 192 finished with value: 0.10549164817113228 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 144, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:32,417] Trial 193 finished with value: 0.10295333337039289 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 40, 'weights': 'uniform'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:33,192] Trial 194 finished with value: 0.10759495141166595 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 198, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:34,151] Trial 195 finished with value: 0.10914133802506487 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 259, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:34,729] Trial 196 finished with value: 0.10272930930095334 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 76, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:37:35,340] Trial 197 finished with value: 0.19756612007775423 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:38:29,318] Trial 164 finished with value: 0.424552893638776 and parameters: {'model_name': 'GAIN', 'batch_size': 43, 'hint_rate': 0.48980258875663935, 'alpha': 35, 'iterations': 184, 'learning_rate': 0.0045552384797116026, 'p_miss': 0.0870617279192173}. Best is trial 132 with value: 0.1023756279401093.
running
[I 2024-10-26 01:38:37,248] Trial 199 finished with value: 0.1749936057672749 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.09619010235146774, 'p_miss': 0.01491271755090906}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 01:41:45,715] Trial 77 finished with value: 0.44341457759431524 and parameters: {'model_name': 'GAIN', 'batch_size': 800, 'hint_rate': 0.48006314125173044, 'alpha': 12, 'iterations': 4938, 'learning_rate': 0.00010476721846209514, 'p_miss': 0.29459407466121157}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 01:46:34,822] Trial 70 finished with value: 0.4517939593679152 and parameters: {'model_name': 'GAIN', 'batch_size': 908, 'hint_rate': 0.09888566317710096, 'alpha': 4, 'iterations': 5437, 'learning_rate': 0.00010996929668684748, 'p_miss': 0.2988041103923095}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:05:10,763] Trial 33 finished with value: 0.14286272363209915 and parameters: {'model_name': 'VAE', 'batch_size': 750, 'iterations': 2904, 'learning_rate': 0.00012123459098221698, 'p_miss': 0.012576043919801189}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:26:56,765] Trial 73 finished with value: 0.44057961860215505 and parameters: {'model_name': 'GAIN', 'batch_size': 832, 'hint_rate': 0.027686137826461676, 'alpha': 1, 'iterations': 7324, 'learning_rate': 0.00011785849153110587, 'p_miss': 0.2984609381319453}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:27:43,059] Trial 31 finished with value: 0.15616612665660712 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 5474, 'learning_rate': 0.0003598247916762389, 'p_miss': 0.20414179185326065}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:35:30,118] Trial 100 finished with value: 0.14705642211288739 and parameters: {'model_name': 'VAE', 'batch_size': 93, 'iterations': 3843, 'learning_rate': 0.09968348776758666, 'p_miss': 0.14146464464316316}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:36:50,879] Trial 32 finished with value: 0.14288519472013977 and parameters: {'model_name': 'VAE', 'batch_size': 680, 'iterations': 4148, 'learning_rate': 0.0924318975676121, 'p_miss': 0.2820342589294252}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:38:46,920] Trial 103 finished with value: 0.4414871863127572 and parameters: {'model_name': 'GAIN', 'batch_size': 71, 'hint_rate': 0.4780975869918264, 'alpha': 32, 'iterations': 6469, 'learning_rate': 0.0005659965962661553, 'p_miss': 0.14841955356603087}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:42:46,833] Trial 71 finished with value: 0.43988537588608445 and parameters: {'model_name': 'GAIN', 'batch_size': 961, 'hint_rate': 0.0667329814135299, 'alpha': 1, 'iterations': 9060, 'learning_rate': 0.00012972509002087516, 'p_miss': 0.1697992352699803}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:44:34,098] Trial 114 finished with value: 0.1442016348716748 and parameters: {'model_name': 'VAE', 'batch_size': 86, 'iterations': 3055, 'learning_rate': 0.09238349835908097, 'p_miss': 0.1347865083431593}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:45:33,319] Trial 69 finished with value: 0.44619429613278927 and parameters: {'model_name': 'GAIN', 'batch_size': 953, 'hint_rate': 0.12802526382261586, 'alpha': 2, 'iterations': 9326, 'learning_rate': 0.00011958704037101936, 'p_miss': 0.29906717290840534}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:46:26,859] Trial 72 finished with value: 0.46135229963072966 and parameters: {'model_name': 'GAIN', 'batch_size': 924, 'hint_rate': 0.06777510536069586, 'alpha': 10, 'iterations': 9887, 'learning_rate': 0.00016112213208008242, 'p_miss': 0.29271548757313054}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:47:00,692] Trial 198 finished with value: 0.17493338755746726 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 3098, 'learning_rate': 0.09249701239502109, 'p_miss': 0.2237105286361057}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:47:34,324] Trial 102 finished with value: 0.4322599341939758 and parameters: {'model_name': 'GAIN', 'batch_size': 102, 'hint_rate': 0.4964345014288978, 'alpha': 34, 'iterations': 9953, 'learning_rate': 0.00011545800134403327, 'p_miss': 0.29799765804393374}. Best is trial 132 with value: 0.1023756279401093.
[I 2024-10-26 02:50:56,914] Trial 34 finished with value: 0.14249282368268165 and parameters: {'model_name': 'VAE', 'batch_size': 889, 'iterations': 6357, 'learning_rate': 0.07887269317200178, 'p_miss': 0.01289870631209905}. Best is trial 132 with value: 0.1023756279401093.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.1023756279401093
{'model_name': 'KNNImputer', 'n_neighbors': 49, 'weights': 'distance'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8284838461365641
Generation:   4%|▍         | 1/25 [00:07<03:09,  7.90s/it]Generation:  2
Best f1_score score: 0.8284838461365641
Generation:   8%|▊         | 2/25 [00:24<05:05, 13.30s/it]Generation:  3
Best f1_score score: 0.8284838461365641
Generation:  12%|█▏        | 3/25 [01:31<13:50, 37.75s/it]Generation:  4
Best f1_score score: 0.8284838461365641
Generation:  16%|█▌        | 4/25 [01:46<10:01, 28.66s/it]Generation:  5
Best f1_score score: 0.8284838461365641
Generation:  20%|██        | 5/25 [02:03<08:10, 24.51s/it]Generation:  6
Best f1_score score: 0.8339672683821803
Generation:  24%|██▍       | 6/25 [02:28<07:50, 24.74s/it]Generation:  7
Best f1_score score: 0.8339672683821803
Generation:  28%|██▊       | 7/25 [02:45<06:35, 21.99s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f3ec20> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  8
Best f1_score score: 0.8339672683821803
Generation:  32%|███▏      | 8/25 [03:06<06:11, 21.84s/it]Generation:  9
Best f1_score score: 0.8339672683821803
Generation:  36%|███▌      | 9/25 [03:41<06:52, 25.81s/it]Generation:  10
Best f1_score score: 0.8339672683821803
Generation:  40%|████      | 10/25 [03:56<05:40, 22.69s/it]Generation:  11
Best f1_score score: 0.8339672683821803
Generation:  44%|████▍     | 11/25 [04:23<05:32, 23.74s/it]Generation:  12
Best f1_score score: 0.8339672683821803
Generation:  48%|████▊     | 12/25 [05:00<06:03, 27.93s/it]Generation:  13
Best f1_score score: 0.8339672683821803
Generation:  52%|█████▏    | 13/25 [05:19<05:02, 25.20s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465ce9f60> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  14
Best f1_score score: 0.8339672683821803
Generation:  56%|█████▌    | 14/25 [05:42<04:30, 24.57s/it]Generation:  15
Best f1_score score: 0.8339672683821803
Generation:  60%|██████    | 15/25 [06:06<04:02, 24.22s/it]Generation:  16
Best f1_score score: 0.8339672683821803
Generation:  64%|██████▍   | 16/25 [06:39<04:02, 26.97s/it]Generation:  17
Best f1_score score: 0.8339672683821803
Generation:  68%|██████▊   | 17/25 [06:59<03:18, 24.80s/it]Generation:  18
Best f1_score score: 0.8339672683821803
Generation:  72%|███████▏  | 18/25 [07:33<03:13, 27.62s/it]Generation:  19
Best f1_score score: 0.8339672683821803
Generation:  76%|███████▌  | 19/25 [08:47<04:10, 41.71s/it]Generation:  20
Best f1_score score: 0.8339672683821803
Generation:  80%|████████  | 20/25 [09:39<03:42, 44.59s/it]Generation:  21
Best f1_score score: 0.8339672683821803
Generation:  84%|████████▍ | 21/25 [10:41<03:20, 50.03s/it]Generation:  22
Best f1_score score: 0.8339672683821803
Generation:  88%|████████▊ | 22/25 [12:46<03:37, 72.51s/it]Generation:  23
Best f1_score score: 0.8339672683821803
Generation:  92%|█████████▏| 23/25 [14:01<02:26, 73.15s/it]Generation:  24
Best f1_score score: 0.8339672683821803
Generation:  96%|█████████▌| 24/25 [15:01<01:09, 69.27s/it]Generation:  25
Best f1_score score: 0.8339672683821803
Generation: 100%|██████████| 25/25 [16:07<00:00, 68.12s/it]Generation: 100%|██████████| 25/25 [16:11<00:00, 38.84s/it]
2024-10-26 03:07:24,684 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42575' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-7b6fc617dd05d203241cbe51581f2cec', 'ndarray-bc1ee22df90b340c13f4c4b70d48b351'} (stimulus_id='handle-worker-cleanup-1729937244.6843917')
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.0021996183384, hidden_layer_sizes=[505],
                               learning_rate='invscaling',
                               learning_rate_init=0.0270378563232,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9064471703344399, 'accuracy': 0.8148893360160966, 'balanced_accuracy': 0.8139123387980691, 'logloss': 0.4320126671141092, 'f1': 0.8115045076658022}
original test score: {'auroc': 0.9265964926792952, 'accuracy': 0.8263665594855305, 'balanced_accuracy': 0.825047563901067, 'logloss': 0.3933673115430032, 'f1': 0.8226535439722902}
imputed test score: {'auroc': 0.9129270411117544, 'accuracy': 0.8135048231511254, 'balanced_accuracy': 0.8122156505914468, 'logloss': 0.4168339500267277, 'f1': 0.8096956269451918}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d24e80> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.8038296774457795
Generation:   4%|▍         | 1/25 [02:21<56:43, 141.82s/it]Generation:  2
Best f1_score score: 0.8094570843929926
Generation:   8%|▊         | 2/25 [05:49<1:09:11, 180.50s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d75480> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  3
Best f1_score score: 0.822433389548998
Generation:  12%|█▏        | 3/25 [09:18<1:10:59, 193.59s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474288970> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.8231556729851555
Generation:  16%|█▌        | 4/25 [10:15<48:49, 139.50s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745ce890> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

malloc(): invalid next size (unsorted)
2024-10-26 03:18:35,861 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554573c93f0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

malloc(): invalid next size (unsorted)
2024-10-26 03:19:16,448 - distributed.scheduler - ERROR - Task eval_objective_list-916afc72802fd8ed3b4dd1c2a28bf7b3 marked as failed because 2 workers died while trying to run it
Exception in future
Attempted to run task 'eval_objective_list-916afc72802fd8ed3b4dd1c2a28bf7b3' on 2 different workers, but all those workers died while running it. The last worker that attempt to run the task was tcp://127.0.0.1:44343. Inspecting worker logs is often a good next step to diagnose what went wrong. For more information see https://distributed.dask.org/en/stable/killed.html.
2024-10-26 03:19:16,453 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Generation:  5
Best f1_score score: 0.8247784580112736
Generation:  20%|██        | 5/25 [13:44<54:53, 164.67s/it]Generation:  6
Best f1_score score: 0.8280509026021333
Generation:  24%|██▍       | 6/25 [17:15<57:11, 180.59s/it]Generation:  7
Best f1_score score: 0.8280509026021333
Generation:  28%|██▊       | 7/25 [20:47<57:14, 190.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fb6ba00> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  8
Best f1_score score: 0.8365617708754407
Generation:  32%|███▏      | 8/25 [24:19<55:56, 197.46s/it]Generation:  9
Best f1_score score: 0.8365617708754407
Generation:  36%|███▌      | 9/25 [29:13<1:00:41, 227.60s/it]Generation:  10
Best f1_score score: 0.8365617708754407
Generation:  40%|████      | 10/25 [32:44<55:38, 222.58s/it] Generation:  11
Best f1_score score: 0.8365617708754407
Generation:  44%|████▍     | 11/25 [36:16<51:10, 219.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452c6d240> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.8365617708754407
Generation:  48%|████▊     | 12/25 [39:47<46:58, 216.83s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15542fb94a30> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.8365617708754407
Generation:  52%|█████▏    | 13/25 [43:20<43:06, 215.55s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fd2d1e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.8365617708754407
Generation:  56%|█████▌    | 14/25 [46:52<39:19, 214.49s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452cd8610> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.8365617708754407
Generation:  60%|██████    | 15/25 [50:25<35:40, 214.01s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474160310> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.8365617708754407
Generation:  64%|██████▍   | 16/25 [54:00<32:09, 214.40s/it]Generation:  17
Best f1_score score: 0.8369489968007826
Generation:  68%|██████▊   | 17/25 [57:32<28:29, 213.75s/it]Generation:  18
Best f1_score score: 0.8369489968007826
Generation:  72%|███████▏  | 18/25 [1:01:13<25:10, 215.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547415b190> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452a265f0> 

Generation:  19
Best f1_score score: 0.8369489968007826
Generation:  76%|███████▌  | 19/25 [1:11:21<33:22, 333.67s/it]Generation:  20
Best f1_score score: 0.8369489968007826
Generation:  80%|████████  | 20/25 [1:15:00<24:56, 299.33s/it]Generation:  21
Best f1_score score: 0.8369489968007826
Generation:  84%|████████▍ | 21/25 [1:18:29<18:08, 272.05s/it]Generation:  22
Best f1_score score: 0.8377507914979135
Generation:  88%|████████▊ | 22/25 [1:22:02<12:43, 254.41s/it]Generation:  23
Best f1_score score: 0.8377507914979135
Generation:  92%|█████████▏| 23/25 [1:25:33<08:02, 241.27s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452ab1660> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.8377507914979135
Generation:  96%|█████████▌| 24/25 [1:29:51<04:06, 246.41s/it]Generation:  25
Best f1_score score: 0.8377507914979135
Generation: 100%|██████████| 25/25 [1:33:26<00:00, 236.95s/it]Generation: 100%|██████████| 25/25 [1:33:26<00:00, 224.26s/it]
2024-10-26 04:41:53,271 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:36645' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-a37dd5278a377f8cf90f4d6d65d1a05c', 'ndarray-bc1ee22df90b340c13f4c4b70d48b351'} (stimulus_id='handle-worker-cleanup-1729942913.2718043')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=RandomForestRegressor(),
                                  imputation_order='roman',
                                  n_nearest_features=54)),
                ('lineardiscriminantanalysis', LinearDiscriminantAnalysis())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.8944041520590574, 'accuracy': 0.8394366197183099, 'balanced_accuracy': 0.8391164566539442, 'logloss': 0.41429270073966407, 'f1': 0.8390613270138334}
test score: {'auroc': 0.8957936967491109, 'accuracy': 0.8295819935691319, 'balanced_accuracy': 0.8289457357928696, 'logloss': 0.40996629041597915, 'f1': 0.8286447937458417}
original test score: {'auroc': 0.9094321283811729, 'accuracy': 0.8408360128617364, 'balanced_accuracy': 0.8401542724791132, 'logloss': 0.38439485552255126, 'f1': 0.8398420736417475}
score end
737
lvl
0.1
type
MCAR
num_run
2
class_full
finished
all finished
full run takes
5.534913680222299
hours
DONE
