Run: 53
/cm/local/apps/slurm/var/spool/job1047416/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1496/1496.pkl
working on 
../data/c/1496/class_full_MAR_0.01_3
0.853823184967041
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-13 07:53:24,388] A new study created in memory with name: no-name-cc2ba551-b222-477b-a6c3-c9162dcf1a82
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-13 07:53:24,640] Trial 8 finished with value: 0.11412808179898701 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 8 with value: 0.11412808179898701.
running
[I 2024-11-13 07:53:25,092] Trial 6 finished with value: 0.43182737134191446 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 8 with value: 0.11412808179898701.
running
[I 2024-11-13 07:53:25,300] Trial 11 finished with value: 0.43182737134191446 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 8 with value: 0.11412808179898701.
[I 2024-11-13 07:53:25,388] Trial 13 finished with value: 0.43182737134191446 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 8 with value: 0.11412808179898701.
running
running
[I 2024-11-13 07:53:25,603] Trial 17 finished with value: 0.11405549872814735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 17 with value: 0.11405549872814735.
running
[I 2024-11-13 07:53:26,961] Trial 5 finished with value: 0.11412808179898701 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4668, 'weights': 'uniform'}. Best is trial 17 with value: 0.11405549872814735.
running
[I 2024-11-13 07:53:27,282] Trial 1 finished with value: 0.1139423472671901 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 701, 'weights': 'uniform'}. Best is trial 1 with value: 0.1139423472671901.
running
[I 2024-11-13 07:53:27,542] Trial 14 finished with value: 0.11397990418415291 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1005, 'weights': 'uniform'}. Best is trial 1 with value: 0.1139423472671901.
running
[I 2024-11-13 07:53:27,812] Trial 15 finished with value: 0.11392763595406445 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5584, 'weights': 'distance'}. Best is trial 15 with value: 0.11392763595406445.
[I 2024-11-13 07:53:27,929] Trial 22 finished with value: 0.43182737134191446 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 15 with value: 0.11392763595406445.
running
running
[I 2024-11-13 07:53:28,121] Trial 9 finished with value: 0.11413369326723191 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4329, 'weights': 'uniform'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:53:31,954] Trial 23 finished with value: 0.314076685281001 and parameters: {'model_name': 'GAIN', 'batch_size': 342, 'hint_rate': 0.5469067571513541, 'alpha': 61, 'iterations': 1, 'learning_rate': 0.01933019668019173, 'p_miss': 0.21300864448192586}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:53:32,145] Trial 16 finished with value: 0.1299999907442077 and parameters: {'model_name': 'VAE', 'batch_size': 81, 'iterations': 1, 'learning_rate': 0.010014870322793046, 'p_miss': 0.06898762908229934}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:53:38,817] Trial 7 finished with value: 0.31779162260088817 and parameters: {'model_name': 'GAIN', 'batch_size': 694, 'hint_rate': 0.1642046757743908, 'alpha': 37, 'iterations': 5, 'learning_rate': 0.01976302005039415, 'p_miss': 0.051076390791855046}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:53:39,348] Trial 10 finished with value: 0.11438148811450714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:53:42,352] Trial 2 finished with value: 0.2997746486678775 and parameters: {'model_name': 'GAIN', 'batch_size': 298, 'hint_rate': 0.9823133054898721, 'alpha': 61, 'iterations': 24, 'learning_rate': 0.0002611948520377779, 'p_miss': 0.28139346097692286}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:53:43,288] Trial 12 finished with value: 0.3159906327635769 and parameters: {'model_name': 'GAIN', 'batch_size': 438, 'hint_rate': 0.7975544696786185, 'alpha': 55, 'iterations': 9, 'learning_rate': 0.0028007661675263505, 'p_miss': 0.03034936349975173}. Best is trial 15 with value: 0.11392763595406445.
[I 2024-11-13 07:53:43,437] Trial 30 finished with value: 0.11393817713406813 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 623, 'weights': 'distance'}. Best is trial 15 with value: 0.11392763595406445.
running
running
[I 2024-11-13 07:53:45,830] Trial 31 finished with value: 0.11438577915808142 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 37, 'weights': 'distance'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:53:47,368] Trial 25 finished with value: 0.12530981699940352 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:53:48,196] Trial 33 finished with value: 0.11393942448472885 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2594, 'weights': 'distance'}. Best is trial 15 with value: 0.11392763595406445.
[I 2024-11-13 07:53:48,367] Trial 32 finished with value: 0.11394432426543114 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2652, 'weights': 'distance'}. Best is trial 15 with value: 0.11392763595406445.
running
running
[I 2024-11-13 07:53:52,668] Trial 36 finished with value: 0.11394168674581204 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2541, 'weights': 'distance'}. Best is trial 15 with value: 0.11392763595406445.
[I 2024-11-13 07:53:52,834] Trial 37 finished with value: 0.11394660658786009 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2757, 'weights': 'distance'}. Best is trial 15 with value: 0.11392763595406445.
running
running
[I 2024-11-13 07:53:54,215] Trial 19 finished with value: 0.11392798128236561 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:01,422] Trial 3 finished with value: 0.3095473124799357 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.781307921118095, 'alpha': 11, 'iterations': 92, 'learning_rate': 0.0014368549809995002, 'p_miss': 0.15727144902856116}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:01,774] Trial 40 finished with value: 0.11392836341120323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:03,588] Trial 4 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9169436134395497, 'alpha': 81, 'iterations': 261, 'learning_rate': 0.0468800649371761, 'p_miss': 0.2290265628320808}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:09,540] Trial 41 finished with value: 0.11392836341120323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:11,728] Trial 43 finished with value: 0.11392836341120323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:12,806] Trial 42 finished with value: 0.11392834222181389 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 19, 'imputation_order': 'random'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:15,272] Trial 24 finished with value: 0.3300636593416066 and parameters: {'model_name': 'GAIN', 'batch_size': 349, 'hint_rate': 0.5412915819345462, 'alpha': 79, 'iterations': 54, 'learning_rate': 0.052472726378533625, 'p_miss': 0.14727571745732648}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:21,869] Trial 44 finished with value: 0.11392834222181389 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 19, 'imputation_order': 'random'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:54:55,883] Trial 18 finished with value: 0.2935434560594593 and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.8774571663236767, 'alpha': 36, 'iterations': 234, 'learning_rate': 0.0022842168042429335, 'p_miss': 0.2778752332986976}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:55:14,159] Trial 29 finished with value: 0.12046843223272585 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:55:19,271] Trial 20 finished with value: 0.12773476143518053 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 201, 'learning_rate': 0.00013676921644417697, 'p_miss': 0.03527669683077282}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:55:24,252] Trial 27 finished with value: 0.16265577276662233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:56:08,218] Trial 21 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.18502915584945914, 'alpha': 56, 'iterations': 1320, 'learning_rate': 0.02904375237993215, 'p_miss': 0.15370514580967987}. Best is trial 15 with value: 0.11392763595406445.
running
[I 2024-11-13 07:56:27,798] Trial 47 finished with value: 0.11377567189072317 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 07:56:28,433] Trial 45 finished with value: 0.16408014025814788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 07:58:20,210] Trial 54 finished with value: 0.11389042245021028 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:00:22,115] Trial 56 finished with value: 0.11382045644739044 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:02:21,677] Trial 57 finished with value: 0.11389042245021028 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:04:00,945] Trial 58 finished with value: 0.11389179923347678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:05:40,661] Trial 59 finished with value: 0.11389179923347678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:07:20,223] Trial 60 finished with value: 0.11378739062083562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:09:13,375] Trial 61 finished with value: 0.11389042245021028 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:09:19,823] Trial 38 finished with value: 0.12887682174281562 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3834, 'learning_rate': 0.0002033419242073802, 'p_miss': 0.1490337735983261}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:16:34,733] Trial 35 finished with value: 0.1480577815931306 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8426, 'learning_rate': 0.00011092521874393984, 'p_miss': 0.15223218860379886}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:18:34,590] Trial 39 finished with value: 0.16075894816605016 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9252, 'learning_rate': 0.00011441019312626959, 'p_miss': 0.14008310175401475}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:22:43,100] Trial 26 finished with value: 0.11806032435680396 and parameters: {'model_name': 'VAE', 'batch_size': 790, 'iterations': 4900, 'learning_rate': 0.0004107572856659307, 'p_miss': 0.17675393557945168}. Best is trial 47 with value: 0.11377567189072317.
running
[I 2024-11-13 08:23:43,045] Trial 66 finished with value: 0.11377299535775087 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 66 with value: 0.11377299535775087.
running
[I 2024-11-13 08:24:42,675] Trial 67 finished with value: 0.11378739062083562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 66 with value: 0.11377299535775087.
running
[I 2024-11-13 08:25:30,516] Trial 68 finished with value: 0.11378739062083562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 66 with value: 0.11377299535775087.
running
[I 2024-11-13 09:30:25,801] Trial 0 finished with value: 0.11700293836547446 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 66 with value: 0.11377299535775087.
running
[I 2024-11-13 09:31:10,912] Trial 70 finished with value: 0.11378739062083562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 66 with value: 0.11377299535775087.
running
[I 2024-11-13 09:32:11,232] Trial 71 finished with value: 0.11378739062083562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 66 with value: 0.11377299535775087.
running
[I 2024-11-13 09:33:01,660] Trial 72 finished with value: 0.11374486914489537 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 72 with value: 0.11374486914489537.
running
[I 2024-11-13 09:33:52,341] Trial 73 finished with value: 0.11374486914489537 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 72 with value: 0.11374486914489537.
running
[I 2024-11-13 09:34:49,346] Trial 74 finished with value: 0.11374486914489537 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 72 with value: 0.11374486914489537.
running
[I 2024-11-13 10:18:25,930] Trial 69 finished with value: 0.11666576988834725 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 72 with value: 0.11374486914489537.
running
[I 2024-11-13 10:19:12,323] Trial 76 finished with value: 0.11395073196664587 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 72 with value: 0.11374486914489537.
running
[I 2024-11-13 10:19:52,642] Trial 77 finished with value: 0.11385701322673958 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 72 with value: 0.11374486914489537.
running
[I 2024-11-13 10:20:43,141] Trial 78 finished with value: 0.11379231917684866 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 72 with value: 0.11374486914489537.
running
[I 2024-11-13 10:21:28,059] Trial 79 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:21:28,262] Trial 80 finished with value: 0.5422402364326193 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:25:17,100] Trial 28 finished with value: 0.11568945027283344 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:26:15,504] Trial 82 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:27:04,260] Trial 83 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:27:32,900] Trial 84 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:27:33,108] Trial 85 finished with value: 0.5422402364326193 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:27:51,365] Trial 86 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:28:28,279] Trial 87 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:29:19,595] Trial 88 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:29:24,329] Trial 89 finished with value: 0.12486962253707083 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:29:40,484] Trial 90 finished with value: 0.3276850923973641 and parameters: {'model_name': 'GAIN', 'batch_size': 57, 'hint_rate': 0.32623400009397985, 'alpha': 3, 'iterations': 1120, 'learning_rate': 0.0007553015059515005, 'p_miss': 0.08814263073091691}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 10:30:23,990] Trial 91 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:01:02,119] Trial 63 finished with value: 0.11555886989858788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:01:17,948] Trial 62 finished with value: 0.11580832277516011 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:01:42,353] Trial 93 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:01:59,316] Trial 94 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:02:04,830] Trial 95 finished with value: 0.1243398680797663 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:02:20,832] Trial 96 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:02:25,313] Trial 97 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:02:47,609] Trial 98 finished with value: 0.1139760276689203 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:02:48,194] Trial 100 finished with value: 0.31105340580202634 and parameters: {'model_name': 'GAIN', 'batch_size': 86, 'hint_rate': 0.0202082226241449, 'alpha': 94, 'iterations': 4, 'learning_rate': 0.00842799963531185, 'p_miss': 0.09666411785114651}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:02:53,966] Trial 99 finished with value: 0.11389802946715646 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:03:31,344] Trial 101 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:03:44,484] Trial 102 finished with value: 0.1362749503706228 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 684, 'learning_rate': 0.09127626446996512, 'p_miss': 0.24177443891774464}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:03:44,663] Trial 104 finished with value: 0.11412808179898701 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:04:32,089] Trial 105 finished with value: 0.16363264410108005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:05:10,317] Trial 103 finished with value: 0.12923322324461076 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1203, 'learning_rate': 0.08819709224205152, 'p_miss': 0.2368277737007482}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:05:11,048] Trial 106 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:05:48,891] Trial 107 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:05:50,024] Trial 108 finished with value: 0.16426797543790278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:06:05,840] Trial 110 finished with value: 0.1137209733659634 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:06:26,471] Trial 109 finished with value: 0.16426797543790278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:06:50,638] Trial 111 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:07:00,128] Trial 113 finished with value: 0.11386151962896911 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:07:02,538] Trial 112 finished with value: 0.11386917203798212 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:07:29,012] Trial 115 finished with value: 0.12246379037103813 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:07:41,833] Trial 114 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:08:03,607] Trial 116 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:08:14,188] Trial 117 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:08:43,119] Trial 118 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:08:43,314] Trial 119 finished with value: 0.11401835074802066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:08:45,817] Trial 121 finished with value: 0.11407344894545343 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3940, 'weights': 'uniform'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:09:11,520] Trial 120 finished with value: 0.11401835074802066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:09:34,265] Trial 122 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:09:34,816] Trial 124 finished with value: 0.31635584612435663 and parameters: {'model_name': 'GAIN', 'batch_size': 32, 'hint_rate': 0.38904652350565194, 'alpha': 31, 'iterations': 17, 'learning_rate': 0.004663435969180995, 'p_miss': 0.01626701181699014}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:11:52,662] Trial 48 finished with value: 0.11500822094374061 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:12:37,570] Trial 126 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:13:08,679] Trial 51 finished with value: 0.11564569931366228 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:13:16,435] Trial 52 finished with value: 0.11552009132600576 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:13:20,026] Trial 127 finished with value: 0.11378328720014974 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:13:42,388] Trial 128 finished with value: 0.11378328720014974 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:13:48,001] Trial 129 finished with value: 0.11378328720014974 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:13:54,480] Trial 131 finished with value: 0.11378360835148779 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:13:56,132] Trial 130 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:13:56,624] Trial 134 finished with value: 0.11405549872814735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:00,645] Trial 132 finished with value: 0.1139176735734353 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:18,586] Trial 135 finished with value: 0.11392248140278845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:19,673] Trial 133 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:21,506] Trial 136 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:23,542] Trial 50 finished with value: 0.11572158958714596 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:37,138] Trial 64 finished with value: 0.11584136632829833 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:47,743] Trial 49 finished with value: 0.11529902424011015 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:49,303] Trial 137 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:51,113] Trial 138 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:52,812] Trial 143 finished with value: 0.11412808179898701 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5884, 'weights': 'uniform'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:54,702] Trial 145 finished with value: 0.13864792569359213 and parameters: {'model_name': 'VAE', 'batch_size': 176, 'iterations': 2, 'learning_rate': 0.0015857420718471535, 'p_miss': 0.1079059449606721}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:55,936] Trial 144 finished with value: 0.11397294529260951 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1671, 'weights': 'uniform'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:56,695] Trial 139 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:14:58,987] Trial 140 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:12,369] Trial 141 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:21,901] Trial 142 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:23,787] Trial 146 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:26,188] Trial 147 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:30,766] Trial 151 finished with value: 0.11405106807995982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:32,215] Trial 152 finished with value: 0.11405106807995982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:33,485] Trial 148 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:34,691] Trial 149 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:38,192] Trial 155 finished with value: 0.3028227924511008 and parameters: {'model_name': 'GAIN', 'batch_size': 30, 'hint_rate': 0.6496008357380633, 'alpha': 20, 'iterations': 45, 'learning_rate': 0.0007559648831196407, 'p_miss': 0.2993329574695059}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:47,851] Trial 150 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:58,291] Trial 153 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:15:58,953] Trial 157 finished with value: 0.11401835074802066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:16:01,563] Trial 154 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:16:07,303] Trial 156 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:16:19,646] Trial 53 finished with value: 0.1159522122538851 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:16:42,163] Trial 158 finished with value: 0.11376482917641817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:16:47,327] Trial 159 finished with value: 0.11401835074802066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:16:48,596] Trial 162 finished with value: 0.12309212709419826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:17:07,555] Trial 160 finished with value: 0.12270914384094096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:17:08,140] Trial 161 finished with value: 0.12270914384094096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:17:17,974] Trial 163 finished with value: 0.12282898572493187 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:17:18,417] Trial 170 finished with value: 0.11412808179898701 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:17:26,755] Trial 164 finished with value: 0.12282898572493187 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:17:29,921] Trial 165 finished with value: 0.12309212709419826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:17:37,472] Trial 166 finished with value: 0.1240244131851314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:17:59,226] Trial 167 finished with value: 0.16426797543790278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:01,082] Trial 171 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:04,936] Trial 168 finished with value: 0.16426797543790278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:05,614] Trial 169 finished with value: 0.16426797543790278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:12,773] Trial 172 finished with value: 0.16426797543790278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:17,805] Trial 173 finished with value: 0.16426797543790278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:23,049] Trial 174 finished with value: 0.16426797543790278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:44,027] Trial 65 finished with value: 0.11550655899467513 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:51,723] Trial 176 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:52,869] Trial 178 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:18:56,151] Trial 177 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:19:04,359] Trial 179 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:19:13,427] Trial 180 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:19:26,412] Trial 181 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:20:14,350] Trial 182 finished with value: 0.11391094731407728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:20:32,303] Trial 187 finished with value: 0.1184557488394995 and parameters: {'model_name': 'VAE', 'batch_size': 158, 'iterations': 113, 'learning_rate': 0.00542199867211218, 'p_miss': 0.19362889787045331}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:20:43,111] Trial 188 finished with value: 0.11942474601109057 and parameters: {'model_name': 'VAE', 'batch_size': 147, 'iterations': 121, 'learning_rate': 0.0005952378951880412, 'p_miss': 0.19610052651427973}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:20:44,570] Trial 175 finished with value: 0.12137136096436059 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 483, 'learning_rate': 0.006722240802559216, 'p_miss': 0.18882360046856717}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:20:46,804] Trial 189 finished with value: 0.12221687557718652 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 104, 'learning_rate': 0.007246670424602965, 'p_miss': 0.19464530470095023}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:21:36,050] Trial 190 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:21:44,504] Trial 192 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:21:44,975] Trial 191 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:21:48,826] Trial 193 finished with value: 0.11376544638724637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:21:50,013] Trial 195 finished with value: 0.298673952998536 and parameters: {'model_name': 'GAIN', 'batch_size': 42, 'hint_rate': 0.013201120126799193, 'alpha': 75, 'iterations': 17, 'learning_rate': 0.00032646816920524916, 'p_miss': 0.28198340686430523}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:22:38,639] Trial 194 finished with value: 0.1139006870217147 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
running
[I 2024-11-13 11:22:49,433] Trial 196 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:22:52,082] Trial 197 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:22:56,321] Trial 198 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:23:16,022] Trial 184 finished with value: 0.11837003673829187 and parameters: {'model_name': 'VAE', 'batch_size': 173, 'iterations': 488, 'learning_rate': 0.005969169115519132, 'p_miss': 0.187203121653668}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:23:31,166] Trial 199 finished with value: 0.11371433451169229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:23:35,416] Trial 183 finished with value: 0.11835874332870902 and parameters: {'model_name': 'VAE', 'batch_size': 169, 'iterations': 482, 'learning_rate': 0.00819294911505984, 'p_miss': 0.19822663550249076}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:25:31,313] Trial 186 finished with value: 0.12309425632433864 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 2569, 'learning_rate': 0.0063561193377279996, 'p_miss': 0.20267313366242576}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:25:31,596] Trial 185 finished with value: 0.12441507334305375 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 2850, 'learning_rate': 0.006564783090581176, 'p_miss': 0.20879661194792928}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:28:26,809] Trial 75 finished with value: 0.11678477502157561 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:32:32,379] Trial 55 finished with value: 0.11596676910188349 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 11:44:31,847] Trial 46 finished with value: 0.11564794754543581 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 12:00:32,427] Trial 81 finished with value: 0.11685430305040272 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 12:06:36,949] Trial 92 finished with value: 0.11665618123163168 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 12:26:13,932] Trial 34 finished with value: 0.11455399893162559 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 19, 'imputation_order': 'arabic'}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 12:27:42,384] Trial 123 finished with value: 0.11798620238538252 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.11371433451169229.
[I 2024-11-13 12:52:08,065] Trial 125 finished with value: 0.11683659111199499 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 79 with value: 0.11371433451169229.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0.11371433451169229
{'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9787095345397996
Generation:   4%|▍         | 1/25 [02:07<50:54, 127.26s/it]Generation:  2
Best f1_score score: 0.9787095345397996
Generation:   8%|▊         | 2/25 [02:48<29:26, 76.80s/it] Generation:  3
Best f1_score score: 0.9787095345397996
Generation:  12%|█▏        | 3/25 [06:11<49:15, 134.35s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546fbddf00> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  4
Best f1_score score: 0.9787095345397996
Generation:  16%|█▌        | 4/25 [06:25<30:26, 86.96s/it] Generation:  5
Best f1_score score: 0.9787095345397996
Generation:  20%|██        | 5/25 [06:41<20:24, 61.21s/it]Generation:  6
Best f1_score score: 0.9787095345397996
Generation:  24%|██▍       | 6/25 [07:09<15:51, 50.09s/it]Generation:  7
Best f1_score score: 0.9787095345397996
Generation:  28%|██▊       | 7/25 [07:32<12:20, 41.14s/it]Generation:  8
Best f1_score score: 0.9787095345397996
Generation:  32%|███▏      | 8/25 [07:51<09:40, 34.14s/it]Generation:  9
Best f1_score score: 0.9787095345397996
Generation:  36%|███▌      | 9/25 [08:09<07:45, 29.10s/it]Generation:  10
Best f1_score score: 0.9787095345397996
Generation:  40%|████      | 10/25 [08:30<06:37, 26.47s/it]Generation:  11
Best f1_score score: 0.9787095345397996
Generation:  44%|████▍     | 11/25 [08:53<05:57, 25.53s/it]Generation:  12
Best f1_score score: 0.9787095345397996
Generation:  48%|████▊     | 12/25 [09:47<07:22, 34.01s/it]Generation:  13
Best f1_score score: 0.9787095345397996
Generation:  52%|█████▏    | 13/25 [11:11<09:52, 49.35s/it]Generation:  14
Best f1_score score: 0.9787095345397996
Generation:  56%|█████▌    | 14/25 [12:10<09:34, 52.25s/it]Generation:  15
Best f1_score score: 0.9787095345397996
Generation:  60%|██████    | 15/25 [12:36<07:22, 44.21s/it]Generation:  16
Best f1_score score: 0.9787095345397996
Generation:  64%|██████▍   | 16/25 [13:02<05:49, 38.83s/it]Generation:  17
Best f1_score score: 0.9787095345397996
Generation:  68%|██████▊   | 17/25 [13:25<04:32, 34.05s/it]Generation:  18
Best f1_score score: 0.9787095345397996
Generation:  72%|███████▏  | 18/25 [13:48<03:35, 30.73s/it]Generation:  19
Best f1_score score: 0.9787095345397996
Generation:  76%|███████▌  | 19/25 [15:36<05:22, 53.79s/it]Generation:  20
Best f1_score score: 0.9787095345397996
Generation:  80%|████████  | 20/25 [16:02<03:48, 45.69s/it]Generation:  21
Best f1_score score: 0.9787095345397996
Generation:  84%|████████▍ | 21/25 [19:21<06:05, 91.47s/it]Generation:  22
Best f1_score score: 0.9787095345397996
Generation:  88%|████████▊ | 22/25 [20:04<03:50, 76.96s/it]Generation:  23
Best f1_score score: 0.9787095345397996
Generation:  92%|█████████▏| 23/25 [20:34<02:05, 62.86s/it]Generation:  24
Best f1_score score: 0.9787095345397996
Generation:  96%|█████████▌| 24/25 [20:58<00:51, 51.20s/it]Generation:  25
Best f1_score score: 0.9787095345397996
Generation: 100%|██████████| 25/25 [21:25<00:00, 44.07s/it]Generation: 100%|██████████| 25/25 [21:28<00:00, 51.53s/it]
2024-11-13 13:13:47,196 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:40543' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-d6c38b232dc8e964449944c6e4e70f29', 'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8'} (stimulus_id='handle-worker-cleanup-1731532427.196739')
Fitted
Pipeline(steps=[('gaussiannb', GaussianNB())])
score start
train score: {'auroc': 0.997578177872488, 'accuracy': 0.9788851351351351, 'balanced_accuracy': 0.9787986976927456, 'logloss': 0.05750815160207321, 'f1': 0.9788779746055598}
original test score: {'auroc': 0.9974413342318798, 'accuracy': 0.9817567567567568, 'balanced_accuracy': 0.9816720268979511, 'logloss': 0.05283858780791405, 'f1': 0.9817506830934876}
imputed test score: {'auroc': 0.9974559447430468, 'accuracy': 0.9817567567567568, 'balanced_accuracy': 0.9816720268979511, 'logloss': 0.05277823629142167, 'f1': 0.9817506830934876}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155434ce0550>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9787097544662476
Generation:   4%|▍         | 1/25 [00:19<07:37, 19.08s/it]Generation:  2
Best f1_score score: 0.9787097544662476
Generation:   8%|▊         | 2/25 [01:00<12:15, 32.00s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474304eb0> 

Generation:  3
Best f1_score score: 0.9787097544662476
Generation:  12%|█▏        | 3/25 [11:02<1:47:18, 292.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474552170> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546598f5e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554740d8880> 

Generation:  4
Best f1_score score: 0.9787097544662476
Generation:  16%|█▌        | 4/25 [21:06<2:25:27, 415.58s/it]Generation:  5
Best f1_score score: 0.9788781017271215
Generation:  20%|██        | 5/25 [21:17<1:29:51, 269.60s/it]Generation:  6
Best f1_score score: 0.9788781017271215
Generation:  24%|██▍       | 6/25 [21:27<57:25, 181.34s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745f42e0> 

Generation:  7
Best f1_score score: 0.979047447140848
Generation:  28%|██▊       | 7/25 [31:32<1:35:56, 319.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bceffa0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474553760> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554596a8610> 

Generation:  8
Best f1_score score: 0.979047447140848
Generation:  32%|███▏      | 8/25 [41:37<1:56:21, 410.65s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d22ec0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745d4e50> 

Generation:  9
Best f1_score score: 0.979047447140848
Generation:  36%|███▌      | 9/25 [51:42<2:05:40, 471.30s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554677d4730> 

Generation:  10
Best f1_score score: 0.979047447140848
Generation:  40%|████      | 10/25 [1:01:47<2:08:06, 512.44s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745f2f50> 
 KNeighborsRegressor.predict() got an unexpected keyword argument 'return_std' 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/impute/_iterative.py", line 789, in fit_transform
    Xt, estimator = self._impute_one_feature(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/impute/_iterative.py", line 431, in _impute_one_feature
    mus, sigmas = estimator.predict(X_test, return_std=True)
TypeError: KNeighborsRegressor.predict() got an unexpected keyword argument 'return_std'

Generation:  11
Best f1_score score: 0.979047447140848
Generation:  44%|████▍     | 11/25 [1:03:35<1:30:41, 388.69s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474122e30> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467656680> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467449ab0> 

Generation:  12
Best f1_score score: 0.979047447140848
Generation:  48%|████▊     | 12/25 [1:13:38<1:38:20, 453.86s/it]Generation:  13
Best f1_score score: 0.979047447140848
Generation:  52%|█████▏    | 13/25 [1:14:02<1:04:43, 323.63s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459dfd8a0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545942bdc0> 

Generation:  14
Best f1_score score: 0.979047447140848
Generation:  56%|█████▌    | 14/25 [1:24:07<1:14:58, 408.91s/it]Generation:  15
Best f1_score score: 0.979047447140848
Generation:  60%|██████    | 15/25 [1:25:21<51:19, 307.95s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467cb7250> 

Generation:  16
Best f1_score score: 0.979047447140848
Generation:  64%|██████▍   | 16/25 [1:35:27<59:37, 397.53s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545994ad70> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554676567a0> 

Generation:  17
Best f1_score score: 0.979047447140848
Generation:  68%|██████▊   | 17/25 [1:45:33<1:01:20, 460.11s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745ba7d0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554525d11e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474624c10> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554595c0fd0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465be0610> 

Generation:  18
Best f1_score score: 0.979047447140848
Generation:  72%|███████▏  | 18/25 [1:55:37<58:44, 503.46s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465651030> 

Generation:  19
Best f1_score score: 0.979047447140848
Generation:  76%|███████▌  | 19/25 [2:05:43<53:25, 534.26s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745b8820> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546462b9d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546566ccd0> 

Generation:  20
Best f1_score score: 0.979047447140848
Generation:  80%|████████  | 20/25 [2:15:48<46:16, 555.34s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745f61d0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  21
Best f1_score score: 0.979047447140848
Generation:  84%|████████▍ | 21/25 [2:21:04<32:14, 483.72s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741e3250> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554651033d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467de04f0> 

Generation:  22
Best f1_score score: 0.979047447140848
Generation:  88%|████████▊ | 22/25 [2:31:08<25:59, 519.77s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554652bdcf0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545995b8e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465901a80> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554673f48b0> 

Generation:  23
Best f1_score score: 0.979047447140848
Generation:  92%|█████████▏| 23/25 [2:41:14<18:11, 545.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bb7c130> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.979047447140848
Generation:  96%|█████████▌| 24/25 [2:42:06<06:37, 397.33s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459f4b340> 

Generation:  25
Best f1_score score: 0.979047447140848
Generation: 100%|██████████| 25/25 [2:52:09<00:00, 459.14s/it]Generation: 100%|██████████| 25/25 [2:52:09<00:00, 413.17s/it]
2024-11-13 16:06:03,405 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42413' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8', 'DataFrame-74b68e230faaecda5481ddaaabc8bd28'} (stimulus_id='handle-worker-cleanup-1731542763.4049957')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='most_frequent')),
                ('gaussiannb', GaussianNB())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9975809173611556, 'accuracy': 0.9787162162162162, 'balanced_accuracy': 0.9786281074505074, 'logloss': 0.057481878613842234, 'f1': 0.9787088653119942}
test score: {'auroc': 0.9974541184291509, 'accuracy': 0.9817567567567568, 'balanced_accuracy': 0.9816720268979511, 'logloss': 0.05281316205068361, 'f1': 0.9817506830934876}
original test score: {'auroc': 0.9974413342318798, 'accuracy': 0.9817567567567568, 'balanced_accuracy': 0.9816720268979511, 'logloss': 0.05285323929631882, 'f1': 0.9817506830934876}
score end
1496
lvl
0.01
type
MAR
num_run
3
class_full
finished
all finished
full run takes
8.212683405213886
hours
DONE
