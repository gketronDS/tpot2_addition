Run: 6
/cm/local/apps/slurm/var/spool/job1046148/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1496/1496.pkl
          V1      V2      V3      V4      V5      V6      V7      V8      V9  \
0      849.0  2177.0   598.0  1689.0  3114.0 -3406.0  3799.0 -2642.0  1578.0   
1      947.0   543.0   782.0  -449.0    -8.0  1316.0   756.0   -61.0  1604.0   
2      759.0  -314.0   898.0 -1743.0  2003.0  1117.0   911.0   136.0  -489.0   
3      531.0  1374.0   517.0  1226.0  1122.0    -4.0 -1227.0  2277.0  1083.0   
4    -1443.0  1065.0  2071.0   207.0  -865.0  -786.0  2655.0  -366.0   971.0   
...      ...     ...     ...     ...     ...     ...     ...     ...     ...   
7395   607.0  1539.0   139.0  1378.0 -2178.0    -1.0   404.0  2064.0   653.0   
7396  -122.0 -1654.0  -395.0   278.0  -193.0  -463.0  1364.0    37.0  1998.0   
7397 -1854.0  1225.0 -2469.0  -351.0  1193.0 -3922.0 -2314.0  3565.0  2946.0   
7398  2604.0 -1541.0  1298.0  -742.0  -238.0 -1004.0   127.0  1056.0   -27.0   
7399  -239.0   472.0  2795.0 -1672.0  -802.0   594.0 -1449.0   336.0  -922.0   

         V10     V11     V12     V13     V14     V15     V16     V17     V18  \
0     -181.0  -212.0  1633.0  4664.0  1081.0 -1172.0  -166.0   578.0  1664.0   
1     1686.0   264.0  -382.0  1259.0   608.0 -2292.0  1008.0  2687.0 -1422.0   
2     -144.0   982.0   112.0   598.0   474.0  2026.0  1431.0  -336.0    79.0   
3      888.0  -111.0  1063.0  2454.0   587.0  -744.0  1216.0   916.0  -476.0   
4     -341.0   221.0  4195.0  -117.0 -2694.0    14.0  4097.0  1356.0  -944.0   
...      ...     ...     ...     ...     ...     ...     ...     ...     ...   
7395  -631.0   257.0   783.0  1106.0  1264.0    57.0  -413.0   136.0  -509.0   
7396  2278.0  -653.0 -1856.0   136.0  4604.0 -1117.0 -5735.0   173.0  1505.0   
7397  1463.0 -1851.0  2214.0 -1199.0 -1152.0 -1815.0  1051.0 -2244.0  2871.0   
7398    33.0  -281.0    45.0   241.0  -635.0  1274.0   157.0   602.0   606.0   
7399 -1783.0   736.0  1477.0  3247.0   777.0  1298.0  -277.0 -3445.0 -2969.0   

         V19     V20  
0      309.0 -3028.0  
1     -606.0  2374.0  
2     1123.0   302.0  
3        6.0  -477.0  
4     -602.0  2348.0  
...      ...     ...  
7395  1423.0  1142.0  
7396 -1098.0 -5196.0  
7397 -3462.0  1619.0  
7398   573.0  -751.0  
7399  -132.0  3362.0  

[7400 rows x 20 columns]
<class 'pandas.core.frame.DataFrame'>
          V1      V2      V3      V4      V5      V6      V7      V8      V9  \
4694  1052.0 -1689.0  -919.0   866.0   131.0 -1285.0  2793.0  -425.0  -315.0   
6869 -4222.0  -985.0  1183.0   -71.0  -246.0  2918.0  -226.0  2071.0  -726.0   
6212  3082.0  1383.0 -2261.0  -936.0   482.0   158.0  1591.0    97.0  -734.0   
4868 -2444.0 -3471.0 -2072.0  -743.0   497.0  -802.0    -8.0 -5037.0 -2869.0   
3642   611.0 -5379.0  -735.0    55.0    13.0 -1857.0   917.0  -813.0  2156.0   
...      ...     ...     ...     ...     ...     ...     ...     ...     ...   
3328  4302.0 -2002.0  4864.0   781.0 -1975.0 -2929.0 -1841.0 -3646.0 -1118.0   
1831    47.0   704.0    -6.0  -421.0  2516.0    72.0    46.0   926.0   953.0   
3076 -2782.0  3217.0 -1741.0  3401.0  1415.0 -3585.0 -2626.0  1105.0 -2116.0   
6847    75.0  1087.0 -1783.0  -224.0 -1639.0 -1758.0   801.0   501.0   563.0   
5018    23.0 -1593.0   364.0 -1361.0  -318.0   -69.0   -38.0  -323.0  -489.0   

         V10     V11     V12     V13     V14     V15     V16     V17     V18  \
4694   542.0   984.0   542.0   712.0  1056.0    96.0   -19.0  -811.0  1896.0   
6869   408.0  -564.0  1423.0   292.0   586.0  2853.0 -1307.0   249.0  1441.0   
6212   969.0   805.0  -203.0  -484.0   818.0  -277.0  3133.0  1578.0   502.0   
4868   343.0   515.0 -1044.0  2108.0 -2012.0  1881.0   967.0 -1364.0  1763.0   
3642  2214.0   468.0  1466.0 -3329.0  2457.0  4587.0 -1118.0   792.0 -3052.0   
...      ...     ...     ...     ...     ...     ...     ...     ...     ...   
3328  -931.0 -1426.0    96.0 -1396.0   339.0 -1143.0 -2244.0  2706.0   -76.0   
1831  1529.0   875.0   767.0   983.0   923.0  1172.0  1469.0   233.0    52.0   
3076 -4736.0   449.0    38.0    53.0  -116.0    72.0    24.0  1842.0  -929.0   
6847 -1029.0  3677.0  -132.0   -65.0 -1232.0 -3289.0 -3479.0  3067.0 -3824.0   
5018 -1184.0  1321.0  1681.0  1102.0   731.0    19.0  1184.0   457.0   168.0   

         V19     V20  
4694    29.0  -512.0  
6869  1675.0  3492.0  
6212   609.0  2972.0  
4868  -706.0   414.0  
3642 -1118.0 -1275.0  
...      ...     ...  
3328 -2705.0  2152.0  
1831   727.0    91.0  
3076  1846.0  2601.0  
6847  2792.0    28.0  
5018  1894.0  -259.0  

[5920 rows x 20 columns]
<class 'pandas.core.frame.DataFrame'>
            0         1         2         3         4         5         6   \
0     0.612338  0.387712  0.444119  0.543917  0.515574  0.413544  0.751742   
1     0.205142  0.437776  0.581101  0.475900  0.486363  0.720579  0.537111   
2     0.769070  0.606173  0.356663  0.413110  0.542771  0.518957  0.666288   
3     0.342418  0.260987  0.368980  0.427120  0.543933  0.448828  0.552609   
4     0.578289  0.125302  0.456109  0.485046  0.506431  0.371758  0.618371   
...        ...       ...       ...       ...       ...       ...       ...   
5915  0.863264  0.365453  0.820984  0.537747  0.352394  0.293447  0.422295   
5916  0.534744  0.557887  0.503617  0.450494  0.700372  0.512674  0.556448   
5917  0.316322  0.736595  0.390551  0.727933  0.615063  0.245526  0.366487   
5918  0.536905  0.585123  0.387814  0.464794  0.378429  0.378990  0.610124   
5919  0.532891  0.394538  0.527729  0.382259  0.480784  0.502374  0.550476   

            7         8         9         10        11        12        13  \
0     0.501709  0.510251  0.555722  0.585371  0.559495  0.578413  0.543582   
1     0.695649  0.479721  0.546143  0.482246  0.621599  0.547300  0.509011   
2     0.542269  0.479126  0.586246  0.573446  0.506979  0.489814  0.526076   
3     0.143357  0.320532  0.541497  0.554127  0.447695  0.681828  0.317911   
4     0.471562  0.693805  0.675245  0.550996  0.624630  0.279058  0.646635   
...        ...       ...       ...       ...       ...       ...       ...   
5915  0.251437  0.450602  0.450425  0.424822  0.528056  0.422254  0.490842   
5916  0.606682  0.604442  0.626278  0.578109  0.575356  0.598489  0.533799   
5917  0.620591  0.376467  0.178426  0.549730  0.523967  0.529595  0.457374   
5918  0.573660  0.575472  0.443420  0.764773  0.511984  0.520853  0.375285   
5919  0.509635  0.497326  0.432340  0.607821  0.639786  0.607304  0.519676   

            14        15        16        17        18        19  
0     0.505505  0.489644  0.443019  0.647217  0.571009  0.432783  
1     0.692878  0.394708  0.516948  0.615113  0.694955  0.711827  
2     0.480155  0.721972  0.609639  0.548861  0.614684  0.675587  
3     0.626818  0.562320  0.404450  0.637832  0.515663  0.497317  
4     0.810724  0.408639  0.554819  0.298102  0.484639  0.379608  
...        ...       ...       ...       ...       ...       ...  
5915  0.421299  0.325643  0.688311  0.508079  0.365136  0.618440  
5916  0.578633  0.599322  0.515832  0.517110  0.623569  0.474807  
5917  0.503874  0.492813  0.628051  0.447894  0.707831  0.649732  
5918  0.275452  0.234613  0.713489  0.243632  0.779066  0.470416  
5919  0.500272  0.578315  0.531455  0.525295  0.711446  0.450415  

[5920 rows x 20 columns]
<class 'numpy.ndarray'>
            0         1         2         3         4         5         6   \
0     0.511504  0.529797  0.460085  0.622024  0.732140  0.485280  0.566899   
1     0.533045  0.317807  0.433887  0.731925  0.426158  0.547301  0.265818   
2     0.361566  0.368013  0.503877  0.448098  0.355571  0.349697  0.511304   
3     0.477532  0.568340  0.506940  0.634437  0.448629  0.391044  0.318925   
4     0.734636  0.509316  0.545129  0.434233  0.458314  0.417927  0.544931   
...        ...       ...       ...       ...       ...       ...       ...   
1475  0.706841  0.583701  0.613294  0.511687  0.477762  0.579589  0.558510   
1476  0.580914  0.485279  0.504138  0.643510  0.804432  0.476879  0.648514   
1477  0.598749  0.451714  0.489280  0.550523  0.578336  0.477902  0.516778   
1478  0.349290  0.346608  0.450701  0.647140  0.448009  0.593761  0.560714   
1479  0.596665  0.662637  0.542978  0.603659  0.746707  0.258602  0.823262   

            7         8         9         10        11        12        13  \
0     0.455245  0.451567  0.525270  0.550063  0.539405  0.555449  0.425083   
1     0.600078  0.542044  0.498177  0.674905  0.637671  0.124824  0.326517   
2     0.528127  0.791636  0.459504  0.504097  0.367263  0.263279  0.556087   
3     0.476535  0.573540  0.423404  0.595630  0.599958  0.462034  0.354174   
4     0.553458  0.517011  0.520337  0.564186  0.599676  0.703385  0.582641   
...        ...       ...       ...       ...       ...       ...       ...   
1475  0.645765  0.658669  0.521553  0.511092  0.494431  0.591007  0.519088   
1476  0.550350  0.425271  0.551934  0.564986  0.415198  0.200237  0.426554   
1477  0.563636  0.580003  0.623204  0.425088  0.590723  0.507667  0.465612   
1478  0.673271  0.401946  0.542855  0.358870  0.530241  0.546559  0.507687   
1479  0.329448  0.650869  0.504039  0.505696  0.636402  0.871176  0.545421   

            14        15        16        17        18        19  
0     0.514000  0.594752  0.626029  0.371834  0.851883  0.391874  
1     0.374473  0.549495  0.454526  0.793198  0.566867  0.381142  
2     0.494631  0.446377  0.267820  0.524377  0.513780  0.602342  
3     0.631711  0.335004  0.649602  0.522331  0.598720  0.499617  
4     0.414843  0.522518  0.652950  0.517816  0.643072  0.587916  
...        ...       ...       ...       ...       ...       ...  
1475  0.503806  0.495541  0.535361  0.486206  0.723795  0.559621  
1476  0.285307  0.586202  0.479635  0.511113  0.705949  0.576695  
1477  0.572312  0.542493  0.513182  0.456572  0.593901  0.390550  
1478  0.456776  0.534975  0.309388  0.436887  0.618449  0.405812  
1479  0.419329  0.478809  0.539894  0.630847  0.592093  0.257440  

[1480 rows x 20 columns]
<class 'numpy.ndarray'>
working on 
../data/c/1496/class_full_MAR_0.1_1
0.9068474769592285
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-12 08:57:38,439] A new study created in memory with name: no-name-db5a877f-0c45-490a-b1ba-dd3a44f90689
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-12 08:57:38,732] Trial 3 finished with value: 0.5155335135846146 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.5155335135846146.
running
[I 2024-11-12 08:57:38,938] Trial 1 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:39,070] Trial 13 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:39,254] Trial 12 finished with value: 0.5155335135846146 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:39,476] Trial 16 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:41,136] Trial 2 finished with value: 0.11112374128251648 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 185, 'weights': 'distance'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:41,640] Trial 5 finished with value: 0.11400075684652841 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5028, 'weights': 'uniform'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:41,790] Trial 6 finished with value: 0.11400075684652841 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5203, 'weights': 'uniform'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:42,064] Trial 4 finished with value: 0.11248084492493637 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2280, 'weights': 'uniform'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:42,358] Trial 22 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:42,798] Trial 10 finished with value: 0.11206070935192161 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1875, 'weights': 'distance'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:43,982] Trial 21 finished with value: 0.1127025153705293 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2622, 'weights': 'uniform'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:54,790] Trial 24 finished with value: 0.1146769800935139 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:57:55,641] Trial 11 finished with value: 0.12610672495086245 and parameters: {'model_name': 'VAE', 'batch_size': 393, 'iterations': 2, 'learning_rate': 0.062273360198957246, 'p_miss': 0.12135422483777172}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:58:07,782] Trial 14 finished with value: 0.43997092477808436 and parameters: {'model_name': 'GAIN', 'batch_size': 512, 'hint_rate': 0.37545709852631703, 'alpha': 83, 'iterations': 8, 'learning_rate': 0.000323423714819702, 'p_miss': 0.136827944035727}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:58:08,423] Trial 30 finished with value: 0.11400075684652841 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:58:19,070] Trial 27 finished with value: 0.45395876908779764 and parameters: {'model_name': 'GAIN', 'batch_size': 134, 'hint_rate': 0.1366015726037194, 'alpha': 62, 'iterations': 25, 'learning_rate': 0.0019834179170118943, 'p_miss': 0.06967324985457876}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:58:23,329] Trial 17 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.8408136377631362, 'alpha': 86, 'iterations': 62, 'learning_rate': 0.0046072921857773985, 'p_miss': 0.024232586511501966}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 08:58:50,512] Trial 28 finished with value: 0.12083547910146808 and parameters: {'model_name': 'VAE', 'batch_size': 196, 'iterations': 25, 'learning_rate': 0.0019343997572235786, 'p_miss': 0.21254514337091743}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:00:06,183] Trial 19 finished with value: 0.13028120016583458 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 117, 'learning_rate': 0.00019437443260469944, 'p_miss': 0.2801017698057931}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:00:47,053] Trial 18 finished with value: 0.12909177928721355 and parameters: {'model_name': 'VAE', 'batch_size': 332, 'iterations': 56, 'learning_rate': 0.00026633245709421793, 'p_miss': 0.19509702403633516}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:00:47,814] Trial 36 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:00:48,252] Trial 37 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:00:49,968] Trial 38 finished with value: 0.3708176387737735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:01,775] Trial 26 finished with value: 0.1303184304590646 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 176, 'learning_rate': 0.00012578869158874997, 'p_miss': 0.22739051918431075}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:04,827] Trial 31 finished with value: 0.19351570568813356 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 20, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:05,432] Trial 41 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:06,263] Trial 42 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:06,987] Trial 43 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:11,899] Trial 33 finished with value: 0.1876758496455247 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:12,523] Trial 45 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:13,005] Trial 46 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:13,493] Trial 47 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:14,027] Trial 48 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:14,518] Trial 49 finished with value: 0.11400075684652841 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:15,736] Trial 50 finished with value: 0.3708176387737735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:16,404] Trial 51 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:17,298] Trial 52 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:20,577] Trial 53 finished with value: 0.1120659343336319 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 36, 'weights': 'distance'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:01:21,117] Trial 54 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:03:29,692] Trial 39 finished with value: 0.12298968071271257 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:03:30,264] Trial 56 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:03:30,939] Trial 57 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:21:02,204] Trial 15 finished with value: 0.4659096635449239 and parameters: {'model_name': 'GAIN', 'batch_size': 57, 'hint_rate': 0.017648706505435784, 'alpha': 99, 'iterations': 1439, 'learning_rate': 0.005291886806000243, 'p_miss': 0.12487776896201509}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:21:03,033] Trial 59 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:21:04,021] Trial 60 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:27,225] Trial 29 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.921959321103254, 'alpha': 9, 'iterations': 9250, 'learning_rate': 0.00011260669017593188, 'p_miss': 0.27467643362050753}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:32,764] Trial 62 finished with value: 0.11299313719633186 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3633, 'weights': 'distance'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:33,524] Trial 63 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:34,007] Trial 64 finished with value: 0.5155335135846146 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:35,389] Trial 65 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5871796947443865, 'alpha': 2, 'iterations': 1, 'learning_rate': 0.078448996012964, 'p_miss': 0.06463012588992628}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:36,150] Trial 66 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:36,898] Trial 67 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:37,704] Trial 68 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:26:39,351] Trial 69 finished with value: 0.3708176387737735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:34:07,878] Trial 20 finished with value: 0.14536160114767094 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:48:04,905] Trial 25 finished with value: 0.4272111699550408 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.6888846568707221, 'alpha': 12, 'iterations': 2941, 'learning_rate': 0.035293662889746065, 'p_miss': 0.23364096518995106}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:55:56,158] Trial 70 finished with value: 0.13656959053958756 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 890, 'learning_rate': 0.02072583540876776, 'p_miss': 0.0197874112538432}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:56:00,281] Trial 73 finished with value: 0.11342860160314734 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3784, 'weights': 'uniform'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:56:00,750] Trial 74 finished with value: 0.11400075684652841 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:56:01,188] Trial 75 finished with value: 0.5155335135846146 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:56:01,736] Trial 76 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:56:02,433] Trial 77 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:56:03,178] Trial 78 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:56:17,963] Trial 79 finished with value: 0.126692412787272 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 5, 'learning_rate': 0.0006973730045804844, 'p_miss': 0.16286402463761865}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:57:27,883] Trial 55 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8744999714432642, 'alpha': 4, 'iterations': 8353, 'learning_rate': 0.06341370443123043, 'p_miss': 0.29876884140245924}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:05,364] Trial 81 finished with value: 0.11485918051499308 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:05,959] Trial 82 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:06,506] Trial 83 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:07,165] Trial 84 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:07,543] Trial 85 finished with value: 0.5155335135846146 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:08,164] Trial 86 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:08,761] Trial 87 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:09,450] Trial 88 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:09,915] Trial 89 finished with value: 0.11400075684652841 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:10,482] Trial 90 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:50,267] Trial 91 finished with value: 0.12466376277629394 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:51,586] Trial 92 finished with value: 0.3708176387737735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:56,190] Trial 93 finished with value: 0.11169983593181647 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1350, 'weights': 'distance'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:58:57,018] Trial 94 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:35,372] Trial 71 finished with value: 0.13698895349568257 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 817, 'learning_rate': 0.01929544076395802, 'p_miss': 0.012747127233988048}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:35,934] Trial 96 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:36,467] Trial 97 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:36,992] Trial 98 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:37,469] Trial 99 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:43,018] Trial 100 finished with value: 0.45242846579123563 and parameters: {'model_name': 'GAIN', 'batch_size': 784, 'hint_rate': 0.36186684220318255, 'alpha': 37, 'iterations': 1, 'learning_rate': 0.010609367426722416, 'p_miss': 0.07556205558655776}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:43,510] Trial 101 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:44,118] Trial 102 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:44,723] Trial 103 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:45,329] Trial 104 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:45,865] Trial 105 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:46,571] Trial 106 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:47,155] Trial 107 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:47,831] Trial 108 finished with value: 0.11400075684652841 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:48,484] Trial 109 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:50,137] Trial 110 finished with value: 0.3708176387737735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 09:59:54,970] Trial 111 finished with value: 0.11400075684652841 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5765, 'weights': 'uniform'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:09:18,311] Trial 72 finished with value: 0.1545812412945762 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 471, 'learning_rate': 0.014893713427880904, 'p_miss': 0.16458266615018657}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:09:18,793] Trial 113 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:14:28,867] Trial 95 finished with value: 0.12001136645234198 and parameters: {'model_name': 'VAE', 'batch_size': 957, 'iterations': 322, 'learning_rate': 0.011565867747339666, 'p_miss': 0.07521011901829018}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:23:34,758] Trial 61 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9219879581139345, 'alpha': 2, 'iterations': 9514, 'learning_rate': 0.0920485429097531, 'p_miss': 0.2913475817435367}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:23:35,293] Trial 116 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:23:35,844] Trial 117 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:23:36,341] Trial 118 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:36:16,351] Trial 58 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9603789537398115, 'alpha': 7, 'iterations': 6213, 'learning_rate': 0.09927084712735888, 'p_miss': 0.2998804251798016}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:38:18,337] Trial 7 finished with value: 0.11973185810994638 and parameters: {'model_name': 'VAE', 'batch_size': 222, 'iterations': 3059, 'learning_rate': 0.012161453111522736, 'p_miss': 0.26231130083093124}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:46:11,890] Trial 32 finished with value: 0.17093515328714864 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 4841, 'learning_rate': 0.0863568244339476, 'p_miss': 0.27320130954402966}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:47:41,615] Trial 9 finished with value: 0.12121561360803612 and parameters: {'model_name': 'VAE', 'batch_size': 37, 'iterations': 5024, 'learning_rate': 0.0004926855224255527, 'p_miss': 0.09700616961638979}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:53:07,761] Trial 8 finished with value: 0.46299068322311854 and parameters: {'model_name': 'GAIN', 'batch_size': 496, 'hint_rate': 0.5575228619604616, 'alpha': 10, 'iterations': 6109, 'learning_rate': 0.0007242120348579966, 'p_miss': 0.04914981884259071}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 10:53:08,021] Trial 124 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:01:51,816] Trial 44 finished with value: 0.12017478067449354 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:01:52,143] Trial 126 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:01:52,463] Trial 127 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:01:52,788] Trial 128 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:01:53,116] Trial 129 finished with value: 0.5155335135846146 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:01:53,494] Trial 130 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:01:53,738] Trial 131 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:01:53,985] Trial 132 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:23,845] Trial 133 finished with value: 0.11495296808216535 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:24,180] Trial 134 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:24,541] Trial 135 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:24,871] Trial 136 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:25,193] Trial 137 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:25,547] Trial 138 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:25,851] Trial 139 finished with value: 0.11400075684652841 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:26,181] Trial 140 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:26,549] Trial 141 finished with value: 0.3708176387737735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:26,873] Trial 142 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:28,851] Trial 143 finished with value: 0.1131560676079633 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3900, 'weights': 'distance'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:29,059] Trial 144 finished with value: 0.5155335135846146 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:29,276] Trial 145 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:29,503] Trial 146 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:29,726] Trial 147 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:29,987] Trial 148 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:30,258] Trial 149 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:30,810] Trial 150 finished with value: 0.4277136605275862 and parameters: {'model_name': 'GAIN', 'batch_size': 15, 'hint_rate': 0.3363170380056749, 'alpha': 37, 'iterations': 6, 'learning_rate': 0.0012376272966514526, 'p_miss': 0.18573836433545976}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:31,165] Trial 151 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:31,492] Trial 152 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:31,859] Trial 153 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:37,890] Trial 154 finished with value: 0.12403608539902948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:38,172] Trial 155 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:38,383] Trial 156 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:38,595] Trial 157 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:38,812] Trial 158 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:39,117] Trial 159 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:39,518] Trial 160 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:39,818] Trial 161 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:40,122] Trial 162 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:40,679] Trial 163 finished with value: 0.12632940844519217 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.006866723349427752, 'p_miss': 0.25153203833599147}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:40,977] Trial 164 finished with value: 0.11400075684652841 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:41,318] Trial 165 finished with value: 0.3708176387737735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:41,630] Trial 166 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:41,947] Trial 167 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:42,283] Trial 168 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:42,594] Trial 169 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:42,907] Trial 170 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:43,202] Trial 171 finished with value: 0.5155335135846146 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:43,528] Trial 172 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:45,331] Trial 173 finished with value: 0.11174038064167131 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1393, 'weights': 'distance'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:45,668] Trial 174 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:46,332] Trial 175 finished with value: 0.4449065111954387 and parameters: {'model_name': 'GAIN', 'batch_size': 26, 'hint_rate': 0.2039334557435034, 'alpha': 60, 'iterations': 16, 'learning_rate': 0.0023562277945633177, 'p_miss': 0.10412755145393829}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:46,548] Trial 176 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:46,808] Trial 177 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:47,081] Trial 178 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:47,297] Trial 179 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:47,518] Trial 180 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:47,729] Trial 181 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:47,945] Trial 182 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:02:48,160] Trial 183 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:04,266] Trial 184 finished with value: 0.1155342341318347 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:04,603] Trial 185 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:04,901] Trial 186 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:05,136] Trial 187 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:05,368] Trial 188 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:05,601] Trial 189 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:05,864] Trial 190 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:06,105] Trial 191 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:03:06,324] Trial 192 finished with value: 0.11400075684652841 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:05:18,028] Trial 193 finished with value: 0.1231248672725392 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 1583, 'learning_rate': 0.03413027944050767, 'p_miss': 0.2518079933758841}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:05:18,339] Trial 194 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:05:18,732] Trial 195 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:05:19,056] Trial 196 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:05:19,373] Trial 197 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:05:19,693] Trial 198 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
running
[I 2024-11-12 11:05:20,004] Trial 199 finished with value: 0.10857517277859163 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 11:24:48,721] Trial 23 finished with value: 0.11978042622941198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 11:33:18,096] Trial 114 finished with value: 0.12082783321845576 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 11:33:58,631] Trial 112 finished with value: 0.12107056591494902 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 11:39:54,043] Trial 80 finished with value: 0.12017864265484812 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 11:54:22,708] Trial 115 finished with value: 0.12002213716272694 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 11:55:03,688] Trial 120 finished with value: 0.12064347614118134 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 11:59:38,646] Trial 0 finished with value: 0.11915868605182038 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 18, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 12:00:06,868] Trial 35 finished with value: 0.1187838385942878 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 18, 'imputation_order': 'descending'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 12:01:38,566] Trial 119 finished with value: 0.12023088861016147 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 12:05:06,087] Trial 121 finished with value: 0.12055488246401488 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 12:08:20,665] Trial 34 finished with value: 0.12033193415062246 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 20, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 12:09:50,616] Trial 40 finished with value: 0.1192963904331322 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 20, 'imputation_order': 'descending'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 12:11:32,678] Trial 122 finished with value: 0.12148183023244244 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 12:12:55,849] Trial 123 finished with value: 0.12090037063141088 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
[I 2024-11-12 12:17:46,499] Trial 125 finished with value: 0.12043755527300663 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.10857517277859163.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0.10857517277859163
{'model_name': 'SimpleImputer', 'strategy': 'median'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9660372682619733
Generation:   4%|▍         | 1/25 [00:41<16:37, 41.58s/it]Generation:  2
Best f1_score score: 0.9660372682619733
Generation:   8%|▊         | 2/25 [01:52<22:32, 58.79s/it]Generation:  3
Best f1_score score: 0.9743007926069396
Generation:  12%|█▏        | 3/25 [03:03<23:34, 64.29s/it]Generation:  4
Best f1_score score: 0.9743007926069396
Generation:  16%|█▌        | 4/25 [03:45<19:24, 55.43s/it]Generation:  5
Best f1_score score: 0.9776941954978573
Generation:  20%|██        | 5/25 [05:55<27:32, 82.64s/it]Generation:  6
Best f1_score score: 0.9776941954978573
Generation:  24%|██▍       | 6/25 [11:36<53:55, 170.30s/it]Generation:  7
Best f1_score score: 0.9776941954978573
Generation:  28%|██▊       | 7/25 [12:01<36:49, 122.77s/it]Generation:  8
Best f1_score score: 0.9776941954978573
Generation:  32%|███▏      | 8/25 [13:05<29:31, 104.20s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554679bceb0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  9
Best f1_score score: 0.9776941954978573
Generation:  36%|███▌      | 9/25 [15:05<29:05, 109.10s/it]Generation:  10
Best f1_score score: 0.9776941954978573
Generation:  40%|████      | 10/25 [19:20<38:29, 153.99s/it]Generation:  11
Best f1_score score: 0.9776941954978573
Generation:  44%|████▍     | 11/25 [20:24<29:29, 126.41s/it]Generation:  12
Best f1_score score: 0.9776941954978573
Generation:  48%|████▊     | 12/25 [20:54<21:04, 97.29s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ffedd0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  13
Best f1_score score: 0.9776941954978573
Generation:  52%|█████▏    | 13/25 [21:19<15:03, 75.28s/it]Generation:  14
Best f1_score score: 0.9776941954978573
Generation:  56%|█████▌    | 14/25 [21:52<11:28, 62.55s/it]Generation:  15
Best f1_score score: 0.9776941954978573
Generation:  60%|██████    | 15/25 [24:11<14:14, 85.47s/it]Generation:  16
Best f1_score score: 0.9776941954978573
Generation:  64%|██████▍   | 16/25 [25:03<11:18, 75.44s/it]Generation:  17
Best f1_score score: 0.9776941954978573
Generation:  68%|██████▊   | 17/25 [25:38<08:25, 63.21s/it]Generation:  18
Best f1_score score: 0.9776941954978573
Generation:  72%|███████▏  | 18/25 [26:12<06:21, 54.46s/it]Generation:  19
Best f1_score score: 0.9776941954978573
Generation:  76%|███████▌  | 19/25 [28:14<07:29, 74.87s/it]Generation:  20
Best f1_score score: 0.9776941954978573
Generation:  80%|████████  | 20/25 [35:59<16:00, 192.12s/it]Generation:  21
Best f1_score score: 0.9776941954978573
Generation:  84%|████████▍ | 21/25 [36:40<09:46, 146.61s/it]Generation:  22
Best f1_score score: 0.9776941954978573
Generation:  88%|████████▊ | 22/25 [39:30<07:40, 153.55s/it]Generation:  23
Best f1_score score: 0.9776941954978573
Generation:  92%|█████████▏| 23/25 [41:24<04:43, 141.80s/it]Generation:  24
Best f1_score score: 0.9776941954978573
Generation:  96%|█████████▌| 24/25 [42:05<01:51, 111.52s/it]Generation:  25
Best f1_score score: 0.9776941954978573
Generation: 100%|██████████| 25/25 [47:00<00:00, 166.54s/it]Generation: 100%|██████████| 25/25 [47:03<00:00, 112.96s/it]
2024-11-12 13:05:01,158 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:39789' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-82a971e41ec0e8ed581e00691a19ec2c', 'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8'} (stimulus_id='handle-worker-cleanup-1731445501.158063')
Fitted
Pipeline(steps=[('gaussiannb', GaussianNB())])
score start
train score: {'auroc': 0.9971123506536362, 'accuracy': 0.9775337837837837, 'balanced_accuracy': 0.9774439064012604, 'logloss': 0.0634154275621617, 'f1': 0.97752588272693}
original test score: {'auroc': 0.9975180394155065, 'accuracy': 0.9797297297297297, 'balanced_accuracy': 0.9796767789667081, 'logloss': 0.05287180990526778, 'f1': 0.9797252497356063}
imputed test score: {'auroc': 0.9962871038496871, 'accuracy': 0.9783783783783784, 'balanced_accuracy': 0.9782869540919477, 'logloss': 0.06764120204266302, 'f1': 0.9783706366778466}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4a60> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd5660> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.977863325083532
Generation:   4%|▍         | 1/25 [01:03<25:19, 63.30s/it]Generation:  2
Best f1_score score: 0.977863325083532
Generation:   8%|▊         | 2/25 [02:12<25:33, 66.68s/it]Generation:  3
Best f1_score score: 0.977863325083532
Generation:  12%|█▏        | 3/25 [02:43<18:25, 50.27s/it]Generation:  4
Best f1_score score: 0.9778634104656991
Generation:  16%|█▌        | 4/25 [03:13<14:51, 42.46s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d5e0e0> 

Generation:  5
Best f1_score score: 0.9778634104656991
Generation:  20%|██        | 5/25 [13:20<1:21:57, 245.87s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745c4430> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547419eec0> 

Generation:  6
Best f1_score score: 0.9778634104656991
Generation:  24%|██▍       | 6/25 [23:24<1:56:25, 367.68s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456a5e7d0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fe26bf0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff157e0> 

Generation:  7
Best f1_score score: 0.9778634104656991
Generation:  28%|██▊       | 7/25 [33:30<2:13:43, 445.78s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745a6bc0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456d64a60> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741ccdc0> 

Generation:  8
Best f1_score score: 0.9780324285705537
Generation:  32%|███▏      | 8/25 [43:36<2:20:42, 496.61s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545faa82e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745d32b0> 

Generation:  9
Best f1_score score: 0.9780324285705537
Generation:  36%|███▌      | 9/25 [53:43<2:21:38, 531.16s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f31f8e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452c34820> 

Generation:  10
Best f1_score score: 0.9780324285705537
Generation:  40%|████      | 10/25 [1:03:50<2:18:37, 554.51s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554532c43d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fdbd180> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f2fe860> 

Generation:  11
Best f1_score score: 0.9780324285705537
Generation:  44%|████▍     | 11/25 [1:13:57<2:13:09, 570.68s/it]Generation:  12
Best f1_score score: 0.9780324285705537
Generation:  48%|████▊     | 12/25 [1:14:36<1:28:34, 408.78s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554531fb0d0> 

Generation:  13
Best f1_score score: 0.9780324285705537
Generation:  52%|█████▏    | 13/25 [1:24:42<1:33:45, 468.81s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e2f1cc0> 

Generation:  14
Best f1_score score: 0.9780324285705537
Generation:  56%|█████▌    | 14/25 [1:34:49<1:33:34, 510.37s/it]Generation:  15
Best f1_score score: 0.9780324285705537
Generation:  60%|██████    | 15/25 [1:37:38<1:07:56, 407.61s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545feb8ca0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.9780324285705537
Generation:  64%|██████▍   | 16/25 [1:45:54<1:05:08, 434.27s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456665600> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d3c700> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545250bfd0> 

Generation:  17
Best f1_score score: 0.9780324285705537
Generation:  68%|██████▊   | 17/25 [1:56:01<1:04:47, 485.99s/it]Generation:  18
Best f1_score score: 0.9780324285705537
Generation:  72%|███████▏  | 18/25 [1:57:41<43:09, 369.93s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553ef445540> 

Generation:  19
Best f1_score score: 0.9780324285705537
Generation:  76%|███████▌  | 19/25 [2:07:46<44:03, 440.65s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bc38730> 
 KNeighborsRegressor.predict() got an unexpected keyword argument 'return_std' 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/impute/_iterative.py", line 789, in fit_transform
    Xt, estimator = self._impute_one_feature(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/impute/_iterative.py", line 431, in _impute_one_feature
    mus, sigmas = estimator.predict(X_test, return_std=True)
TypeError: KNeighborsRegressor.predict() got an unexpected keyword argument 'return_std'

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456ae5930> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452ef14e0> 

Generation:  20
Best f1_score score: 0.9780324285705537
Generation:  80%|████████  | 20/25 [2:17:52<40:52, 490.41s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547459aa70> 

Generation:  21
Best f1_score score: 0.9780324285705537
Generation:  84%|████████▍ | 21/25 [2:27:59<35:01, 525.27s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454987a30> 

Generation:  22
Best f1_score score: 0.9780324285705537
Generation:  88%|████████▊ | 22/25 [2:38:06<27:29, 549.89s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456e5a140> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741cde10> 

Generation:  23
Best f1_score score: 0.9780324285705537
Generation:  92%|█████████▏| 23/25 [2:48:13<18:54, 567.01s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452d6be50> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474597910> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452455360> 

Generation:  24
Best f1_score score: 0.9780324285705537
Generation:  96%|█████████▌| 24/25 [2:58:19<09:38, 578.64s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fdbf520> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f50bb0> 

Generation:  25
Best f1_score score: 0.9780324285705537
Generation: 100%|██████████| 25/25 [3:08:28<00:00, 587.83s/it]Generation: 100%|██████████| 25/25 [3:08:28<00:00, 452.35s/it]
2024-11-12 16:13:38,125 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:38721' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8', 'DataFrame-9397bf4a2941c67c68925da6f6db9263'} (stimulus_id='handle-worker-cleanup-1731456818.1256323')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=Ridge(),
                                  imputation_order='descending',
                                  initial_strategy='median',
                                  n_nearest_features=11)),
                ('gaussiannb', GaussianNB())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9971268471145023, 'accuracy': 0.9777027027027027, 'balanced_accuracy': 0.9776144966434985, 'logloss': 0.06327550781089188, 'f1': 0.9776950017554226}
test score: {'auroc': 0.9963126722442293, 'accuracy': 0.9783783783783784, 'balanced_accuracy': 0.9782869540919477, 'logloss': 0.06760695558123726, 'f1': 0.9783706366778466}
original test score: {'auroc': 0.9975326499266735, 'accuracy': 0.9797297297297297, 'balanced_accuracy': 0.9796767789667081, 'logloss': 0.052737044380209624, 'f1': 0.9797252497356063}
score end
1496
lvl
0.1
type
MAR
num_run
1
class_full
finished
all finished
full run takes
7.269668043057123
hours
DONE
