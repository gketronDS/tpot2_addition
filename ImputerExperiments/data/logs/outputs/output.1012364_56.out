Run: 56
/cm/local/apps/slurm/var/spool/job1012364/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/725/725.pkl
working on 
../data/c/725/class_full_MAR_0.5_3
4.210812568664551
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-23 15:33:28,744] A new study created in memory with name: no-name-c940a521-ed5a-4a5e-bb98-82b351bbc95f
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-23 15:33:29,109] Trial 7 finished with value: 0.32919700134650987 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 7 with value: 0.32919700134650987.
running
[I 2024-10-23 15:33:30,289] Trial 1 finished with value: 0.2052307299631427 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1247, 'weights': 'uniform'}. Best is trial 1 with value: 0.2052307299631427.
running
[I 2024-10-23 15:33:30,477] Trial 4 finished with value: 0.2051930449032618 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 628, 'weights': 'distance'}. Best is trial 4 with value: 0.2051930449032618.
running
[I 2024-10-23 15:33:30,617] Trial 14 finished with value: 0.20562664868901942 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 625, 'weights': 'uniform'}. Best is trial 4 with value: 0.2051930449032618.
running
[I 2024-10-23 15:33:30,808] Trial 19 finished with value: 0.3512010991634932 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.2051930449032618.
running
[I 2024-10-23 15:33:30,928] Trial 8 finished with value: 0.20487949607314437 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4694, 'weights': 'uniform'}. Best is trial 8 with value: 0.20487949607314437.
running
[I 2024-10-23 15:33:31,317] Trial 2 finished with value: 0.20410512349305673 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4375, 'weights': 'distance'}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:32,107] Trial 17 finished with value: 0.20476038445579975 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3526, 'weights': 'uniform'}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:32,348] Trial 21 finished with value: 0.20478836363078634 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3293, 'weights': 'uniform'}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:33,256] Trial 23 finished with value: 0.20488667829595258 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2228, 'weights': 'uniform'}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:35,882] Trial 15 finished with value: 0.34135230381225357 and parameters: {'model_name': 'GAIN', 'batch_size': 45, 'hint_rate': 0.10956813310819115, 'alpha': 17, 'iterations': 1, 'learning_rate': 0.0023868598451968455, 'p_miss': 0.27839127270009345}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:36,641] Trial 6 finished with value: 0.3521174220531151 and parameters: {'model_name': 'GAIN', 'batch_size': 166, 'hint_rate': 0.9693960620179655, 'alpha': 37, 'iterations': 3, 'learning_rate': 0.000840166733752773, 'p_miss': 0.1376248072416213}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:37,171] Trial 22 finished with value: 0.3461256767565615 and parameters: {'model_name': 'GAIN', 'batch_size': 50, 'hint_rate': 0.6985590706562522, 'alpha': 43, 'iterations': 2, 'learning_rate': 0.00765830631616418, 'p_miss': 0.144526938021888}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:37,918] Trial 20 finished with value: 0.3159967212862035 and parameters: {'model_name': 'VAE', 'batch_size': 246, 'iterations': 1, 'learning_rate': 0.0011033997825781777, 'p_miss': 0.1580632139172729}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:39,683] Trial 10 finished with value: 0.32374668267479556 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 3, 'learning_rate': 0.0006957361991366596, 'p_miss': 0.08761994725962545}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:42,073] Trial 9 finished with value: 0.3500900506404795 and parameters: {'model_name': 'GAIN', 'batch_size': 176, 'hint_rate': 0.3893676856632521, 'alpha': 28, 'iterations': 8, 'learning_rate': 0.0014398282228267204, 'p_miss': 0.05328936423640644}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:43,379] Trial 25 finished with value: 0.20555487973487274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:47,401] Trial 24 finished with value: 0.21820951457482712 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:49,038] Trial 18 finished with value: 0.21448330320150996 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 2 with value: 0.20410512349305673.
running
[I 2024-10-23 15:33:52,380] Trial 33 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6021, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:33:54,493] Trial 34 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6105, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:33:55,105] Trial 29 finished with value: 0.22258619082771128 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:33:55,942] Trial 26 finished with value: 0.22461032996622268 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:33:57,572] Trial 35 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6285, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:33:58,205] Trial 28 finished with value: 0.22417161357658827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:33:58,817] Trial 36 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6548, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:33:59,636] Trial 37 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6527, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:00,327] Trial 38 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6505, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:01,368] Trial 39 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6550, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:02,349] Trial 40 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6532, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:02,923] Trial 45 finished with value: 0.20499063122027922 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:03,268] Trial 41 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6235, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:03,950] Trial 31 finished with value: 0.22055772039307436 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:04,335] Trial 42 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5420, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:06,904] Trial 46 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5405, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:07,607] Trial 47 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5479, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:08,025] Trial 48 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5338, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:08,684] Trial 49 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5320, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:09,315] Trial 53 finished with value: 0.24606974537047588 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:09,516] Trial 32 finished with value: 0.2141995609449156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:34:12,864] Trial 12 finished with value: 0.33530456435373257 and parameters: {'model_name': 'GAIN', 'batch_size': 28, 'hint_rate': 0.4221847961492906, 'alpha': 92, 'iterations': 30, 'learning_rate': 0.00010420873173967153, 'p_miss': 0.2463089360055605}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:36:43,303] Trial 0 finished with value: 0.40170963819848493 and parameters: {'model_name': 'GAIN', 'batch_size': 540, 'hint_rate': 0.7097481067571962, 'alpha': 80, 'iterations': 112, 'learning_rate': 0.014923065554936213, 'p_miss': 0.2115503026019641}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:42:48,006] Trial 16 finished with value: 0.4214813927513525 and parameters: {'model_name': 'GAIN', 'batch_size': 976, 'hint_rate': 0.05579178284538279, 'alpha': 21, 'iterations': 310, 'learning_rate': 0.03629016901213851, 'p_miss': 0.29015785470395405}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:52:15,895] Trial 13 finished with value: 0.2327656385065548 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:57:57,149] Trial 30 finished with value: 0.213789163849858 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:59:47,442] Trial 5 finished with value: 0.20703940352827294 and parameters: {'model_name': 'VAE', 'batch_size': 935, 'iterations': 350, 'learning_rate': 0.03955093620205367, 'p_miss': 0.18869673726331904}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 15:59:50,453] Trial 61 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5991, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 16:00:37,708] Trial 27 finished with value: 0.20791722684836728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 16:15:38,093] Trial 11 finished with value: 0.21744081221563588 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 777, 'learning_rate': 0.005247583706378254, 'p_miss': 0.19767460170993062}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 16:15:40,176] Trial 64 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5878, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 16:15:43,027] Trial 65 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5908, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 16:15:45,929] Trial 66 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6520, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 16:15:48,545] Trial 67 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6057, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 16:15:51,177] Trial 68 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5890, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 16:52:04,516] Trial 3 finished with value: 0.21067126596215338 and parameters: {'model_name': 'VAE', 'batch_size': 37, 'iterations': 1660, 'learning_rate': 0.00021628939165198473, 'p_miss': 0.0439544666061295}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:19,154] Trial 51 finished with value: 0.24067203025607037 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2417, 'learning_rate': 0.09822398798838085, 'p_miss': 0.2845575240525138}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:21,463] Trial 71 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6553, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:23,634] Trial 72 finished with value: 0.20411260162296654 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4769, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:27,006] Trial 73 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6087, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:30,100] Trial 74 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5761, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:33,045] Trial 75 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6257, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:35,478] Trial 76 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6552, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:37,334] Trial 77 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6553, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 17:40:38,889] Trial 78 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6204, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:17,362] Trial 52 finished with value: 0.23572627787910938 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6444, 'learning_rate': 0.03761012418566293, 'p_miss': 0.2983962917845496}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:24,247] Trial 80 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.9739362285015065, 'alpha': 1, 'iterations': 23, 'learning_rate': 0.00031780691110173606, 'p_miss': 0.01512703289677686}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:25,666] Trial 81 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5657, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:26,121] Trial 82 finished with value: 0.24606974537047588 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:28,145] Trial 83 finished with value: 0.20410897235665937 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4942, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:30,289] Trial 84 finished with value: 0.2041386149262046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4019, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:32,362] Trial 85 finished with value: 0.20447892745288954 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2140, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:35,077] Trial 86 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6282, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:36,694] Trial 87 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6325, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:38,536] Trial 88 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6540, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:17:40,058] Trial 89 finished with value: 0.20499063122027922 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6175, 'weights': 'uniform'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:18:27,648] Trial 90 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.2552896466720872, 'alpha': 65, 'iterations': 83, 'learning_rate': 0.011575293765443353, 'p_miss': 0.10230961741344244}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:18:29,476] Trial 91 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5763, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:18,260] Trial 43 finished with value: 0.25500872705604555 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5722, 'learning_rate': 0.05879671451785971, 'p_miss': 0.28454331200453253}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:19,759] Trial 93 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6237, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:21,128] Trial 94 finished with value: 0.20540456796700854 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1064, 'weights': 'uniform'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:21,758] Trial 44 finished with value: 0.24994252363233618 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6823, 'learning_rate': 0.09282404161696144, 'p_miss': 0.2847663709067879}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:22,032] Trial 95 finished with value: 0.32919700134650987 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:23,601] Trial 96 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6235, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:23,941] Trial 97 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6291, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:25,362] Trial 99 finished with value: 0.20521413504300687 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 174, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
[I 2024-10-23 20:24:25,495] Trial 98 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6307, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
running
[I 2024-10-23 20:24:27,597] Trial 100 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5630, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:27,858] Trial 101 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5620, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:29,416] Trial 102 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5958, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:29,737] Trial 103 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6004, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:30,388] Trial 104 finished with value: 0.20499063122027922 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5145, 'weights': 'uniform'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:31,772] Trial 106 finished with value: 0.20435719676842373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2650, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:32,678] Trial 107 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6549, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:33,621] Trial 108 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6035, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:34,925] Trial 109 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5343, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:51,586] Trial 110 finished with value: 0.3479844522373784 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.6388072374462641, 'alpha': 61, 'iterations': 10, 'learning_rate': 0.0003760697032200663, 'p_miss': 0.10023184765527869}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:24:53,662] Trial 111 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6376, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:25:00,353] Trial 105 finished with value: 0.34110237057244563 and parameters: {'model_name': 'GAIN', 'batch_size': 15, 'hint_rate': 0.6395351191481642, 'alpha': 62, 'iterations': 24, 'learning_rate': 0.002923247008561167, 'p_miss': 0.23009968672351014}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:05,504] Trial 112 finished with value: 0.26046718497455734 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 35, 'learning_rate': 0.0026230372614605897, 'p_miss': 0.24414111824068008}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:07,836] Trial 114 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5856, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:10,068] Trial 115 finished with value: 0.20410369862424105 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4344, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:12,193] Trial 116 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6067, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:14,290] Trial 117 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5431, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:16,243] Trial 118 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6400, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:16,644] Trial 119 finished with value: 0.3512010991634932 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:18,018] Trial 120 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5876, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:19,932] Trial 121 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6121, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:21,593] Trial 122 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5564, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:22,895] Trial 123 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5116, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:24,222] Trial 124 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6381, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:26,024] Trial 125 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6547, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:27,925] Trial 126 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5808, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:30,049] Trial 127 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6109, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:32,488] Trial 128 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5429, 'weights': 'distance'}. Best is trial 33 with value: 0.20410135355144754.
running
[I 2024-10-23 20:27:34,313] Trial 129 finished with value: 0.20409780239922176 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4632, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:30:57,146] Trial 62 finished with value: 0.23062354200756602 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5079, 'learning_rate': 0.0001064488984559801, 'p_miss': 0.03856742373598816}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:30:59,594] Trial 131 finished with value: 0.20483483104577543 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4607, 'weights': 'uniform'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:35,524] Trial 132 finished with value: 0.2793824063608908 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:37,469] Trial 133 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6337, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:39,867] Trial 134 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6401, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:42,149] Trial 135 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6141, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:44,305] Trial 136 finished with value: 0.20419347894842527 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3802, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:46,609] Trial 137 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5713, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:49,063] Trial 138 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5977, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:51,273] Trial 139 finished with value: 0.2041194171314547 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4737, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:53,317] Trial 140 finished with value: 0.2041074774605617 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4914, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:31:53,832] Trial 141 finished with value: 0.20499063122027922 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:04,972] Trial 130 finished with value: 0.23081494475880607 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 211, 'learning_rate': 0.017295315296494015, 'p_miss': 0.16348120772049893}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:07,389] Trial 143 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5183, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:09,406] Trial 144 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6391, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:11,810] Trial 145 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5482, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:14,279] Trial 146 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6237, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:17,054] Trial 147 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6472, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:18,702] Trial 148 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5240, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:20,857] Trial 149 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5724, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:22,265] Trial 150 finished with value: 0.20499063122027922 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6186, 'weights': 'uniform'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:25,480] Trial 151 finished with value: 0.20410783352630296 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4904, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:41,052] Trial 152 finished with value: 0.34298707549703716 and parameters: {'model_name': 'GAIN', 'batch_size': 397, 'hint_rate': 0.23710832608206694, 'alpha': 99, 'iterations': 8, 'learning_rate': 0.0054602456733223465, 'p_miss': 0.08361185620393957}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:43,569] Trial 153 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5934, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:46,381] Trial 154 finished with value: 0.20410135355144754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5530, 'weights': 'distance'}. Best is trial 129 with value: 0.20409780239922176.
running
[I 2024-10-23 20:35:59,193] Trial 155 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:36:13,082] Trial 156 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:36:27,266] Trial 157 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:36:38,253] Trial 158 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:36:52,406] Trial 159 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:36:59,220] Trial 160 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:13,369] Trial 161 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:26,160] Trial 162 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:30,235] Trial 113 finished with value: 0.22024243659024662 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 403, 'learning_rate': 0.016232465511097867, 'p_miss': 0.24967305064204795}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:39,105] Trial 142 finished with value: 0.22378949380037386 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 199, 'learning_rate': 0.01854207661823947, 'p_miss': 0.17546228664729283}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:41,048] Trial 163 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:43,626] Trial 164 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:52,257] Trial 165 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:52,435] Trial 166 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:55,942] Trial 167 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:59,403] Trial 169 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:37:59,756] Trial 168 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:01,097] Trial 170 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:06,043] Trial 171 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:06,615] Trial 172 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:07,697] Trial 173 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:12,064] Trial 174 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:12,435] Trial 175 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:13,612] Trial 176 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:18,505] Trial 178 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:19,304] Trial 177 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:21,506] Trial 179 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:28,759] Trial 180 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:29,997] Trial 181 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:34,040] Trial 182 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:42,297] Trial 183 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:42,805] Trial 184 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:46,592] Trial 185 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:55,752] Trial 187 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:38:56,358] Trial 186 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:39:01,869] Trial 188 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:39:07,170] Trial 189 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:39:10,168] Trial 190 finished with value: 0.2032783389973407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 155 with value: 0.2032783389973407.
running
[I 2024-10-23 20:39:20,181] Trial 192 finished with value: 0.20327832300448473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 192 with value: 0.20327832300448473.
running
[I 2024-10-23 20:39:34,878] Trial 194 finished with value: 0.20327832300448473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 192 with value: 0.20327832300448473.
running
[I 2024-10-23 20:39:35,427] Trial 191 finished with value: 0.2030578446814068 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 191 with value: 0.2030578446814068.
running
[I 2024-10-23 20:39:45,114] Trial 193 finished with value: 0.2030578446814068 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 191 with value: 0.2030578446814068.
running
[I 2024-10-23 20:39:47,851] Trial 196 finished with value: 0.20327832300448473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 191 with value: 0.2030578446814068.
running
[I 2024-10-23 20:39:49,352] Trial 195 finished with value: 0.20327832300448473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 191 with value: 0.2030578446814068.
running
[I 2024-10-23 20:39:54,669] Trial 199 finished with value: 0.20322609978889705 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random'}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 20:39:58,192] Trial 197 finished with value: 0.20327832300448473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 20:40:02,053] Trial 198 finished with value: 0.20327832300448473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 21:34:24,230] Trial 50 finished with value: 0.2662910762104234 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9141, 'learning_rate': 0.0563394939182832, 'p_miss': 0.294548879059771}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 21:37:23,680] Trial 59 finished with value: 0.22643298887625707 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6610, 'learning_rate': 0.07915993911258963, 'p_miss': 0.016877377121874426}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:10:10,535] Trial 57 finished with value: 0.2271440463596491 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8775, 'learning_rate': 0.047901268520720734, 'p_miss': 0.012812369877746338}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:10:10,912] Trial 70 finished with value: 0.23442683639932937 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7667, 'learning_rate': 0.08521033424168173, 'p_miss': 0.09094186448057097}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:21:35,040] Trial 56 finished with value: 0.25571847721443597 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8241, 'learning_rate': 0.0908616109724403, 'p_miss': 0.2041763408448939}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:23:39,216] Trial 54 finished with value: 0.2656437194300828 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8989, 'learning_rate': 0.09467072114209614, 'p_miss': 0.2901924452876754}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:36:47,596] Trial 55 finished with value: 0.24831666259362462 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8743, 'learning_rate': 0.08730491104101672, 'p_miss': 0.2923023809395813}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:38:30,859] Trial 60 finished with value: 0.2318390287711845 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9719, 'learning_rate': 0.07090809199685444, 'p_miss': 0.016933000252035618}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:39:59,343] Trial 63 finished with value: 0.2223943965071989 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9186, 'learning_rate': 0.00020388435168618434, 'p_miss': 0.023030362169897928}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:40:00,601] Trial 69 finished with value: 0.21973295427403458 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8337, 'learning_rate': 0.00012454148494461, 'p_miss': 0.013218812231736238}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:40:23,503] Trial 58 finished with value: 0.22848924813233124 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8944, 'learning_rate': 0.08882371656391871, 'p_miss': 0.019754324591892136}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:40:27,005] Trial 79 finished with value: 0.21331533733590452 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 7435, 'learning_rate': 0.000264615741329891, 'p_miss': 0.014107693955902945}. Best is trial 191 with value: 0.2030578446814068.
[I 2024-10-23 22:41:16,576] Trial 92 finished with value: 0.22538811926172975 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5648, 'learning_rate': 0.0003818852339008561, 'p_miss': 0.24967592552552675}. Best is trial 191 with value: 0.2030578446814068.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0.2030578446814068
{'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': False}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8492250278816856
Generation:   4%|▍         | 1/25 [00:32<13:10, 32.95s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a1150> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  2
Best f1_score score: 0.8493194772968138
Generation:   8%|▊         | 2/25 [00:44<07:48, 20.36s/it]Generation:  3
Best f1_score score: 0.8493194772968138
Generation:  12%|█▏        | 3/25 [00:53<05:36, 15.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fde10> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0b370> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  4
Best f1_score score: 0.8495748754965836
Generation:  16%|█▌        | 4/25 [06:45<51:49, 148.09s/it]Generation:  5
Best f1_score score: 0.8504798134167129
Generation:  20%|██        | 5/25 [07:07<34:11, 102.58s/it]Generation:  6
Best f1_score score: 0.8504798134167129
Generation:  24%|██▍       | 6/25 [13:25<1:02:08, 196.26s/it]Generation:  7
Best f1_score score: 0.8504798134167129
Generation:  28%|██▊       | 7/25 [13:36<40:41, 135.62s/it]  Generation:  8
Best f1_score score: 0.8504798134167129
Generation:  32%|███▏      | 8/25 [14:06<28:53, 102.00s/it]Generation:  9
Best f1_score score: 0.8504798134167129
Generation:  36%|███▌      | 9/25 [15:21<24:56, 93.52s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465161de0> 
 l1_ratio must be specified when penalty is elasticnet. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1204, in fit
    raise ValueError("l1_ratio must be specified when penalty is elasticnet.")
ValueError: l1_ratio must be specified when penalty is elasticnet.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467b3a3e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  10
Best f1_score score: 0.8504798134167129
Generation:  40%|████      | 10/25 [15:36<17:23, 69.56s/it]Generation:  11
Best f1_score score: 0.8504798134167129
Generation:  44%|████▍     | 11/25 [15:48<12:06, 51.92s/it]Generation:  12
Best f1_score score: 0.8504798134167129
Generation:  48%|████▊     | 12/25 [16:37<11:00, 50.79s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c39120> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  13
Best f1_score score: 0.8504798134167129
Generation:  52%|█████▏    | 13/25 [17:09<09:02, 45.23s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474735db0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.8504798134167129
Generation:  56%|█████▌    | 14/25 [17:26<06:43, 36.71s/it]Generation:  15
Best f1_score score: 0.8504798134167129
Generation:  60%|██████    | 15/25 [18:43<08:07, 48.73s/it]Generation:  16
Best f1_score score: 0.8504798134167129
Generation:  64%|██████▍   | 16/25 [21:23<12:20, 82.24s/it]Generation:  17
Best f1_score score: 0.8504798134167129
Generation:  68%|██████▊   | 17/25 [21:48<08:40, 65.11s/it]Generation:  18
Best f1_score score: 0.8504798134167129
Generation:  72%|███████▏  | 18/25 [22:30<06:47, 58.24s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546546ea70> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  19
Best f1_score score: 0.8504798134167129
Generation:  76%|███████▌  | 19/25 [24:40<07:58, 79.80s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474713460> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fa470> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  20
Best f1_score score: 0.8504798134167129
Generation:  80%|████████  | 20/25 [26:16<07:02, 84.46s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465363e50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465b2d540> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  21
Best f1_score score: 0.8504798134167129
Generation:  84%|████████▍ | 21/25 [35:16<14:45, 221.37s/it]Generation:  22
Best f1_score score: 0.8504798134167129
Generation:  88%|████████▊ | 22/25 [36:11<08:34, 171.34s/it]Generation:  23
Best f1_score score: 0.8504798134167129
Generation:  92%|█████████▏| 23/25 [37:15<04:38, 139.23s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a54430> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.8504798134167129
Generation:  96%|█████████▌| 24/25 [37:45<01:46, 106.40s/it]Generation:  25
Best f1_score score: 0.8520107419534195
Generation: 100%|██████████| 25/25 [40:41<00:00, 127.29s/it]Generation: 100%|██████████| 25/25 [40:45<00:00, 97.81s/it] 
2024-10-23 23:22:22,593 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:35399' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'ndarray-5302f1094eb88ca5a7d583ec0900004f'} (stimulus_id='handle-worker-cleanup-1729750942.5935552')
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.0319311471426, early_stopping=True,
                               hidden_layer_sizes=[336, 336],
                               learning_rate='invscaling',
                               learning_rate_init=0.0200883536549,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9275576443454656, 'accuracy': 0.8649473523576988, 'balanced_accuracy': 0.8497482262162053, 'logloss': 0.31141669124326204, 'f1': 0.8564990657007008}
original test score: {'auroc': 0.9879123155847327, 'accuracy': 0.9456985967053081, 'balanced_accuracy': 0.9415460423579178, 'logloss': 0.15171953499473462, 'f1': 0.9433751912292122}
imputed test score: {'auroc': 0.9275821229672189, 'accuracy': 0.8682123245881636, 'balanced_accuracy': 0.856582824912566, 'logloss': 0.3150645094446716, 'f1': 0.8611757693634909}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8474401563321065
Generation:   4%|▍         | 1/25 [06:40<2:40:00, 400.01s/it]Generation:  2
Best f1_score score: 0.8474401563321065
Generation:   8%|▊         | 2/25 [09:12<1:37:26, 254.18s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d658a0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  3
Best f1_score score: 0.8523510776515495
Generation:  12%|█▏        | 3/25 [09:35<54:34, 148.82s/it]  Generation:  4
Best f1_score score: 0.8523510776515495
Generation:  16%|█▌        | 4/25 [10:27<38:40, 110.51s/it]Generation:  5
Best f1_score score: 0.8523510776515495
Generation:  20%|██        | 5/25 [11:51<33:39, 100.97s/it]Generation:  6
Best f1_score score: 0.8523510776515495
Generation:  24%|██▍       | 6/25 [12:06<22:44, 71.80s/it] WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d6a950> 

Generation:  7
Best f1_score score: 0.8523510776515495
Generation:  28%|██▊       | 7/25 [22:11<1:13:51, 246.22s/it]Generation:  8
Best f1_score score: 0.8523510776515495
Generation:  32%|███▏      | 8/25 [22:37<49:52, 176.00s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d77430> 

Generation:  9
Best f1_score score: 0.8523510776515495
Generation:  36%|███▌      | 9/25 [32:42<1:22:42, 310.16s/it]Generation:  10
Best f1_score score: 0.8523510776515495
Generation:  40%|████      | 10/25 [37:12<1:14:26, 297.79s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455239840> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  11
Best f1_score score: 0.8523510776515495
Generation:  44%|████▍     | 11/25 [38:44<54:47, 234.81s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d55cc0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f3be50> 

Generation:  12
Best f1_score score: 0.8523510776515495
Generation:  48%|████▊     | 12/25 [48:51<1:15:21, 347.84s/it]Generation:  13
Best f1_score score: 0.8525922031738593
Generation:  52%|█████▏    | 13/25 [50:56<56:05, 280.49s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455160340> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  14
Best f1_score score: 0.8525922031738593
Generation:  56%|█████▌    | 14/25 [52:45<41:54, 228.56s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554574666e0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.8525922031738593
Generation:  60%|██████    | 15/25 [53:51<29:56, 179.60s/it]Generation:  16
Best f1_score score: 0.8525922031738593
Generation:  64%|██████▍   | 16/25 [55:50<24:12, 161.34s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455065cf0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  17
Best f1_score score: 0.8525922031738593
Generation:  68%|██████▊   | 17/25 [1:00:43<26:46, 200.86s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ee48880> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554548591b0> 

Generation:  18
Best f1_score score: 0.8525922031738593
Generation:  72%|███████▏  | 18/25 [1:10:48<37:36, 322.36s/it]Generation:  19
Best f1_score score: 0.8525922031738593
Generation:  76%|███████▌  | 19/25 [1:12:45<26:03, 260.67s/it]Generation:  20
Best f1_score score: 0.8525922031738593
Generation:  80%|████████  | 20/25 [1:17:54<22:56, 275.24s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452c6ab30> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  21
Best f1_score score: 0.8526446789830494
Generation:  84%|████████▍ | 21/25 [1:19:24<14:39, 219.77s/it]Generation:  22
Best f1_score score: 0.8526446789830494
Generation:  88%|████████▊ | 22/25 [1:22:07<10:07, 202.57s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554550800a0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452d157e0> 

Generation:  23
Best f1_score score: 0.8526446789830494
Generation:  92%|█████████▏| 23/25 [1:32:11<10:46, 323.18s/it]Generation:  24
Best f1_score score: 0.8526446789830494
Generation:  96%|█████████▌| 24/25 [1:32:52<03:58, 238.31s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554568cfac0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  25
Best f1_score score: 0.8526446789830494
Generation: 100%|██████████| 25/25 [1:34:47<00:00, 201.28s/it]Generation: 100%|██████████| 25/25 [1:34:47<00:00, 227.48s/it]
2024-10-24 00:57:23,119 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42319' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'DataFrame-c4fbc14c981988b1ad52aedd0be1e057'} (stimulus_id='handle-worker-cleanup-1729756643.1192665')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='median')),
                ('logisticregression',
                 LogisticRegression(C=4.4993182021966, max_iter=1000, n_jobs=1,
                                    solver='saga'))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9096857205325511, 'accuracy': 0.8623531207080727, 'balanced_accuracy': 0.8462902426896115, 'logloss': 0.3484520090211149, 'f1': 0.8534520016867333}
test score: {'auroc': 0.9133576798077845, 'accuracy': 0.8663819402074435, 'balanced_accuracy': 0.8526123499089326, 'logloss': 0.3417025272688304, 'f1': 0.858535662558009}
original test score: {'auroc': 0.9886266300129566, 'accuracy': 0.9432580841976815, 'balanced_accuracy': 0.9450998339450876, 'logloss': 0.2165150579193595, 'f1': 0.9415270924433319}
score end
725
lvl
0.5
type
MAR
num_run
3
class_full
finished
all finished
full run takes
9.404498297042316
hours
DONE
