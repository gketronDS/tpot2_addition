Run: 55
/cm/local/apps/slurm/var/spool/job928955/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
starting loops
../data/c/32/32.pkl
working on 
../data/c/32/class_full_MAR_0.3_3
3.2505173683166504
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-08-21 07:02:34,691] A new study created in memory with name: no-name-3a2b8ca1-1251-472d-930b-1f3f010fa492
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-08-21 07:02:35,374] Trial 15 finished with value: 0.24860670996779755 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 15 with value: 0.24860670996779755.
running
[I 2024-08-21 07:02:36,084] Trial 0 finished with value: 0.24860670996779755 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 15 with value: 0.24860670996779755.
running
[I 2024-08-21 07:02:41,391] Trial 13 finished with value: 0.06450490782657561 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 141, 'weights': 'uniform'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:41,799] Trial 8 finished with value: 0.06650271791083642 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 295, 'weights': 'distance'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:42,169] Trial 1 finished with value: 0.07622344120009555 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 987, 'weights': 'uniform'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:43,384] Trial 2 finished with value: 0.0823580406568852 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2349, 'weights': 'distance'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:43,774] Trial 4 finished with value: 0.1011330181963469 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5692, 'weights': 'uniform'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:46,179] Trial 14 finished with value: 0.10217289976858124 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7545, 'weights': 'distance'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:47,214] Trial 10 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.815313849948817, 'alpha': 30, 'iterations': 34, 'learning_rate': 0.00015080276823745828, 'p_miss': 0.14618625395932314}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:47,472] Trial 11 finished with value: 0.24825228204107092 and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.8156729930106768, 'alpha': 53, 'iterations': 1, 'learning_rate': 0.0007751166503320079, 'p_miss': 0.21627480086414336}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:48,768] Trial 17 finished with value: 0.24357401394701764 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.5023071589788292, 'alpha': 48, 'iterations': 1, 'learning_rate': 0.001983609037605981, 'p_miss': 0.12615644241963633}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:49,523] Trial 3 finished with value: 0.24194922194324892 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.8805398677897985, 'alpha': 75, 'iterations': 2, 'learning_rate': 0.01245101318961254, 'p_miss': 0.15735404805774283}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:56,831] Trial 23 finished with value: 0.2473959133038126 and parameters: {'model_name': 'GAIN', 'batch_size': 65, 'hint_rate': 0.4742330759522543, 'alpha': 54, 'iterations': 3, 'learning_rate': 0.000588303396953902, 'p_miss': 0.029622343245591105}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:02:57,127] Trial 24 finished with value: 0.10877910520834277 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7606, 'weights': 'uniform'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:03:08,030] Trial 7 finished with value: 0.24659912496509945 and parameters: {'model_name': 'GAIN', 'batch_size': 40, 'hint_rate': 0.15228457851866967, 'alpha': 15, 'iterations': 16, 'learning_rate': 0.005546888848905616, 'p_miss': 0.07306638103829147}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:03:34,372] Trial 28 finished with value: 0.10343890878112223 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:04:01,001] Trial 27 finished with value: 0.0890894667068474 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:04:05,726] Trial 21 finished with value: 0.0721950936242531 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 13 with value: 0.06450490782657561.
running
[I 2024-08-21 07:04:10,079] Trial 32 finished with value: 0.057185242322792415 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 41, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:15,957] Trial 33 finished with value: 0.06955304754523155 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 502, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:21,057] Trial 34 finished with value: 0.08619624837252637 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3156, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:21,847] Trial 19 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.23708812890886227, 'alpha': 64, 'iterations': 405, 'learning_rate': 0.00012712360619035752, 'p_miss': 0.17464886197373364}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:26,278] Trial 35 finished with value: 0.08707609415986253 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2592, 'weights': 'uniform'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:31,024] Trial 36 finished with value: 0.06194721636362187 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 119, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:32,019] Trial 37 finished with value: 0.06571270802558811 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 257, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:33,287] Trial 40 finished with value: 0.11260318504803526 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:35,719] Trial 38 finished with value: 0.058857211122426756 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 61, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:40,837] Trial 39 finished with value: 0.06150386896691148 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 109, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:44,999] Trial 41 finished with value: 0.07849373019521272 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1665, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:46,911] Trial 44 finished with value: 0.111609373051991 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:49,598] Trial 42 finished with value: 0.10530755207454448 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9852, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:04:53,938] Trial 43 finished with value: 0.07985337930021205 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1896, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:05:00,273] Trial 45 finished with value: 0.09061417338879105 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4234, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:05:00,533] Trial 46 finished with value: 0.0784109239031772 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1652, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:05:06,589] Trial 47 finished with value: 0.08964189374055014 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3985, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:05:10,929] Trial 48 finished with value: 0.07574501601766233 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1236, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:05:12,600] Trial 49 finished with value: 0.0750965850251297 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1142, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:05:19,219] Trial 50 finished with value: 0.0752018671711246 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1157, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:05:23,341] Trial 51 finished with value: 0.0738027170781718 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 964, 'weights': 'distance'}. Best is trial 32 with value: 0.057185242322792415.
running
[I 2024-08-21 07:06:03,416] Trial 25 finished with value: 0.05643793711133941 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:06:45,002] Trial 30 finished with value: 0.08722297041521765 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:06:48,015] Trial 31 finished with value: 0.0711978817958313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:07:02,963] Trial 18 finished with value: 0.0738124434341562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:07:07,461] Trial 12 finished with value: 0.11082776407413482 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:07:09,523] Trial 59 finished with value: 0.111609373051991 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:07:20,077] Trial 16 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8095531062414549, 'alpha': 71, 'iterations': 2027, 'learning_rate': 0.002514445584010902, 'p_miss': 0.20628878331332556}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:08:14,496] Trial 29 finished with value: 0.10912818989957813 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:08:28,372] Trial 62 finished with value: 0.05993542190221931 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 79, 'weights': 'distance'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:08:49,486] Trial 63 finished with value: 0.08502150763041673 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2896, 'weights': 'distance'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:09:05,380] Trial 52 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:10:17,556] Trial 55 finished with value: 0.05703570714991825 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:10:49,266] Trial 57 finished with value: 0.058431779936765016 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:11:15,320] Trial 56 finished with value: 0.05703570714991825 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:11:31,422] Trial 58 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:11:48,480] Trial 60 finished with value: 0.056906393829934135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:11:56,242] Trial 61 finished with value: 0.056906393829934135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:12:32,918] Trial 54 finished with value: 0.07156835855432067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:13:13,173] Trial 64 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:13:30,772] Trial 65 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:14:30,812] Trial 66 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:14:49,553] Trial 67 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:15:13,070] Trial 68 finished with value: 0.056906393829934135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:15:15,627] Trial 69 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:15:34,162] Trial 70 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:15:53,801] Trial 71 finished with value: 0.0566563342298802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:15:55,959] Trial 72 finished with value: 0.056906393829934135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:16:35,811] Trial 73 finished with value: 0.05720649511242067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:16:44,543] Trial 74 finished with value: 0.05720649511242067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:17:18,029] Trial 75 finished with value: 0.05720649511242067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:17:21,853] Trial 76 finished with value: 0.05720649511242067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:17:22,452] Trial 6 finished with value: 0.2510410455131268 and parameters: {'model_name': 'GAIN', 'batch_size': 150, 'hint_rate': 0.21029612588894875, 'alpha': 10, 'iterations': 261, 'learning_rate': 0.00018836275267075455, 'p_miss': 0.1587752872315735}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:17:26,421] Trial 77 finished with value: 0.05720649511242067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:17:28,451] Trial 22 finished with value: 0.2624186957309448 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.5565854860470657, 'alpha': 10, 'iterations': 373, 'learning_rate': 0.011780865617267986, 'p_miss': 0.12098711929930538}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:18:33,057] Trial 5 finished with value: 0.25340462730419483 and parameters: {'model_name': 'GAIN', 'batch_size': 45, 'hint_rate': 0.6232646342050198, 'alpha': 35, 'iterations': 1900, 'learning_rate': 0.07251758706896784, 'p_miss': 0.11841608563211777}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 07:19:16,586] Trial 89 finished with value: 0.05669112891674931 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.05643793711133941.
running
[I 2024-08-21 10:12:24,314] Trial 20 finished with value: 0.05237057138585952 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.05237057138585952.
running
[I 2024-08-21 10:13:21,927] Trial 26 finished with value: 0.052477309955794235 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.05237057138585952.
running
[I 2024-08-21 11:14:04,388] Trial 83 finished with value: 0.04997140633113658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 83 with value: 0.04997140633113658.
running
[I 2024-08-21 11:22:26,347] Trial 9 finished with value: 0.04935161537204838 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'roman'}. Best is trial 9 with value: 0.04935161537204838.
running
[I 2024-08-21 11:29:18,594] Trial 79 finished with value: 0.04957542228475739 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 9 with value: 0.04935161537204838.
running
[I 2024-08-21 11:29:23,033] Trial 78 finished with value: 0.04918164485615376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 78 with value: 0.04918164485615376.
running
[I 2024-08-21 11:29:30,478] Trial 80 finished with value: 0.04917939473513153 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 80 with value: 0.04917939473513153.
running
[I 2024-08-21 11:29:51,292] Trial 81 finished with value: 0.04958754653816425 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 80 with value: 0.04917939473513153.
running
[I 2024-08-21 11:30:13,579] Trial 82 finished with value: 0.04957330162491799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 80 with value: 0.04917939473513153.
running
[I 2024-08-21 11:31:15,887] Trial 84 finished with value: 0.04983773559295462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 80 with value: 0.04917939473513153.
running
[I 2024-08-21 11:41:18,964] Trial 53 finished with value: 0.049208644574775515 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 80 with value: 0.04917939473513153.
running
[I 2024-08-21 11:48:28,558] Trial 87 finished with value: 0.04945927492606162 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 80 with value: 0.04917939473513153.
running
[I 2024-08-21 11:48:31,917] Trial 86 finished with value: 0.04919146485779291 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 80 with value: 0.04917939473513153.
running
[I 2024-08-21 11:48:39,790] Trial 85 finished with value: 0.04911374929049817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 11:49:14,399] Trial 88 finished with value: 0.049475628731505836 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 11:49:14,801] Trial 105 finished with value: 0.11260318504803526 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 11:50:11,557] Trial 90 finished with value: 0.04916549673632641 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 12:53:00,786] Trial 91 finished with value: 0.05692843914071425 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 12:54:44,638] Trial 92 finished with value: 0.05581210125554514 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 14:14:18,828] Trial 93 finished with value: 0.055879895564633485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 14:33:47,418] Trial 95 finished with value: 0.05711566750720572 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 14:43:42,962] Trial 107 finished with value: 0.2960254440697131 and parameters: {'model_name': 'GAIN', 'batch_size': 278, 'hint_rate': 0.06426659976782778, 'alpha': 97, 'iterations': 6870, 'learning_rate': 0.04024735468810586, 'p_miss': 0.2784519289778023}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:00:57,324] Trial 94 finished with value: 0.05305715118074713 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:21:29,037] Trial 106 finished with value: 0.2880654871412442 and parameters: {'model_name': 'GAIN', 'batch_size': 440, 'hint_rate': 0.018294175923527167, 'alpha': 99, 'iterations': 7852, 'learning_rate': 0.06637587058887506, 'p_miss': 0.29829886890059754}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:23:09,804] Trial 104 finished with value: 0.26239401583699623 and parameters: {'model_name': 'GAIN', 'batch_size': 530, 'hint_rate': 0.014259604829244377, 'alpha': 95, 'iterations': 5945, 'learning_rate': 0.09569968376390159, 'p_miss': 0.27483061751581983}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:39:25,629] Trial 102 finished with value: 0.2703767065807897 and parameters: {'model_name': 'GAIN', 'batch_size': 457, 'hint_rate': 0.34319157121962285, 'alpha': 99, 'iterations': 9450, 'learning_rate': 0.08738882549543452, 'p_miss': 0.271102328317566}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:43:42,491] Trial 98 finished with value: 0.051615435671149255 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'roman'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:44:34,050] Trial 97 finished with value: 0.05088911372956213 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:46:03,860] Trial 99 finished with value: 0.05139464834394465 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'roman'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:46:19,856] Trial 100 finished with value: 0.05116841216361588 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'roman'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 15:58:23,496] Trial 101 finished with value: 0.051511845756790554 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'roman'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 16:00:57,407] Trial 96 finished with value: 0.05048026301726973 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 17:13:29,002] Trial 103 finished with value: 0.2591431787911477 and parameters: {'model_name': 'GAIN', 'batch_size': 792, 'hint_rate': 0.04213400146519242, 'alpha': 93, 'iterations': 7858, 'learning_rate': 0.09837546538507906, 'p_miss': 0.2756939571888377}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 18:03:20,559] Trial 110 finished with value: 0.2783607238973577 and parameters: {'model_name': 'GAIN', 'batch_size': 787, 'hint_rate': 0.052237049914906575, 'alpha': 92, 'iterations': 5938, 'learning_rate': 0.09588262283185943, 'p_miss': 0.2981258523943122}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 18:34:28,198] Trial 109 finished with value: 0.2623376212648676 and parameters: {'model_name': 'GAIN', 'batch_size': 737, 'hint_rate': 0.035472745068175604, 'alpha': 100, 'iterations': 8841, 'learning_rate': 0.08022845586434164, 'p_miss': 0.29562060579087973}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 18:44:11,126] Trial 111 finished with value: 0.04998793345632062 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 18:53:07,704] Trial 112 finished with value: 0.05072284533438255 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 19:17:43,301] Trial 108 finished with value: 0.2889018955152386 and parameters: {'model_name': 'GAIN', 'batch_size': 882, 'hint_rate': 0.34877240117148256, 'alpha': 80, 'iterations': 9661, 'learning_rate': 0.07109367974177651, 'p_miss': 0.29629362486128097}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 19:56:40,680] Trial 116 finished with value: 0.05016062209030829 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 85 with value: 0.04911374929049817.
running
[I 2024-08-21 19:57:00,681] Trial 113 finished with value: 0.04879281568156463 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 113 with value: 0.04879281568156463.
running
[I 2024-08-21 19:57:18,679] Trial 130 finished with value: 0.07123760873810372 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 113 with value: 0.04879281568156463.
running
[I 2024-08-21 19:57:18,896] Trial 131 finished with value: 0.24860670996779755 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 113 with value: 0.04879281568156463.
running
[I 2024-08-21 20:14:43,360] Trial 114 finished with value: 0.04909667154926007 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 113 with value: 0.04879281568156463.
running
[I 2024-08-21 20:16:54,321] Trial 115 finished with value: 0.049303284716957836 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 113 with value: 0.04879281568156463.
running
[I 2024-08-21 20:33:22,579] Trial 117 finished with value: 0.04877822904948219 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 117 with value: 0.04877822904948219.
running
[I 2024-08-21 20:33:54,092] Trial 118 finished with value: 0.048891768032350756 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 117 with value: 0.04877822904948219.
running
[I 2024-08-21 20:35:27,776] Trial 120 finished with value: 0.04889007099083485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 117 with value: 0.04877822904948219.
running
[I 2024-08-21 20:35:42,233] Trial 119 finished with value: 0.04887881136733954 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 117 with value: 0.04877822904948219.
running
[I 2024-08-21 20:45:36,007] Trial 121 finished with value: 0.048746309394825334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 121 with value: 0.048746309394825334.
running
[I 2024-08-21 20:47:32,711] Trial 122 finished with value: 0.04870081719020948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-21 21:51:24,162] Trial 123 finished with value: 0.04914146760708095 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-21 22:33:27,364] Trial 124 finished with value: 0.049465658743513066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-21 23:01:41,801] Trial 125 finished with value: 0.04888343570222294 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-21 23:10:17,347] Trial 126 finished with value: 0.04909371705016569 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-21 23:12:34,260] Trial 144 finished with value: 0.10608727874572847 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-21 23:20:08,961] Trial 127 finished with value: 0.04929630093199138 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-21 23:42:54,722] Trial 128 finished with value: 0.04944249165576011 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-22 00:22:05,837] Trial 129 finished with value: 0.050106583622553914 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-22 00:22:17,148] Trial 132 finished with value: 0.04911065834963142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-22 00:40:08,694] Trial 133 finished with value: 0.0487414181351119 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-22 00:40:35,004] Trial 150 finished with value: 0.0712375817787138 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-22 00:42:33,246] Trial 134 finished with value: 0.049040019726447004 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.04870081719020948.
running
[I 2024-08-22 00:59:20,116] Trial 136 finished with value: 0.048686697142419536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.048686697142419536.
running
[I 2024-08-22 00:59:35,721] Trial 135 finished with value: 0.04897516040403547 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.048686697142419536.
running
[I 2024-08-22 01:00:40,915] Trial 137 finished with value: 0.048757566331754244 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.048686697142419536.
running
[I 2024-08-22 01:01:19,362] Trial 138 finished with value: 0.04921471664438731 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.048686697142419536.
running
[I 2024-08-22 01:10:52,446] Trial 139 finished with value: 0.048937878214281395 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.048686697142419536.
running
[I 2024-08-22 01:12:52,938] Trial 140 finished with value: 0.048747567197086165 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.048686697142419536.
running
[I 2024-08-22 02:17:08,208] Trial 141 finished with value: 0.04895176954133865 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.048686697142419536.
running
[I 2024-08-22 02:50:24,139] Trial 153 finished with value: 0.061061976244482744 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.048686697142419536.
running
[I 2024-08-22 02:58:33,530] Trial 142 finished with value: 0.04865397620405962 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 02:58:33,872] Trial 161 finished with value: 0.24860670996779755 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 03:26:39,949] Trial 143 finished with value: 0.048737633839057846 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 03:37:16,232] Trial 145 finished with value: 0.04913226946974205 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 03:39:35,343] Trial 164 finished with value: 0.10823368865100078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 03:45:15,248] Trial 146 finished with value: 0.049241532645753795 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 04:07:41,348] Trial 147 finished with value: 0.049189962059964835 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 04:46:06,901] Trial 148 finished with value: 0.04926641363003037 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 04:46:35,444] Trial 149 finished with value: 0.04869777079626451 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 05:05:27,315] Trial 151 finished with value: 0.04928425359735792 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 05:06:42,851] Trial 152 finished with value: 0.04897886950121433 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 05:23:10,150] Trial 154 finished with value: 0.04881702925334118 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 05:24:17,302] Trial 155 finished with value: 0.04955823585829412 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 05:24:51,744] Trial 156 finished with value: 0.04872015010102578 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 05:33:47,816] Trial 157 finished with value: 0.04892768402378755 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 05:37:26,384] Trial 158 finished with value: 0.04919912609968674 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 06:40:01,596] Trial 159 finished with value: 0.04914472958623344 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 142 with value: 0.04865397620405962.
running
[I 2024-08-22 07:12:54,383] Trial 160 finished with value: 0.04857491412084607 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 07:21:38,327] Trial 162 finished with value: 0.04944267774774912 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 07:48:38,208] Trial 163 finished with value: 0.04925063265054612 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 08:00:58,426] Trial 165 finished with value: 0.04919241631022829 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 08:01:24,413] Trial 181 finished with value: 0.07221816666934677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 08:06:18,696] Trial 166 finished with value: 0.048603148314934654 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 08:28:48,567] Trial 167 finished with value: 0.04899128801597173 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:07:31,974] Trial 168 finished with value: 0.049310147623853974 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:07:37,071] Trial 169 finished with value: 0.04881780245805638 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:12:04,476] Trial 171 finished with value: 0.04982486440002844 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:28:00,038] Trial 170 finished with value: 0.04894447642790379 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:29:27,240] Trial 173 finished with value: 0.049542064332491996 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:30:04,219] Trial 174 finished with value: 0.04957363970781688 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:38:35,411] Trial 175 finished with value: 0.049630331364339274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:38:35,729] Trial 191 finished with value: 0.24860670996779755 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:43:35,240] Trial 176 finished with value: 0.04937589656053063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 09:45:35,313] Trial 172 finished with value: 0.04899348248928659 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 10:29:25,417] Trial 193 finished with value: 0.10177293634796598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 10:45:36,184] Trial 177 finished with value: 0.05004483133685918 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 11:18:17,635] Trial 178 finished with value: 0.0492439108921888 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 11:27:27,516] Trial 179 finished with value: 0.049229929796584075 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 11:29:28,084] Trial 198 finished with value: 0.0711979008510473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 160 with value: 0.04857491412084607.
running
[I 2024-08-22 11:55:39,130] Trial 180 finished with value: 0.04894477039186844 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 12:08:20,657] Trial 182 finished with value: 0.04952226374056531 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 12:12:48,396] Trial 183 finished with value: 0.049363480362030386 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 12:34:55,443] Trial 184 finished with value: 0.0498106422890939 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 13:12:20,663] Trial 185 finished with value: 0.049400284135515095 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 13:12:31,764] Trial 186 finished with value: 0.04962261263653532 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 13:17:21,461] Trial 187 finished with value: 0.04961353459901556 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 13:32:47,653] Trial 188 finished with value: 0.04935392938662375 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 13:34:11,605] Trial 189 finished with value: 0.049174008837943074 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 13:34:36,813] Trial 190 finished with value: 0.04899307556976927 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 13:58:44,622] Trial 192 finished with value: 0.04934760132861534 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 14:05:46,675] Trial 194 finished with value: 0.04894607781401307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 14:47:05,725] Trial 195 finished with value: 0.04877554227926043 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 15:03:07,509] Trial 196 finished with value: 0.04956239113082245 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 15:35:11,452] Trial 197 finished with value: 0.04915040726235843 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
[I 2024-08-22 15:44:25,709] Trial 199 finished with value: 0.048726096255136325 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.04857491412084607.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0.04857491412084607
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b49ae0> 

Generation:  1
Best f1_score score: 0.988273425035435
Generation:   4%|▍         | 1/25 [10:00<4:00:21, 600.90s/it]Generation:  2
Best f1_score score: 0.988273425035435
Generation:   8%|▊         | 2/25 [18:57<3:35:52, 563.13s/it]Generation:  3
Best f1_score score: 0.988273425035435
Generation:  12%|█▏        | 3/25 [22:29<2:27:36, 402.55s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b4b850> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  4
Best f1_score score: 0.988273425035435
Generation:  16%|█▌        | 4/25 [24:16<1:40:10, 286.20s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547542c7c0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  5
Best f1_score score: 0.988273425035435
Generation:  20%|██        | 5/25 [25:53<1:12:33, 217.67s/it]Generation:  6
Best f1_score score: 0.988273425035435
Generation:  24%|██▍       | 6/25 [26:57<52:25, 165.57s/it]  Generation:  7
Best f1_score score: 0.989075243301879
Generation:  28%|██▊       | 7/25 [28:31<42:37, 142.10s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554753a4b50> 

Generation:  8
Best f1_score score: 0.9902999956029841
Generation:  32%|███▏      | 8/25 [38:36<1:22:03, 289.63s/it]Generation:  9
Best f1_score score: 0.9902999956029841
Generation:  36%|███▌      | 9/25 [42:07<1:10:36, 264.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554753aedd0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  10
Best f1_score score: 0.9902999956029841
Generation:  40%|████      | 10/25 [43:30<52:14, 208.98s/it] Generation:  11
Best f1_score score: 0.9902999956029841
Generation:  44%|████▍     | 11/25 [47:16<49:57, 214.11s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474eaffd0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  12
Best f1_score score: 0.9902999956029841
Generation:  48%|████▊     | 12/25 [49:13<39:56, 184.36s/it]Generation:  13
Best f1_score score: 0.9917063187597888
Generation:  52%|█████▏    | 13/25 [50:16<29:32, 147.69s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474e4d3c0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554752536d0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  14
Best f1_score score: 0.9917063187597888
Generation:  56%|█████▌    | 14/25 [53:55<31:03, 169.37s/it]Generation:  15
Best f1_score score: 0.9917063187597888
Generation:  60%|██████    | 15/25 [55:33<24:38, 147.85s/it]Generation:  16
Best f1_score score: 0.9917063187597888
Generation:  64%|██████▍   | 16/25 [56:38<18:25, 122.85s/it]Generation:  17
Best f1_score score: 0.9917063187597888
Generation:  68%|██████▊   | 17/25 [57:16<12:59, 97.39s/it] Generation:  18
Best f1_score score: 0.9917063187597888
Generation:  72%|███████▏  | 18/25 [1:00:27<14:38, 125.54s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547479e1a0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  19
Best f1_score score: 0.9917063187597888
Generation:  76%|███████▌  | 19/25 [1:06:26<19:33, 195.59s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554744e70d0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  20
Best f1_score score: 0.9917063187597888
Generation:  80%|████████  | 20/25 [1:08:28<14:26, 173.32s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547448bac0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547451c4c0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  21
Best f1_score score: 0.9917063187597888
Generation:  84%|████████▍ | 21/25 [1:11:58<12:18, 184.55s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747b9ba0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  22
Best f1_score score: 0.9917063187597888
Generation:  88%|████████▊ | 22/25 [1:12:22<06:48, 136.16s/it]Generation:  23
Best f1_score score: 0.9917063187597888
Generation:  92%|█████████▏| 23/25 [1:14:27<04:25, 132.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741f56c0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547451ba00> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547544aa40> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  24
Best f1_score score: 0.9917063187597888
Generation:  96%|█████████▌| 24/25 [1:17:51<02:34, 154.16s/it]Generation:  25
Best f1_score score: 0.9917063187597888
Generation: 100%|██████████| 25/25 [1:19:50<00:00, 143.73s/it]Generation: 100%|██████████| 25/25 [1:19:54<00:00, 191.79s/it]
2024-08-22 17:30:44,797 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33113' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-1f9122a3dadacefe51c68266ddae4833', 'ndarray-c87c01894fdb82e7da35716f163bedfb'} (stimulus_id='handle-worker-cleanup-1724373044.7969887')
Fitted
Pipeline(steps=[('svc',
                 SVC(C=510.4307013186157, class_weight='balanced',
                     gamma=3.1487947177162, max_iter=3000, probability=True))])
score start
train score: {'auroc': 1.0, 'accuracy': 0.9998989082086535, 'balanced_accuracy': 0.9998946259220233, 'logloss': 0.010687529541459143, 'f1': 0.9998989060884165}
original test score: {'auroc': 0.9999715887122665, 'accuracy': 0.9945454545454545, 'balanced_accuracy': 0.9946044356173452, 'logloss': 0.026971938498704717, 'f1': 0.994541002948159}
imputed test score: {'auroc': 0.9998647020967976, 'accuracy': 0.9881818181818182, 'balanced_accuracy': 0.9880668652763985, 'logloss': 0.042509594850134634, 'f1': 0.9881982451178967}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155436506230>
Start tpot fit
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bb9cf0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b46800> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b445b0> 

Generation:  1
Best f1_score score: 0.988487137636904
Generation:   4%|▍         | 1/25 [10:02<4:00:51, 602.14s/it]Generation:  2
Best f1_score score: 0.9889795774628818
Generation:   8%|▊         | 2/25 [13:04<2:16:08, 355.17s/it]Generation:  3
Best f1_score score: 0.9889795774628818
Generation:  12%|█▏        | 3/25 [16:05<1:41:01, 275.54s/it]Generation:  4
Best f1_score score: 0.9889795774628818
Generation:  16%|█▌        | 4/25 [19:07<1:23:34, 238.80s/it]Generation:  5
Best f1_score score: 0.9897926015510089
Generation:  20%|██        | 5/25 [21:06<1:05:10, 195.52s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545795e110> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474b17250> 

Generation:  6
Best f1_score score: 0.9904997289501646
Generation:  24%|██▍       | 6/25 [31:10<1:45:55, 334.48s/it]Generation:  7
Best f1_score score: 0.9904997289501646
Generation:  28%|██▊       | 7/25 [33:22<1:20:29, 268.33s/it]Generation:  8
Best f1_score score: 0.9907950321254928
Generation:  32%|███▏      | 8/25 [35:51<1:05:11, 230.08s/it]Generation:  9
Best f1_score score: 0.9907950321254928
Generation:  36%|███▌      | 9/25 [38:28<55:20, 207.51s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474bd4250> 

Generation:  10
Best f1_score score: 0.9907950321254928
Generation:  40%|████      | 10/25 [48:33<1:22:29, 329.98s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547441ca90> 

Generation:  11
Best f1_score score: 0.9907950321254928
Generation:  44%|████▍     | 11/25 [58:35<1:36:27, 413.38s/it]Generation:  12
Best f1_score score: 0.9907950321254928
Generation:  48%|████▊     | 12/25 [1:00:43<1:10:46, 326.67s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547441fa60> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.9907950321254928
Generation:  52%|█████▏    | 13/25 [1:02:38<52:30, 262.51s/it]  Generation:  14
Best f1_score score: 0.9907950321254928
Generation:  56%|█████▌    | 14/25 [1:04:37<40:08, 218.96s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474820b20> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475be12d0> 

Generation:  15
Best f1_score score: 0.9907950321254928
Generation:  60%|██████    | 15/25 [1:14:41<55:50, 335.05s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b5c5f30> 

Generation:  16
Best f1_score score: 0.9908060160537107
Generation:  64%|██████▍   | 16/25 [1:24:46<1:02:28, 416.48s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457925780> 

Generation:  17
Best f1_score score: 0.9908060160537107
Generation:  68%|██████▊   | 17/25 [1:34:51<1:03:04, 473.11s/it]Generation:  18
Best f1_score score: 0.9908061585222031
Generation:  72%|███████▏  | 18/25 [1:41:52<53:22, 457.46s/it]  Generation:  19
Best f1_score score: 0.990901805397727
Generation:  76%|███████▌  | 19/25 [1:45:27<38:28, 384.74s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457f16260> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455350b50> 

Generation:  20
Best f1_score score: 0.990901805397727
Generation:  80%|████████  | 20/25 [1:55:32<37:34, 450.83s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545c592ef0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547544df90> 

Generation:  21
Best f1_score score: 0.990901805397727
Generation:  84%|████████▍ | 21/25 [2:05:37<33:07, 496.96s/it]Generation:  22
Best f1_score score: 0.990901805397727
Generation:  88%|████████▊ | 22/25 [2:12:09<23:16, 465.57s/it]Generation:  23
Best f1_score score: 0.9915080056341699
Generation:  92%|█████████▏| 23/25 [2:16:13<13:18, 399.07s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fca5270> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.9915080056341699
Generation:  96%|█████████▌| 24/25 [2:19:51<05:44, 344.63s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bb7130> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553e0282dd0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15544eb13790> 

Generation:  25
Best f1_score score: 0.9915080056341699
Generation: 100%|██████████| 25/25 [2:29:55<00:00, 422.63s/it]Generation: 100%|██████████| 25/25 [2:29:55<00:00, 359.84s/it]
2024-08-22 20:01:07,047 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46209' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-1f9122a3dadacefe51c68266ddae4833', 'DataFrame-00705006447137078a0ae09a55af77ec'} (stimulus_id='handle-worker-cleanup-1724382067.0474699')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=2, weights='distance')),
                ('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=True,
                                                l2_regularization=4.043612e-07,
                                                learning_rate=0.1923075103894,
                                                max_features=0.3723341231455,
                                                max_leaf_nodes=1500,
                                                min_samples_leaf=184,
                                                n_iter_no_change=3, tol=0.0001,
                                                validation_fraction=None))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 0.00013543830531517466, 'f1': 1.0}
test score: {'auroc': 0.9998173030155975, 'accuracy': 0.9927272727272727, 'balanced_accuracy': 0.9926514399205562, 'logloss': 0.030729503225674738, 'f1': 0.9927431408840481}
original test score: {'auroc': 0.9999677348991483, 'accuracy': 0.9936363636363637, 'balanced_accuracy': 0.9936610393909302, 'logloss': 0.02103829121399466, 'f1': 0.9936428189706782}
score end
32
lvl
0.3
type
MAR
num_run
3
class_full
finished
all finished
full run takes
36.98865950723489
hours
DONE
