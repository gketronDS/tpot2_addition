Run: 36
/cm/local/apps/slurm/var/spool/job1046154/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1489/1489.pkl
working on 
../data/c/1489/class_full_MNAR_0.5_2
2.4944634437561035
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-12 09:17:21,178] A new study created in memory with name: no-name-622c9545-226d-461f-817c-61d42301880a
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-12 09:17:21,400] Trial 13 finished with value: 0.18183965913352423 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 13 with value: 0.18183965913352423.
running
[I 2024-11-12 09:17:21,658] Trial 16 finished with value: 0.18183965913352423 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 13 with value: 0.18183965913352423.
running
[I 2024-11-12 09:17:22,669] Trial 6 finished with value: 0.21348003915405694 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1120, 'weights': 'distance'}. Best is trial 13 with value: 0.18183965913352423.
running
[I 2024-11-12 09:17:22,918] Trial 15 finished with value: 0.17968733884136678 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2447, 'weights': 'uniform'}. Best is trial 15 with value: 0.17968733884136678.
running
[I 2024-11-12 09:17:23,156] Trial 4 finished with value: 0.21342121328926375 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1006, 'weights': 'distance'}. Best is trial 15 with value: 0.17968733884136678.
running
[I 2024-11-12 09:17:23,365] Trial 0 finished with value: 0.17908298637562606 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2075, 'weights': 'uniform'}. Best is trial 0 with value: 0.17908298637562606.
running
[I 2024-11-12 09:17:23,675] Trial 9 finished with value: 0.21484951460351445 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3232, 'weights': 'distance'}. Best is trial 0 with value: 0.17908298637562606.
[I 2024-11-12 09:17:23,860] Trial 20 finished with value: 0.31540039399951425 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.17908298637562606.
running
running
[I 2024-11-12 09:17:24,057] Trial 21 finished with value: 0.25561505898982173 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.17908298637562606.
[I 2024-11-12 09:17:24,226] Trial 17 finished with value: 0.17799454048728813 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 752, 'weights': 'uniform'}. Best is trial 17 with value: 0.17799454048728813.
running
running
[I 2024-11-12 09:17:24,860] Trial 18 finished with value: 0.17819882104106252 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1128, 'weights': 'uniform'}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:17:25,238] Trial 1 finished with value: 0.18705999527840927 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:17:25,505] Trial 23 finished with value: 0.21329123702518285 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 825, 'weights': 'distance'}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:17:27,034] Trial 28 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.23299592050891393, 'alpha': 36, 'iterations': 2, 'learning_rate': 0.00404035417093139, 'p_miss': 0.2681159215888995}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:17:29,762] Trial 25 finished with value: 0.2925465845504496 and parameters: {'model_name': 'GAIN', 'batch_size': 47, 'hint_rate': 0.6797953635938172, 'alpha': 8, 'iterations': 1, 'learning_rate': 0.0025995059960607927, 'p_miss': 0.02884656960856752}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:17:30,806] Trial 22 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.7499431594634187, 'alpha': 72, 'iterations': 11, 'learning_rate': 0.0012410867602710683, 'p_miss': 0.26880681092521874}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:17:48,013] Trial 8 finished with value: 0.27348950724701765 and parameters: {'model_name': 'GAIN', 'batch_size': 85, 'hint_rate': 0.5521285176855326, 'alpha': 29, 'iterations': 10, 'learning_rate': 0.003918672106654815, 'p_miss': 0.25479106654408784}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:17:58,520] Trial 12 finished with value: 0.2887588390350663 and parameters: {'model_name': 'GAIN', 'batch_size': 317, 'hint_rate': 0.8060710779512538, 'alpha': 52, 'iterations': 15, 'learning_rate': 0.00014631673922016266, 'p_miss': 0.0873118218176761}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:21:32,380] Trial 5 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.8138479430226638, 'alpha': 75, 'iterations': 596, 'learning_rate': 0.03966370399426243, 'p_miss': 0.1850430746928445}. Best is trial 17 with value: 0.17799454048728813.
running
[I 2024-11-12 09:23:36,182] Trial 2 finished with value: 0.11814834091710132 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 89, 'learning_rate': 0.0011879029287725675, 'p_miss': 0.0972568208391768}. Best is trial 2 with value: 0.11814834091710132.
running
[I 2024-11-12 09:24:34,633] Trial 3 finished with value: 0.28308394319390034 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.39226168341727313, 'alpha': 80, 'iterations': 198, 'learning_rate': 0.0038433012819001073, 'p_miss': 0.19089146914675043}. Best is trial 2 with value: 0.11814834091710132.
running
[I 2024-11-12 09:27:06,616] Trial 19 finished with value: 0.19648737490598117 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 2 with value: 0.11814834091710132.
running
[I 2024-11-12 09:30:33,166] Trial 7 finished with value: 0.19059229127552144 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 2 with value: 0.11814834091710132.
running
[I 2024-11-12 09:31:22,685] Trial 14 finished with value: 0.11937262188720155 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 150, 'learning_rate': 0.000266360916603444, 'p_miss': 0.06405138124660947}. Best is trial 2 with value: 0.11814834091710132.
running
[I 2024-11-12 09:33:08,746] Trial 11 finished with value: 0.21634562245867534 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 203, 'learning_rate': 0.00440854682198162, 'p_miss': 0.27882054685912305}. Best is trial 2 with value: 0.11814834091710132.
running
[I 2024-11-12 12:33:21,528] Trial 39 finished with value: 0.19938681424518176 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 2286, 'learning_rate': 0.00025086391530588364, 'p_miss': 0.0985231368901083}. Best is trial 2 with value: 0.11814834091710132.
running
[I 2024-11-12 12:36:46,264] Trial 27 finished with value: 0.28655570959859544 and parameters: {'model_name': 'GAIN', 'batch_size': 32, 'hint_rate': 0.5011286537267376, 'alpha': 94, 'iterations': 5909, 'learning_rate': 0.014725548725320283, 'p_miss': 0.15469326195193664}. Best is trial 2 with value: 0.11814834091710132.
running
[I 2024-11-12 12:37:20,286] Trial 41 finished with value: 0.1143998631264598 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 57, 'learning_rate': 0.0004893592997394192, 'p_miss': 0.014262806137656486}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 12:41:04,645] Trial 43 finished with value: 0.115402962793108 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 60, 'learning_rate': 0.0006014746665552348, 'p_miss': 0.028401562743850542}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 12:42:15,708] Trial 42 finished with value: 0.12029004120297786 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 70, 'learning_rate': 0.0005301722355783458, 'p_miss': 0.013427410196141853}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 12:44:01,486] Trial 45 finished with value: 0.1186710454858099 and parameters: {'model_name': 'VAE', 'batch_size': 124, 'iterations': 29, 'learning_rate': 0.0006423774516983347, 'p_miss': 0.04868955597422262}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 12:44:05,290] Trial 44 finished with value: 0.11772343383092806 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 40, 'learning_rate': 0.0006820855888868144, 'p_miss': 0.019213737873429365}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 12:47:22,894] Trial 46 finished with value: 0.11834450751601891 and parameters: {'model_name': 'VAE', 'batch_size': 312, 'iterations': 40, 'learning_rate': 0.0007371432474554693, 'p_miss': 0.05078888237553129}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 12:48:31,577] Trial 47 finished with value: 0.11914893223001025 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 50, 'learning_rate': 0.0008834221348705498, 'p_miss': 0.011294552369201015}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 12:53:11,300] Trial 48 finished with value: 0.12109395244683921 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 83, 'learning_rate': 0.001074177812410156, 'p_miss': 0.01612320281760921}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:31:09,291] Trial 50 finished with value: 0.1572793018530862 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 599, 'learning_rate': 0.00033308492373285793, 'p_miss': 0.10926238594550342}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:31:31,780] Trial 51 finished with value: 0.11770799233188296 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 5, 'learning_rate': 0.0015543392005973936, 'p_miss': 0.0662939764074883}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:31:49,726] Trial 52 finished with value: 0.11725790335818502 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 5, 'learning_rate': 0.001954791550847071, 'p_miss': 0.049234976249603046}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:32:06,183] Trial 53 finished with value: 0.12040012668535645 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 4, 'learning_rate': 0.0018213053784239674, 'p_miss': 0.07165552075726113}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:32:27,387] Trial 54 finished with value: 0.12094258810875688 and parameters: {'model_name': 'VAE', 'batch_size': 65, 'iterations': 4, 'learning_rate': 0.010498389952622648, 'p_miss': 0.04564835240986381}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:32:48,824] Trial 55 finished with value: 0.12971630162054879 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 5, 'learning_rate': 0.0003949940924554153, 'p_miss': 0.12462423346108772}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:34:41,737] Trial 56 finished with value: 0.11657175972705303 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 25, 'learning_rate': 0.002055735931086245, 'p_miss': 0.03699803545134317}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:35:54,081] Trial 57 finished with value: 0.1151480557818638 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 18, 'learning_rate': 0.0018620739183495582, 'p_miss': 0.03800498962720818}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:36:01,747] Trial 58 finished with value: 0.20476772386800582 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:37:27,995] Trial 59 finished with value: 0.1152610398759651 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 21, 'learning_rate': 0.0025492538547375585, 'p_miss': 0.03701114024628217}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:37:29,253] Trial 49 finished with value: 0.19179211268704216 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 676, 'learning_rate': 0.0017605376069214, 'p_miss': 0.11505141396658425}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:38:57,349] Trial 60 finished with value: 0.15518115206635325 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 18, 'learning_rate': 0.008715661561076983, 'p_miss': 0.03348654188752475}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:39:01,231] Trial 61 finished with value: 0.1583928404351606 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 23, 'learning_rate': 0.008829977710039046, 'p_miss': 0.03755914566512874}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:39:09,381] Trial 63 finished with value: 0.18671656194722197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:39:49,462] Trial 62 finished with value: 0.1321378400671264 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 23, 'learning_rate': 0.0066472592230232145, 'p_miss': 0.07948777034907419}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:46:32,021] Trial 64 finished with value: 0.11582099107364832 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 106, 'learning_rate': 0.00016123524261197082, 'p_miss': 0.08173562777336049}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:46:50,496] Trial 65 finished with value: 0.17130615322714776 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 126, 'learning_rate': 0.0022299450011674547, 'p_miss': 0.03202975243938938}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:52:06,388] Trial 67 finished with value: 0.13131418165978143 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 71, 'learning_rate': 0.00010521043033539654, 'p_miss': 0.05739280800445009}. Best is trial 41 with value: 0.1143998631264598.
running
[I 2024-11-12 13:56:00,083] Trial 66 finished with value: 0.11438028608414716 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 134, 'learning_rate': 0.00021264345010378488, 'p_miss': 0.033102345158490754}. Best is trial 66 with value: 0.11438028608414716.
running
[I 2024-11-12 14:16:45,835] Trial 68 finished with value: 0.11505850728173835 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 286, 'learning_rate': 0.00020377071178453274, 'p_miss': 0.03063481327822855}. Best is trial 66 with value: 0.11438028608414716.
running
[I 2024-11-12 14:19:57,906] Trial 69 finished with value: 0.11308255653493562 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 338, 'learning_rate': 0.00017441488925915347, 'p_miss': 0.22656867889972698}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 14:19:58,373] Trial 71 finished with value: 0.31540039399951425 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 14:39:46,703] Trial 70 finished with value: 0.11506995028902837 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 293, 'learning_rate': 0.00017716571117003683, 'p_miss': 0.2264012395254556}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 14:39:57,960] Trial 72 finished with value: 0.125811972450309 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 300, 'learning_rate': 0.00018386159528362158, 'p_miss': 0.23442422948255895}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 14:40:08,337] Trial 74 finished with value: 0.19435396174258274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 14:40:09,745] Trial 73 finished with value: 0.2466078304077247 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 14:40:11,041] Trial 75 finished with value: 0.21490016837665377 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4304, 'weights': 'distance'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 14:58:36,062] Trial 77 finished with value: 0.11963751397675992 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 284, 'learning_rate': 0.00010355764044900054, 'p_miss': 0.21913908347739006}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 15:03:35,626] Trial 76 finished with value: 0.11996075412467837 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 285, 'learning_rate': 0.00021604841091739233, 'p_miss': 0.2318956247450027}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 15:47:18,994] Trial 36 finished with value: 0.20197428727402195 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 5835, 'learning_rate': 0.00032893267008650905, 'p_miss': 0.1034183471113852}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 15:55:36,488] Trial 34 finished with value: 0.1889685103189171 and parameters: {'model_name': 'VAE', 'batch_size': 527, 'iterations': 5266, 'learning_rate': 0.09650355382111381, 'p_miss': 0.15082563344109018}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 15:55:37,152] Trial 81 finished with value: 0.31540039399951425 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:15:14,105] Trial 78 finished with value: 0.1673547673877677 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 1144, 'learning_rate': 0.00018470634128217985, 'p_miss': 0.20212318683511632}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:17:29,248] Trial 79 finished with value: 0.19216578358972536 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 1190, 'learning_rate': 0.0003785577507432936, 'p_miss': 0.29532652129657916}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:26:03,313] Trial 40 finished with value: 0.19888819427218665 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 6457, 'learning_rate': 0.00020236633312762544, 'p_miss': 0.09602592937796751}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:26:37,512] Trial 83 finished with value: 0.1200442749826341 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 174, 'learning_rate': 0.00012928476930285538, 'p_miss': 0.1864122753936674}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:27:20,108] Trial 85 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.024995096358712665, 'alpha': 0, 'iterations': 224, 'learning_rate': 0.00013520769700299615, 'p_miss': 0.18682124616802034}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:27:22,118] Trial 86 finished with value: 0.11753996378162845 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 12, 'learning_rate': 0.00299761034163747, 'p_miss': 0.024378286678101272}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:30:43,697] Trial 84 finished with value: 0.11667267511288415 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 201, 'learning_rate': 0.00013502568352328896, 'p_miss': 0.1926128251625116}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:43:37,321] Trial 10 finished with value: 0.25423061643709977 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8918, 'learning_rate': 0.016414765695954514, 'p_miss': 0.06157673834674276}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:49:56,354] Trial 87 finished with value: 0.14491267406640382 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 360, 'learning_rate': 0.00046491154896836516, 'p_miss': 0.024629613640468506}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:49:57,757] Trial 91 finished with value: 0.18227138214289193 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 42, 'weights': 'uniform'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:53:49,052] Trial 92 finished with value: 0.12220852648221829 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 54, 'learning_rate': 0.00027040276949578116, 'p_miss': 0.1665593949698757}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:55:00,889] Trial 88 finished with value: 0.1636817589276081 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 418, 'learning_rate': 0.0005028238540085533, 'p_miss': 0.2555479103765646}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:57:42,918] Trial 89 finished with value: 0.16927296882299564 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 415, 'learning_rate': 0.0004603391615827368, 'p_miss': 0.16842505661277474}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 16:58:34,226] Trial 82 finished with value: 0.11912862448759091 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1087, 'learning_rate': 0.00013599209763764854, 'p_miss': 0.19648034888474336}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:00:54,658] Trial 94 finished with value: 0.1224411240313861 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 112, 'learning_rate': 0.00024271984089697273, 'p_miss': 0.039544613880375834}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:04:00,208] Trial 95 finished with value: 0.11694126907426956 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 97, 'learning_rate': 0.00026125593366525227, 'p_miss': 0.010773980435453655}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:04:30,418] Trial 80 finished with value: 0.1327401852101717 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1124, 'learning_rate': 0.00014368729089814025, 'p_miss': 0.1970721012713597}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:06:43,102] Trial 98 finished with value: 0.12007204903154509 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 44, 'learning_rate': 0.00017309596998878277, 'p_miss': 0.13582062559976493}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:07:31,510] Trial 96 finished with value: 0.11514590280076513 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 115, 'learning_rate': 0.00025165796638827265, 'p_miss': 0.04214235457334402}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:07:31,833] Trial 101 finished with value: 0.31540039399951425 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:09:16,183] Trial 97 finished with value: 0.1132728001555714 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 105, 'learning_rate': 0.00029736994848294975, 'p_miss': 0.012283174524198599}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:10:06,647] Trial 103 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 49, 'hint_rate': 0.02720501350682547, 'alpha': 53, 'iterations': 155, 'learning_rate': 0.00031780175583610864, 'p_miss': 0.02156738846322078}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:10:12,377] Trial 90 finished with value: 0.16620502757584213 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 461, 'learning_rate': 0.000464118500599755, 'p_miss': 0.25216415543598664}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:10:45,664] Trial 104 finished with value: 0.12111360913823029 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 9, 'learning_rate': 0.00030906470093001076, 'p_miss': 0.05550756930530758}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:14:33,427] Trial 99 finished with value: 0.21536682101329702 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 151, 'learning_rate': 0.004941390877037166, 'p_miss': 0.021638508337863606}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:15:03,037] Trial 106 finished with value: 0.1875682633278867 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 66, 'learning_rate': 0.004795169835573665, 'p_miss': 0.02639919022637572}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:15:54,195] Trial 100 finished with value: 0.15499671562220113 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 139, 'learning_rate': 0.0012335628745227486, 'p_miss': 0.05582809039365727}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:17:19,782] Trial 108 finished with value: 0.11328377732313352 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 33, 'learning_rate': 0.0010305826052908098, 'p_miss': 0.046996529335329926}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:18:52,483] Trial 102 finished with value: 0.12136743504385332 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 147, 'learning_rate': 0.00029176174902614636, 'p_miss': 0.05375709537732738}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:18:54,639] Trial 107 finished with value: 0.1265639789591736 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 60, 'learning_rate': 0.0013486001975164608, 'p_miss': 0.04548733224305831}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:18:56,187] Trial 112 finished with value: 0.18183965913352423 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4098, 'weights': 'uniform'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:19:06,992] Trial 38 finished with value: 0.20093637309980159 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 7371, 'learning_rate': 0.00018848860972924794, 'p_miss': 0.10917315858761037}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:19:23,497] Trial 110 finished with value: 0.11563511154068559 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 33, 'learning_rate': 0.0009697654957753133, 'p_miss': 0.04152588623998392}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:20:24,588] Trial 115 finished with value: 0.12126038361115507 and parameters: {'model_name': 'VAE', 'batch_size': 38, 'iterations': 14, 'learning_rate': 0.0002197542579949135, 'p_miss': 0.06466101761738875}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:20:37,127] Trial 113 finished with value: 0.1279051228189147 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 33, 'learning_rate': 0.00022112681908509175, 'p_miss': 0.041765263339002434}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:21:20,379] Trial 111 finished with value: 0.12085951984830365 and parameters: {'model_name': 'VAE', 'batch_size': 36, 'iterations': 37, 'learning_rate': 0.00022061527976597868, 'p_miss': 0.041865758472795556}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:21:26,393] Trial 114 finished with value: 0.1148111456299558 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 32, 'learning_rate': 0.000818250241819701, 'p_miss': 0.0679127971245904}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:21:36,447] Trial 116 finished with value: 0.11629057431253961 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 19, 'learning_rate': 0.000620369351386013, 'p_miss': 0.03163820980723546}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:21:56,156] Trial 105 finished with value: 0.19908283208729297 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 220, 'learning_rate': 0.004935767537406822, 'p_miss': 0.04425619509660676}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:22:28,305] Trial 118 finished with value: 0.11793932593340621 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 18, 'learning_rate': 0.0006250391562619752, 'p_miss': 0.031707817432320554}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:22:32,275] Trial 122 finished with value: 0.18750783857841008 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:22:44,113] Trial 119 finished with value: 0.11746547775007325 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 17, 'learning_rate': 0.0008218934847925537, 'p_miss': 0.03440409443068949}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:22:44,674] Trial 124 finished with value: 0.25561505898982173 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:24:04,824] Trial 125 finished with value: 0.2702672833980102 and parameters: {'model_name': 'GAIN', 'batch_size': 117, 'hint_rate': 0.9878773149804677, 'alpha': 100, 'iterations': 47, 'learning_rate': 0.001080350901503267, 'p_miss': 0.21099178369584126}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:24:18,869] Trial 93 finished with value: 0.1275716116695323 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 476, 'learning_rate': 0.00026522341231754857, 'p_miss': 0.25191960215923265}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:26:00,918] Trial 120 finished with value: 0.11737518494997976 and parameters: {'model_name': 'VAE', 'batch_size': 83, 'iterations': 78, 'learning_rate': 0.000777018461482439, 'p_miss': 0.015885117641173244}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:27:16,508] Trial 121 finished with value: 0.1170146631878753 and parameters: {'model_name': 'VAE', 'batch_size': 50, 'iterations': 80, 'learning_rate': 0.000721761865866408, 'p_miss': 0.016117918306219413}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:28:45,399] Trial 129 finished with value: 0.12644533766254712 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 25, 'learning_rate': 0.0003675185123647325, 'p_miss': 0.07293717261330046}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:29:21,798] Trial 130 finished with value: 0.11859788676561825 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 8, 'learning_rate': 0.002718538996391144, 'p_miss': 0.027925144461823346}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:29:28,864] Trial 127 finished with value: 0.132572699670457 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 79, 'learning_rate': 0.001517637908222442, 'p_miss': 0.016135083089646687}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:29:44,317] Trial 126 finished with value: 0.16661108006224326 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 84, 'learning_rate': 0.002591981800971303, 'p_miss': 0.018287450394891706}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:30:39,543] Trial 109 finished with value: 0.1625228043682338 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 226, 'learning_rate': 0.000808331131479563, 'p_miss': 0.04340862480592034}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:31:30,864] Trial 133 finished with value: 0.11730622642428075 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 30, 'learning_rate': 0.003792928644705679, 'p_miss': 0.2366391187971369}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:31:33,227] Trial 135 finished with value: 0.21413847437062367 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2185, 'weights': 'distance'}. Best is trial 69 with value: 0.11308255653493562.
running
[I 2024-11-12 17:32:13,556] Trial 128 finished with value: 0.11163462456096081 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 95, 'learning_rate': 0.0003662230169086312, 'p_miss': 0.07267417662695909}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:34:22,986] Trial 136 finished with value: 0.1236437362452373 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 37, 'learning_rate': 0.0010631711181338164, 'p_miss': 0.01025483089137318}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:34:56,023] Trial 35 finished with value: 0.20041410847742322 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 6953, 'learning_rate': 0.00022978041108342756, 'p_miss': 0.13229076937058254}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:35:26,451] Trial 131 finished with value: 0.13686182154268448 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 96, 'learning_rate': 0.0014630908538527485, 'p_miss': 0.23400529126740133}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:37:06,060] Trial 117 finished with value: 0.15705543192612104 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 235, 'learning_rate': 0.0006650707255491488, 'p_miss': 0.032968587930438685}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:39:59,172] Trial 137 finished with value: 0.11441874511023058 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 110, 'learning_rate': 0.0004064105364857572, 'p_miss': 0.061319039328999}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:40:35,529] Trial 141 finished with value: 0.1154243666430194 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 55, 'learning_rate': 0.00040935174557954143, 'p_miss': 0.09399940121348366}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:42:16,492] Trial 138 finished with value: 0.11895313579181392 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 110, 'learning_rate': 0.0005587166956113324, 'p_miss': 0.06182588286560012}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:42:25,970] Trial 144 finished with value: 0.18696670220554265 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:48:20,514] Trial 26 finished with value: 0.18840088064768395 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 7244, 'learning_rate': 0.0030940167031454978, 'p_miss': 0.12278209057499373}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:51:02,407] Trial 142 finished with value: 0.11546358816078697 and parameters: {'model_name': 'VAE', 'batch_size': 56, 'iterations': 177, 'learning_rate': 0.000403292192898727, 'p_miss': 0.07062841384133381}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:51:26,440] Trial 143 finished with value: 0.20042752646364415 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:59:15,856] Trial 145 finished with value: 0.11585437047180831 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 312, 'learning_rate': 0.00016160682120706221, 'p_miss': 0.07677580336940995}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 17:59:57,128] Trial 148 finished with value: 0.12115656967622038 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 122, 'learning_rate': 0.00016035183961501484, 'p_miss': 0.048696307832490876}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:00:43,451] Trial 146 finished with value: 0.11508611550802221 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 177, 'learning_rate': 0.00016636279116130143, 'p_miss': 0.0719689577348611}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:00:59,535] Trial 147 finished with value: 0.11706436175245653 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 123, 'learning_rate': 0.00015827391023207505, 'p_miss': 0.08151513199573865}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:05:08,783] Trial 123 finished with value: 0.1735417778215506 and parameters: {'model_name': 'VAE', 'batch_size': 52, 'iterations': 778, 'learning_rate': 0.0003720181279366627, 'p_miss': 0.01556031215856614}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:08:50,665] Trial 134 finished with value: 0.17297247290503023 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 670, 'learning_rate': 0.00040599075363783184, 'p_miss': 0.2269010268214357}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:12:58,640] Trial 132 finished with value: 0.1920708894288929 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 736, 'learning_rate': 0.0005542054343437211, 'p_miss': 0.010357214748838467}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:17:18,947] Trial 139 finished with value: 0.18701723806531173 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 771, 'learning_rate': 0.03968729065290193, 'p_miss': 0.06232388937681402}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:18:26,773] Trial 153 finished with value: 0.18881938366616402 and parameters: {'model_name': 'VAE', 'batch_size': 872, 'iterations': 174, 'learning_rate': 0.032817257656794066, 'p_miss': 0.22337669304543564}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:21:11,461] Trial 157 finished with value: 0.1259777077203159 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 45, 'learning_rate': 0.00011404631026790944, 'p_miss': 0.050342682573709954}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:25:12,377] Trial 158 finished with value: 0.12051772966230508 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 64, 'learning_rate': 0.00018785797758396865, 'p_miss': 0.026316934724052388}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:25:12,716] Trial 159 finished with value: 0.18183965913352423 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:25:57,205] Trial 154 finished with value: 0.11250237846923732 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 255, 'learning_rate': 0.00012192389572826495, 'p_miss': 0.08557336401681986}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:27:19,862] Trial 140 finished with value: 0.18362801711876506 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 867, 'learning_rate': 0.00039507552789652423, 'p_miss': 0.09288048276145171}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:28:33,101] Trial 156 finished with value: 0.11557940002245229 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 181, 'learning_rate': 0.00020175640141049212, 'p_miss': 0.08784831507061244}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:29:06,037] Trial 162 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 16, 'hint_rate': 0.24529513680276704, 'alpha': 20, 'iterations': 361, 'learning_rate': 0.00028427648416103985, 'p_miss': 0.06807146421093266}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:32:31,358] Trial 155 finished with value: 0.11322561766793134 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 327, 'learning_rate': 0.0001146414897674615, 'p_miss': 0.06155798730678937}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:37:54,361] Trial 163 finished with value: 0.29384176862396544 and parameters: {'model_name': 'GAIN', 'batch_size': 43, 'hint_rate': 0.27175594133405245, 'alpha': 19, 'iterations': 356, 'learning_rate': 0.00011924870573649231, 'p_miss': 0.03736832669532726}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:41:49,167] Trial 160 finished with value: 0.11759465004334033 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 273, 'learning_rate': 0.00029088721854719383, 'p_miss': 0.03489740894667506}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:43:04,049] Trial 164 finished with value: 0.11634003314375803 and parameters: {'model_name': 'VAE', 'batch_size': 42, 'iterations': 255, 'learning_rate': 0.00011881696286011173, 'p_miss': 0.05684487313987077}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:43:51,332] Trial 161 finished with value: 0.11315275030150329 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 315, 'learning_rate': 0.0001234782190031518, 'p_miss': 0.0703931570477635}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:44:53,494] Trial 165 finished with value: 0.11542359561935636 and parameters: {'model_name': 'VAE', 'batch_size': 42, 'iterations': 262, 'learning_rate': 0.00011719441537849587, 'p_miss': 0.07475062553249728}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:45:36,076] Trial 151 finished with value: 0.1441635568228647 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 782, 'learning_rate': 0.00019831288717988535, 'p_miss': 0.0877401927639116}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:46:24,274] Trial 149 finished with value: 0.1746474262421129 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 767, 'learning_rate': 0.0003484624227814793, 'p_miss': 0.08565395369309572}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:49:24,574] Trial 152 finished with value: 0.12242185696915672 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 798, 'learning_rate': 0.00012310761664809414, 'p_miss': 0.059040469402212456}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:53:10,934] Trial 150 finished with value: 0.1801434345894162 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 734, 'learning_rate': 0.00032282538469679444, 'p_miss': 0.08591781518579565}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:56:23,052] Trial 167 finished with value: 0.12632894791124366 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 242, 'learning_rate': 0.00010226809465659208, 'p_miss': 0.05772598919180256}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:57:33,861] Trial 171 finished with value: 0.11911814327885688 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 192, 'learning_rate': 0.00024569864600888574, 'p_miss': 0.060520508822774516}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:57:35,889] Trial 166 finished with value: 0.11918965653274675 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 271, 'learning_rate': 0.00024453327380781584, 'p_miss': 0.05764337433158494}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:58:03,361] Trial 170 finished with value: 0.12189962361054381 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 215, 'learning_rate': 0.00010067991035202487, 'p_miss': 0.06633877754617255}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:58:42,648] Trial 177 finished with value: 0.12645105573269225 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 23, 'learning_rate': 0.00014809141714940453, 'p_miss': 0.049875626299350814}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 18:58:45,560] Trial 179 finished with value: 0.21477008559710367 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3148, 'weights': 'distance'}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:10:20,143] Trial 168 finished with value: 0.1179464329186384 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 522, 'learning_rate': 0.00010035562651419531, 'p_miss': 0.24352616660164508}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:18:11,322] Trial 169 finished with value: 0.1201704823992665 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 580, 'learning_rate': 0.00014473950736745356, 'p_miss': 0.06630594979462934}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:18:41,342] Trial 173 finished with value: 0.11887287664762058 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 454, 'learning_rate': 0.00014510415015716934, 'p_miss': 0.06737399981384647}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:20:08,506] Trial 181 finished with value: 0.11743633402104611 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 136, 'learning_rate': 0.00015143152151582826, 'p_miss': 0.07111200225148936}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:20:55,824] Trial 180 finished with value: 0.11332633420017883 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 346, 'learning_rate': 0.00017824533504048627, 'p_miss': 0.06915734931718344}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:21:55,691] Trial 176 finished with value: 0.1186761559589992 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 447, 'learning_rate': 0.00014239082892161418, 'p_miss': 0.06896337801649441}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:22:32,471] Trial 172 finished with value: 0.12280223803362722 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 537, 'learning_rate': 0.0001444823276315726, 'p_miss': 0.06979003773746137}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:23:17,735] Trial 174 finished with value: 0.11567436278531654 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 550, 'learning_rate': 0.0001031946331960707, 'p_miss': 0.06774349011244678}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:27:46,092] Trial 182 finished with value: 0.18314742340067702 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 147, 'learning_rate': 0.00219748262889507, 'p_miss': 0.04698267376065295}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:32:35,409] Trial 189 finished with value: 0.12227342171777097 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 97, 'learning_rate': 0.0001927625496089244, 'p_miss': 0.21128225474355283}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:36:37,266] Trial 175 finished with value: 0.12344254262468164 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 517, 'learning_rate': 0.00014613206147897744, 'p_miss': 0.0666599308276033}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:37:35,771] Trial 178 finished with value: 0.12403612087800653 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 532, 'learning_rate': 0.0001469399076609084, 'p_miss': 0.05059428937977371}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:37:36,480] Trial 192 finished with value: 0.25561505898982173 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:41:07,259] Trial 37 finished with value: 0.19912421083659587 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 9699, 'learning_rate': 0.00017093896261428354, 'p_miss': 0.1027599160981627}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:41:47,959] Trial 185 finished with value: 0.11481976640225884 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 340, 'learning_rate': 0.00017919141798472825, 'p_miss': 0.10429435217900837}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:41:50,654] Trial 184 finished with value: 0.19224137014864956 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 336, 'learning_rate': 0.0021656970885149947, 'p_miss': 0.21376238323971206}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:42:21,174] Trial 183 finished with value: 0.12104556575951889 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 352, 'learning_rate': 0.00017741312873897357, 'p_miss': 0.07643838692258166}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:43:15,716] Trial 197 finished with value: 0.12323421790368108 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 13, 'learning_rate': 0.00020777738134031523, 'p_miss': 0.10028537221316783}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:43:58,136] Trial 188 finished with value: 0.11799828417496325 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 346, 'learning_rate': 0.0001883620899543941, 'p_miss': 0.07847776861427223}. Best is trial 128 with value: 0.11163462456096081.
running
[I 2024-11-12 19:44:16,980] Trial 186 finished with value: 0.12014460219924476 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 372, 'learning_rate': 0.00017351491676516028, 'p_miss': 0.07788815047117882}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:48:09,615] Trial 187 finished with value: 0.11964941920154996 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 359, 'learning_rate': 0.00018067106272869383, 'p_miss': 0.07760547859362062}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:52:19,254] Trial 190 finished with value: 0.11221999072716393 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 335, 'learning_rate': 0.00017689252403345747, 'p_miss': 0.27989145631636436}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:52:31,466] Trial 29 finished with value: 0.1878257886668479 and parameters: {'model_name': 'VAE', 'batch_size': 914, 'iterations': 8565, 'learning_rate': 0.00014880151590340642, 'p_miss': 0.02414840291643164}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:53:18,995] Trial 199 finished with value: 0.17812737836180764 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 166, 'learning_rate': 0.0018136489911544213, 'p_miss': 0.17556676001392466}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:53:54,317] Trial 191 finished with value: 0.11369858552043773 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 329, 'learning_rate': 0.00017292446572799398, 'p_miss': 0.14316936277083753}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:55:35,587] Trial 193 finished with value: 0.18906582676572234 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 357, 'learning_rate': 0.0016973428175934824, 'p_miss': 0.07899757402631342}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:58:17,033] Trial 195 finished with value: 0.12095496765339105 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 341, 'learning_rate': 0.0001866605661642384, 'p_miss': 0.10624578252870856}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:59:18,882] Trial 196 finished with value: 0.11960184539448596 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 396, 'learning_rate': 0.00017586392723938882, 'p_miss': 0.07911259370629715}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 19:59:21,194] Trial 194 finished with value: 0.1208264530350299 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 340, 'learning_rate': 0.0001800775899423608, 'p_miss': 0.0755147823326092}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 20:00:28,491] Trial 198 finished with value: 0.11384363668638138 and parameters: {'model_name': 'VAE', 'batch_size': 65, 'iterations': 381, 'learning_rate': 0.00017988317070886478, 'p_miss': 0.143501373681343}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 20:03:33,274] Trial 33 finished with value: 0.18767909627551194 and parameters: {'model_name': 'VAE', 'batch_size': 854, 'iterations': 9586, 'learning_rate': 0.0772132827868998, 'p_miss': 0.16303156240376454}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 20:06:14,464] Trial 24 finished with value: 0.20437882254833392 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 9924, 'learning_rate': 0.0006726424805663082, 'p_miss': 0.2392804943538697}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 20:09:36,203] Trial 31 finished with value: 0.18792732289841166 and parameters: {'model_name': 'VAE', 'batch_size': 986, 'iterations': 9437, 'learning_rate': 0.0837630043065488, 'p_miss': 0.020048889567266914}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 20:12:14,838] Trial 30 finished with value: 0.18797697269692215 and parameters: {'model_name': 'VAE', 'batch_size': 863, 'iterations': 9177, 'learning_rate': 0.00011006490200050095, 'p_miss': 0.1122067349717285}. Best is trial 128 with value: 0.11163462456096081.
[I 2024-11-12 20:13:15,211] Trial 32 finished with value: 0.18826264570696397 and parameters: {'model_name': 'VAE', 'batch_size': 688, 'iterations': 9943, 'learning_rate': 0.08070400550503858, 'p_miss': 0.07563570657496532}. Best is trial 128 with value: 0.11163462456096081.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.11163462456096081
{'model_name': 'VAE', 'batch_size': 29, 'iterations': 95, 'learning_rate': 0.0003662230169086312, 'p_miss': 0.07267417662695909}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f06560> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.4998525393076843
Generation:   4%|▍         | 1/25 [00:27<11:02, 27.60s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0d1b0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  2
Best f1_score score: 0.5395834513274231
Generation:   8%|▊         | 2/25 [00:38<06:42, 17.50s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474736ad0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  3
Best f1_score score: 0.5395834513274231
Generation:  12%|█▏        | 3/25 [00:53<06:02, 16.49s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ccc220> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  4
Best f1_score score: 0.5395834513274231
Generation:  16%|█▌        | 4/25 [01:02<04:46, 13.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a1600> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  5
Best f1_score score: 0.5395834513274231
Generation:  20%|██        | 5/25 [01:18<04:49, 14.49s/it]Generation:  6
Best f1_score score: 0.5395834513274231
Generation:  24%|██▍       | 6/25 [01:44<05:51, 18.49s/it]Generation:  7
Best f1_score score: 0.5395834513274231
Generation:  28%|██▊       | 7/25 [02:11<06:19, 21.08s/it]Generation:  8
Best f1_score score: 0.5395834513274231
Generation:  32%|███▏      | 8/25 [02:29<05:42, 20.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c80940> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  9
Best f1_score score: 0.5395834513274231
Generation:  36%|███▌      | 9/25 [02:52<05:35, 20.99s/it]Generation:  10
Best f1_score score: 0.5395834513274231
Generation:  40%|████      | 10/25 [04:00<08:55, 35.68s/it]Generation:  11
Best f1_score score: 0.5395834513274231
Generation:  44%|████▍     | 11/25 [04:17<06:58, 29.89s/it]Generation:  12
Best f1_score score: 0.5395834513274231
Generation:  48%|████▊     | 12/25 [04:35<05:41, 26.28s/it]Generation:  13
Best f1_score score: 0.5395834513274231
Generation:  52%|█████▏    | 13/25 [05:16<06:09, 30.83s/it]Generation:  14
Best f1_score score: 0.5395834513274231
Generation:  56%|█████▌    | 14/25 [05:40<05:16, 28.77s/it]Generation:  15
Best f1_score score: 0.5395834513274231
Generation:  60%|██████    | 15/25 [05:58<04:14, 25.40s/it]Generation:  16
Best f1_score score: 0.5395834513274231
Generation:  64%|██████▍   | 16/25 [06:30<04:06, 27.36s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f2d330> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.5395834513274231
Generation:  68%|██████▊   | 17/25 [06:45<03:09, 23.72s/it]Generation:  18
Best f1_score score: 0.5395834513274231
Generation:  72%|███████▏  | 18/25 [07:05<02:38, 22.65s/it]Generation:  19
Best f1_score score: 0.5395834513274231
Generation:  76%|███████▌  | 19/25 [07:25<02:09, 21.61s/it]Generation:  20
Best f1_score score: 0.5395834513274231
Generation:  80%|████████  | 20/25 [07:44<01:44, 20.92s/it]Generation:  21
Best f1_score score: 0.5395834513274231
Generation:  84%|████████▍ | 21/25 [08:05<01:24, 21.04s/it]Generation:  22
Best f1_score score: 0.5395834513274231
Generation:  88%|████████▊ | 22/25 [08:21<00:58, 19.38s/it]Generation:  23
Best f1_score score: 0.5395834513274231
Generation:  92%|█████████▏| 23/25 [08:36<00:36, 18.17s/it]Generation:  24
Best f1_score score: 0.5423932041943826
Generation:  96%|█████████▌| 24/25 [08:51<00:17, 17.35s/it]Generation:  25
Best f1_score score: 0.5423932041943826
Generation: 100%|██████████| 25/25 [15:29<00:00, 131.43s/it]Generation: 100%|██████████| 25/25 [15:33<00:00, 37.35s/it] 
2024-11-12 20:28:57,134 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:41099' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-273c58ffa9789419e8a26b5fd91de04b', 'ndarray-517cd59f157fc470f6fab3a5fae55ce9'} (stimulus_id='handle-worker-cleanup-1731472137.1347811')
Fitted
Pipeline(steps=[('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy',
                                      max_features=0.7651116440601,
                                      min_samples_leaf=3, min_samples_split=17,
                                      n_jobs=1))])
score start
train score: {'auroc': 0.868309746857588, 'accuracy': 0.8036086051353227, 'balanced_accuracy': 0.7817817503998168, 'logloss': 0.5694570893125084, 'f1': 0.7713389977529683}
original test score: {'auroc': 0.4557120914331016, 'accuracy': 0.6734505087881592, 'balanced_accuracy': 0.49120517944737146, 'logloss': 0.6550845453002155, 'f1': 0.44223373700019736}
imputed test score: {'auroc': 0.5525459560341552, 'accuracy': 0.6142460684551342, 'balanced_accuracy': 0.5397583695311081, 'logloss': 0.6622087317632476, 'f1': 0.5393018656773619}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1f520> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1c640> 
 Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.67829998054856
Generation:   4%|▍         | 1/25 [02:38<1:03:25, 158.57s/it]Generation:  2
Best f1_score score: 0.7026346475333962
Generation:   8%|▊         | 2/25 [03:07<31:31, 82.23s/it]   Generation:  3
Best f1_score score: 0.7026346475333962
Generation:  12%|█▏        | 3/25 [05:48<43:17, 118.06s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547409d150> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.7026346475333962
Generation:  16%|█▌        | 4/25 [08:29<47:20, 135.25s/it]Generation:  5
Best f1_score score: 0.7026346475333962
Generation:  20%|██        | 5/25 [11:14<48:40, 146.04s/it]Generation:  6
Best f1_score score: 0.706595802388636
Generation:  24%|██▍       | 6/25 [14:03<48:40, 153.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554574aa020> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.7182384044863396
Generation:  28%|██▊       | 7/25 [14:25<33:13, 110.73s/it]Generation:  8
Best f1_score score: 0.7182384044863396
Generation:  32%|███▏      | 8/25 [17:07<35:58, 126.95s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745ce7d0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  9
Best f1_score score: 0.7231912477881183
Generation:  36%|███▌      | 9/25 [19:50<36:52, 138.26s/it]Generation:  10
Best f1_score score: 0.7231912477881183
Generation:  40%|████      | 10/25 [22:34<36:31, 146.11s/it]Generation:  11
Best f1_score score: 0.7231912477881183
Generation:  44%|████▍     | 11/25 [23:22<27:04, 116.04s/it]Generation:  12
Best f1_score score: 0.7264052993458788
Generation:  48%|████▊     | 12/25 [26:06<28:20, 130.81s/it]Generation:  13
Best f1_score score: 0.730624991254258
Generation:  52%|█████▏    | 13/25 [28:46<27:54, 139.58s/it]Generation:  14
Best f1_score score: 0.730624991254258
Generation:  56%|█████▌    | 14/25 [28:58<18:32, 101.13s/it]Generation:  15
Best f1_score score: 0.730624991254258
Generation:  60%|██████    | 15/25 [35:43<32:06, 192.68s/it]Generation:  16
Best f1_score score: 0.730624991254258
Generation:  64%|██████▍   | 16/25 [36:12<21:29, 143.28s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554526f5180> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.730624991254258
Generation:  68%|██████▊   | 17/25 [36:25<13:54, 104.31s/it]Generation:  18
Best f1_score score: 0.730624991254258
Generation:  72%|███████▏  | 18/25 [39:09<14:16, 122.30s/it]Generation:  19
Best f1_score score: 0.730624991254258
Generation:  76%|███████▌  | 19/25 [41:52<13:25, 134.32s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554191787c0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.730624991254258
Generation:  80%|████████  | 20/25 [44:37<11:57, 143.54s/it]Generation:  21
Best f1_score score: 0.731579739702745
Generation:  84%|████████▍ | 21/25 [47:19<09:56, 149.09s/it]Generation:  22
Best f1_score score: 0.731579739702745
Generation:  88%|████████▊ | 22/25 [50:00<07:38, 152.75s/it]Generation:  23
Best f1_score score: 0.7328068931045998
Generation:  92%|█████████▏| 23/25 [50:22<03:46, 113.34s/it]Generation:  24
Best f1_score score: 0.7328068931045998
Generation:  96%|█████████▌| 24/25 [50:34<01:23, 83.11s/it] Generation:  25
Best f1_score score: 0.7328068931045998
Generation: 100%|██████████| 25/25 [50:47<00:00, 62.02s/it]Generation: 100%|██████████| 25/25 [50:47<00:00, 121.90s/it]
2024-11-12 21:19:53,261 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:38585' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-517cd59f157fc470f6fab3a5fae55ce9', 'DataFrame-3cd9750e270623b451d95990488bc1e2'} (stimulus_id='handle-worker-cleanup-1731475193.2614524')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='most_frequent')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy',
                                      max_features=0.6091671909582,
                                      min_samples_split=9, n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9612229410923833, 'accuracy': 0.8662965533194541, 'balanced_accuracy': 0.8837226224259623, 'logloss': 0.31355377060158907, 'f1': 0.8507556666035929}
test score: {'auroc': 0.8264612614993312, 'accuracy': 0.7465309898242368, 'balanced_accuracy': 0.7440851735015772, 'logloss': 0.4740581901711918, 'f1': 0.7188850081621807}
original test score: {'auroc': 0.9217013229392043, 'accuracy': 0.8399629972247918, 'balanced_accuracy': 0.8535579797512676, 'logloss': 0.3679218178497386, 'f1': 0.8216962468238873}
score end
1489
lvl
0.5
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
12.04641041205989
hours
DONE
