Run: 7
/cm/local/apps/slurm/var/spool/job927377/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
starting loops
../data/c/32/32.pkl
working on 
../data/c/32/class_full_MAR_0.3_1
3.4877467155456543
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-08-20 18:57:21,130] A new study created in memory with name: no-name-276f023a-0d44-4f74-ada8-3edb6235133f
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-08-20 18:57:21,847] Trial 15 finished with value: 0.22420527358242603 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 15 with value: 0.22420527358242603.
running
[I 2024-08-20 18:57:22,377] Trial 3 finished with value: 0.14331982012201128 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.14331982012201128.
running
[I 2024-08-20 18:57:22,613] Trial 2 finished with value: 0.14331982012201128 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.14331982012201128.
running
[I 2024-08-20 18:57:23,669] Trial 4 finished with value: 0.22420527358242603 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.14331982012201128.
running
[I 2024-08-20 18:57:23,811] Trial 17 finished with value: 0.1308685455864694 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 17 with value: 0.1308685455864694.
running
[I 2024-08-20 18:57:24,061] Trial 14 finished with value: 0.22420527358242603 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 17 with value: 0.1308685455864694.
running
[I 2024-08-20 18:57:24,456] Trial 13 finished with value: 0.22420527358242603 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 17 with value: 0.1308685455864694.
[I 2024-08-20 18:57:24,582] Trial 19 finished with value: 0.22420527358242603 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 17 with value: 0.1308685455864694.
running
running
[I 2024-08-20 18:57:25,214] Trial 22 finished with value: 0.1308685455864694 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 17 with value: 0.1308685455864694.
running
[I 2024-08-20 18:57:25,685] Trial 20 finished with value: 0.22420527358242603 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 17 with value: 0.1308685455864694.
running
[I 2024-08-20 18:57:32,758] Trial 6 finished with value: 0.09269857678063627 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1589, 'weights': 'distance'}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:33,426] Trial 21 finished with value: 0.09447422349467778 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1281, 'weights': 'uniform'}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:34,244] Trial 16 finished with value: 0.09918817568074786 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2491, 'weights': 'distance'}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:34,933] Trial 25 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8214503368948742, 'alpha': 31, 'iterations': 6, 'learning_rate': 0.00041437745164144685, 'p_miss': 0.22749540587124228}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:35,499] Trial 12 finished with value: 0.10766933379328603 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4027, 'weights': 'distance'}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:35,726] Trial 8 finished with value: 0.11300699919155018 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5287, 'weights': 'distance'}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:37,149] Trial 11 finished with value: 0.12150070961599084 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7993, 'weights': 'distance'}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:40,732] Trial 24 finished with value: 0.11501910308199767 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5843, 'weights': 'distance'}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:41,127] Trial 23 finished with value: 0.12053029529407751 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7642, 'weights': 'distance'}. Best is trial 6 with value: 0.09269857678063627.
running
[I 2024-08-20 18:57:45,374] Trial 28 finished with value: 0.08185646522733951 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 346, 'weights': 'uniform'}. Best is trial 28 with value: 0.08185646522733951.
running
[I 2024-08-20 18:57:45,945] Trial 29 finished with value: 0.07933260717637891 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 216, 'weights': 'uniform'}. Best is trial 29 with value: 0.07933260717637891.
running
[I 2024-08-20 18:57:46,235] Trial 26 finished with value: 0.08917339333985783 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1187, 'weights': 'distance'}. Best is trial 29 with value: 0.07933260717637891.
running
[I 2024-08-20 18:57:46,797] Trial 27 finished with value: 0.08732564565138987 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 995, 'weights': 'distance'}. Best is trial 29 with value: 0.07933260717637891.
running
[I 2024-08-20 18:58:01,101] Trial 1 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.3915069650134304, 'alpha': 59, 'iterations': 207, 'learning_rate': 0.0009925888789043846, 'p_miss': 0.018148751528156593}. Best is trial 29 with value: 0.07933260717637891.
running
[I 2024-08-20 18:59:22,758] Trial 38 finished with value: 0.12459676016721022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 29 with value: 0.07933260717637891.
running
[I 2024-08-20 18:59:23,876] Trial 36 finished with value: 0.10698540734464845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 29 with value: 0.07933260717637891.
running
[I 2024-08-20 18:59:32,173] Trial 31 finished with value: 0.08613556637373829 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 29 with value: 0.07933260717637891.
running
[I 2024-08-20 18:59:34,509] Trial 41 finished with value: 0.07300425741207359 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 53, 'weights': 'uniform'}. Best is trial 41 with value: 0.07300425741207359.
running
[I 2024-08-20 18:59:45,319] Trial 10 finished with value: 0.0752403237307229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 41 with value: 0.07300425741207359.
running
[I 2024-08-20 19:00:38,743] Trial 33 finished with value: 0.07192803820960128 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'random'}. Best is trial 33 with value: 0.07192803820960128.
running
[I 2024-08-20 19:00:51,246] Trial 37 finished with value: 0.07062628813730168 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.07062628813730168.
running
[I 2024-08-20 19:01:05,930] Trial 9 finished with value: 0.07059183834994678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 9 with value: 0.07059183834994678.
running
[I 2024-08-20 19:01:27,690] Trial 42 finished with value: 0.08323796703779238 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'roman'}. Best is trial 9 with value: 0.07059183834994678.
running
[I 2024-08-20 19:02:08,721] Trial 39 finished with value: 0.07041067768217271 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:02:09,830] Trial 0 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.06237530969470682, 'alpha': 99, 'iterations': 1912, 'learning_rate': 0.0002614642935767931, 'p_miss': 0.1920907264514461}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:02:41,850] Trial 34 finished with value: 0.12923047206091479 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:03:07,923] Trial 45 finished with value: 0.07373732862298722 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:03:33,313] Trial 46 finished with value: 0.0704977609277507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:04:14,934] Trial 47 finished with value: 0.07070942457149845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:04:15,884] Trial 48 finished with value: 0.07053856927067495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:04:37,076] Trial 54 finished with value: 0.22514990461659537 and parameters: {'model_name': 'GAIN', 'batch_size': 929, 'hint_rate': 0.9551698444025085, 'alpha': 2, 'iterations': 1, 'learning_rate': 0.06999786982903326, 'p_miss': 0.04748112736602027}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:04:38,346] Trial 55 finished with value: 0.23358847527910456 and parameters: {'model_name': 'GAIN', 'batch_size': 863, 'hint_rate': 0.9838784414572032, 'alpha': 1, 'iterations': 1, 'learning_rate': 0.04474708893242757, 'p_miss': 0.29993997555830737}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:04:58,487] Trial 50 finished with value: 0.0707398985049081 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:04:59,466] Trial 49 finished with value: 0.07070942457149845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:05:19,619] Trial 51 finished with value: 0.07070942457149845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:05:36,151] Trial 52 finished with value: 0.07070942457149845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 39 with value: 0.07041067768217271.
running
[I 2024-08-20 19:06:23,684] Trial 56 finished with value: 0.06890562125615253 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 56 with value: 0.06890562125615253.
running
[I 2024-08-20 19:06:27,323] Trial 57 finished with value: 0.06890562125615253 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 56 with value: 0.06890562125615253.
running
[I 2024-08-20 19:15:57,641] Trial 7 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.5799098923749082, 'alpha': 34, 'iterations': 902, 'learning_rate': 0.05569181034773712, 'p_miss': 0.1831558467538226}. Best is trial 56 with value: 0.06890562125615253.
running
[I 2024-08-20 19:26:05,725] Trial 5 finished with value: 0.2416612763195251 and parameters: {'model_name': 'GAIN', 'batch_size': 31, 'hint_rate': 0.6156138521543066, 'alpha': 74, 'iterations': 1759, 'learning_rate': 0.0006871030142830158, 'p_miss': 0.10797215323190203}. Best is trial 56 with value: 0.06890562125615253.
running
[I 2024-08-20 19:47:53,051] Trial 44 finished with value: 0.25936061237443686 and parameters: {'model_name': 'GAIN', 'batch_size': 433, 'hint_rate': 0.1280720385747734, 'alpha': 96, 'iterations': 4588, 'learning_rate': 0.0863705882982775, 'p_miss': 0.28997970379009874}. Best is trial 56 with value: 0.06890562125615253.
running
[I 2024-08-20 19:48:49,787] Trial 66 finished with value: 0.06972499004026102 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 56 with value: 0.06890562125615253.
running
[I 2024-08-20 21:36:06,695] Trial 18 finished with value: 0.24924084556932935 and parameters: {'model_name': 'GAIN', 'batch_size': 906, 'hint_rate': 0.5146926186811188, 'alpha': 23, 'iterations': 4440, 'learning_rate': 0.00024270760820663907, 'p_miss': 0.13214518984496748}. Best is trial 56 with value: 0.06890562125615253.
running
[I 2024-08-20 22:12:55,866] Trial 32 finished with value: 0.06518775147300555 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 32 with value: 0.06518775147300555.
running
[I 2024-08-20 22:29:15,388] Trial 35 finished with value: 0.0646938974943968 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 35 with value: 0.0646938974943968.
running
[I 2024-08-20 22:30:04,907] Trial 30 finished with value: 0.06461612846567406 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 30 with value: 0.06461612846567406.
running
[I 2024-08-20 22:47:56,708] Trial 58 finished with value: 0.06329801417502941 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 22:48:04,829] Trial 60 finished with value: 0.06436257585841852 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 22:48:33,757] Trial 59 finished with value: 0.06380658291556078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 22:49:08,645] Trial 61 finished with value: 0.06357852861630928 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 22:49:16,482] Trial 63 finished with value: 0.06387627943522259 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 22:51:16,101] Trial 62 finished with value: 0.06373114479670862 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 22:57:21,147] Trial 64 finished with value: 0.06387867295192029 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 23:06:34,993] Trial 65 finished with value: 0.06348264023262742 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 23:27:59,324] Trial 67 finished with value: 0.06363536729613224 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.06329801417502941.
running
[I 2024-08-20 23:44:37,194] Trial 40 finished with value: 0.06188116421710965 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-20 23:48:24,104] Trial 53 finished with value: 0.06245278228487109 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-20 23:59:02,722] Trial 43 finished with value: 0.2662512539074477 and parameters: {'model_name': 'GAIN', 'batch_size': 802, 'hint_rate': 0.05439038112424738, 'alpha': 99, 'iterations': 9953, 'learning_rate': 0.07767980357762504, 'p_miss': 0.293984187437947}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 01:05:55,900] Trial 68 finished with value: 0.06367935238391974 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 01:39:26,277] Trial 69 finished with value: 0.06418893313314758 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 01:54:27,537] Trial 70 finished with value: 0.06447308346822943 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 01:56:21,995] Trial 71 finished with value: 0.06425021055936853 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:11:56,100] Trial 72 finished with value: 0.06408329583126005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:27:46,937] Trial 73 finished with value: 0.06312384905551038 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:28:27,794] Trial 74 finished with value: 0.06373057155104901 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:28:28,011] Trial 90 finished with value: 0.22420527358242603 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:28:58,111] Trial 76 finished with value: 0.06295766245737487 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:30:37,778] Trial 75 finished with value: 0.0630716291683752 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:30:47,024] Trial 92 finished with value: 0.08347706439387717 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:32:30,654] Trial 93 finished with value: 0.08347706439387717 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:33:47,498] Trial 77 finished with value: 0.06355848539242354 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:39:13,492] Trial 78 finished with value: 0.06290429460781263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 02:47:08,838] Trial 79 finished with value: 0.06325019536378022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 03:07:09,622] Trial 80 finished with value: 0.06322995239236848 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 03:37:46,981] Trial 81 finished with value: 0.06336545633922003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 03:41:21,223] Trial 82 finished with value: 0.06304105339141457 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 03:51:21,616] Trial 83 finished with value: 0.0631344334436068 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 03:51:22,040] Trial 102 finished with value: 0.1308685455864694 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 03:51:52,813] Trial 103 finished with value: 0.08330550516453308 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 04:58:18,565] Trial 84 finished with value: 0.06322125065252361 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 05:31:43,101] Trial 85 finished with value: 0.06279198482254654 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 05:46:27,324] Trial 86 finished with value: 0.06280550629863968 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 05:48:44,546] Trial 87 finished with value: 0.06261248805684601 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:03:59,377] Trial 88 finished with value: 0.06243475773983035 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:20:11,554] Trial 89 finished with value: 0.0627759355425078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:36:08,727] Trial 91 finished with value: 0.06233481559489231 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:37:51,710] Trial 94 finished with value: 0.062102846878044606 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:39:13,913] Trial 95 finished with value: 0.06322037205816608 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:39:15,506] Trial 113 finished with value: 0.22037976815493937 and parameters: {'model_name': 'GAIN', 'batch_size': 72, 'hint_rate': 0.32170631612856493, 'alpha': 62, 'iterations': 22, 'learning_rate': 0.010314008508929873, 'p_miss': 0.08070928576074801}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:39:44,300] Trial 114 finished with value: 0.08300281167356177 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:39:44,658] Trial 115 finished with value: 0.14331982012201128 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:39:47,289] Trial 96 finished with value: 0.06312051612829189 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 06:45:26,269] Trial 97 finished with value: 0.06215191967904197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.06188116421710965.
running
[I 2024-08-21 07:09:25,005] Trial 98 finished with value: 0.0614422341659953 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 07:13:25,758] Trial 99 finished with value: 0.06256989814175075 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 07:43:51,876] Trial 100 finished with value: 0.06268419498564137 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 07:48:16,834] Trial 101 finished with value: 0.0620907509108299 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 07:48:19,991] Trial 122 finished with value: 0.1308685455864694 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9303, 'weights': 'uniform'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 07:58:12,232] Trial 104 finished with value: 0.06253288764814649 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 08:00:35,018] Trial 124 finished with value: 0.12434959516431254 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 09:05:45,582] Trial 105 finished with value: 0.06231936604848516 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 09:39:17,358] Trial 106 finished with value: 0.06279119483308475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 09:53:58,652] Trial 107 finished with value: 0.06283199395405852 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 10:11:12,208] Trial 109 finished with value: 0.06211420525323459 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 10:12:34,114] Trial 108 finished with value: 0.061986624948046985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 10:43:07,006] Trial 110 finished with value: 0.06208980212098886 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 10:59:40,808] Trial 111 finished with value: 0.062194005277613 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 11:02:04,329] Trial 112 finished with value: 0.06217733109364666 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 11:02:54,675] Trial 117 finished with value: 0.06274860336389829 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 11:03:00,115] Trial 134 finished with value: 0.21248271249789016 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.7462424485119447, 'alpha': 76, 'iterations': 119, 'learning_rate': 0.0035595224342997722, 'p_miss': 0.22910492109605707}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 11:03:22,188] Trial 116 finished with value: 0.06209506326933898 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 11:09:10,237] Trial 118 finished with value: 0.062341659680736315 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 11:32:40,279] Trial 119 finished with value: 0.06150411408383436 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 11:37:01,766] Trial 120 finished with value: 0.062256078878516995 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 12:06:58,310] Trial 121 finished with value: 0.0620617675594604 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 12:12:08,975] Trial 123 finished with value: 0.06213067175622635 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 12:12:32,762] Trial 141 finished with value: 0.08300380392324057 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 12:22:52,297] Trial 125 finished with value: 0.06222734537424056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 13:28:30,635] Trial 126 finished with value: 0.06210684646550809 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 13:28:33,982] Trial 144 finished with value: 0.11172188142200053 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3535, 'weights': 'uniform'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 14:01:37,812] Trial 127 finished with value: 0.06185003701060593 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 14:16:06,780] Trial 128 finished with value: 0.06248302990037188 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 14:33:08,732] Trial 129 finished with value: 0.061788912225817116 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 14:34:14,319] Trial 130 finished with value: 0.06179028481788038 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:04:56,630] Trial 131 finished with value: 0.06284549788174235 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:21:32,693] Trial 132 finished with value: 0.06236931636956596 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:23:45,878] Trial 133 finished with value: 0.06210070236212771 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:24:39,572] Trial 135 finished with value: 0.06192107432872569 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:25:14,826] Trial 136 finished with value: 0.06227321240080543 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:25:15,069] Trial 154 finished with value: 0.1308685455864694 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:30:44,169] Trial 137 finished with value: 0.06236753056539822 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:53:30,362] Trial 138 finished with value: 0.06209039589416689 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 15:57:50,429] Trial 139 finished with value: 0.061992797568138705 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 16:27:21,474] Trial 140 finished with value: 0.061923320800572446 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 16:32:25,959] Trial 142 finished with value: 0.06205492497294353 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 16:42:57,100] Trial 143 finished with value: 0.061652441363200736 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 17:48:09,829] Trial 145 finished with value: 0.062013139229831774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 17:50:26,849] Trial 162 finished with value: 0.12195417525213723 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 18:22:47,234] Trial 146 finished with value: 0.06223171288826614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 18:36:50,593] Trial 147 finished with value: 0.0621646652316372 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 18:36:51,627] Trial 165 finished with value: 0.22423374843605215 and parameters: {'model_name': 'GAIN', 'batch_size': 144, 'hint_rate': 0.2940166090904801, 'alpha': 42, 'iterations': 10, 'learning_rate': 0.00010807771994147928, 'p_miss': 0.0841780911392349}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 18:53:29,350] Trial 148 finished with value: 0.061810417745881564 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 18:54:33,390] Trial 149 finished with value: 0.06236170141818205 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 19:25:05,636] Trial 150 finished with value: 0.06214681201166746 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 19:41:51,956] Trial 151 finished with value: 0.0616658766088685 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 19:43:31,113] Trial 152 finished with value: 0.06216670534002481 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 19:45:00,775] Trial 153 finished with value: 0.061632293221686604 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 19:46:21,027] Trial 155 finished with value: 0.061863203008469106 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 19:50:53,415] Trial 156 finished with value: 0.0623598118932568 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 20:12:56,545] Trial 157 finished with value: 0.0625582040567896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 20:17:04,247] Trial 158 finished with value: 0.06217233499625522 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 20:30:47,975] Trial 168 finished with value: 0.07531921414639545 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 20:46:09,306] Trial 159 finished with value: 0.06217699043366739 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 20:51:10,188] Trial 160 finished with value: 0.06196492219369505 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 21:00:45,048] Trial 169 finished with value: 0.07582815255513137 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 21:01:10,223] Trial 161 finished with value: 0.06256909526881062 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 21:22:06,026] Trial 173 finished with value: 0.07530826872609278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 21:22:09,391] Trial 182 finished with value: 0.12463598561403891 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6529, 'weights': 'uniform'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 21:22:34,163] Trial 183 finished with value: 0.08300380392324057 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 21:23:14,569] Trial 184 finished with value: 0.07111135363959721 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 22:05:56,339] Trial 163 finished with value: 0.06215225288741143 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 22:37:25,982] Trial 164 finished with value: 0.06207261903891377 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 22:51:09,382] Trial 166 finished with value: 0.06217115432334534 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 23:06:58,201] Trial 167 finished with value: 0.06177153776974663 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 23:54:10,215] Trial 170 finished with value: 0.06208251465735343 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 23:55:30,041] Trial 171 finished with value: 0.06255619945512289 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 23:57:17,656] Trial 172 finished with value: 0.061975082562738794 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-21 23:57:17,945] Trial 192 finished with value: 0.14331982012201128 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-22 00:02:54,499] Trial 174 finished with value: 0.06234903995222139 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-22 00:24:42,683] Trial 175 finished with value: 0.062213695012526715 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-22 00:29:15,064] Trial 176 finished with value: 0.062465769913855086 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-22 00:43:06,794] Trial 177 finished with value: 0.062044992725287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-22 00:58:35,294] Trial 178 finished with value: 0.06227205403193342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-22 01:04:00,479] Trial 179 finished with value: 0.06213631574599006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
running
[I 2024-08-22 01:13:11,054] Trial 180 finished with value: 0.062150771653955696 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 01:14:30,003] Trial 181 finished with value: 0.06176257863192249 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 01:36:00,774] Trial 185 finished with value: 0.06231344365404055 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 02:19:15,430] Trial 186 finished with value: 0.061805124048140966 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 02:49:34,527] Trial 187 finished with value: 0.062078843384888116 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 03:03:10,805] Trial 188 finished with value: 0.06215883012539205 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 03:18:24,099] Trial 189 finished with value: 0.06188209208885155 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 04:04:35,843] Trial 190 finished with value: 0.06256831086482183 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 04:05:54,495] Trial 191 finished with value: 0.06244253041347671 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 04:08:12,628] Trial 193 finished with value: 0.062480755893432216 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 04:13:10,031] Trial 194 finished with value: 0.062277715468200615 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 04:34:40,777] Trial 195 finished with value: 0.062005140170552774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 04:38:37,172] Trial 196 finished with value: 0.061940656691677774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 04:51:44,256] Trial 197 finished with value: 0.06258715614821402 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 05:06:47,118] Trial 198 finished with value: 0.061814873178892435 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
[I 2024-08-22 05:12:30,424] Trial 199 finished with value: 0.06206287918189825 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 98 with value: 0.0614422341659953.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0.0614422341659953
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9846333409032718
Generation:   4%|▍         | 1/25 [00:57<22:58, 57.46s/it]Generation:  2
Best f1_score score: 0.9864424491148174
Generation:   8%|▊         | 2/25 [08:40<1:53:34, 296.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474ef8ca0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  3
Best f1_score score: 0.9864424491148174
Generation:  12%|█▏        | 3/25 [10:25<1:16:30, 208.68s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547544bac0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  4
Best f1_score score: 0.9870629178502519
Generation:  16%|█▌        | 4/25 [16:23<1:33:40, 267.66s/it]Generation:  5
Best f1_score score: 0.9870629178502519
Generation:  20%|██        | 5/25 [26:18<2:08:33, 385.68s/it]Generation:  6
Best f1_score score: 0.9870629178502519
Generation:  24%|██▍       | 6/25 [30:20<1:46:42, 336.95s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474e092a0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554753e71c0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547542b430> 

Generation:  7
Best f1_score score: 0.9878754628167696
Generation:  28%|██▊       | 7/25 [40:26<2:07:26, 424.80s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474ac9960> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547542da20> 

Generation:  8
Best f1_score score: 0.9878754628167696
Generation:  32%|███▏      | 8/25 [50:33<2:16:46, 482.71s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547542dfc0> 

Generation:  9
Best f1_score score: 0.9884776381645665
Generation:  36%|███▌      | 9/25 [1:00:39<2:19:03, 521.49s/it]Generation:  10
Best f1_score score: 0.9884776381645665
Generation:  40%|████      | 10/25 [1:08:04<2:04:28, 497.89s/it]Generation:  11
Best f1_score score: 0.9884776381645665
Generation:  44%|████▍     | 11/25 [1:15:57<1:54:20, 490.06s/it]Generation:  12
Best f1_score score: 0.9892852448755022
Generation:  48%|████▊     | 12/25 [1:19:11<1:26:42, 400.18s/it]Generation:  13
Best f1_score score: 0.9892852448755022
Generation:  52%|█████▏    | 13/25 [1:22:17<1:07:01, 335.16s/it]Generation:  14
Best f1_score score: 0.9892852448755022
Generation:  56%|█████▌    | 14/25 [1:30:49<1:11:14, 388.58s/it]Generation:  15
Best f1_score score: 0.9892852448755022
Generation:  60%|██████    | 15/25 [1:32:46<51:08, 306.82s/it]  Generation:  16
Best f1_score score: 0.9892852448755022
Generation:  64%|██████▍   | 16/25 [1:34:31<36:53, 245.97s/it]Generation:  17
Best f1_score score: 0.9892852448755022
Generation:  68%|██████▊   | 17/25 [1:36:41<28:09, 211.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554749cb670> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474ce0b80> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  18
Best f1_score score: 0.9892852448755022
Generation:  72%|███████▏  | 18/25 [1:38:23<20:47, 178.28s/it]Generation:  19
Best f1_score score: 0.9892852448755022
Generation:  76%|███████▌  | 19/25 [1:39:37<14:41, 146.87s/it]Generation:  20
Best f1_score score: 0.9892852448755022
Generation:  80%|████████  | 20/25 [1:41:39<11:37, 139.45s/it]Generation:  21
Best f1_score score: 0.9892852448755022
Generation:  84%|████████▍ | 21/25 [1:46:42<12:34, 188.61s/it]Generation:  22
Best f1_score score: 0.9892852448755022
Generation:  88%|████████▊ | 22/25 [1:49:03<08:43, 174.46s/it]Generation:  23
Best f1_score score: 0.9892852448755022
Generation:  92%|█████████▏| 23/25 [1:50:12<04:45, 142.62s/it]Generation:  24
Best f1_score score: 0.9892852448755022
Generation:  96%|█████████▌| 24/25 [1:52:27<02:20, 140.37s/it]Generation:  25
Best f1_score score: 0.9892852448755022
Generation: 100%|██████████| 25/25 [2:00:49<00:00, 248.88s/it]Generation: 100%|██████████| 25/25 [2:00:52<00:00, 290.12s/it]
2024-08-22 07:39:06,676 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42805' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-1f9122a3dadacefe51c68266ddae4833', 'ndarray-c90b4f58c2aa41ee1a2010636d626d84'} (stimulus_id='handle-worker-cleanup-1724337546.6760373')
Fitted
Pipeline(steps=[('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=False,
                                                l2_regularization=1.5461138e-06,
                                                learning_rate=0.240897974259,
                                                max_features=0.4478062902062,
                                                max_leaf_nodes=1034,
                                                min_samples_leaf=92, tol=0.0001,
                                                validation_fraction=None))])
score start
train score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 1.7598626944654957e-06, 'f1': 1.0}
original test score: {'auroc': 0.9999717056050162, 'accuracy': 0.9945454545454545, 'balanced_accuracy': 0.9946044356173452, 'logloss': 0.02531624938487411, 'f1': 0.9945414907081522}
imputed test score: {'auroc': 0.9995641753969137, 'accuracy': 0.980909090909091, 'balanced_accuracy': 0.9811817279046673, 'logloss': 0.13656749379408248, 'f1': 0.9808838408871744}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155436506200>
Start tpot fit
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9791596140655614
Generation:   4%|▍         | 1/25 [09:37<3:51:07, 577.81s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474e0e440> 

Generation:  2
Best f1_score score: 0.9791596140655614
Generation:   8%|▊         | 2/25 [19:40<3:47:05, 592.41s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554538ccb50> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554753e6a40> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b46800> 

Generation:  3
Best f1_score score: 0.9791596140655614
Generation:  12%|█▏        | 3/25 [29:45<3:39:16, 598.00s/it]Generation:  4
Best f1_score score: 0.9791596140655614
Generation:  16%|█▌        | 4/25 [39:05<3:24:04, 583.06s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b462f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475110cd0> 

Generation:  5
Best f1_score score: 0.9791596140655614
Generation:  20%|██        | 5/25 [49:09<3:16:57, 590.87s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553fe128c40> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474632590> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454d13c70> 

Generation:  6
Best f1_score score: 0.9791596140655614
Generation:  24%|██▍       | 6/25 [59:13<3:08:28, 595.20s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155453d63670> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ccf61d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155487859ae0> 

Generation:  7
Best f1_score score: 0.9791596140655614
Generation:  28%|██▊       | 7/25 [1:09:17<2:59:22, 597.92s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547420bee0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bf6e90> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d63bc70> 

Generation:  8
Best f1_score score: 0.9830108001654233
Generation:  32%|███▏      | 8/25 [1:19:20<2:49:55, 599.76s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474db2d70> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b475e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554529ccb50> 

Generation:  9
Best f1_score score: 0.9846313442604432
Generation:  36%|███▌      | 9/25 [1:29:26<2:40:25, 601.59s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475113520> 

Generation:  10
Best f1_score score: 0.9846313442604432
Generation:  40%|████      | 10/25 [1:39:30<2:30:36, 602.41s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474baf9a0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.9846313442604432
Generation:  44%|████▍     | 11/25 [1:49:19<2:19:37, 598.37s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454f27f40> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b45d80> 

Generation:  12
Best f1_score score: 0.9863468009443638
Generation:  48%|████▊     | 12/25 [1:59:24<2:10:03, 600.26s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457eee350> 

Generation:  13
Best f1_score score: 0.9863468009443638
Generation:  52%|█████▏    | 13/25 [2:09:30<2:00:24, 602.04s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554578a3dc0> 

Generation:  14
Best f1_score score: 0.9863468009443638
Generation:  56%|█████▌    | 14/25 [2:19:34<1:50:30, 602.76s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474ff68f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bf59c90> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457867fa0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cf9960> 

Generation:  15
Best f1_score score: 0.9863468009443638
Generation:  60%|██████    | 15/25 [2:29:41<1:40:38, 603.89s/it]Generation:  16
Best f1_score score: 0.9863468009443638
Generation:  64%|██████▍   | 16/25 [2:38:57<1:28:26, 589.60s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155412730550> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474baefe0> 

Generation:  17
Best f1_score score: 0.9863468009443638
Generation:  68%|██████▊   | 17/25 [2:49:02<1:19:13, 594.13s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474dab880> 

Generation:  18
Best f1_score score: 0.9863468009443638
Generation:  72%|███████▏  | 18/25 [2:59:08<1:09:42, 597.52s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547533af20> 

Generation:  19
Best f1_score score: 0.986752348138239
Generation:  76%|███████▌  | 19/25 [3:09:14<1:00:01, 600.26s/it]Generation:  20
Best f1_score score: 0.986752348138239
Generation:  80%|████████  | 20/25 [3:13:48<41:50, 502.20s/it]  Generation:  21
Best f1_score score: 0.986752348138239
Generation:  84%|████████▍ | 21/25 [3:16:08<26:13, 393.48s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bef160> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475328fd0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475137d00> 

Generation:  22
Best f1_score score: 0.986752348138239
Generation:  88%|████████▊ | 22/25 [3:26:13<22:51, 457.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547509ad70> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ca07a60> 

Generation:  23
Best f1_score score: 0.986752348138239
Generation:  92%|█████████▏| 23/25 [3:36:18<16:42, 501.41s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474a2e260> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155453e8b430> 

Generation:  24
Best f1_score score: 0.986752348138239
Generation:  96%|█████████▌| 24/25 [3:46:24<08:52, 532.89s/it]Generation:  25
Best f1_score score: 0.986752348138239
Generation: 100%|██████████| 25/25 [3:54:24<00:00, 516.96s/it]Generation: 100%|██████████| 25/25 [3:54:24<00:00, 562.58s/it]
2024-08-22 11:33:52,774 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:39735' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-8eb5fa879f71c9ae83a70e35ceed78bb', 'ndarray-1f9122a3dadacefe51c68266ddae4833'} (stimulus_id='handle-worker-cleanup-1724351632.774312')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=16, weights='distance')),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.0038661630412, hidden_layer_sizes=[207],
                               learning_rate_init=0.0038635310152,
                               n_iter_no_change=32))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9999390798972042, 'accuracy': 0.9938334007278609, 'balanced_accuracy': 0.9938358620212633, 'logloss': 0.025832499945613773, 'f1': 0.993833667222143}
test score: {'auroc': 0.9999478654283545, 'accuracy': 0.9927272727272727, 'balanced_accuracy': 0.9928500496524328, 'logloss': 0.02986075136390088, 'f1': 0.9927309098018517}
original test score: {'auroc': 0.999981672054453, 'accuracy': 0.9945454545454545, 'balanced_accuracy': 0.9946044356173452, 'logloss': 0.02431401215857502, 'f1': 0.9945602310602213}
score end
32
lvl
0.3
type
MAR
num_run
1
class_full
finished
all finished
full run takes
40.622040203279916
hours
DONE
