Run: 34
/cm/local/apps/slurm/var/spool/job1040374/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/923/923.pkl
working on 
../data/c/923/class_full_MNAR_0.1_2
3.4384303092956543
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-04 21:47:47,730] A new study created in memory with name: no-name-d5f9d1f3-8f92-4dc7-8f01-d5bdf056642a
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-04 21:47:47,845] Trial 10 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 56, 'iterations': 179, 'learning_rate': 0.0014498675986939166, 'p_miss': 0.16573989395853314}. Best is trial 10 with value: inf.
running
running
[I 2024-11-04 21:47:48,034] Trial 7 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 5, 'learning_rate': 0.0029599282381890498, 'p_miss': 0.21653876911302955}. Best is trial 10 with value: inf.
running
[I 2024-11-04 21:47:48,206] Trial 11 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 28, 'learning_rate': 0.0010779514956158, 'p_miss': 0.011527168851391777}. Best is trial 10 with value: inf.
[I 2024-11-04 21:47:48,318] Trial 12 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 87, 'iterations': 390, 'learning_rate': 0.01043057604535113, 'p_miss': 0.19474227447007803}. Best is trial 10 with value: inf.
running
running
[I 2024-11-04 21:47:48,526] Trial 15 finished with value: 0.46339310174838433 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 15 with value: 0.46339310174838433.
[I 2024-11-04 21:47:48,630] Trial 1 finished with value: 0.2770277410907862 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.2770277410907862.
running
running
[I 2024-11-04 21:47:48,800] Trial 19 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 782, 'iterations': 3, 'learning_rate': 0.0011300679067047605, 'p_miss': 0.27776607080193066}. Best is trial 1 with value: 0.2770277410907862.
running
[I 2024-11-04 21:47:50,685] Trial 2 finished with value: 0.3058395935540348 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 216, 'weights': 'distance'}. Best is trial 1 with value: 0.2770277410907862.
running
[I 2024-11-04 21:47:51,092] Trial 14 finished with value: 0.2770277410907862 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6304, 'weights': 'uniform'}. Best is trial 1 with value: 0.2770277410907862.
running
[I 2024-11-04 21:47:51,441] Trial 3 finished with value: 0.2761370477864291 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4246, 'weights': 'uniform'}. Best is trial 3 with value: 0.2761370477864291.
running
[I 2024-11-04 21:47:51,747] Trial 22 finished with value: 0.27306822831686245 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 969, 'weights': 'uniform'}. Best is trial 22 with value: 0.27306822831686245.
running
[I 2024-11-04 21:47:52,435] Trial 17 finished with value: 0.3096792696189941 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6283, 'weights': 'distance'}. Best is trial 22 with value: 0.27306822831686245.
running
[I 2024-11-04 21:47:52,849] Trial 0 finished with value: 0.27636968862703293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 22 with value: 0.27306822831686245.
running
[I 2024-11-04 21:47:53,298] Trial 23 finished with value: 0.2763802938160045 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 22 with value: 0.27306822831686245.
running
[I 2024-11-04 21:47:55,928] Trial 8 finished with value: 0.25969028337212235 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 8 with value: 0.25969028337212235.
running
[I 2024-11-04 21:47:57,212] Trial 13 finished with value: 0.24983322469212457 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 13 with value: 0.24983322469212457.
running
[I 2024-11-04 21:47:57,613] Trial 18 finished with value: 0.25192153762480457 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 13 with value: 0.24983322469212457.
running
[I 2024-11-04 21:48:22,769] Trial 16 finished with value: 0.46149606715721686 and parameters: {'model_name': 'GAIN', 'batch_size': 408, 'hint_rate': 0.9878371059791196, 'alpha': 91, 'iterations': 16, 'learning_rate': 0.016556549328474477, 'p_miss': 0.026822942085710358}. Best is trial 13 with value: 0.24983322469212457.
running
[I 2024-11-04 21:48:31,575] Trial 33 finished with value: 0.24918136142723565 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 33 with value: 0.24918136142723565.
running
[I 2024-11-04 21:49:19,090] Trial 9 finished with value: 0.43836574665658057 and parameters: {'model_name': 'GAIN', 'batch_size': 31, 'hint_rate': 0.2774074611611844, 'alpha': 4, 'iterations': 58, 'learning_rate': 0.0029218115613439104, 'p_miss': 0.24860351263337513}. Best is trial 33 with value: 0.24918136142723565.
running
[I 2024-11-04 21:49:36,652] Trial 5 finished with value: 0.44510980685039864 and parameters: {'model_name': 'GAIN', 'batch_size': 317, 'hint_rate': 0.3175111387089129, 'alpha': 22, 'iterations': 67, 'learning_rate': 0.0021086301682738643, 'p_miss': 0.16363814250807643}. Best is trial 33 with value: 0.24918136142723565.
running
[I 2024-11-04 21:49:45,934] Trial 36 finished with value: 0.24918136142723565 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 33 with value: 0.24918136142723565.
running
[I 2024-11-04 21:49:55,470] Trial 37 finished with value: 0.24918136142723565 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 33 with value: 0.24918136142723565.
running
[I 2024-11-04 21:53:59,652] Trial 21 finished with value: 0.4492694458820856 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.9323572354281345, 'alpha': 5, 'iterations': 259, 'learning_rate': 0.0016552113135495058, 'p_miss': 0.14906908646973985}. Best is trial 33 with value: 0.24918136142723565.
running
[I 2024-11-04 21:57:32,988] Trial 34 finished with value: 0.26632489264704906 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 33 with value: 0.24918136142723565.
running
[I 2024-11-04 21:57:42,348] Trial 40 finished with value: 0.24779371870241293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 40 with value: 0.24779371870241293.
running
[I 2024-11-04 21:57:52,876] Trial 41 finished with value: 0.24779371870241293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 40 with value: 0.24779371870241293.
running
[I 2024-11-04 21:58:02,362] Trial 42 finished with value: 0.25269877106258526 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.24779371870241293.
running
[I 2024-11-04 21:58:11,222] Trial 43 finished with value: 0.2518408639391707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.24779371870241293.
running
[I 2024-11-04 21:58:14,071] Trial 44 finished with value: 0.276380405392273 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.24779371870241293.
running
[I 2024-11-04 21:58:14,722] Trial 45 finished with value: 0.46339310174838433 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 40 with value: 0.24779371870241293.
running
[I 2024-11-04 21:58:19,965] Trial 6 finished with value: 0.24321975025700163 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 6 with value: 0.24321975025700163.
running
[I 2024-11-04 21:58:22,708] Trial 46 finished with value: 0.2684325617092716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 6 with value: 0.24321975025700163.
running
[I 2024-11-04 21:58:23,024] Trial 35 finished with value: 0.2676524316944814 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 6 with value: 0.24321975025700163.
running
[I 2024-11-04 22:01:02,610] Trial 38 finished with value: 0.20901245981855432 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:03:19,191] Trial 29 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.28952327154966906, 'alpha': 31, 'iterations': 3280, 'learning_rate': 0.07885737355428996, 'p_miss': 0.011710562803764979}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:04:50,218] Trial 39 finished with value: 0.2132007313184129 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:04:50,734] Trial 52 finished with value: 0.3042910911963525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:08:25,583] Trial 48 finished with value: 0.24159292919280234 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:08:46,646] Trial 49 finished with value: 0.24585536179337503 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:09:12,681] Trial 47 finished with value: 0.24092170491439716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:11:11,293] Trial 50 finished with value: 0.2410200744341736 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:13:30,735] Trial 51 finished with value: 0.24458892239889818 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:14:55,959] Trial 53 finished with value: 0.24410026068291066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:17:40,758] Trial 27 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.7952642109926035, 'alpha': 87, 'iterations': 6172, 'learning_rate': 0.08956195682614379, 'p_miss': 0.060445739573244825}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:18:58,431] Trial 54 finished with value: 0.23479435334866805 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:19:00,285] Trial 55 finished with value: 0.2318749732185393 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:19:00,853] Trial 62 finished with value: 0.3042910911963525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:19:17,300] Trial 56 finished with value: 0.2415140150294574 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:19:21,432] Trial 64 finished with value: 0.3090513743048622 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2738, 'weights': 'distance'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:19:21,866] Trial 65 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 1, 'learning_rate': 0.00023143670550523687, 'p_miss': 0.1083781589398307}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:21:28,747] Trial 57 finished with value: 0.23582007487651463 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:22:16,740] Trial 31 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.38927296844386006, 'alpha': 8, 'iterations': 7318, 'learning_rate': 0.00015633704002750834, 'p_miss': 0.0221677378812124}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:24:09,318] Trial 58 finished with value: 0.2317596157347142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:25:12,925] Trial 59 finished with value: 0.2333060861519841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:27:01,255] Trial 28 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.4310985128028394, 'alpha': 3, 'iterations': 7995, 'learning_rate': 0.07820675888977996, 'p_miss': 0.04377841474043609}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:27:50,449] Trial 63 finished with value: 0.2653834447886475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:28:30,909] Trial 60 finished with value: 0.22804601320583823 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:28:34,322] Trial 61 finished with value: 0.2623145105856012 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:28:38,667] Trial 74 finished with value: 0.3093239083975316 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3595, 'weights': 'distance'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:28:39,017] Trial 75 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 909, 'learning_rate': 0.0004065061996220158, 'p_miss': 0.08849788562712378}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:28:54,446] Trial 73 finished with value: 0.39417852516351237 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:29:03,558] Trial 76 finished with value: 0.39417852516351237 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:30:24,965] Trial 66 finished with value: 0.230594042804473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:30:31,750] Trial 30 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.2076818493252383, 'alpha': 5, 'iterations': 8860, 'learning_rate': 0.09808379801064737, 'p_miss': 0.042033664904744014}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:30:52,155] Trial 67 finished with value: 0.26659340869045073 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:31:50,403] Trial 68 finished with value: 0.266455007769121 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:32:26,384] Trial 25 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5275591484977882, 'alpha': 35, 'iterations': 9293, 'learning_rate': 0.08847225953141101, 'p_miss': 0.05786264250212379}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:34:04,292] Trial 69 finished with value: 0.2663670019940129 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:34:39,481] Trial 32 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.36435934881607296, 'alpha': 45, 'iterations': 9831, 'learning_rate': 0.0924066093390272, 'p_miss': 0.05136306464519169}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:34:58,185] Trial 70 finished with value: 0.2646658862180221 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:36:39,874] Trial 71 finished with value: 0.2632468135564517 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:39:57,726] Trial 4 finished with value: 0.46186147487904866 and parameters: {'model_name': 'GAIN', 'batch_size': 55, 'hint_rate': 0.5610196636557038, 'alpha': 6, 'iterations': 2111, 'learning_rate': 0.013730281439482355, 'p_miss': 0.2387105521320885}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:40:04,502] Trial 72 finished with value: 0.21360511747542846 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:40:08,449] Trial 77 finished with value: 0.231784924456149 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:40:10,686] Trial 78 finished with value: 0.23680281085766103 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:40:12,580] Trial 90 finished with value: 0.27638042130763 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:40:15,146] Trial 91 finished with value: 0.2763802869423349 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:40:15,808] Trial 93 finished with value: 0.46339310174838433 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:40:19,236] Trial 94 finished with value: 0.2742268949253356 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1628, 'weights': 'uniform'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:40:19,663] Trial 95 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 1, 'learning_rate': 0.00610353482386973, 'p_miss': 0.292523882585041}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:41:22,642] Trial 80 finished with value: 0.23560542709368554 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:41:24,960] Trial 79 finished with value: 0.23272519950497683 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:41:56,073] Trial 81 finished with value: 0.22895398413959173 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:42:23,568] Trial 82 finished with value: 0.2337197467886262 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:43:38,688] Trial 83 finished with value: 0.233408718900882 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:44:53,824] Trial 84 finished with value: 0.23951493557395379 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:45:39,041] Trial 85 finished with value: 0.240536907241692 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:45:42,911] Trial 86 finished with value: 0.23954565025054114 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:45:49,359] Trial 103 finished with value: 0.27636968862703293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:45:54,915] Trial 104 finished with value: 0.27636968862703293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:47:57,300] Trial 87 finished with value: 0.24196905154135342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:50:35,145] Trial 88 finished with value: 0.23598248029895624 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:50:46,107] Trial 96 finished with value: 0.23868594303861088 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:51:47,226] Trial 92 finished with value: 0.2104649735105292 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:51:55,671] Trial 89 finished with value: 0.21205968984088286 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:52:37,691] Trial 97 finished with value: 0.21146360062242392 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:52:49,223] Trial 98 finished with value: 0.20944366764329686 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:52:49,589] Trial 113 finished with value: 0.46339310174838433 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:53:14,690] Trial 99 finished with value: 0.21132620061606722 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:54:09,203] Trial 100 finished with value: 0.21272051815264742 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:55:13,579] Trial 101 finished with value: 0.21123463511317855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:56:16,816] Trial 102 finished with value: 0.21027539693723063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 38 with value: 0.20901245981855432.
running
[I 2024-11-04 22:57:20,335] Trial 105 finished with value: 0.2083881081167273 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 105 with value: 0.2083881081167273.
running
[I 2024-11-04 22:57:22,740] Trial 106 finished with value: 0.20936546962412503 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 105 with value: 0.2083881081167273.
running
[I 2024-11-04 22:57:33,901] Trial 120 finished with value: 0.4521415757054143 and parameters: {'model_name': 'GAIN', 'batch_size': 163, 'hint_rate': 0.11572099065211539, 'alpha': 72, 'iterations': 4, 'learning_rate': 0.03300080361212518, 'p_miss': 0.11540576871632213}. Best is trial 105 with value: 0.2083881081167273.
running
[I 2024-11-04 22:59:35,522] Trial 107 finished with value: 0.21214900898088898 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 105 with value: 0.2083881081167273.
running
[I 2024-11-04 23:01:44,118] Trial 108 finished with value: 0.211770003250661 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 105 with value: 0.2083881081167273.
running
[I 2024-11-04 23:01:44,352] Trial 109 finished with value: 0.20815829063411462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:01:48,590] Trial 124 finished with value: 0.30966548994799303 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5146, 'weights': 'distance'}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:01:53,650] Trial 125 finished with value: 0.27638034970705894 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:02:36,077] Trial 110 finished with value: 0.21318975187832248 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:03:07,942] Trial 111 finished with value: 0.2118201806889913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:03:46,699] Trial 112 finished with value: 0.21062058431822459 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:03:47,088] Trial 129 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 14, 'learning_rate': 0.000531151322725634, 'p_miss': 0.1344029297239172}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:04:02,655] Trial 114 finished with value: 0.21300036977213357 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:04:20,930] Trial 115 finished with value: 0.213845247253799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 109 with value: 0.20815829063411462.
running
[I 2024-11-04 23:05:30,128] Trial 116 finished with value: 0.2078539350830808 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:06:51,703] Trial 117 finished with value: 0.20954867725025514 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:07:01,086] Trial 134 finished with value: 0.25167485017316527 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:07:07,164] Trial 118 finished with value: 0.21359734752963155 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:08:48,492] Trial 119 finished with value: 0.20978260622900388 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:08:51,868] Trial 20 finished with value: 0.4646217805431293 and parameters: {'model_name': 'GAIN', 'batch_size': 241, 'hint_rate': 0.9880727146936373, 'alpha': 68, 'iterations': 2988, 'learning_rate': 0.008912732602836385, 'p_miss': 0.16324251445044236}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:09:11,155] Trial 121 finished with value: 0.21599911011061232 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:11:26,783] Trial 122 finished with value: 0.2127119524250324 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:13:15,724] Trial 123 finished with value: 0.21196233513106594 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:13:24,057] Trial 126 finished with value: 0.2130913418863678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:13:57,432] Trial 127 finished with value: 0.21037094088213867 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:14:42,270] Trial 128 finished with value: 0.2095430093553808 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:14:42,587] Trial 144 finished with value: 0.2770277410907862 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:15:11,730] Trial 130 finished with value: 0.2096572798786926 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2078539350830808.
running
[I 2024-11-04 23:15:18,774] Trial 131 finished with value: 0.20703943925142676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 131 with value: 0.20703943925142676.
running
[I 2024-11-04 23:15:38,833] Trial 132 finished with value: 0.21257951260682714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 131 with value: 0.20703943925142676.
running
[I 2024-11-04 23:17:04,699] Trial 133 finished with value: 0.2086290374477319 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 131 with value: 0.20703943925142676.
running
[I 2024-11-04 23:18:30,217] Trial 136 finished with value: 0.2098421195262572 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 131 with value: 0.20703943925142676.
running
[I 2024-11-04 23:19:12,864] Trial 135 finished with value: 0.2085522980989647 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 131 with value: 0.20703943925142676.
running
[I 2024-11-04 23:20:06,706] Trial 26 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.1976714895970641, 'alpha': 47, 'iterations': 9089, 'learning_rate': 0.08558720406460688, 'p_miss': 0.041320827325307063}. Best is trial 131 with value: 0.20703943925142676.
running
[I 2024-11-04 23:20:09,639] Trial 138 finished with value: 0.21349550117030985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 131 with value: 0.20703943925142676.
running
[I 2024-11-04 23:20:15,955] Trial 137 finished with value: 0.20624949262275694 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 137 with value: 0.20624949262275694.
running
[I 2024-11-04 23:20:32,898] Trial 139 finished with value: 0.2150695258169372 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 137 with value: 0.20624949262275694.
running
[I 2024-11-04 23:20:36,315] Trial 155 finished with value: 0.2751677379529113 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2323, 'weights': 'uniform'}. Best is trial 137 with value: 0.20624949262275694.
running
[I 2024-11-04 23:22:46,191] Trial 140 finished with value: 0.20774196363291178 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 137 with value: 0.20624949262275694.
running
[I 2024-11-04 23:24:43,501] Trial 141 finished with value: 0.21153187407980362 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 137 with value: 0.20624949262275694.
running
[I 2024-11-04 23:25:00,056] Trial 142 finished with value: 0.21338641849549175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 137 with value: 0.20624949262275694.
running
[I 2024-11-04 23:25:21,687] Trial 143 finished with value: 0.20513201186835506 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:25:31,388] Trial 160 finished with value: 0.2505535455904135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:25:31,686] Trial 161 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 962, 'iterations': 796, 'learning_rate': 0.00010144406210653676, 'p_miss': 0.20298277247529473}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:26:27,005] Trial 145 finished with value: 0.207895205846849 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:26:48,570] Trial 147 finished with value: 0.2089767219205183 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:26:59,414] Trial 148 finished with value: 0.2124507268003198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:27:06,529] Trial 165 finished with value: 0.4539161272561828 and parameters: {'model_name': 'GAIN', 'batch_size': 23, 'hint_rate': 0.6683713053699404, 'alpha': 68, 'iterations': 2, 'learning_rate': 0.04131267098375241, 'p_miss': 0.08824154696509945}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:27:07,420] Trial 146 finished with value: 0.21422273222266183 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:28:52,168] Trial 149 finished with value: 0.20643647280462368 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:29:44,031] Trial 150 finished with value: 0.21465135233057056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:30:25,400] Trial 164 finished with value: 0.45374516668363335 and parameters: {'model_name': 'GAIN', 'batch_size': 25, 'hint_rate': 0.026269434411072212, 'alpha': 66, 'iterations': 121, 'learning_rate': 0.0005790001038553852, 'p_miss': 0.08620063720555672}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:30:46,112] Trial 151 finished with value: 0.21403758835247033 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:31:11,433] Trial 152 finished with value: 0.21079052427695175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:31:26,987] Trial 154 finished with value: 0.21360267215846238 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:31:31,967] Trial 153 finished with value: 0.2114605168458367 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:32:07,864] Trial 156 finished with value: 0.21393982734547096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:32:36,318] Trial 175 finished with value: 0.4022057142979638 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:34:50,876] Trial 157 finished with value: 0.21405857333690226 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:36:31,171] Trial 158 finished with value: 0.2092317078420265 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:36:35,797] Trial 178 finished with value: 0.27638034970705894 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:37:10,380] Trial 162 finished with value: 0.20940930958268317 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:37:21,383] Trial 159 finished with value: 0.2138145374168463 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:38:20,054] Trial 163 finished with value: 0.20937620706711674 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:38:44,539] Trial 166 finished with value: 0.21207476084804813 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:39:30,620] Trial 167 finished with value: 0.20789130762925648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:40:42,456] Trial 168 finished with value: 0.20698378143438276 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:41:32,597] Trial 169 finished with value: 0.21039695305524195 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:42:27,454] Trial 170 finished with value: 0.2086922711170968 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:42:46,452] Trial 173 finished with value: 0.2129789783534942 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:42:54,195] Trial 174 finished with value: 0.21109073200578704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:42:54,868] Trial 189 finished with value: 0.3042910911963525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:42:57,924] Trial 172 finished with value: 0.21273587125158064 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:43:05,861] Trial 171 finished with value: 0.21022512465875226 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:44:16,996] Trial 176 finished with value: 0.21249644806616494 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:46:33,190] Trial 177 finished with value: 0.2100405615392603 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:47:57,333] Trial 179 finished with value: 0.2097372112721203 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:48:01,029] Trial 195 finished with value: 0.27660335851156026 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4900, 'weights': 'uniform'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:48:31,304] Trial 180 finished with value: 0.21116264060094597 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:49:05,498] Trial 181 finished with value: 0.21005962206363896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:50:08,662] Trial 182 finished with value: 0.2124244058100544 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
running
[I 2024-11-04 23:50:13,836] Trial 183 finished with value: 0.2102899782131212 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:51:24,092] Trial 184 finished with value: 0.21139976401142083 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:51:52,681] Trial 185 finished with value: 0.21118730773717434 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:52:29,011] Trial 186 finished with value: 0.2117850366914308 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:53:23,769] Trial 187 finished with value: 0.21300607439739833 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:53:30,336] Trial 190 finished with value: 0.2127623551064234 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:53:31,757] Trial 188 finished with value: 0.21348870646173496 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:53:36,612] Trial 191 finished with value: 0.20976109902601942 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:53:50,923] Trial 192 finished with value: 0.20979778068503255 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:54:11,939] Trial 193 finished with value: 0.2109712773158971 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:54:24,962] Trial 24 finished with value: 0.4678974152056023 and parameters: {'model_name': 'GAIN', 'batch_size': 862, 'hint_rate': 0.41006630067160926, 'alpha': 76, 'iterations': 4806, 'learning_rate': 0.00025019970596153776, 'p_miss': 0.10627063897574038}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:55:03,054] Trial 194 finished with value: 0.21140136578344787 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:55:28,837] Trial 196 finished with value: 0.21032836575355565 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:55:36,114] Trial 197 finished with value: 0.21231763584055058 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:55:50,701] Trial 198 finished with value: 0.21310143193316672 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 143 with value: 0.20513201186835506.
[I 2024-11-04 23:56:13,272] Trial 199 finished with value: 0.2080756995663598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 143 with value: 0.20513201186835506.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
dtype: int64
0    0
1    0
2    0
3    0
dtype: int64
0.20513201186835506
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9727232221832885
Generation:   4%|▍         | 1/25 [00:14<05:36, 14.04s/it]Generation:  2
Best f1_score score: 0.9727232221832885
Generation:   8%|▊         | 2/25 [01:24<18:06, 47.24s/it]Generation:  3
Best f1_score score: 0.9727232221832885
Generation:  12%|█▏        | 3/25 [03:46<33:12, 90.57s/it]Generation:  4
Best f1_score score: 0.9727232221832885
Generation:  16%|█▌        | 4/25 [04:02<21:20, 60.97s/it]Generation:  5
Best f1_score score: 0.9727232221832885
Generation:  20%|██        | 5/25 [04:18<14:57, 44.86s/it]Generation:  6
Best f1_score score: 0.9731407183817009
Generation:  24%|██▍       | 6/25 [04:32<10:51, 34.29s/it]Generation:  7
Best f1_score score: 0.9731407183817009
Generation:  28%|██▊       | 7/25 [04:59<09:37, 32.11s/it]Generation:  8
Best f1_score score: 0.9731407183817009
Generation:  32%|███▏      | 8/25 [05:28<08:46, 30.96s/it]Generation:  9
Best f1_score score: 0.9731407183817009
Generation:  36%|███▌      | 9/25 [05:42<06:51, 25.72s/it]Generation:  10
Best f1_score score: 0.973155961755487
Generation:  40%|████      | 10/25 [05:57<05:33, 22.22s/it]Generation:  11
Best f1_score score: 0.9734456919937372
Generation:  44%|████▍     | 11/25 [06:53<07:36, 32.57s/it]Generation:  12
Best f1_score score: 0.9735917474001822
Generation:  48%|████▊     | 12/25 [07:11<06:08, 28.37s/it]Generation:  13
Best f1_score score: 0.9735917474001822
Generation:  52%|█████▏    | 13/25 [07:27<04:53, 24.43s/it]Generation:  14
Best f1_score score: 0.9735917474001822
Generation:  56%|█████▌    | 14/25 [08:27<06:29, 35.36s/it]Generation:  15
Best f1_score score: 0.9735917474001822
Generation:  60%|██████    | 15/25 [08:46<05:04, 30.48s/it]Generation:  16
Best f1_score score: 0.9735917474001822
Generation:  64%|██████▍   | 16/25 [09:06<04:03, 27.09s/it]Generation:  17
Best f1_score score: 0.9735917474001822
Generation:  68%|██████▊   | 17/25 [09:24<03:16, 24.59s/it]Generation:  18
Best f1_score score: 0.9735917474001822
Generation:  72%|███████▏  | 18/25 [10:49<04:57, 42.50s/it]Generation:  19
Best f1_score score: 0.9735917474001822
Generation:  76%|███████▌  | 19/25 [11:07<03:31, 35.27s/it]Generation:  20
Best f1_score score: 0.9735917474001822
Generation:  80%|████████  | 20/25 [11:51<03:09, 37.93s/it]Generation:  21
Best f1_score score: 0.9735917474001822
Generation:  84%|████████▍ | 21/25 [12:14<02:14, 33.51s/it]Generation:  22
Best f1_score score: 0.9735933530370231
Generation:  88%|████████▊ | 22/25 [12:35<01:29, 29.69s/it]Generation:  23
Best f1_score score: 0.9735933530370231
Generation:  92%|█████████▏| 23/25 [12:55<00:53, 26.85s/it]Generation:  24
Best f1_score score: 0.9735933530370231
Generation:  96%|█████████▌| 24/25 [13:16<00:25, 25.04s/it]Generation:  25
Best f1_score score: 0.9735933530370231
Generation: 100%|██████████| 25/25 [13:41<00:00, 25.09s/it]Generation: 100%|██████████| 25/25 [13:46<00:00, 33.06s/it]
2024-11-05 00:11:06,750 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46651' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-04cf9d9cdd22cd609af7045a3142ac06', 'ndarray-782bc5f56dfe6ad3c3952dbb6d6329f9'} (stimulus_id='handle-worker-cleanup-1730794266.7508008')
Fitted
Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features=0.1666057494287,
                                        min_samples_split=18,
                                        n_estimators=128))])
score start
train score: {'auroc': 0.9993434239214087, 'accuracy': 0.9758391203703703, 'balanced_accuracy': 0.9763992043449801, 'logloss': 0.04713090206326934, 'f1': 0.9756321594005486}
original test score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 0.025223391097283207, 'f1': 1.0}
imputed test score: {'auroc': 0.9917790500596044, 'accuracy': 0.9751301330248698, 'balanced_accuracy': 0.9754047288877354, 'logloss': 0.10881915279285138, 'f1': 0.9749043474445114}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd55a0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d483a0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd48b0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4a30> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.9580003177367263
Generation:   4%|▍         | 1/25 [03:37<1:26:55, 217.31s/it]Generation:  2
Best f1_score score: 0.9597410737354046
Generation:   8%|▊         | 2/25 [07:14<1:23:20, 217.42s/it]Generation:  3
Best f1_score score: 0.9703906774988683
Generation:  12%|█▏        | 3/25 [10:58<1:20:43, 220.16s/it]Generation:  4
Best f1_score score: 0.9711183435099116
Generation:  16%|█▌        | 4/25 [14:40<1:17:21, 221.04s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd6830> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  5
Best f1_score score: 0.9722789187475396
Generation:  20%|██        | 5/25 [18:21<1:13:41, 221.10s/it]Generation:  6
Best f1_score score: 0.9722789187475396
Generation:  24%|██▍       | 6/25 [22:05<1:10:20, 222.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554210fb160> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  7
Best f1_score score: 0.9722789187475396
Generation:  28%|██▊       | 7/25 [25:49<1:06:47, 222.61s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dda0d30> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  8
Best f1_score score: 0.9722789187475396
Generation:  32%|███▏      | 8/25 [29:33<1:03:11, 223.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456d696f0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554210f9ae0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547459b700> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  9
Best f1_score score: 0.9722789187475396
Generation:  36%|███▌      | 9/25 [33:24<1:00:07, 225.46s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd6f50> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  10
Best f1_score score: 0.9722789187475396
Generation:  40%|████      | 10/25 [40:13<1:10:30, 282.03s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e02a350> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.9722789187475396
Generation:  44%|████▍     | 11/25 [43:58<1:01:48, 264.86s/it]Generation:  12
Best f1_score score: 0.9722789187475396
Generation:  48%|████▊     | 12/25 [47:46<54:57, 253.66s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474301510> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.9730086036781822
Generation:  52%|█████▏    | 13/25 [51:30<48:52, 244.41s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ddc8490> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  14
Best f1_score score: 0.9730086036781822
Generation:  56%|█████▌    | 14/25 [55:12<43:34, 237.69s/it]Generation:  15
Best f1_score score: 0.9730086036781822
Generation:  60%|██████    | 15/25 [58:57<39:00, 234.07s/it]Generation:  16
Best f1_score score: 0.9730086036781822
Generation:  64%|██████▍   | 16/25 [1:02:44<34:46, 231.85s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454bdc940> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d680640> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.9734469764995486
Generation:  68%|██████▊   | 17/25 [1:06:30<30:40, 230.02s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745c9de0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  18
Best f1_score score: 0.9734469764995486
Generation:  72%|███████▏  | 18/25 [1:10:19<26:47, 229.64s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545c02e050> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  19
Best f1_score score: 0.9734469764995486
Generation:  76%|███████▌  | 19/25 [1:14:15<23:10, 231.76s/it]Generation:  20
Best f1_score score: 0.9734469764995486
Generation:  80%|████████  | 20/25 [1:18:03<19:12, 230.55s/it]Generation:  21
Best f1_score score: 0.9734469764995486
Generation:  84%|████████▍ | 21/25 [1:21:54<15:22, 230.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dd83a30> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  22
Best f1_score score: 0.9734469764995486
Generation:  88%|████████▊ | 22/25 [1:25:45<11:32, 230.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dcc2f20> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.9734469764995486
Generation:  92%|█████████▏| 23/25 [1:29:32<07:39, 229.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545c44bc40> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.9734469764995486
Generation:  96%|█████████▌| 24/25 [1:33:16<03:48, 228.07s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d66f5e0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  25
Best f1_score score: 0.9734469764995486
Generation: 100%|██████████| 25/25 [1:38:14<00:00, 248.97s/it]Generation: 100%|██████████| 25/25 [1:38:14<00:00, 235.79s/it]
2024-11-05 01:50:26,515 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42979' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-782bc5f56dfe6ad3c3952dbb6d6329f9', 'DataFrame-c5be60822278fb1d587ef1c5b5de6440'} (stimulus_id='handle-worker-cleanup-1730800226.515632')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=RandomForestRegressor(),
                                  imputation_order='roman',
                                  initial_strategy='constant',
                                  n_nearest_features=40)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features=0.8545154043715,
                                      min_samples_leaf=17, min_samples_split=18,
                                      n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9945554548206985, 'accuracy': 0.9738136574074074, 'balanced_accuracy': 0.9743532342936786, 'logloss': 0.09303437900969097, 'f1': 0.9735893464161633}
test score: {'auroc': 0.9924082078396709, 'accuracy': 0.9762868710237131, 'balanced_accuracy': 0.9769238982643085, 'logloss': 0.09586791648378554, 'f1': 0.976087181651266}
original test score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 0.03695499137055459, 'f1': 1.0}
score end
923
lvl
0.1
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
4.06377327117655
hours
DONE
