Run: 49
/cm/local/apps/slurm/var/spool/job1061322/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/4135/4135.pkl
working on 
../data/c/4135/class_full_MCAR_0.01_3
3.162012815475464
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-16 17:56:28,337] A new study created in memory with name: no-name-43b5839d-899f-4ad0-822b-4393a4329895
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-16 17:56:28,810] Trial 4 finished with value: 0.6442311051946086 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.6442311051946086.
running
[I 2024-11-16 17:56:29,362] Trial 13 finished with value: 0.30101488153818473 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 13 with value: 0.30101488153818473.
running
[I 2024-11-16 17:56:29,722] Trial 16 finished with value: 0.6442311051946086 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 13 with value: 0.30101488153818473.
running
[I 2024-11-16 17:56:29,979] Trial 14 finished with value: 0.32157912544675654 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 13 with value: 0.30101488153818473.
running
[I 2024-11-16 17:56:30,394] Trial 17 finished with value: 0.32157912544675654 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 13 with value: 0.30101488153818473.
running
[I 2024-11-16 17:56:48,883] Trial 12 finished with value: 0.279111469073326 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 12 with value: 0.279111469073326.
running
[I 2024-11-16 17:56:50,062] Trial 21 finished with value: 0.40989250833931523 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 12 with value: 0.279111469073326.
running
[I 2024-11-16 17:56:55,228] Trial 9 finished with value: 0.2609448365820076 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2911, 'weights': 'uniform'}. Best is trial 9 with value: 0.2609448365820076.
running
[I 2024-11-16 17:56:56,040] Trial 18 finished with value: 0.25456999140749015 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 18 with value: 0.25456999140749015.
running
[I 2024-11-16 17:56:56,272] Trial 23 finished with value: 0.32157912544675654 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 18 with value: 0.25456999140749015.
running
[I 2024-11-16 17:56:59,434] Trial 20 finished with value: 0.21115501557612668 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1948, 'weights': 'distance'}. Best is trial 20 with value: 0.21115501557612668.
running
[I 2024-11-16 17:57:08,706] Trial 26 finished with value: 0.36569914240469065 and parameters: {'model_name': 'VAE', 'batch_size': 395, 'iterations': 1, 'learning_rate': 0.0014288020409181548, 'p_miss': 0.054589208879893145}. Best is trial 20 with value: 0.21115501557612668.
running
[I 2024-11-16 17:57:09,705] Trial 6 finished with value: 0.21838200940268263 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 14310, 'weights': 'distance'}. Best is trial 20 with value: 0.21115501557612668.
running
[I 2024-11-16 17:57:10,122] Trial 10 finished with value: 0.22144543075924422 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 20769, 'weights': 'distance'}. Best is trial 20 with value: 0.21115501557612668.
running
[I 2024-11-16 17:57:28,079] Trial 24 finished with value: 0.2681436737613979 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 20 with value: 0.21115501557612668.
running
[I 2024-11-16 17:57:33,655] Trial 11 finished with value: 0.19264691012976548 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 17:57:38,022] Trial 1 finished with value: 0.35657409155475317 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 47, 'learning_rate': 0.0005538305546058607, 'p_miss': 0.21453232012533857}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 17:57:39,766] Trial 8 finished with value: 0.2542441560163498 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 17:57:46,436] Trial 29 finished with value: 0.2164172454936581 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10435, 'weights': 'distance'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 17:57:47,297] Trial 28 finished with value: 0.2197407060854482 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16853, 'weights': 'distance'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 17:57:52,460] Trial 19 finished with value: 0.3289981567774651 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 68, 'learning_rate': 0.03217539027151002, 'p_miss': 0.11876263136662392}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 17:57:57,354] Trial 30 finished with value: 0.215665906545277 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8794, 'weights': 'distance'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 17:57:58,860] Trial 5 finished with value: 0.3636871711137116 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 17:59:23,432] Trial 0 finished with value: 0.5889741122332721 and parameters: {'model_name': 'GAIN', 'batch_size': 991, 'hint_rate': 0.8523316078803121, 'alpha': 55, 'iterations': 132, 'learning_rate': 0.003963810276045308, 'p_miss': 0.1252495864725378}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:00:14,728] Trial 22 finished with value: 0.5369319388882268 and parameters: {'model_name': 'GAIN', 'batch_size': 878, 'hint_rate': 0.5507847300344323, 'alpha': 20, 'iterations': 180, 'learning_rate': 0.0002861076660050699, 'p_miss': 0.2758471631353681}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:00:27,983] Trial 40 finished with value: 0.20728412634772037 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 377, 'weights': 'distance'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:00:41,308] Trial 41 finished with value: 0.2520769737223211 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1093, 'weights': 'uniform'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:00:57,850] Trial 42 finished with value: 0.21314499616569446 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4073, 'weights': 'distance'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:04:13,226] Trial 7 finished with value: 0.5897555274660753 and parameters: {'model_name': 'GAIN', 'batch_size': 132, 'hint_rate': 0.9895475802745533, 'alpha': 2, 'iterations': 444, 'learning_rate': 0.0007783768389999414, 'p_miss': 0.1835255921715791}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:10:56,348] Trial 31 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.6449214828454387, 'alpha': 30, 'iterations': 3777, 'learning_rate': 0.08304995517577574, 'p_miss': 0.2955052344182951}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:11:44,161] Trial 45 finished with value: 0.21007869445272095 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:12:34,862] Trial 46 finished with value: 0.21024240283063725 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:13:25,030] Trial 47 finished with value: 0.21024240283063725 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:14:06,567] Trial 48 finished with value: 0.20295387023624117 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:14:49,052] Trial 49 finished with value: 0.20295387023624117 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:15:01,859] Trial 44 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 22, 'hint_rate': 0.04782326200353254, 'alpha': 93, 'iterations': 2696, 'learning_rate': 0.09706882243895933, 'p_miss': 0.013138120840919892}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:21:01,220] Trial 43 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 23, 'hint_rate': 0.0664323230851519, 'alpha': 95, 'iterations': 5276, 'learning_rate': 0.05293071738627101, 'p_miss': 0.03955264079657385}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:29:59,418] Trial 27 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.7478091679978865, 'alpha': 7, 'iterations': 8968, 'learning_rate': 0.07781496981883232, 'p_miss': 0.2778474336476983}. Best is trial 11 with value: 0.19264691012976548.
running
[I 2024-11-16 18:38:56,061] Trial 15 finished with value: 0.16852310350614005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 15 with value: 0.16852310350614005.
running
[I 2024-11-16 18:39:13,813] Trial 25 finished with value: 0.16841826624350617 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 25 with value: 0.16841826624350617.
running
[I 2024-11-16 18:44:10,184] Trial 2 finished with value: 0.58270452980974 and parameters: {'model_name': 'GAIN', 'batch_size': 99, 'hint_rate': 0.7401275116379396, 'alpha': 72, 'iterations': 2454, 'learning_rate': 0.06989085636209756, 'p_miss': 0.033066459277295096}. Best is trial 25 with value: 0.16841826624350617.
running
[I 2024-11-16 18:55:11,275] Trial 50 finished with value: 0.1681829467564599 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 50 with value: 0.1681829467564599.
running
[I 2024-11-16 18:55:28,630] Trial 51 finished with value: 0.16725864925416853 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:00:44,899] Trial 52 finished with value: 0.16822105848037133 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:10:09,266] Trial 53 finished with value: 0.16904422292343613 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:16:11,074] Trial 55 finished with value: 0.17079390584016774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:19:11,383] Trial 54 finished with value: 0.16964323385196475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:19:19,339] Trial 36 finished with value: 0.6054622151798651 and parameters: {'model_name': 'GAIN', 'batch_size': 832, 'hint_rate': 0.5564824803973456, 'alpha': 38, 'iterations': 3573, 'learning_rate': 0.059509650582364876, 'p_miss': 0.27861320115871874}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:24:41,596] Trial 56 finished with value: 0.16872104524873252 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:32:13,559] Trial 58 finished with value: 0.17018595211750862 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:35:40,795] Trial 57 finished with value: 0.16918617911708939 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:40:43,126] Trial 59 finished with value: 0.16934597591985084 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:51:04,342] Trial 60 finished with value: 0.1693253026317816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:56:36,910] Trial 63 finished with value: 0.17070517378896716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:56:38,187] Trial 62 finished with value: 0.17028039095560737 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:56:41,373] Trial 69 finished with value: 0.3685899032879229 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 1, 'learning_rate': 0.00011280554963821985, 'p_miss': 0.08697317653620314}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:56:43,039] Trial 70 finished with value: 0.37149333246112787 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 1, 'learning_rate': 0.00010423437888987698, 'p_miss': 0.09046972883990191}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:57:02,369] Trial 61 finished with value: 0.1682268583600936 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 19:58:09,197] Trial 3 finished with value: 0.5870175136929493 and parameters: {'model_name': 'GAIN', 'batch_size': 139, 'hint_rate': 0.4716497743585185, 'alpha': 29, 'iterations': 6572, 'learning_rate': 0.007035128689985076, 'p_miss': 0.07162976366740158}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 20:02:07,205] Trial 64 finished with value: 0.17133669090397782 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 20:02:19,672] Trial 34 finished with value: 0.5973552361136804 and parameters: {'model_name': 'GAIN', 'batch_size': 432, 'hint_rate': 0.96704094656557, 'alpha': 24, 'iterations': 6141, 'learning_rate': 0.08467548560022492, 'p_miss': 0.2920799194218119}. Best is trial 51 with value: 0.16725864925416853.
running
[I 2024-11-16 20:15:32,745] Trial 65 finished with value: 0.16661947842603125 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 65 with value: 0.16661947842603125.
running
[I 2024-11-16 20:18:55,376] Trial 66 finished with value: 0.16635103851082042 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 66 with value: 0.16635103851082042.
running
[I 2024-11-16 20:23:28,099] Trial 67 finished with value: 0.16634967271595974 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:25:29,112] Trial 37 finished with value: 0.6000053098368516 and parameters: {'model_name': 'GAIN', 'batch_size': 988, 'hint_rate': 0.340073478602078, 'alpha': 68, 'iterations': 6780, 'learning_rate': 0.00010604534261397122, 'p_miss': 0.2989638194313843}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:30:25,104] Trial 39 finished with value: 0.5950503260364003 and parameters: {'model_name': 'GAIN', 'batch_size': 45, 'hint_rate': 0.05437216377960291, 'alpha': 8, 'iterations': 8838, 'learning_rate': 0.00012899443202341626, 'p_miss': 0.2995660606959485}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:34:05,607] Trial 68 finished with value: 0.16752738615535653 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:39:01,543] Trial 71 finished with value: 0.16703159589413002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:39:06,255] Trial 72 finished with value: 0.16702334673348845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:39:16,383] Trial 73 finished with value: 0.16663263658217997 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:40:18,598] Trial 83 finished with value: 0.2532551160626685 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:40:21,449] Trial 84 finished with value: 0.2532342843497823 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:40:43,754] Trial 85 finished with value: 0.3610861110976818 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:40:44,863] Trial 33 finished with value: 0.5898401225739551 and parameters: {'model_name': 'GAIN', 'batch_size': 700, 'hint_rate': 0.699106540249134, 'alpha': 56, 'iterations': 7998, 'learning_rate': 0.09523221564490071, 'p_miss': 0.29150508472908027}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:40:57,882] Trial 74 finished with value: 0.16684696435187119 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:44:54,730] Trial 76 finished with value: 0.16803353362267287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:45:05,310] Trial 75 finished with value: 0.16701532043875802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:46:04,199] Trial 32 finished with value: 0.6006865079988383 and parameters: {'model_name': 'GAIN', 'batch_size': 955, 'hint_rate': 0.6122910406058214, 'alpha': 28, 'iterations': 8027, 'learning_rate': 0.07827787748094872, 'p_miss': 0.29831760131204754}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:46:04,603] Trial 93 finished with value: 0.30101488153818473 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:56:14,049] Trial 35 finished with value: 0.5963991374211968 and parameters: {'model_name': 'GAIN', 'batch_size': 938, 'hint_rate': 0.20519825028591365, 'alpha': 60, 'iterations': 9175, 'learning_rate': 0.0676579770566057, 'p_miss': 0.29692783145943746}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:56:48,185] Trial 77 finished with value: 0.16677980062950498 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:57:23,217] Trial 38 finished with value: 0.5899232020217624 and parameters: {'model_name': 'GAIN', 'batch_size': 759, 'hint_rate': 0.1998339075289018, 'alpha': 36, 'iterations': 9660, 'learning_rate': 0.09886377599540863, 'p_miss': 0.28828552058930385}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 20:59:11,243] Trial 78 finished with value: 0.16700544237167309 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:02:08,516] Trial 79 finished with value: 0.16665312889870282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:03:51,094] Trial 80 finished with value: 0.16664704783541007 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:04:13,600] Trial 100 finished with value: 0.2532383540151226 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:07:34,078] Trial 81 finished with value: 0.1671035847321696 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:07:36,457] Trial 102 finished with value: 0.33945062884215976 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 7, 'learning_rate': 0.012575667030213842, 'p_miss': 0.23590045215580832}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:10:31,854] Trial 82 finished with value: 0.16694381941087097 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:15:08,127] Trial 86 finished with value: 0.16742458138858127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:15:08,755] Trial 105 finished with value: 0.40989250833931523 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:15:21,452] Trial 87 finished with value: 0.1664447943974697 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 67 with value: 0.16634967271595974.
running
[I 2024-11-16 21:15:30,618] Trial 89 finished with value: 0.1659532804679567 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:15:45,697] Trial 90 finished with value: 0.1680523576960333 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:15:47,677] Trial 88 finished with value: 0.16739819659745084 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:16:07,457] Trial 110 finished with value: 0.25569205243710236 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:18:08,423] Trial 91 finished with value: 0.16825896786460173 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:18:24,665] Trial 92 finished with value: 0.16752954143340065 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:19:04,288] Trial 94 finished with value: 0.1667921928906863 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:27:18,989] Trial 95 finished with value: 0.16789744553442904 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:28:07,507] Trial 96 finished with value: 0.16784883651001187 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:28:17,424] Trial 97 finished with value: 0.1675229447044287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:29:56,036] Trial 98 finished with value: 0.16713794615662486 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:32:51,411] Trial 99 finished with value: 0.1691031175417132 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:33:22,599] Trial 119 finished with value: 0.21086551931669026 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:34:45,403] Trial 101 finished with value: 0.1663229040206773 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:38:04,853] Trial 103 finished with value: 0.1668000847691043 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:41:43,875] Trial 104 finished with value: 0.16718036480217768 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:42:04,425] Trial 123 finished with value: 0.30380854520076783 and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 15, 'learning_rate': 0.018726853090369734, 'p_miss': 0.15801387002377346}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:46:28,158] Trial 122 finished with value: 0.2201488949684601 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:46:41,006] Trial 125 finished with value: 0.30101488153818473 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 23632, 'weights': 'uniform'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:46:56,813] Trial 106 finished with value: 0.16708915556444462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:47:02,249] Trial 107 finished with value: 0.16814277133204852 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:47:14,059] Trial 108 finished with value: 0.166501489460052 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:47:37,382] Trial 109 finished with value: 0.16711063774537016 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:47:50,784] Trial 111 finished with value: 0.16747295570597048 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:47:50,996] Trial 131 finished with value: 0.6442311051946086 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:49:25,401] Trial 112 finished with value: 0.16805755976891296 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:49:48,796] Trial 133 finished with value: 0.25322506698410874 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:50:04,195] Trial 113 finished with value: 0.16686894760454649 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 89 with value: 0.1659532804679567.
running
[I 2024-11-16 21:50:41,681] Trial 114 finished with value: 0.16545294882193712 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 21:59:05,577] Trial 115 finished with value: 0.16619116839204956 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 21:59:54,406] Trial 116 finished with value: 0.16747153285782462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:00:06,541] Trial 117 finished with value: 0.16708995328299076 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:00:44,656] Trial 139 finished with value: 0.21117992236986471 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:01:48,475] Trial 118 finished with value: 0.16755298596481688 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:05:10,742] Trial 120 finished with value: 0.1681102590360352 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:06:58,571] Trial 121 finished with value: 0.1666025388630356 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:14:07,459] Trial 124 finished with value: 0.16775468949665678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:17:21,732] Trial 140 finished with value: 0.17724177953653714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:18:13,851] Trial 145 finished with value: 0.36362861647047334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:19:08,419] Trial 126 finished with value: 0.1670684071645883 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:19:17,922] Trial 127 finished with value: 0.16608950628930114 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:19:53,277] Trial 128 finished with value: 0.16777874137512233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:19:55,412] Trial 129 finished with value: 0.1690520290601805 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:20:07,596] Trial 130 finished with value: 0.16877153459690633 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:20:20,201] Trial 132 finished with value: 0.1679353777670869 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:20:21,048] Trial 151 finished with value: 0.30101488153818473 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 25995, 'weights': 'uniform'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:20:34,526] Trial 152 finished with value: 0.30101488153818473 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 25322, 'weights': 'uniform'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:22:27,863] Trial 134 finished with value: 0.1673182138017142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:22:34,612] Trial 155 finished with value: 0.3682887239057119 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3, 'learning_rate': 0.0023001814825841173, 'p_miss': 0.2438928906425976}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:23:11,049] Trial 135 finished with value: 0.16554626744942577 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:23:56,068] Trial 136 finished with value: 0.16775732238788615 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:34:59,600] Trial 137 finished with value: 0.1668790124260397 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:36:08,726] Trial 154 finished with value: 0.37733790258282296 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 726, 'learning_rate': 0.0020568358423825677, 'p_miss': 0.24522950212316702}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:36:20,113] Trial 138 finished with value: 0.16718056590303507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:36:35,462] Trial 153 finished with value: 0.38269725936673077 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 698, 'learning_rate': 0.0026945754238411972, 'p_miss': 0.24226704588939368}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:37:49,814] Trial 141 finished with value: 0.16616210680457072 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:38:05,969] Trial 142 finished with value: 0.16594139142555653 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:39:58,710] Trial 143 finished with value: 0.1697425294918277 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:47:32,036] Trial 144 finished with value: 0.16779870745193776 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:52:38,335] Trial 149 finished with value: 0.1696979041658813 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:53:20,305] Trial 150 finished with value: 0.1676412456952053 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:54:31,236] Trial 146 finished with value: 0.16830672512114445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'random'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:54:51,905] Trial 156 finished with value: 0.16668744630174348 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:55:39,112] Trial 147 finished with value: 0.16691504804432195 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'random'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:55:52,674] Trial 157 finished with value: 0.16664877542523768 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:56:07,509] Trial 148 finished with value: 0.16870598080712815 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:56:16,048] Trial 158 finished with value: 0.16942243545299435 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:56:54,045] Trial 174 finished with value: 0.21158641468793796 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 22:56:54,518] Trial 175 finished with value: 0.40989250833931523 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:05:00,035] Trial 159 finished with value: 0.16743213112710761 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:06:07,857] Trial 160 finished with value: 0.16766388086036185 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:06:14,686] Trial 161 finished with value: 0.16743050236045337 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:06:23,547] Trial 162 finished with value: 0.16895072248410148 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:06:55,548] Trial 180 finished with value: 0.36230564120118264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:07:53,776] Trial 163 finished with value: 0.1694581684228899 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:08:06,754] Trial 164 finished with value: 0.17048463668980934 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:08:33,473] Trial 183 finished with value: 0.5638653715391723 and parameters: {'model_name': 'GAIN', 'batch_size': 278, 'hint_rate': 0.3813865708738798, 'alpha': 84, 'iterations': 24, 'learning_rate': 0.005678851645544828, 'p_miss': 0.1265060917192129}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:09:54,061] Trial 165 finished with value: 0.1680383887067735 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:10:21,428] Trial 185 finished with value: 0.2532383540151226 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:15:33,478] Trial 167 finished with value: 0.17231878458803893 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:21:41,478] Trial 166 finished with value: 0.16826106842438396 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:26:51,809] Trial 168 finished with value: 0.1673430700631652 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:27:50,769] Trial 169 finished with value: 0.16764917287790762 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:28:24,423] Trial 170 finished with value: 0.1665727808788115 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:28:55,352] Trial 171 finished with value: 0.16760824373014732 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:29:11,448] Trial 172 finished with value: 0.16745638606910668 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:29:29,356] Trial 173 finished with value: 0.16781206177987298 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:30:04,398] Trial 176 finished with value: 0.16612182002462422 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:32:23,295] Trial 178 finished with value: 0.17018575165114552 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:33:49,515] Trial 182 finished with value: 0.1702321731470831 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:34:14,816] Trial 184 finished with value: 0.16632762109138982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:37:59,340] Trial 177 finished with value: 0.16722959010589983 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
running
[I 2024-11-16 23:39:23,872] Trial 179 finished with value: 0.1664308320818074 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
[I 2024-11-16 23:39:53,034] Trial 181 finished with value: 0.1675818051606548 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.16545294882193712.
[I 2024-11-16 23:42:19,573] Trial 186 finished with value: 0.16691218006344918 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.16545294882193712.
[I 2024-11-16 23:45:47,962] Trial 188 finished with value: 0.16476313775730883 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:46:56,183] Trial 187 finished with value: 0.16721156755859026 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:49:41,539] Trial 189 finished with value: 0.16633930716553816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:50:56,009] Trial 191 finished with value: 0.16548256226148653 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:51:09,220] Trial 192 finished with value: 0.16653156634690322 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:56:19,203] Trial 190 finished with value: 0.16786697117636667 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:57:23,043] Trial 193 finished with value: 0.1649812004946994 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:57:36,466] Trial 194 finished with value: 0.1675128189183278 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:57:58,775] Trial 195 finished with value: 0.1663022402796162 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-16 23:59:51,568] Trial 196 finished with value: 0.16718288606153942 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-17 00:00:47,264] Trial 197 finished with value: 0.1657778064925413 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-17 00:00:59,627] Trial 198 finished with value: 0.16680001634762803 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
[I 2024-11-17 00:03:43,193] Trial 199 finished with value: 0.16778240938523656 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 188 with value: 0.16476313775730883.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
dtype: int64
0.16476313775730883
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.659689478901752
Generation:   4%|▍         | 1/25 [00:21<08:38, 21.60s/it]Generation:  2
Best f1_score score: 0.659689478901752
Generation:   8%|▊         | 2/25 [01:01<12:23, 32.31s/it]Generation:  3
Best f1_score score: 0.659689478901752
Generation:  12%|█▏        | 3/25 [07:49<1:14:40, 203.68s/it]Generation:  4
Best f1_score score: 0.6927051384580558
Generation:  16%|█▌        | 4/25 [08:20<47:28, 135.62s/it]  Generation:  5
Best f1_score score: 0.6929689546858118
Generation:  20%|██        | 5/25 [08:42<31:31, 94.60s/it] WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746face0> 

Generation:  6
Best f1_score score: 0.6929689546858118
Generation:  24%|██▍       | 6/25 [18:51<1:25:24, 269.71s/it]Generation:  7
Best f1_score score: 0.6929689546858118
Generation:  28%|██▊       | 7/25 [19:31<58:22, 194.59s/it]  Generation:  8
Best f1_score score: 0.6930594685005181
Generation:  32%|███▏      | 8/25 [19:58<39:57, 141.05s/it]Generation:  9
Best f1_score score: 0.6996196296392357
Generation:  36%|███▌      | 9/25 [20:24<28:05, 105.33s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547471a620> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  10
Best f1_score score: 0.6996196296392357
Generation:  40%|████      | 10/25 [20:45<19:47, 79.14s/it]Generation:  11
Best f1_score score: 0.6996196296392357
Generation:  44%|████▍     | 11/25 [21:14<14:53, 63.80s/it]Generation:  12
Best f1_score score: 0.6996196296392357
Generation:  48%|████▊     | 12/25 [21:57<12:25, 57.36s/it]Generation:  13
Best f1_score score: 0.6996196296392357
Generation:  52%|█████▏    | 13/25 [22:32<10:07, 50.59s/it]Generation:  14
Best f1_score score: 0.6996196296392357
Generation:  56%|█████▌    | 14/25 [23:00<08:03, 43.92s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a6260> 

Generation:  15
Best f1_score score: 0.6996196296392357
Generation:  60%|██████    | 15/25 [33:15<35:59, 215.91s/it]Generation:  16
Best f1_score score: 0.6996196296392357
Generation:  64%|██████▍   | 16/25 [33:48<24:08, 160.98s/it]Generation:  17
Best f1_score score: 0.6996196296392357
Generation:  68%|██████▊   | 17/25 [34:28<16:37, 124.71s/it]Generation:  18
Best f1_score score: 0.6996196296392357
Generation:  72%|███████▏  | 18/25 [35:05<11:26, 98.11s/it] Generation:  19
Best f1_score score: 0.6996196296392357
Generation:  76%|███████▌  | 19/25 [35:31<07:38, 76.48s/it]Generation:  20
Best f1_score score: 0.6996196296392357
Generation:  80%|████████  | 20/25 [36:34<06:02, 72.57s/it]Generation:  21
Best f1_score score: 0.6996196296392357
Generation:  84%|████████▍ | 21/25 [37:38<04:39, 69.95s/it]Generation:  22
Best f1_score score: 0.6996196296392357
Generation:  88%|████████▊ | 22/25 [38:22<03:06, 62.07s/it]Generation:  23
Best f1_score score: 0.6996196296392357
Generation:  92%|█████████▏| 23/25 [38:56<01:47, 53.68s/it]Generation:  24
Best f1_score score: 0.6996196296392357
Generation:  96%|█████████▌| 24/25 [40:54<01:13, 73.01s/it]Generation:  25
Best f1_score score: 0.6996196296392357
Generation: 100%|██████████| 25/25 [41:40<00:00, 65.07s/it]Generation: 100%|██████████| 25/25 [41:45<00:00, 100.22s/it]
2024-11-17 00:49:03,084 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45995' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b7e4639ccb3c3412fc3ae1fd38edaaae', 'ndarray-1637fe1d5399a1d578f4aa06ee86e7c5'} (stimulus_id='handle-worker-cleanup-1731833343.0842316')
Fitted
Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(bootstrap=False,
                                   max_features=0.9594454695578,
                                   max_samples=0.66250750934, n_estimators=12,
                                   n_jobs=1))])
score start
train score: {'auroc': 0.9834097029382146, 'accuracy': 0.9716955941255007, 'balanced_accuracy': 0.8155717386956527, 'logloss': 0.07573671888405094, 'f1': 0.8542128089928197}
original test score: {'auroc': 0.8355219894672747, 'accuracy': 0.9453768690875801, 'balanced_accuracy': 0.6639163364062683, 'logloss': 0.4489917846979232, 'f1': 0.6969565621706516}
imputed test score: {'auroc': 0.8329370920705459, 'accuracy': 0.9447665547757095, 'balanced_accuracy': 0.6598775811051883, 'logloss': 0.4506614340177385, 'f1': 0.6926281478257039}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4cd0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.6827912408522047
Generation:   4%|▍         | 1/25 [03:03<1:13:35, 184.00s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1db70> 

Generation:  2
Best f1_score score: 0.6905314782389214
Generation:   8%|▊         | 2/25 [13:07<2:45:02, 430.54s/it]Generation:  3
Best f1_score score: 0.6926804717925064
Generation:  12%|█▏        | 3/25 [13:47<1:32:29, 252.27s/it]Generation:  4
Best f1_score score: 0.7001638851806185
Generation:  16%|█▌        | 4/25 [19:36<1:41:40, 290.49s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d77a00> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  5
Best f1_score score: 0.7001638851806185
Generation:  20%|██        | 5/25 [20:14<1:06:27, 199.39s/it]Generation:  6
Best f1_score score: 0.7001638851806185
Generation:  24%|██▍       | 6/25 [20:46<45:09, 142.61s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745ca4d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547427e9b0> 

Generation:  7
Best f1_score score: 0.7001638851806185
Generation:  28%|██▊       | 7/25 [30:51<1:28:10, 293.89s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b75b910> 

Generation:  8
Best f1_score score: 0.7001638851806185
Generation:  32%|███▏      | 8/25 [40:56<1:51:16, 392.73s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456a73a60> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d541210> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ffdbf70> 

Generation:  9
Best f1_score score: 0.7001638851806185
Generation:  36%|███▌      | 9/25 [51:01<2:02:28, 459.31s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742ba1d0> 

Generation:  10
Best f1_score score: 0.7001638851806185
Generation:  40%|████      | 10/25 [1:01:07<2:06:04, 504.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554521fdde0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.7001638851806185
Generation:  44%|████▍     | 11/25 [1:02:18<1:26:44, 371.75s/it]Generation:  12
Best f1_score score: 0.7004819423211213
Generation:  48%|████▊     | 12/25 [1:02:48<58:01, 267.79s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456466b00> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.7004819423211213
Generation:  52%|█████▏    | 13/25 [1:03:23<39:26, 197.22s/it]Generation:  14
Best f1_score score: 0.7004819423211213
Generation:  56%|█████▌    | 14/25 [1:09:40<46:08, 251.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474596200> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  15
Best f1_score score: 0.7004819423211213
Generation:  60%|██████    | 15/25 [1:10:14<30:59, 185.91s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fe33fa0> 

Generation:  16
Best f1_score score: 0.7004819423211213
Generation:  64%|██████▍   | 16/25 [1:20:19<46:48, 312.06s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554743bb310> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.7004819423211213
Generation:  68%|██████▊   | 17/25 [1:21:18<31:27, 235.99s/it]Generation:  18
Best f1_score score: 0.7004819423211213
Generation:  72%|███████▏  | 18/25 [1:22:00<20:44, 177.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dc06aa0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.7044080010484576
Generation:  76%|███████▌  | 19/25 [1:22:33<13:25, 134.32s/it]Generation:  20
Best f1_score score: 0.7044080010484576
Generation:  80%|████████  | 20/25 [1:23:09<08:43, 104.64s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15540e17a530> 

Generation:  21
Best f1_score score: 0.7044080010484576
Generation:  84%|████████▍ | 21/25 [1:33:14<17:00, 255.11s/it]Generation:  22
Best f1_score score: 0.7044080010484576
Generation:  88%|████████▊ | 22/25 [1:33:45<09:23, 187.72s/it]Generation:  23
Best f1_score score: 0.7044080010484576
Generation:  92%|█████████▏| 23/25 [1:34:18<04:42, 141.34s/it]Generation:  24
Best f1_score score: 0.7044080010484576
Generation:  96%|█████████▌| 24/25 [1:34:44<01:46, 106.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554569babf0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d7add0> 

Generation:  25
Best f1_score score: 0.7044080010484576
Generation: 100%|██████████| 25/25 [1:44:49<00:00, 256.09s/it]Generation: 100%|██████████| 25/25 [1:44:49<00:00, 251.57s/it]
2024-11-17 02:34:07,375 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:39095' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b7e4639ccb3c3412fc3ae1fd38edaaae', 'DataFrame-5efaf21da853401ce350fcc8578cfaf7'} (stimulus_id='handle-worker-cleanup-1731839647.3757129')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=1)),
                ('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=False,
                                                l2_regularization=0.0006056703826,
                                                learning_rate=0.3642479761691,
                                                max_features=0.1112241841439,
                                                max_leaf_nodes=455,
                                                min_samples_leaf=97, tol=0.0001,
                                                validation_fraction=None))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9838132900663819, 'accuracy': 0.9702460423421705, 'balanced_accuracy': 0.8002730511453626, 'logloss': 0.07489065383566766, 'f1': 0.8436544521852394}
test score: {'auroc': 0.8224688878681379, 'accuracy': 0.9458346048214831, 'balanced_accuracy': 0.6332020125409933, 'logloss': 0.2143722576171541, 'f1': 0.6727952773456853}
original test score: {'auroc': 0.8259656244325041, 'accuracy': 0.946292340555386, 'balanced_accuracy': 0.6359215066283529, 'logloss': 0.21153089149890117, 'f1': 0.6761057573511243}
score end
4135
lvl
0.01
type
MCAR
num_run
3
class_full
finished
all finished
full run takes
8.635841699772412
hours
DONE
