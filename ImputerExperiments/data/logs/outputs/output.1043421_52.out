Run: 52
/cm/local/apps/slurm/var/spool/job1043421/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1558/1558.pkl
working on 
../data/c/1558/class_full_MCAR_0.5_3
2.882223129272461
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-07 10:13:40,553] A new study created in memory with name: no-name-12c41f25-76ba-417a-80ab-c8ae0cd89222
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-07 10:13:40,755] Trial 1 finished with value: 0.2263557077042715 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.2263557077042715.
running
[I 2024-11-07 10:13:40,988] Trial 2 finished with value: 0.2263557077042715 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.2263557077042715.
running
[I 2024-11-07 10:13:41,176] Trial 12 finished with value: 0.2263557077042715 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.2263557077042715.
running
[I 2024-11-07 10:13:43,324] Trial 17 finished with value: 0.22635522059846966 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2757, 'weights': 'uniform'}. Best is trial 17 with value: 0.22635522059846966.
running
[I 2024-11-07 10:13:43,636] Trial 8 finished with value: 0.22660318449262556 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2421, 'weights': 'uniform'}. Best is trial 17 with value: 0.22635522059846966.
running
[I 2024-11-07 10:13:43,819] Trial 18 finished with value: 0.2262908927316111 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1611, 'weights': 'uniform'}. Best is trial 18 with value: 0.2262908927316111.
[I 2024-11-07 10:13:43,975] Trial 10 finished with value: 0.22659564988959263 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2351, 'weights': 'uniform'}. Best is trial 18 with value: 0.2262908927316111.
running
running
[I 2024-11-07 10:13:44,179] Trial 22 finished with value: 0.2263557077042715 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 18 with value: 0.2262908927316111.
[I 2024-11-07 10:13:44,333] Trial 16 finished with value: 0.22556855216555155 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 671, 'weights': 'uniform'}. Best is trial 16 with value: 0.22556855216555155.
running
running
[I 2024-11-07 10:13:44,507] Trial 13 finished with value: 0.23011703431550998 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3227, 'weights': 'distance'}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:13:44,773] Trial 4 finished with value: 0.22970608752059155 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1452, 'weights': 'distance'}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:13:45,910] Trial 20 finished with value: 0.2258030782448548 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 778, 'weights': 'uniform'}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:13:46,246] Trial 24 finished with value: 0.2259280467796115 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1155, 'weights': 'uniform'}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:13:47,782] Trial 5 finished with value: 0.296152724792652 and parameters: {'model_name': 'VAE', 'batch_size': 160, 'iterations': 1, 'learning_rate': 0.00020356074115452925, 'p_miss': 0.11360463117694586}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:13:48,783] Trial 27 finished with value: 0.33552328730867725 and parameters: {'model_name': 'GAIN', 'batch_size': 182, 'hint_rate': 0.2706112530122144, 'alpha': 76, 'iterations': 1, 'learning_rate': 0.045552599837873665, 'p_miss': 0.15946077026858216}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:13:49,223] Trial 0 finished with value: 0.34513434828359185 and parameters: {'model_name': 'GAIN', 'batch_size': 143, 'hint_rate': 0.47807221891432894, 'alpha': 17, 'iterations': 1, 'learning_rate': 0.0012730443256237847, 'p_miss': 0.2593702695189023}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:13:50,146] Trial 15 finished with value: 0.3328170838420051 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.3198335447952582, 'alpha': 66, 'iterations': 2, 'learning_rate': 0.0037855164452770653, 'p_miss': 0.19096229392735226}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:13:54,096] Trial 6 finished with value: 0.33078686386776124 and parameters: {'model_name': 'GAIN', 'batch_size': 780, 'hint_rate': 0.5095166998527959, 'alpha': 35, 'iterations': 3, 'learning_rate': 0.0001976851837111085, 'p_miss': 0.02602505883750829}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:14:02,356] Trial 9 finished with value: 0.29820093111502277 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 13, 'learning_rate': 0.00020495602043545767, 'p_miss': 0.11924448812545076}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:14:05,469] Trial 25 finished with value: 0.34231316938603296 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.8124329264507459, 'alpha': 11, 'iterations': 25, 'learning_rate': 0.000225258945897523, 'p_miss': 0.16521224735678375}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:14:13,698] Trial 11 finished with value: 0.23563813498701372 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.22556855216555155.
running
[I 2024-11-07 10:14:17,893] Trial 36 finished with value: 0.2251354682625868 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 349, 'weights': 'uniform'}. Best is trial 36 with value: 0.2251354682625868.
running
[I 2024-11-07 10:14:21,418] Trial 32 finished with value: 0.22188906444693854 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 32 with value: 0.22188906444693854.
running
[I 2024-11-07 10:14:26,109] Trial 33 finished with value: 0.22159019378998282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:32,640] Trial 35 finished with value: 0.22397375551302923 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:34,598] Trial 38 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:39,786] Trial 39 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:43,328] Trial 29 finished with value: 0.2363211879858594 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'roman'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:44,327] Trial 7 finished with value: 0.22299442535927388 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:46,104] Trial 40 finished with value: 0.22159340143507178 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:48,709] Trial 41 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:52,846] Trial 34 finished with value: 0.23032748931342897 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:55,031] Trial 42 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:57,846] Trial 43 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:58,072] Trial 26 finished with value: 0.2229208135971612 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:14:58,884] Trial 37 finished with value: 0.22248652457743426 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:00,982] Trial 44 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:01,854] Trial 45 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:04,103] Trial 46 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:08,258] Trial 47 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:29,187] Trial 48 finished with value: 0.22169503433295298 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:29,544] Trial 23 finished with value: 0.2852974357809205 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 74, 'learning_rate': 0.0003146539518246111, 'p_miss': 0.2805312995623085}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:31,997] Trial 49 finished with value: 0.22169503433295298 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:32,595] Trial 50 finished with value: 0.22160363293062563 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:15:40,112] Trial 28 finished with value: 0.2816778805938799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:16:07,784] Trial 31 finished with value: 0.28921918333376984 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:16:24,021] Trial 21 finished with value: 0.34962046685684 and parameters: {'model_name': 'GAIN', 'batch_size': 300, 'hint_rate': 0.8656531258683936, 'alpha': 32, 'iterations': 174, 'learning_rate': 0.025629961647445094, 'p_miss': 0.20062240492645278}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:24:50,582] Trial 3 finished with value: 0.34435946692558705 and parameters: {'model_name': 'GAIN', 'batch_size': 384, 'hint_rate': 0.6050185686769525, 'alpha': 62, 'iterations': 396, 'learning_rate': 0.06109791612473142, 'p_miss': 0.1560145798238502}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:41:06,528] Trial 14 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.35968541838163803, 'alpha': 8, 'iterations': 2558, 'learning_rate': 0.001114102882565189, 'p_miss': 0.26894122409516646}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:43:43,332] Trial 30 finished with value: 0.22768254524738193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:55:55,331] Trial 57 finished with value: 0.22468271181300198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 33 with value: 0.22159019378998282.
running
[I 2024-11-07 10:56:11,696] Trial 58 finished with value: 0.22142252752800812 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 12:54:52,523] Trial 59 finished with value: 0.24943697202718512 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 3143, 'learning_rate': 0.07483910213067535, 'p_miss': 0.03249729359287544}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 12:54:53,054] Trial 68 finished with value: 0.3259256328132882 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 13:21:15,755] Trial 69 finished with value: 0.22365962341173962 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:09:12,998] Trial 70 finished with value: 0.23028730815324172 and parameters: {'model_name': 'VAE', 'batch_size': 50, 'iterations': 848, 'learning_rate': 0.009352815276816199, 'p_miss': 0.07540388776151553}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:09:13,556] Trial 71 finished with value: 0.3259256328132882 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:09:37,078] Trial 72 finished with value: 0.22170463634796628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:26:04,523] Trial 53 finished with value: 0.27578741632746767 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4831, 'learning_rate': 0.06502281338169512, 'p_miss': 0.016164716708726018}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:37:54,818] Trial 73 finished with value: 0.22483853829619957 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:38:07,942] Trial 75 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:38:21,197] Trial 76 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:38:33,516] Trial 77 finished with value: 0.22159339813257536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:39:00,676] Trial 78 finished with value: 0.2215694910688489 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:39:26,390] Trial 79 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:39:30,736] Trial 51 finished with value: 0.2868814114532101 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4904, 'learning_rate': 0.0955293061922361, 'p_miss': 0.28781264878746937}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:39:59,158] Trial 80 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:40:02,394] Trial 81 finished with value: 0.22184704783863993 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:40:02,949] Trial 83 finished with value: 0.32472181981093984 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:40:25,284] Trial 84 finished with value: 0.3248486226293873 and parameters: {'model_name': 'GAIN', 'batch_size': 43, 'hint_rate': 0.1360939059926558, 'alpha': 94, 'iterations': 9, 'learning_rate': 0.013491639129309322, 'p_miss': 0.23121502926205012}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:55:11,360] Trial 74 finished with value: 0.2239137213869616 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:55:40,412] Trial 86 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:56:01,717] Trial 87 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:56:18,962] Trial 88 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:56:49,091] Trial 89 finished with value: 0.2333540764715837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:57:11,339] Trial 90 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 14:57:37,680] Trial 91 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:07:13,777] Trial 82 finished with value: 0.2252982347781384 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:07:35,494] Trial 93 finished with value: 0.22157624635378453 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:07:57,768] Trial 85 finished with value: 0.22406062350936287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:08:07,950] Trial 94 finished with value: 0.23358294541343144 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:08:28,003] Trial 95 finished with value: 0.23106086074471763 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:08:36,482] Trial 96 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:08:56,555] Trial 97 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:09:05,030] Trial 98 finished with value: 0.22157624635378453 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:12:49,980] Trial 100 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.015948432082850128, 'alpha': 93, 'iterations': 747, 'learning_rate': 0.0007610300870579158, 'p_miss': 0.07299902035629317}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:12:53,001] Trial 101 finished with value: 0.22825291617801197 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 32, 'weights': 'distance'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:13:00,131] Trial 99 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.016330510979642998, 'alpha': 99, 'iterations': 895, 'learning_rate': 0.0006856446664975357, 'p_miss': 0.08979563424757277}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:14:21,229] Trial 102 finished with value: 0.2901860413507336 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:14:30,364] Trial 103 finished with value: 0.2901860413507336 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:14:47,488] Trial 104 finished with value: 0.22160369807715222 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:15:00,029] Trial 105 finished with value: 0.22160369807715222 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:15:13,355] Trial 106 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:15:27,981] Trial 107 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:15:39,896] Trial 108 finished with value: 0.22157369170712676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:15:54,385] Trial 109 finished with value: 0.22181615954903436 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:16:05,313] Trial 110 finished with value: 0.22181615954903436 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:16:06,036] Trial 112 finished with value: 0.3259256328132882 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:16:21,254] Trial 111 finished with value: 0.2215694910688489 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:16:32,574] Trial 113 finished with value: 0.2215694910688489 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:16:37,185] Trial 115 finished with value: 0.23011703431550998 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3594, 'weights': 'distance'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:16:46,307] Trial 114 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:17:04,924] Trial 116 finished with value: 0.2215694910688489 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:17:15,228] Trial 117 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:17:33,539] Trial 118 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:17:43,022] Trial 119 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:18:00,074] Trial 120 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:18:10,100] Trial 121 finished with value: 0.22160754507915562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:20:49,130] Trial 123 finished with value: 0.23716508801463307 and parameters: {'model_name': 'VAE', 'batch_size': 63, 'iterations': 50, 'learning_rate': 0.0037230301382227622, 'p_miss': 0.22835286198277396}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:20:53,892] Trial 122 finished with value: 0.29346976356348564 and parameters: {'model_name': 'VAE', 'batch_size': 63, 'iterations': 56, 'learning_rate': 0.00010442862949256327, 'p_miss': 0.21741717858778167}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:21:15,795] Trial 124 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:21:21,296] Trial 125 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:21:43,011] Trial 126 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:21:46,953] Trial 127 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:21:48,744] Trial 63 finished with value: 0.2502102101793846 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 6557, 'learning_rate': 0.006310425988098457, 'p_miss': 0.015178565605047406}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:22:11,332] Trial 128 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:22:17,722] Trial 129 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:22:18,831] Trial 130 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:22:26,449] Trial 131 finished with value: 0.22159340221369414 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:28:52,862] Trial 92 finished with value: 0.2258954582643553 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:29:24,945] Trial 135 finished with value: 0.22169475210398568 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:29:56,208] Trial 136 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:30:25,407] Trial 137 finished with value: 0.22156339437731157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:30:39,544] Trial 138 finished with value: 0.221593399720135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:47:40,640] Trial 67 finished with value: 0.23111621272982932 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 7771, 'learning_rate': 0.010483507913425246, 'p_miss': 0.016267113679109352}. Best is trial 58 with value: 0.22142252752800812.
running
[I 2024-11-07 15:52:11,291] Trial 132 finished with value: 0.22092097234078284 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 132 with value: 0.22092097234078284.
running
[I 2024-11-07 15:52:11,908] Trial 141 finished with value: 0.32472181981093984 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 132 with value: 0.22092097234078284.
running
[I 2024-11-07 15:53:08,033] Trial 133 finished with value: 0.22194835211833114 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 132 with value: 0.22092097234078284.
running
[I 2024-11-07 15:54:07,876] Trial 134 finished with value: 0.22087909820076868 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 134 with value: 0.22087909820076868.
running
[I 2024-11-07 15:58:12,092] Trial 52 finished with value: 0.27544601482838055 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7199, 'learning_rate': 0.08056481594375116, 'p_miss': 0.016415714499675466}. Best is trial 134 with value: 0.22087909820076868.
running
[I 2024-11-07 16:03:31,713] Trial 139 finished with value: 0.2249143944674709 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 134 with value: 0.22087909820076868.
running
[I 2024-11-07 16:05:18,096] Trial 19 finished with value: 0.23503699396921224 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 7069, 'learning_rate': 0.0009877726355693684, 'p_miss': 0.0829278145701253}. Best is trial 134 with value: 0.22087909820076868.
running
[I 2024-11-07 16:20:07,803] Trial 140 finished with value: 0.22439912111880403 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 134 with value: 0.22087909820076868.
running
[I 2024-11-07 16:25:34,978] Trial 143 finished with value: 0.225430831105272 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 134 with value: 0.22087909820076868.
running
[I 2024-11-07 16:25:35,986] Trial 142 finished with value: 0.22129481281148325 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 134 with value: 0.22087909820076868.
running
[I 2024-11-07 16:27:13,624] Trial 144 finished with value: 0.21952252191112795 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 16:32:39,199] Trial 145 finished with value: 0.22069328198774213 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 16:38:39,641] Trial 146 finished with value: 0.2217803993317434 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 16:38:47,706] Trial 153 finished with value: 0.23015511729986185 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2156, 'weights': 'distance'}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 16:40:43,297] Trial 147 finished with value: 0.22182202173561327 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 16:41:00,895] Trial 155 finished with value: 0.3291155120861917 and parameters: {'model_name': 'GAIN', 'batch_size': 616, 'hint_rate': 0.951444420314511, 'alpha': 45, 'iterations': 5, 'learning_rate': 0.002005214950516858, 'p_miss': 0.051434207926580044}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 16:45:21,539] Trial 65 finished with value: 0.2503740607420843 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 7997, 'learning_rate': 0.011538528311729196, 'p_miss': 0.01489675124693246}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 16:53:42,626] Trial 148 finished with value: 0.2200442292401462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 17:01:21,761] Trial 150 finished with value: 0.22045798272953507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 144 with value: 0.21952252191112795.
running
[I 2024-11-07 17:01:28,159] Trial 149 finished with value: 0.21920772859270737 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:03:44,225] Trial 151 finished with value: 0.22084327140349863 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:09:39,893] Trial 152 finished with value: 0.22090258003995794 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:15:16,061] Trial 54 finished with value: 0.2967841428501016 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7984, 'learning_rate': 0.09606934642332796, 'p_miss': 0.28107644765411}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:15:34,966] Trial 154 finished with value: 0.2222839411693145 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:17:06,946] Trial 156 finished with value: 0.22002050358650557 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:19:52,337] Trial 60 finished with value: 0.2548392604820356 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 8133, 'learning_rate': 0.09282195978964503, 'p_miss': 0.014455707018402958}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:22:03,923] Trial 61 finished with value: 0.25039147877217277 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 9041, 'learning_rate': 0.030833635510972773, 'p_miss': 0.03777778447135985}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:22:22,418] Trial 157 finished with value: 0.22124325056260452 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:30:42,599] Trial 158 finished with value: 0.2210821299253237 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:40:05,677] Trial 159 finished with value: 0.22042188230059584 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:41:33,128] Trial 160 finished with value: 0.22257864064043614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:42:28,670] Trial 161 finished with value: 0.22074943866624902 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:50:13,565] Trial 162 finished with value: 0.22214529302865618 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:54:21,101] Trial 62 finished with value: 0.25218510509532777 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 8652, 'learning_rate': 0.008994291168534178, 'p_miss': 0.04138389411141144}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:56:11,095] Trial 164 finished with value: 0.22014804726863996 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:56:44,977] Trial 163 finished with value: 0.22085731001961753 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 17:58:50,741] Trial 165 finished with value: 0.22090373918716527 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:01:55,090] Trial 166 finished with value: 0.22131729126107827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:02:25,635] Trial 66 finished with value: 0.2314029596865525 and parameters: {'model_name': 'VAE', 'batch_size': 50, 'iterations': 7744, 'learning_rate': 0.009298441570050732, 'p_miss': 0.012758047508995007}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:03:24,945] Trial 168 finished with value: 0.22212566554491478 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:04:49,884] Trial 167 finished with value: 0.22007668312998158 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:11:36,887] Trial 169 finished with value: 0.21926982098423 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:20:44,654] Trial 170 finished with value: 0.22104580316159197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:22:08,189] Trial 171 finished with value: 0.22082740667130324 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:23:11,306] Trial 172 finished with value: 0.22135935804646759 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:27:20,636] Trial 173 finished with value: 0.2208034614695445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:32:31,052] Trial 174 finished with value: 0.22171963999363142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:34:25,222] Trial 176 finished with value: 0.220034985194078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:35:14,483] Trial 175 finished with value: 0.22066923277208178 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:38:35,721] Trial 177 finished with value: 0.21988933376520015 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:39:52,815] Trial 179 finished with value: 0.22358998569380625 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:40:47,862] Trial 180 finished with value: 0.22049399515469287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:40:48,416] Trial 192 finished with value: 0.3259256328132882 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:41:20,453] Trial 178 finished with value: 0.2204276958807494 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:42:09,243] Trial 181 finished with value: 0.2219417075456802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:42:19,167] Trial 195 finished with value: 0.23011703431550998 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2988, 'weights': 'distance'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:47:30,726] Trial 55 finished with value: 0.3063028723023964 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9734, 'learning_rate': 0.0994751382714752, 'p_miss': 0.2765816958151593}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:50:10,866] Trial 182 finished with value: 0.2197714031334021 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:51:22,884] Trial 64 finished with value: 0.23118217267948377 and parameters: {'model_name': 'VAE', 'batch_size': 44, 'iterations': 9388, 'learning_rate': 0.010931468827768846, 'p_miss': 0.016286677453084486}. Best is trial 149 with value: 0.21920772859270737.
running
[I 2024-11-07 18:58:23,589] Trial 56 finished with value: 0.2850766199787791 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9310, 'learning_rate': 0.08003070244102864, 'p_miss': 0.29925553719897047}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 18:58:34,882] Trial 183 finished with value: 0.22035622103844701 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 18:59:33,226] Trial 184 finished with value: 0.21978508606070507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:00:08,681] Trial 185 finished with value: 0.22074992129867246 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:02:17,815] Trial 186 finished with value: 0.2204641939411503 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:07:01,090] Trial 187 finished with value: 0.2204985466074007 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:08:00,935] Trial 188 finished with value: 0.22203384744573032 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:08:55,867] Trial 189 finished with value: 0.22002077110411497 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:09:58,436] Trial 191 finished with value: 0.22210265047234973 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:10:02,051] Trial 190 finished with value: 0.22055730213526345 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:10:49,175] Trial 193 finished with value: 0.22230089197358885 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:11:03,180] Trial 194 finished with value: 0.2202567077066139 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:11:08,922] Trial 196 finished with value: 0.22137877944545464 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:12:55,082] Trial 197 finished with value: 0.22003957708411645 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:13:35,479] Trial 198 finished with value: 0.22023001791445393 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
[I 2024-11-07 19:13:44,480] Trial 199 finished with value: 0.2202952723532622 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.21920772859270737.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0.21920772859270737
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.5586515543507588
Generation:   4%|▍         | 1/25 [00:05<02:12,  5.54s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f9330> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  2
Best f1_score score: 0.6222237717301389
Generation:   8%|▊         | 2/25 [00:13<02:43,  7.10s/it]Generation:  3
Best f1_score score: 0.6222237717301389
Generation:  12%|█▏        | 3/25 [00:25<03:21,  9.15s/it]Generation:  4
Best f1_score score: 0.6222237717301389
Generation:  16%|█▌        | 4/25 [00:31<02:51,  8.17s/it]Generation:  5
Best f1_score score: 0.6222237717301389
Generation:  20%|██        | 5/25 [00:57<04:48, 14.42s/it]Generation:  6
Best f1_score score: 0.6283338663317231
Generation:  24%|██▍       | 6/25 [01:08<04:13, 13.35s/it]Generation:  7
Best f1_score score: 0.6283338663317231
Generation:  28%|██▊       | 7/25 [01:25<04:19, 14.41s/it]Generation:  8
Best f1_score score: 0.6306942079637194
Generation:  32%|███▏      | 8/25 [01:38<04:00, 14.13s/it]Generation:  9
Best f1_score score: 0.6306942079637194
Generation:  36%|███▌      | 9/25 [02:06<04:52, 18.28s/it]Generation:  10
Best f1_score score: 0.6312365935642379
Generation:  40%|████      | 10/25 [02:40<05:46, 23.07s/it]Generation:  11
Best f1_score score: 0.6312365935642379
Generation:  44%|████▍     | 11/25 [02:57<04:58, 21.34s/it]Generation:  12
Best f1_score score: 0.6312365935642379
Generation:  48%|████▊     | 12/25 [03:14<04:19, 19.94s/it]Generation:  13
Best f1_score score: 0.6312365935642379
Generation:  52%|█████▏    | 13/25 [03:30<03:46, 18.89s/it]Generation:  14
Best f1_score score: 0.6312365935642379
Generation:  56%|█████▌    | 14/25 [03:48<03:25, 18.66s/it]Generation:  15
Best f1_score score: 0.6349118241507773
Generation:  60%|██████    | 15/25 [05:34<07:30, 45.01s/it]Generation:  16
Best f1_score score: 0.6349118241507773
Generation:  64%|██████▍   | 16/25 [05:55<05:39, 37.72s/it]Generation:  17
Best f1_score score: 0.6349118241507773
Generation:  68%|██████▊   | 17/25 [06:18<04:25, 33.13s/it]Generation:  18
Best f1_score score: 0.6349118241507773
Generation:  72%|███████▏  | 18/25 [06:47<03:44, 32.11s/it]Generation:  19
Best f1_score score: 0.6349118241507773
Generation:  76%|███████▌  | 19/25 [07:04<02:43, 27.31s/it]Generation:  20
Best f1_score score: 0.6366719287514349
Generation:  80%|████████  | 20/25 [07:26<02:09, 25.89s/it]Generation:  21
Best f1_score score: 0.6410629902977838
Generation:  84%|████████▍ | 21/25 [07:49<01:39, 24.91s/it]Generation:  22
Best f1_score score: 0.6410629902977838
Generation:  88%|████████▊ | 22/25 [08:14<01:14, 24.97s/it]Generation:  23
Best f1_score score: 0.6410629902977838
Generation:  92%|█████████▏| 23/25 [08:44<00:53, 26.60s/it]Generation:  24
Best f1_score score: 0.6410629902977838
Generation:  96%|█████████▌| 24/25 [09:13<00:27, 27.18s/it]Generation:  25
Best f1_score score: 0.6410629902977838
Generation: 100%|██████████| 25/25 [09:35<00:00, 25.55s/it]Generation: 100%|██████████| 25/25 [09:38<00:00, 23.14s/it]
2024-11-07 19:25:46,337 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33437' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-e758c78be1dde443dfedc9fa813d2888', 'ndarray-b6f1c60d1f9a0fafa76867fbe2747a6e'} (stimulus_id='handle-worker-cleanup-1731036346.3372743')
Fitted
Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features=0.6017664848033,
                                        min_samples_leaf=16,
                                        min_samples_split=13,
                                        n_estimators=128))])
score start
train score: {'auroc': 0.9519724014473947, 'accuracy': 0.9026548672566371, 'balanced_accuracy': 0.8792900659153828, 'logloss': 0.3287287450214308, 'f1': 0.8054463859915137}
original test score: {'auroc': 0.9070872947277442, 'accuracy': 0.8850828729281768, 'balanced_accuracy': 0.7761091904350331, 'logloss': 0.3200955788064076, 'f1': 0.7466241681562682}
imputed test score: {'auroc': 0.8135623739556324, 'accuracy': 0.8607734806629834, 'balanced_accuracy': 0.7121746854892923, 'logloss': 0.38612113350737587, 'f1': 0.6907946114798906}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4970> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4130> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4b20> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.6326509052902648
Generation:   4%|▍         | 1/25 [00:31<12:32, 31.37s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474596c20> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.6333866253708568
Generation:   8%|▊         | 2/25 [03:08<40:22, 105.32s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d3ddb0> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  3
Best f1_score score: 0.6348656333684352
Generation:  12%|█▏        | 3/25 [06:18<52:49, 144.05s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741811b0> 

Generation:  4
Best f1_score score: 0.6424056759390095
Generation:  16%|█▌        | 4/25 [16:24<1:54:12, 326.29s/it]Generation:  5
Best f1_score score: 0.6494140774800319
Generation:  20%|██        | 5/25 [16:56<1:13:26, 220.33s/it]Generation:  6
Best f1_score score: 0.6494140774800319
Generation:  24%|██▍       | 6/25 [18:52<58:29, 184.71s/it]  Generation:  7
Best f1_score score: 0.6494140774800319
Generation:  28%|██▊       | 7/25 [19:47<42:45, 142.53s/it]Generation:  8
Best f1_score score: 0.6540684685658789
Generation:  32%|███▏      | 8/25 [28:42<1:15:42, 267.21s/it]Generation:  9
Best f1_score score: 0.6540684685658789
Generation:  36%|███▌      | 9/25 [32:54<1:09:59, 262.48s/it]Generation:  10
Best f1_score score: 0.6540684685658789
Generation:  40%|████      | 10/25 [33:25<47:45, 191.05s/it] Generation:  11
Best f1_score score: 0.6540684685658789
Generation:  44%|████▍     | 11/25 [42:12<1:08:34, 293.87s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f569270> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.6540684685658789
Generation:  48%|████▊     | 12/25 [42:43<46:20, 213.91s/it]  Generation:  13
Best f1_score score: 0.6540684685658789
Generation:  52%|█████▏    | 13/25 [43:18<31:56, 159.70s/it]Generation:  14
Best f1_score score: 0.6540684685658789
Generation:  56%|█████▌    | 14/25 [45:22<27:17, 148.85s/it]Generation:  15
Best f1_score score: 0.6561546469542086
Generation:  60%|██████    | 15/25 [45:50<18:45, 112.56s/it]Generation:  16
Best f1_score score: 0.6561546469542086
Generation:  64%|██████▍   | 16/25 [46:16<12:59, 86.61s/it] Generation:  17
Best f1_score score: 0.6561546469542086
Generation:  68%|██████▊   | 17/25 [47:37<11:19, 84.88s/it]Generation:  18
Best f1_score score: 0.6561546469542086
Generation:  72%|███████▏  | 18/25 [56:24<25:23, 217.71s/it]Generation:  19
Best f1_score score: 0.6561546469542086
Generation:  76%|███████▌  | 19/25 [56:45<15:52, 158.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452617a30> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  20
Best f1_score score: 0.6561546469542086
Generation:  80%|████████  | 20/25 [1:00:48<15:18, 183.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d5f4c0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545292be50> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  21
Best f1_score score: 0.6580442399804876
Generation:  84%|████████▍ | 21/25 [1:01:07<08:58, 134.50s/it]Generation:  22
Best f1_score score: 0.6580442399804876
Generation:  88%|████████▊ | 22/25 [1:08:05<10:58, 219.62s/it]Generation:  23
Best f1_score score: 0.6580442399804876
Generation:  92%|█████████▏| 23/25 [1:08:29<05:21, 160.68s/it]Generation:  24
Best f1_score score: 0.6580442399804876
Generation:  96%|█████████▌| 24/25 [1:09:00<02:02, 122.00s/it]Generation:  25
Best f1_score score: 0.6580442399804876
Generation: 100%|██████████| 25/25 [1:11:44<00:00, 134.53s/it]Generation: 100%|██████████| 25/25 [1:11:44<00:00, 172.19s/it]
2024-11-07 20:37:43,050 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:36427' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b6f1c60d1f9a0fafa76867fbe2747a6e', 'DataFrame-02608303c0ce336433eba77d927123d3'} (stimulus_id='handle-worker-cleanup-1731040663.0500572')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=50)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy',
                                      max_features=0.7631644197514,
                                      min_samples_leaf=3, min_samples_split=19,
                                      n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9974834761762331, 'accuracy': 0.9612831858407079, 'balanced_accuracy': 0.9781181619256017, 'logloss': 0.23403207305386994, 'f1': 0.9169457345111605}
test score: {'auroc': 0.7917146835686162, 'accuracy': 0.8718232044198895, 'balanced_accuracy': 0.6849491020839336, 'logloss': 0.37178873496363085, 'f1': 0.6849491020839336}
original test score: {'auroc': 0.8928742917506962, 'accuracy': 0.887292817679558, 'balanced_accuracy': 0.7731741573033708, 'logloss': 0.3130075162715762, 'f1': 0.7478530221581224}
score end
1558
lvl
0.5
type
MCAR
num_run
3
class_full
finished
all finished
full run takes
10.406089553833008
hours
DONE
