Run: 28
/cm/local/apps/slurm/var/spool/job1046792/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1496/1496.pkl
working on 
../data/c/1496/class_full_MCAR_0.5_2
0.3538239002227783
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-12 19:31:58,641] A new study created in memory with name: no-name-928c3a18-b406-4819-a6c5-8e1a7cc89717
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-12 19:31:59,070] Trial 4 finished with value: 0.20640612663671987 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:31:59,359] Trial 8 finished with value: 0.3428756013854246 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:31:59,745] Trial 6 finished with value: 0.3868323247444098 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:04,245] Trial 3 finished with value: 0.20737742550547927 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 166, 'weights': 'uniform'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:05,656] Trial 11 finished with value: 0.20682912635071132 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1269, 'weights': 'uniform'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:06,010] Trial 16 finished with value: 0.2070515518785462 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 402, 'weights': 'uniform'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:07,369] Trial 10 finished with value: 0.206434766276332 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4959, 'weights': 'distance'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:07,661] Trial 15 finished with value: 0.20691257589034412 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1076, 'weights': 'distance'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:07,912] Trial 14 finished with value: 0.20671350434322555 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1567, 'weights': 'distance'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:08,924] Trial 5 finished with value: 0.20650829529432616 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3332, 'weights': 'distance'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:09,133] Trial 1 finished with value: 0.20657962207323916 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2469, 'weights': 'distance'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:11,690] Trial 20 finished with value: 0.20640612663671987 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4633, 'weights': 'uniform'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:15,446] Trial 13 finished with value: 0.35816175853628196 and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.6717330228115579, 'alpha': 58, 'iterations': 2, 'learning_rate': 0.000349619727183711, 'p_miss': 0.1720796457521541}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:16,672] Trial 2 finished with value: 0.37704101948678914 and parameters: {'model_name': 'GAIN', 'batch_size': 655, 'hint_rate': 0.15747386546496825, 'alpha': 21, 'iterations': 1, 'learning_rate': 0.038059158474645714, 'p_miss': 0.07041395016520086}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:17,671] Trial 23 finished with value: 0.2065336646244214 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2986, 'weights': 'distance'}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:18,115] Trial 24 finished with value: 0.3474237268667082 and parameters: {'model_name': 'GAIN', 'batch_size': 23, 'hint_rate': 0.9164514955451607, 'alpha': 16, 'iterations': 6, 'learning_rate': 0.01018082221124473, 'p_miss': 0.2906046523278625}. Best is trial 4 with value: 0.20640612663671987.
running
[I 2024-11-12 19:32:18,564] Trial 18 finished with value: 0.10029429469131497 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 5, 'learning_rate': 0.0016565005746597115, 'p_miss': 0.139316781689831}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:32:41,653] Trial 19 finished with value: 0.20673829803568747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:32:54,648] Trial 25 finished with value: 0.20724285779753462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:33:23,099] Trial 9 finished with value: 0.22548187420763197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:33:51,412] Trial 22 finished with value: 0.21576988320205998 and parameters: {'model_name': 'VAE', 'batch_size': 490, 'iterations': 24, 'learning_rate': 0.0720363281163965, 'p_miss': 0.2639233903388225}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:35:21,035] Trial 26 finished with value: 0.28451194907117083 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:35:30,727] Trial 12 finished with value: 0.2853481853945107 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:42:23,202] Trial 27 finished with value: 0.3793092096001442 and parameters: {'model_name': 'GAIN', 'batch_size': 83, 'hint_rate': 0.0885766323979057, 'alpha': 97, 'iterations': 2151, 'learning_rate': 0.013170176584848882, 'p_miss': 0.12618523734221437}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:43:09,697] Trial 21 finished with value: 0.21620860746441375 and parameters: {'model_name': 'VAE', 'batch_size': 252, 'iterations': 398, 'learning_rate': 0.006005896567130652, 'p_miss': 0.24793921005831165}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:43:50,625] Trial 40 finished with value: 0.10612122704270868 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 97, 'learning_rate': 0.000685685517377968, 'p_miss': 0.015177436790277776}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:44:43,341] Trial 41 finished with value: 0.10656993021120469 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 85, 'learning_rate': 0.000571231772580436, 'p_miss': 0.01961377012334603}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:44:55,682] Trial 39 finished with value: 0.20704147863839287 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 282, 'learning_rate': 0.0007619995687016032, 'p_miss': 0.025514524858000612}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:45:22,288] Trial 43 finished with value: 0.12714956680000364 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 44, 'learning_rate': 0.0013980210878310772, 'p_miss': 0.010556394822252166}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:45:40,791] Trial 42 finished with value: 0.11558328367213719 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 124, 'learning_rate': 0.0006622289451710913, 'p_miss': 0.02078512660318782}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:45:47,636] Trial 45 finished with value: 0.10229086829083563 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 13, 'learning_rate': 0.00011089849581000958, 'p_miss': 0.08291436518261887}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:45:55,092] Trial 46 finished with value: 0.10082555985461392 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 13, 'learning_rate': 0.00011301419081818542, 'p_miss': 0.09071529215150892}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:46:02,137] Trial 47 finished with value: 0.10652256187966377 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 12, 'learning_rate': 0.0001000627397655837, 'p_miss': 0.11020967242395374}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:46:05,786] Trial 48 finished with value: 0.10347982418778738 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 5, 'learning_rate': 0.0001274506264794458, 'p_miss': 0.08174841494296001}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:46:09,446] Trial 49 finished with value: 0.10196778774335938 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 4, 'learning_rate': 0.00013278756919020025, 'p_miss': 0.07648066358483567}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:46:11,903] Trial 50 finished with value: 0.10055323742255615 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 3, 'learning_rate': 0.0002106608848584915, 'p_miss': 0.17010645589856163}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:46:14,913] Trial 51 finished with value: 0.10512309896471383 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 3, 'learning_rate': 0.00023636693013468908, 'p_miss': 0.17527613163604727}. Best is trial 18 with value: 0.10029429469131497.
running
[I 2024-11-12 19:46:16,136] Trial 52 finished with value: 0.09962304263759726 and parameters: {'model_name': 'VAE', 'batch_size': 66, 'iterations': 1, 'learning_rate': 0.00026734366946933464, 'p_miss': 0.19994113490264376}. Best is trial 52 with value: 0.09962304263759726.
running
[I 2024-11-12 19:46:16,398] Trial 53 finished with value: 0.3868323247444098 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 52 with value: 0.09962304263759726.
running
[I 2024-11-12 19:46:18,047] Trial 54 finished with value: 0.09687270821975905 and parameters: {'model_name': 'VAE', 'batch_size': 102, 'iterations': 1, 'learning_rate': 0.0021150685335142535, 'p_miss': 0.21773204443016675}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:19,948] Trial 55 finished with value: 0.09734594518922376 and parameters: {'model_name': 'VAE', 'batch_size': 127, 'iterations': 1, 'learning_rate': 0.001999574383980641, 'p_miss': 0.20821736108081443}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:22,373] Trial 56 finished with value: 0.09719363334673335 and parameters: {'model_name': 'VAE', 'batch_size': 116, 'iterations': 1, 'learning_rate': 0.00301704889601806, 'p_miss': 0.20991111909454863}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:24,401] Trial 57 finished with value: 0.09725384683223882 and parameters: {'model_name': 'VAE', 'batch_size': 125, 'iterations': 1, 'learning_rate': 0.002212373156223564, 'p_miss': 0.2105868529116551}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:27,156] Trial 58 finished with value: 0.09959653043062179 and parameters: {'model_name': 'VAE', 'batch_size': 137, 'iterations': 1, 'learning_rate': 0.0028025819101383013, 'p_miss': 0.21177280882438468}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:27,403] Trial 59 finished with value: 0.3868323247444098 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:30,923] Trial 60 finished with value: 0.09894747903283196 and parameters: {'model_name': 'VAE', 'batch_size': 164, 'iterations': 1, 'learning_rate': 0.0029466418959966036, 'p_miss': 0.2169257298121773}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:31,720] Trial 44 finished with value: 0.10037027188064132 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 116, 'learning_rate': 0.00013999718981097122, 'p_miss': 0.09658655544095161}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:36,553] Trial 61 finished with value: 0.09731497936446015 and parameters: {'model_name': 'VAE', 'batch_size': 189, 'iterations': 1, 'learning_rate': 0.004561285186427842, 'p_miss': 0.21851930889300533}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:38,184] Trial 63 finished with value: 0.3451284228924421 and parameters: {'model_name': 'GAIN', 'batch_size': 305, 'hint_rate': 0.47158192583298914, 'alpha': 98, 'iterations': 2, 'learning_rate': 0.005114270613373236, 'p_miss': 0.24227274538974733}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:38,428] Trial 64 finished with value: 0.20640612663671987 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 54 with value: 0.09687270821975905.
running
[I 2024-11-12 19:46:39,177] Trial 62 finished with value: 0.09654144217686293 and parameters: {'model_name': 'VAE', 'batch_size': 176, 'iterations': 1, 'learning_rate': 0.00442069895614923, 'p_miss': 0.22294488238602864}. Best is trial 62 with value: 0.09654144217686293.
running
[I 2024-11-12 19:46:40,189] Trial 65 finished with value: 0.09734925293713123 and parameters: {'model_name': 'VAE', 'batch_size': 116, 'iterations': 1, 'learning_rate': 0.0017687293844912712, 'p_miss': 0.23291068259376438}. Best is trial 62 with value: 0.09654144217686293.
running
[I 2024-11-12 19:46:40,789] Trial 66 finished with value: 0.10137305671408367 and parameters: {'model_name': 'VAE', 'batch_size': 121, 'iterations': 1, 'learning_rate': 0.0016802806392017785, 'p_miss': 0.22736878087279844}. Best is trial 62 with value: 0.09654144217686293.
running
[I 2024-11-12 19:46:50,273] Trial 67 finished with value: 0.10058227002916416 and parameters: {'model_name': 'VAE', 'batch_size': 242, 'iterations': 2, 'learning_rate': 0.004770597254993981, 'p_miss': 0.19630746863438406}. Best is trial 62 with value: 0.09654144217686293.
running
[I 2024-11-12 19:46:54,083] Trial 68 finished with value: 0.10483711216886957 and parameters: {'model_name': 'VAE', 'batch_size': 264, 'iterations': 2, 'learning_rate': 0.004755731221281106, 'p_miss': 0.19454991565454266}. Best is trial 62 with value: 0.09654144217686293.
running
[I 2024-11-12 19:47:03,220] Trial 70 finished with value: 0.0936991800391209 and parameters: {'model_name': 'VAE', 'batch_size': 913, 'iterations': 1, 'learning_rate': 0.008376364743374526, 'p_miss': 0.2617260643536867}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:47:07,479] Trial 69 finished with value: 0.09758840743568534 and parameters: {'model_name': 'VAE', 'batch_size': 535, 'iterations': 2, 'learning_rate': 0.0031697940452795836, 'p_miss': 0.19228386581349952}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:47:19,671] Trial 71 finished with value: 0.10437318639868635 and parameters: {'model_name': 'VAE', 'batch_size': 999, 'iterations': 2, 'learning_rate': 0.010366014000458211, 'p_miss': 0.26773529212222275}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:48:06,106] Trial 35 finished with value: 0.21840770575421137 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 1690, 'learning_rate': 0.0007891385253758191, 'p_miss': 0.14796824062073097}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:49:05,783] Trial 38 finished with value: 0.21391879886562304 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 1612, 'learning_rate': 0.000756096614879484, 'p_miss': 0.11273651948454597}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:49:06,851] Trial 33 finished with value: 0.21679143676197338 and parameters: {'model_name': 'VAE', 'batch_size': 38, 'iterations': 1659, 'learning_rate': 0.0006452298550207671, 'p_miss': 0.1477687754741051}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:49:35,441] Trial 32 finished with value: 0.21944967331535334 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 1505, 'learning_rate': 0.0008631578389538659, 'p_miss': 0.14556285746390327}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:49:43,488] Trial 37 finished with value: 0.21744413465492024 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 1596, 'learning_rate': 0.0007326818497460799, 'p_miss': 0.011861899237800122}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:50:54,160] Trial 34 finished with value: 0.21739809769552548 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 1984, 'learning_rate': 0.0006703726905152232, 'p_miss': 0.14154719820602205}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:53:26,613] Trial 7 finished with value: 0.37565880547845776 and parameters: {'model_name': 'GAIN', 'batch_size': 115, 'hint_rate': 0.4432806801163468, 'alpha': 92, 'iterations': 6005, 'learning_rate': 0.008440346397894111, 'p_miss': 0.15129282076701728}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:54:32,804] Trial 17 finished with value: 0.21767885821549943 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 2729, 'learning_rate': 0.0024875066112629795, 'p_miss': 0.1672423660145316}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 19:54:59,100] Trial 36 finished with value: 0.21679209910008218 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 3748, 'learning_rate': 0.0007513182485993765, 'p_miss': 0.10242068142722086}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:07:26,585] Trial 31 finished with value: 0.24766795020317312 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9266, 'learning_rate': 0.00012876234065651592, 'p_miss': 0.030879670333507706}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:07:27,155] Trial 83 finished with value: 0.34859121806645954 and parameters: {'model_name': 'GAIN', 'batch_size': 77, 'hint_rate': 0.9071423879643931, 'alpha': 48, 'iterations': 1, 'learning_rate': 0.017049938187772982, 'p_miss': 0.2625438878183726}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:23:19,213] Trial 28 finished with value: 0.21446469577239774 and parameters: {'model_name': 'VAE', 'batch_size': 782, 'iterations': 9123, 'learning_rate': 0.0852457385743302, 'p_miss': 0.013758405310811822}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:36:19,610] Trial 85 finished with value: 0.23249201668532726 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:36:21,431] Trial 86 finished with value: 0.20640612663671987 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5913, 'weights': 'uniform'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:36:21,838] Trial 87 finished with value: 0.10282336940064989 and parameters: {'model_name': 'VAE', 'batch_size': 181, 'iterations': 1, 'learning_rate': 0.001856881929145137, 'p_miss': 0.23629822526984287}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:50,831] Trial 88 finished with value: 0.2266431887307779 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'descending'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:51,401] Trial 89 finished with value: 0.11431222135115866 and parameters: {'model_name': 'VAE', 'batch_size': 97, 'iterations': 1, 'learning_rate': 0.007867820919318797, 'p_miss': 0.2216006879709267}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:52,150] Trial 90 finished with value: 0.09742923975779308 and parameters: {'model_name': 'VAE', 'batch_size': 408, 'iterations': 3, 'learning_rate': 0.0011908464166574073, 'p_miss': 0.2546727353219678}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:53,310] Trial 91 finished with value: 0.09749603904510915 and parameters: {'model_name': 'VAE', 'batch_size': 189, 'iterations': 8, 'learning_rate': 0.0020824616858497865, 'p_miss': 0.27947627132522357}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:53,543] Trial 92 finished with value: 0.3428756013854246 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:53,894] Trial 93 finished with value: 0.0973393387092946 and parameters: {'model_name': 'VAE', 'batch_size': 59, 'iterations': 2, 'learning_rate': 0.003763913848017113, 'p_miss': 0.23066059870351444}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:55,974] Trial 94 finished with value: 0.2063999117359744 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4088, 'weights': 'uniform'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:56,460] Trial 95 finished with value: 0.09951460811293063 and parameters: {'model_name': 'VAE', 'batch_size': 70, 'iterations': 2, 'learning_rate': 0.0036764633838222123, 'p_miss': 0.18311300935076014}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:56,947] Trial 96 finished with value: 0.09867012696933161 and parameters: {'model_name': 'VAE', 'batch_size': 106, 'iterations': 1, 'learning_rate': 0.006960469889520357, 'p_miss': 0.2326883146679559}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:57,262] Trial 97 finished with value: 0.1016947929184842 and parameters: {'model_name': 'VAE', 'batch_size': 56, 'iterations': 1, 'learning_rate': 0.0022304766835350375, 'p_miss': 0.21046367718999293}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:57,697] Trial 98 finished with value: 0.09782796041272358 and parameters: {'model_name': 'VAE', 'batch_size': 134, 'iterations': 3, 'learning_rate': 0.00112314357343416, 'p_miss': 0.24596219073149728}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:58,451] Trial 99 finished with value: 0.09603339733302621 and parameters: {'model_name': 'VAE', 'batch_size': 348, 'iterations': 1, 'learning_rate': 0.00373625946748474, 'p_miss': 0.29960765389308897}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:44:59,087] Trial 100 finished with value: 0.09898035963860277 and parameters: {'model_name': 'VAE', 'batch_size': 207, 'iterations': 2, 'learning_rate': 0.003875438984824428, 'p_miss': 0.2940379373650768}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:45:00,827] Trial 101 finished with value: 0.24200421066363317 and parameters: {'model_name': 'VAE', 'batch_size': 676, 'iterations': 4, 'learning_rate': 0.01825949334050283, 'p_miss': 0.2114490624305178}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:45:01,157] Trial 102 finished with value: 0.3419502001056974 and parameters: {'model_name': 'GAIN', 'batch_size': 316, 'hint_rate': 0.2815075079110967, 'alpha': 65, 'iterations': 1, 'learning_rate': 0.003640263895845502, 'p_miss': 0.2781250767257526}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:45:02,307] Trial 103 finished with value: 0.11329642408259152 and parameters: {'model_name': 'VAE', 'batch_size': 397, 'iterations': 2, 'learning_rate': 0.006223521719899924, 'p_miss': 0.2524335497547992}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:45:25,149] Trial 104 finished with value: 0.21775419296399026 and parameters: {'model_name': 'VAE', 'batch_size': 84, 'iterations': 499, 'learning_rate': 0.002345720305385391, 'p_miss': 0.15961468764148865}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:53:37,953] Trial 29 finished with value: 0.20815199085721864 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:53:38,351] Trial 106 finished with value: 0.10329400766411737 and parameters: {'model_name': 'VAE', 'batch_size': 151, 'iterations': 1, 'learning_rate': 0.0014606198895832736, 'p_miss': 0.22663737640772375}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:53:38,739] Trial 107 finished with value: 0.09822558852329358 and parameters: {'model_name': 'VAE', 'batch_size': 96, 'iterations': 1, 'learning_rate': 0.004250838621392676, 'p_miss': 0.20523534184117315}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:53:39,340] Trial 108 finished with value: 0.13614124094401037 and parameters: {'model_name': 'VAE', 'batch_size': 118, 'iterations': 2, 'learning_rate': 0.009135394063700645, 'p_miss': 0.23677105625458766}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:53:40,180] Trial 109 finished with value: 0.09759872577739533 and parameters: {'model_name': 'VAE', 'batch_size': 225, 'iterations': 3, 'learning_rate': 0.002573431551734638, 'p_miss': 0.22193805887374266}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:53:40,879] Trial 110 finished with value: 0.10903499976394751 and parameters: {'model_name': 'VAE', 'batch_size': 163, 'iterations': 1, 'learning_rate': 0.005703669734958684, 'p_miss': 0.28209702770807404}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:53:43,335] Trial 111 finished with value: 0.21881441736900054 and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 40, 'learning_rate': 0.003078386579937918, 'p_miss': 0.25965103717058735}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:54,378] Trial 112 finished with value: 0.21602583056545357 and parameters: {'model_name': 'VAE', 'batch_size': 339, 'iterations': 875, 'learning_rate': 0.0018170227507623789, 'p_miss': 0.18273364104343845}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:55,186] Trial 113 finished with value: 0.102570340389132 and parameters: {'model_name': 'VAE', 'batch_size': 498, 'iterations': 4, 'learning_rate': 0.0012292544349467112, 'p_miss': 0.2984817562153916}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:55,902] Trial 114 finished with value: 0.09698094430395672 and parameters: {'model_name': 'VAE', 'batch_size': 86, 'iterations': 6, 'learning_rate': 0.002472859170838481, 'p_miss': 0.24087229826688616}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:56,130] Trial 115 finished with value: 0.3868323247444098 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:56,568] Trial 116 finished with value: 0.09934868653257224 and parameters: {'model_name': 'VAE', 'batch_size': 96, 'iterations': 3, 'learning_rate': 0.0023846529806227025, 'p_miss': 0.2406165902859541}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:56,890] Trial 117 finished with value: 0.0989046786624759 and parameters: {'model_name': 'VAE', 'batch_size': 127, 'iterations': 1, 'learning_rate': 0.003451175701660708, 'p_miss': 0.2296425524478559}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:57,547] Trial 118 finished with value: 0.09580129440453286 and parameters: {'model_name': 'VAE', 'batch_size': 51, 'iterations': 6, 'learning_rate': 0.0015418569029000458, 'p_miss': 0.21556376016493967}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:58,206] Trial 119 finished with value: 0.10087029386237731 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 8, 'learning_rate': 0.0010448801925465755, 'p_miss': 0.20519380612629745}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:54:59,847] Trial 120 finished with value: 0.2214725880445466 and parameters: {'model_name': 'VAE', 'batch_size': 80, 'iterations': 28, 'learning_rate': 0.004429914056996489, 'p_miss': 0.2161541908124605}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:55:01,990] Trial 121 finished with value: 0.206434766276332 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5777, 'weights': 'distance'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:55:33,294] Trial 122 finished with value: 0.20645989623222477 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:55:33,939] Trial 123 finished with value: 0.09977780705348435 and parameters: {'model_name': 'VAE', 'batch_size': 53, 'iterations': 7, 'learning_rate': 0.00279420406352282, 'p_miss': 0.2209912894504404}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:55:34,574] Trial 124 finished with value: 0.3570666209553894 and parameters: {'model_name': 'GAIN', 'batch_size': 267, 'hint_rate': 0.677141620258898, 'alpha': 3, 'iterations': 17, 'learning_rate': 0.0014191709013443954, 'p_miss': 0.20350884727025595}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:55:35,623] Trial 125 finished with value: 0.23994913974655022 and parameters: {'model_name': 'VAE', 'batch_size': 165, 'iterations': 4, 'learning_rate': 0.01211291400217084, 'p_miss': 0.05898570758651529}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:55:44,562] Trial 126 finished with value: 0.216915844026292 and parameters: {'model_name': 'VAE', 'batch_size': 110, 'iterations': 187, 'learning_rate': 0.0018109767756504603, 'p_miss': 0.24856720193129664}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:55:44,937] Trial 127 finished with value: 0.10477098933847881 and parameters: {'model_name': 'VAE', 'batch_size': 86, 'iterations': 2, 'learning_rate': 0.0009619286550453094, 'p_miss': 0.22710765438780456}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:28,080] Trial 128 finished with value: 0.21688070179229077 and parameters: {'model_name': 'VAE', 'batch_size': 137, 'iterations': 4546, 'learning_rate': 0.0022681958007999773, 'p_miss': 0.2346967070703793}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:29,058] Trial 129 finished with value: 0.0957941814957267 and parameters: {'model_name': 'VAE', 'batch_size': 988, 'iterations': 2, 'learning_rate': 0.005496070214432785, 'p_miss': 0.18960815325895405}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:33,332] Trial 130 finished with value: 0.23310519967834722 and parameters: {'model_name': 'VAE', 'batch_size': 997, 'iterations': 11, 'learning_rate': 0.006527360774568921, 'p_miss': 0.18592801039807047}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:35,298] Trial 131 finished with value: 0.11805468733879698 and parameters: {'model_name': 'VAE', 'batch_size': 808, 'iterations': 5, 'learning_rate': 0.004968226949701651, 'p_miss': 0.21456622179632076}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:36,562] Trial 132 finished with value: 0.09642914646726516 and parameters: {'model_name': 'VAE', 'batch_size': 685, 'iterations': 3, 'learning_rate': 0.0031722215056858966, 'p_miss': 0.20748226676534726}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:38,776] Trial 133 finished with value: 0.22783329155449414 and parameters: {'model_name': 'VAE', 'batch_size': 689, 'iterations': 6, 'learning_rate': 0.007504078146393335, 'p_miss': 0.1914461566542733}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:40,195] Trial 134 finished with value: 0.10719147905549961 and parameters: {'model_name': 'VAE', 'batch_size': 595, 'iterations': 3, 'learning_rate': 0.005337453353663057, 'p_miss': 0.22029146209914025}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:41,707] Trial 135 finished with value: 0.12041724607509438 and parameters: {'model_name': 'VAE', 'batch_size': 431, 'iterations': 4, 'learning_rate': 0.0040964191830342896, 'p_miss': 0.17674293193606785}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:42,604] Trial 136 finished with value: 0.09383424959421208 and parameters: {'model_name': 'VAE', 'batch_size': 711, 'iterations': 2, 'learning_rate': 0.003217843936926444, 'p_miss': 0.20754067875855023}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:43,972] Trial 137 finished with value: 0.09642142149009218 and parameters: {'model_name': 'VAE', 'batch_size': 705, 'iterations': 3, 'learning_rate': 0.0032480877390564343, 'p_miss': 0.20042576669513493}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:45,200] Trial 138 finished with value: 0.09671202269069619 and parameters: {'model_name': 'VAE', 'batch_size': 822, 'iterations': 3, 'learning_rate': 0.0031472053220642573, 'p_miss': 0.20259817633571453}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:47,183] Trial 139 finished with value: 0.10275811825719021 and parameters: {'model_name': 'VAE', 'batch_size': 823, 'iterations': 5, 'learning_rate': 0.003072128395404531, 'p_miss': 0.19426057427046978}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:48,374] Trial 140 finished with value: 0.09750303138310336 and parameters: {'model_name': 'VAE', 'batch_size': 831, 'iterations': 3, 'learning_rate': 0.0026776973931578168, 'p_miss': 0.19878348199473697}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:50,389] Trial 141 finished with value: 0.10964829014947648 and parameters: {'model_name': 'VAE', 'batch_size': 594, 'iterations': 6, 'learning_rate': 0.003059681704340553, 'p_miss': 0.20142760370252433}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 20:59:51,564] Trial 142 finished with value: 0.0987421163268804 and parameters: {'model_name': 'VAE', 'batch_size': 976, 'iterations': 3, 'learning_rate': 0.0015697561892552053, 'p_miss': 0.20990971579864875}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:12,660] Trial 143 finished with value: 0.2069066930367857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:12,950] Trial 144 finished with value: 0.3428756013854246 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:14,628] Trial 145 finished with value: 0.09639612352598012 and parameters: {'model_name': 'VAE', 'batch_size': 706, 'iterations': 4, 'learning_rate': 0.002557943039642585, 'p_miss': 0.2687315025824193}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:16,230] Trial 146 finished with value: 0.09409139380545943 and parameters: {'model_name': 'VAE', 'batch_size': 726, 'iterations': 4, 'learning_rate': 0.002045397773830055, 'p_miss': 0.268202508834731}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:19,411] Trial 147 finished with value: 0.15613660894426887 and parameters: {'model_name': 'VAE', 'batch_size': 717, 'iterations': 10, 'learning_rate': 0.0033851090025817645, 'p_miss': 0.2691889113221605}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:21,023] Trial 148 finished with value: 0.09631926138305633 and parameters: {'model_name': 'VAE', 'batch_size': 606, 'iterations': 5, 'learning_rate': 0.002045798472632044, 'p_miss': 0.13123389827643522}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:22,526] Trial 149 finished with value: 0.09756800317132833 and parameters: {'model_name': 'VAE', 'batch_size': 540, 'iterations': 5, 'learning_rate': 0.0019771491444421693, 'p_miss': 0.256491146245209}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:23,647] Trial 150 finished with value: 0.0972178620700764 and parameters: {'model_name': 'VAE', 'batch_size': 435, 'iterations': 4, 'learning_rate': 0.0025949347735827965, 'p_miss': 0.14023762934016343}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:25,566] Trial 151 finished with value: 0.20660639590583188 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2170, 'weights': 'uniform'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:28,099] Trial 152 finished with value: 0.14874140761100418 and parameters: {'model_name': 'VAE', 'batch_size': 586, 'iterations': 6, 'learning_rate': 0.004089675395104608, 'p_miss': 0.13180142445995097}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:31,265] Trial 153 finished with value: 0.10424796208953391 and parameters: {'model_name': 'VAE', 'batch_size': 864, 'iterations': 9, 'learning_rate': 0.0021960093605925307, 'p_miss': 0.27350455147696284}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:32,907] Trial 154 finished with value: 0.09872279091722821 and parameters: {'model_name': 'VAE', 'batch_size': 704, 'iterations': 7, 'learning_rate': 0.0005022516997136544, 'p_miss': 0.12867023831813443}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:34,686] Trial 155 finished with value: 0.16530949859558014 and parameters: {'model_name': 'VAE', 'batch_size': 501, 'iterations': 4, 'learning_rate': 0.005514169339528619, 'p_miss': 0.28891445214997535}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:36,242] Trial 156 finished with value: 0.11517174081757783 and parameters: {'model_name': 'VAE', 'batch_size': 355, 'iterations': 5, 'learning_rate': 0.0034040062323390107, 'p_miss': 0.1633019020581546}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:37,565] Trial 157 finished with value: 0.096327655084642 and parameters: {'model_name': 'VAE', 'batch_size': 830, 'iterations': 3, 'learning_rate': 0.0025327664415872786, 'p_miss': 0.24293306531142614}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:38,568] Trial 158 finished with value: 0.0975600435623573 and parameters: {'model_name': 'VAE', 'batch_size': 663, 'iterations': 3, 'learning_rate': 0.0016555875867950618, 'p_miss': 0.11709292864491123}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:40,310] Trial 159 finished with value: 0.09661058654043175 and parameters: {'model_name': 'VAE', 'batch_size': 889, 'iterations': 4, 'learning_rate': 0.0025583603529787187, 'p_miss': 0.24428562932384762}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:45,494] Trial 160 finished with value: 0.36337511135984135 and parameters: {'model_name': 'GAIN', 'batch_size': 781, 'hint_rate': 0.728126650761661, 'alpha': 36, 'iterations': 4, 'learning_rate': 0.049637477505199264, 'p_miss': 0.2499635285187795}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:47,754] Trial 161 finished with value: 0.09562154352970578 and parameters: {'model_name': 'VAE', 'batch_size': 935, 'iterations': 5, 'learning_rate': 0.0020191574535433484, 'p_miss': 0.2676155868473287}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:50,672] Trial 162 finished with value: 0.1065224395717699 and parameters: {'model_name': 'VAE', 'batch_size': 849, 'iterations': 7, 'learning_rate': 0.0026356287895299207, 'p_miss': 0.27229149456175855}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:52,795] Trial 163 finished with value: 0.10766799881308904 and parameters: {'model_name': 'VAE', 'batch_size': 928, 'iterations': 5, 'learning_rate': 0.0037491919461947873, 'p_miss': 0.2640135254563375}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:57,107] Trial 164 finished with value: 0.1463848934236338 and parameters: {'model_name': 'VAE', 'batch_size': 579, 'iterations': 16, 'learning_rate': 0.002004787283417744, 'p_miss': 0.2859759165729659}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:58,263] Trial 165 finished with value: 0.09961128972998744 and parameters: {'model_name': 'VAE', 'batch_size': 702, 'iterations': 3, 'learning_rate': 0.0013786109936517732, 'p_miss': 0.2616079915141236}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:00:59,081] Trial 166 finished with value: 0.09677795390071124 and parameters: {'model_name': 'VAE', 'batch_size': 468, 'iterations': 2, 'learning_rate': 0.0028285465523891166, 'p_miss': 0.24582001442921111}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:00,370] Trial 167 finished with value: 0.0996703483843045 and parameters: {'model_name': 'VAE', 'batch_size': 442, 'iterations': 4, 'learning_rate': 0.0027472404705597125, 'p_miss': 0.24295923810505612}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:01,381] Trial 168 finished with value: 0.09513700726423299 and parameters: {'model_name': 'VAE', 'batch_size': 754, 'iterations': 2, 'learning_rate': 0.0032611763076195763, 'p_miss': 0.25678074011191854}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:03,005] Trial 169 finished with value: 0.09899178309583266 and parameters: {'model_name': 'VAE', 'batch_size': 762, 'iterations': 4, 'learning_rate': 0.0033007981531888455, 'p_miss': 0.2667324255801462}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:04,469] Trial 170 finished with value: 0.10762225550385167 and parameters: {'model_name': 'VAE', 'batch_size': 620, 'iterations': 3, 'learning_rate': 0.00469982523646191, 'p_miss': 0.2564747840735193}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:05,427] Trial 171 finished with value: 0.09959618708929541 and parameters: {'model_name': 'VAE', 'batch_size': 992, 'iterations': 2, 'learning_rate': 0.0023836516783860024, 'p_miss': 0.2733992596947075}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:07,744] Trial 172 finished with value: 0.1108680375098531 and parameters: {'model_name': 'VAE', 'batch_size': 862, 'iterations': 5, 'learning_rate': 0.0040441001367746655, 'p_miss': 0.2803114055488317}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:08,796] Trial 173 finished with value: 0.09692196941579191 and parameters: {'model_name': 'VAE', 'batch_size': 521, 'iterations': 3, 'learning_rate': 0.0020589750496189693, 'p_miss': 0.25264017539896194}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:09,871] Trial 174 finished with value: 0.1089059558401682 and parameters: {'model_name': 'VAE', 'batch_size': 736, 'iterations': 2, 'learning_rate': 0.009141021871163741, 'p_miss': 0.1861145722813354}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:12,647] Trial 175 finished with value: 0.20998440964718545 and parameters: {'model_name': 'VAE', 'batch_size': 674, 'iterations': 8, 'learning_rate': 0.006029585307899803, 'p_miss': 0.2946517361826992}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:13,605] Trial 176 finished with value: 0.0978810696100065 and parameters: {'model_name': 'VAE', 'batch_size': 452, 'iterations': 2, 'learning_rate': 0.0029530347119110533, 'p_miss': 0.24821957385764476}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:14,804] Trial 177 finished with value: 0.10437652851377124 and parameters: {'model_name': 'VAE', 'batch_size': 373, 'iterations': 3, 'learning_rate': 0.003511066772507207, 'p_miss': 0.2582608128537353}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:16,564] Trial 178 finished with value: 0.09940065209038323 and parameters: {'model_name': 'VAE', 'batch_size': 615, 'iterations': 5, 'learning_rate': 0.002470187120112755, 'p_miss': 0.22500015842023896}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:17,636] Trial 179 finished with value: 0.09992339590600866 and parameters: {'model_name': 'VAE', 'batch_size': 509, 'iterations': 4, 'learning_rate': 0.0029056491296730763, 'p_miss': 0.2376366498205753}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:18,558] Trial 180 finished with value: 0.10176014808558906 and parameters: {'model_name': 'VAE', 'batch_size': 774, 'iterations': 2, 'learning_rate': 0.0016388444693237545, 'p_miss': 0.2447890245076512}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:18,805] Trial 181 finished with value: 0.3868323247444098 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:29,087] Trial 182 finished with value: 0.22691935852986442 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 20, 'imputation_order': 'arabic'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:30,936] Trial 183 finished with value: 0.09482019355237534 and parameters: {'model_name': 'VAE', 'batch_size': 856, 'iterations': 6, 'learning_rate': 0.0018894395162139118, 'p_miss': 0.26466109387174946}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:33,303] Trial 184 finished with value: 0.20643969143475638 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3859, 'weights': 'distance'}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:35,059] Trial 185 finished with value: 0.09446327228850368 and parameters: {'model_name': 'VAE', 'batch_size': 879, 'iterations': 6, 'learning_rate': 0.0017920432113937889, 'p_miss': 0.26597948402514265}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:37,216] Trial 186 finished with value: 0.09639444850257961 and parameters: {'model_name': 'VAE', 'batch_size': 998, 'iterations': 6, 'learning_rate': 0.0012329185035354331, 'p_miss': 0.2652963463486901}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:40,039] Trial 187 finished with value: 0.09703783721220122 and parameters: {'model_name': 'VAE', 'batch_size': 964, 'iterations': 6, 'learning_rate': 0.001320389701558457, 'p_miss': 0.27458112305052085}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:42,935] Trial 188 finished with value: 0.09603790688799407 and parameters: {'model_name': 'VAE', 'batch_size': 895, 'iterations': 7, 'learning_rate': 0.0018170360982401167, 'p_miss': 0.264640171915294}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:46,034] Trial 189 finished with value: 0.09892879180534306 and parameters: {'model_name': 'VAE', 'batch_size': 649, 'iterations': 10, 'learning_rate': 0.001539762532667304, 'p_miss': 0.26741518941214104}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:48,273] Trial 190 finished with value: 0.09690577825894904 and parameters: {'model_name': 'VAE', 'batch_size': 798, 'iterations': 7, 'learning_rate': 0.0018331072168328313, 'p_miss': 0.26323469777976194}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:51,149] Trial 191 finished with value: 0.09725069177722614 and parameters: {'model_name': 'VAE', 'batch_size': 989, 'iterations': 9, 'learning_rate': 0.0012095375390066738, 'p_miss': 0.2823933288264161}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:53,013] Trial 192 finished with value: 0.09624514368193068 and parameters: {'model_name': 'VAE', 'batch_size': 723, 'iterations': 6, 'learning_rate': 0.0009180198717868502, 'p_miss': 0.2607080456609119}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:01:58,754] Trial 193 finished with value: 0.34102108250339735 and parameters: {'model_name': 'GAIN', 'batch_size': 728, 'hint_rate': 0.3385604591130372, 'alpha': 74, 'iterations': 13, 'learning_rate': 0.0008065523695770586, 'p_miss': 0.2689198394658294}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:02:00,492] Trial 194 finished with value: 0.10201880498622959 and parameters: {'model_name': 'VAE', 'batch_size': 659, 'iterations': 6, 'learning_rate': 0.0009125771972195815, 'p_miss': 0.25964716003095495}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:02:02,454] Trial 195 finished with value: 0.0971189733369269 and parameters: {'model_name': 'VAE', 'batch_size': 578, 'iterations': 8, 'learning_rate': 0.0010275793773471273, 'p_miss': 0.2776849910713122}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:02:03,705] Trial 196 finished with value: 0.09988853555114736 and parameters: {'model_name': 'VAE', 'batch_size': 785, 'iterations': 5, 'learning_rate': 0.001796533027456432, 'p_miss': 0.2634811047782065}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:02:06,306] Trial 197 finished with value: 0.09785354419875583 and parameters: {'model_name': 'VAE', 'batch_size': 882, 'iterations': 6, 'learning_rate': 0.002119026041737423, 'p_miss': 0.2557689553099612}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:02:06,808] Trial 198 finished with value: 0.10029699389177042 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 7, 'learning_rate': 0.0014867777754999886, 'p_miss': 0.2707144257610744}. Best is trial 70 with value: 0.0936991800391209.
running
[I 2024-11-12 21:02:08,922] Trial 199 finished with value: 0.09565764430420878 and parameters: {'model_name': 'VAE', 'batch_size': 991, 'iterations': 5, 'learning_rate': 0.0013216453375900715, 'p_miss': 0.15462608715275536}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:02:27,078] Trial 0 finished with value: 0.2083140806953548 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 18, 'imputation_order': 'arabic'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:02:34,501] Trial 30 finished with value: 0.20865649431648176 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 18, 'imputation_order': 'descending'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:18:28,288] Trial 72 finished with value: 0.208677660760254 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:18:35,419] Trial 105 finished with value: 0.21478544328213714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:18:38,844] Trial 73 finished with value: 0.20816688465572697 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:19:34,833] Trial 74 finished with value: 0.20816188807051828 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 19, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:20:15,250] Trial 76 finished with value: 0.2087490706706046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:20:49,445] Trial 77 finished with value: 0.20833514034541284 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:20:49,779] Trial 78 finished with value: 0.20851009975856516 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:21:21,472] Trial 75 finished with value: 0.2087542786732679 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:22:07,849] Trial 79 finished with value: 0.20831232188150572 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 19, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:24:43,605] Trial 80 finished with value: 0.20829769363752187 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:25:43,867] Trial 81 finished with value: 0.20806957072025592 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:26:06,594] Trial 82 finished with value: 0.20863141019117135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
[I 2024-11-12 21:36:41,873] Trial 84 finished with value: 0.2077021284245907 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 70 with value: 0.0936991800391209.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0.0936991800391209
{'model_name': 'VAE', 'batch_size': 913, 'iterations': 1, 'learning_rate': 0.008376364743374526, 'p_miss': 0.2617260643536867}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.50357608380893
Generation:   4%|▍         | 1/25 [00:34<13:55, 34.80s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554743abca0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 598, in compute
    return ArgKminClassMode32.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  2
Best f1_score score: 0.50357608380893
Generation:   8%|▊         | 2/25 [01:44<21:08, 55.16s/it]Generation:  3
Best f1_score score: 0.5151475421979459
Generation:  12%|█▏        | 3/25 [01:52<12:19, 33.61s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546f7c2a10> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 598, in compute
    return ArgKminClassMode32.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546fbf23e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554743eacb0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  4
Best f1_score score: 0.5151475421979459
Generation:  16%|█▌        | 4/25 [02:05<08:57, 25.58s/it]Generation:  5
Best f1_score score: 0.5151475421979459
Generation:  20%|██        | 5/25 [02:50<10:53, 32.68s/it]Generation:  6
Best f1_score score: 0.5151475421979459
Generation:  24%|██▍       | 6/25 [04:20<16:30, 52.11s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546f8cfa30> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 598, in compute
    return ArgKminClassMode32.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  7
Best f1_score score: 0.5151475421979459
Generation:  28%|██▊       | 7/25 [04:57<14:09, 47.20s/it]Generation:  8
Best f1_score score: 0.5151475421979459
Generation:  32%|███▏      | 8/25 [05:13<10:31, 37.12s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d719c90> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  9
Best f1_score score: 0.5151475421979459
Generation:  36%|███▌      | 9/25 [05:42<09:13, 34.57s/it]Generation:  10
Best f1_score score: 0.5151475421979459
Generation:  40%|████      | 10/25 [06:43<10:42, 42.83s/it]Generation:  11
Best f1_score score: 0.5151475421979459
Generation:  44%|████▍     | 11/25 [07:57<12:14, 52.43s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474336230> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547433a5c0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  12
Best f1_score score: 0.5151475421979459
Generation:  48%|████▊     | 12/25 [09:13<12:54, 59.61s/it]Generation:  13
Best f1_score score: 0.5151475421979459
Generation:  52%|█████▏    | 13/25 [09:42<10:04, 50.34s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554743c75e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554743a7cd0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546fbf1d20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.5151475421979459
Generation:  56%|█████▌    | 14/25 [10:09<07:54, 43.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d645a50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  15
Best f1_score score: 0.5151475421979459
Generation:  60%|██████    | 15/25 [11:08<07:59, 48.00s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d3b49a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  16
Best f1_score score: 0.5151475421979459
Generation:  64%|██████▍   | 16/25 [11:32<06:06, 40.73s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d897340> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d2a4eb0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.5151475421979459
Generation:  68%|██████▊   | 17/25 [12:10<05:19, 39.98s/it]Generation:  18
Best f1_score score: 0.5151475421979459
Generation:  72%|███████▏  | 18/25 [12:36<04:11, 35.89s/it]Generation:  19
Best f1_score score: 0.5151475421979459
Generation:  76%|███████▌  | 19/25 [13:06<03:23, 33.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d1aed40> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d8d8be0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  20
Best f1_score score: 0.5151475421979459
Generation:  80%|████████  | 20/25 [13:44<02:56, 35.28s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546fbea230> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  21
Best f1_score score: 0.5151475421979459
Generation:  84%|████████▍ | 21/25 [14:52<03:00, 45.11s/it]Generation:  22
Best f1_score score: 0.5151475421979459
Generation:  88%|████████▊ | 22/25 [15:25<02:03, 41.26s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546cb37670> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 598, in compute
    return ArgKminClassMode32.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d6bf4f0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 598, in compute
    return ArgKminClassMode32.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  23
Best f1_score score: 0.5151475421979459
Generation:  92%|█████████▏| 23/25 [16:46<01:46, 53.47s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d5bab30> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 598, in compute
    return ArgKminClassMode32.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d193f40> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546cdcf100> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.5151475421979459
Generation:  96%|█████████▌| 24/25 [17:20<00:47, 47.57s/it]Generation:  25
Best f1_score score: 0.5151475421979459
Generation: 100%|██████████| 25/25 [18:15<00:00, 49.66s/it]Generation: 100%|██████████| 25/25 [18:19<00:00, 43.98s/it]
2024-11-12 21:55:10,055 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45983' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-13ca4ed84645410233c3c776c97a4e25', 'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8'} (stimulus_id='handle-worker-cleanup-1731477310.0558674')
Fitted
Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_jobs=1, n_neighbors=26, p=1,
                                      weights='distance'))])
score start
train score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 2.2204460492503136e-16, 'f1': 1.0}
original test score: {'auroc': 0.5461080337721966, 'accuracy': 0.47905405405405405, 'balanced_accuracy': 0.48351386446194056, 'logloss': 0.7024481430067266, 'f1': 0.33383890306546893}
imputed test score: {'auroc': 0.5064678906622397, 'accuracy': 0.5054054054054054, 'balanced_accuracy': 0.5055529074004066, 'logloss': 0.7151616058589304, 'f1': 0.5053475935828877}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155434ce8520>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474550d00> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474550a60> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.8982155217534457
Generation:   4%|▍         | 1/25 [02:05<50:03, 125.15s/it]Generation:  2
Best f1_score score: 0.9029306082482641
Generation:   8%|▊         | 2/25 [04:38<54:15, 141.54s/it]Generation:  3
Best f1_score score: 0.9029306082482641
Generation:  12%|█▏        | 3/25 [14:18<2:05:24, 342.03s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466e82050> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745f7370> 

Generation:  4
Best f1_score score: 0.9029306082482641
Generation:  16%|█▌        | 4/25 [24:23<2:35:57, 445.58s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546592dd80> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  5
Best f1_score score: 0.9029306082482641
Generation:  20%|██        | 5/25 [24:55<1:38:52, 296.64s/it]Generation:  6
Best f1_score score: 0.9029306082482641
Generation:  24%|██▍       | 6/25 [25:28<1:05:28, 206.78s/it]Generation:  7
Best f1_score score: 0.9029306082482641
Generation:  28%|██▊       | 7/25 [29:12<1:03:48, 212.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547409e410> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474550ca0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Exception in thread Thread-9 (funcwrap):
WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745b8eb0> 
Traceback (most recent call last):
  File "/home/ketrong/miniconda3/lib/python3.10/threading.py", line 1016, in _bootstrap_inner

    self.run()
  File "/home/ketrong/miniconda3/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
func_timeout.dafunc.FunctionTimedOut-6622554615383972247: Function objective_function (args=[<tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745b8eb0>]) (kwargs={'budget': None, 'X':             0   ...        19
0     0.612338  ...  0.432783
1          NaN  ...       NaN
2          NaN  ...  0.675587
3     0.342418  ...       NaN
4     0.578289  ...       NaN
...        ...  ...       ...
5915       NaN  ...  0.618440
5916  0.534744  ...  0.474807
5917       NaN  ...       NaN
5918  0.536906  ...  0.470416
5919       NaN  ...  0.450415

[5920 rows x 20 columns], 'y': array([1, 0, 1, ..., 0, 0, 1])}) timed out after 600.000000 seconds.

Generation:  8
Best f1_score score: 0.9029306082482641
Generation:  32%|███▏      | 8/25 [39:22<1:36:03, 339.02s/it]Generation:  9
Best f1_score score: 0.9029306082482641
Generation:  36%|███▌      | 9/25 [40:06<1:05:50, 246.91s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547459cfa0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.9029306082482641
Generation:  40%|████      | 10/25 [41:49<50:35, 202.35s/it] Generation:  11
Best f1_score score: 0.9029306082482641
Generation:  44%|████▍     | 11/25 [42:38<36:17, 155.56s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b82ef20> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.9029306082482641
Generation:  48%|████▊     | 12/25 [44:52<32:14, 148.80s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465886d10> 

Generation:  13
Best f1_score score: 0.9029306082482641
Generation:  52%|█████▏    | 13/25 [54:55<57:19, 286.64s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465c7ea40> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15537af4ba90> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  14
Best f1_score score: 0.9029306082482641
Generation:  56%|█████▌    | 14/25 [56:39<42:23, 231.18s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546581ed40> 

Generation:  15
Best f1_score score: 0.9029306082482641
Generation:  60%|██████    | 15/25 [1:06:44<57:18, 343.90s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b3cc430> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.9029306082482641
Generation:  64%|██████▍   | 16/25 [1:09:27<43:25, 289.50s/it]Generation:  17
Best f1_score score: 0.9029306082482641
Generation:  68%|██████▊   | 17/25 [1:10:07<28:35, 214.50s/it]Generation:  18
Best f1_score score: 0.9036078358955135
Generation:  72%|███████▏  | 18/25 [1:11:07<19:36, 168.03s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554593704c0> 

Generation:  19
Best f1_score score: 0.9036078358955135
Generation:  76%|███████▌  | 19/25 [1:21:14<29:59, 299.94s/it]Generation:  20
Best f1_score score: 0.9036078358955135
Generation:  80%|████████  | 20/25 [1:21:43<18:13, 218.75s/it]Generation:  21
Best f1_score score: 0.9036078358955135
Generation:  84%|████████▍ | 21/25 [1:22:44<11:24, 171.13s/it]Generation:  22
Best f1_score score: 0.9036078358955135
Generation:  88%|████████▊ | 22/25 [1:25:44<08:41, 173.88s/it]Generation:  23
Best f1_score score: 0.9036078358955135
Generation:  92%|█████████▏| 23/25 [1:29:06<06:04, 182.30s/it]Generation:  24
Best f1_score score: 0.9036078358955135
Generation:  96%|█████████▌| 24/25 [1:31:15<02:46, 166.34s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465757310> 

Generation:  25
Best f1_score score: 0.9036078358955135
Generation: 100%|██████████| 25/25 [1:41:21<00:00, 298.32s/it]Generation: 100%|██████████| 25/25 [1:41:21<00:00, 243.26s/it]
2024-11-12 23:36:44,053 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45911' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-8f70d4478aee7553f944c4982b08f3bd', 'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8'} (stimulus_id='handle-worker-cleanup-1731483404.0532897')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=10)),
                ('gaussiannb', GaussianNB())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.955333436292449, 'accuracy': 0.902195945945946, 'balanced_accuracy': 0.9017545740043758, 'logloss': 0.3468085220567038, 'f1': 0.9019111343516812}
test score: {'auroc': 0.9545174787371404, 'accuracy': 0.8972972972972973, 'balanced_accuracy': 0.8969173647751534, 'logloss': 0.35920015455753584, 'f1': 0.8970536551077788}
original test score: {'auroc': 0.9971107714167264, 'accuracy': 0.8263513513513514, 'balanced_accuracy': 0.827953012596087, 'logloss': 0.6291649278352959, 'f1': 0.8217017089654002}
score end
1496
lvl
0.5
type
MCAR
num_run
2
class_full
finished
all finished
full run takes
4.089230876101388
hours
DONE
