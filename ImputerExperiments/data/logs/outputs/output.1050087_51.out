Run: 51
/cm/local/apps/slurm/var/spool/job1050087/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1459/1459.pkl
working on 
../data/c/1459/class_full_MCAR_0.3_3
2.5030574798583984
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-15 08:39:27,967] A new study created in memory with name: no-name-a292f22d-f426-487a-901e-e6fe7ac51c0c
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-15 08:39:28,291] Trial 7 finished with value: 0.221504611818927 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 7 with value: 0.221504611818927.
running
[I 2024-11-15 08:39:28,455] Trial 1 finished with value: 0.3036104621531158 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 7 with value: 0.221504611818927.
running
[I 2024-11-15 08:39:31,047] Trial 16 finished with value: 0.1739256656131955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:31,497] Trial 18 finished with value: 0.3036104621531158 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:31,843] Trial 19 finished with value: 0.221504611818927 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:33,058] Trial 5 finished with value: 0.1898384817512193 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4091, 'weights': 'uniform'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:33,567] Trial 6 finished with value: 0.19036032351397764 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3125, 'weights': 'distance'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:34,373] Trial 8 finished with value: 0.19114286312012788 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4050, 'weights': 'distance'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:34,975] Trial 9 finished with value: 0.17434458945109754 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:35,405] Trial 3 finished with value: 0.1739620392373598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:37,048] Trial 15 finished with value: 0.29008689254201 and parameters: {'model_name': 'GAIN', 'batch_size': 82, 'hint_rate': 0.7082707125287802, 'alpha': 54, 'iterations': 1, 'learning_rate': 0.07352550026038647, 'p_miss': 0.2564926205601244}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:38,925] Trial 21 finished with value: 0.19103114812736643 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3859, 'weights': 'distance'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:42,643] Trial 13 finished with value: 0.1786734766165774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:45,977] Trial 24 finished with value: 0.2922883158502724 and parameters: {'model_name': 'GAIN', 'batch_size': 113, 'hint_rate': 0.7584394460625891, 'alpha': 8, 'iterations': 32, 'learning_rate': 0.0010971558822182317, 'p_miss': 0.14884342903525996}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:49,616] Trial 26 finished with value: 0.17396200471193835 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:51,960] Trial 27 finished with value: 0.1739620392373598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:39:52,212] Trial 2 finished with value: 0.2449670715265911 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:40:44,435] Trial 0 finished with value: 0.2949473432676243 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.1430657423179783, 'alpha': 7, 'iterations': 90, 'learning_rate': 0.04684581458992168, 'p_miss': 0.2054964346280552}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:42:03,379] Trial 14 finished with value: 0.1915338222061663 and parameters: {'model_name': 'VAE', 'batch_size': 250, 'iterations': 48, 'learning_rate': 0.08801277812939559, 'p_miss': 0.2529416975401403}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:47:12,599] Trial 22 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9662872714435582, 'alpha': 73, 'iterations': 2005, 'learning_rate': 0.0017467160535520753, 'p_miss': 0.2602156534721898}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:50:36,536] Trial 12 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5698859424556411, 'alpha': 41, 'iterations': 2686, 'learning_rate': 0.01667484343179484, 'p_miss': 0.07432753721384631}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:52:04,602] Trial 20 finished with value: 0.17722362822988025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:52:08,823] Trial 37 finished with value: 0.1739256656131955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:52:13,509] Trial 38 finished with value: 0.1739256656131955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:52:17,523] Trial 39 finished with value: 0.264372596570022 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 1, 'learning_rate': 0.00020245161506793748, 'p_miss': 0.015724908497748907}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:52:28,393] Trial 40 finished with value: 0.17436790690279005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:52:33,680] Trial 41 finished with value: 0.17392569768250915 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:52:38,538] Trial 42 finished with value: 0.1739256656131955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 08:52:44,233] Trial 43 finished with value: 0.17392569478105183 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 09:05:45,680] Trial 17 finished with value: 0.30640516485793745 and parameters: {'model_name': 'GAIN', 'batch_size': 916, 'hint_rate': 0.1848155927049929, 'alpha': 48, 'iterations': 1042, 'learning_rate': 0.0051735143372383914, 'p_miss': 0.20512430733449782}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 09:06:05,739] Trial 45 finished with value: 0.2695586209972987 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 6, 'learning_rate': 0.0001072294520743477, 'p_miss': 0.11541729797990295}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 09:06:10,948] Trial 46 finished with value: 0.1739256656131955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 09:06:14,917] Trial 47 finished with value: 0.1739256656131955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 09:06:25,628] Trial 48 finished with value: 0.17436790690279005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 16 with value: 0.1739256656131955.
running
[I 2024-11-15 09:06:32,251] Trial 49 finished with value: 0.1739256444967577 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 49 with value: 0.1739256444967577.
running
[I 2024-11-15 09:06:37,600] Trial 50 finished with value: 0.1739256444967577 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 49 with value: 0.1739256444967577.
running
[I 2024-11-15 09:06:54,002] Trial 51 finished with value: 0.16282514852263946 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:07:10,507] Trial 52 finished with value: 0.1639465964675733 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:07:26,938] Trial 53 finished with value: 0.1639465964675733 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:07:27,353] Trial 54 finished with value: 0.18817142095215403 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:07:31,284] Trial 55 finished with value: 0.18817142095215397 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8079, 'weights': 'uniform'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:07:48,064] Trial 56 finished with value: 0.1639465964675733 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:08:04,645] Trial 57 finished with value: 0.1639465964675733 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:08:21,656] Trial 58 finished with value: 0.1639465964675733 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:08:35,611] Trial 59 finished with value: 0.20139820222884458 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:08:52,919] Trial 60 finished with value: 0.1639465964675733 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.16282514852263946.
running
[I 2024-11-15 09:11:28,629] Trial 36 finished with value: 0.15610739866420756 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 09:18:46,803] Trial 23 finished with value: 0.3008944959112254 and parameters: {'model_name': 'GAIN', 'batch_size': 91, 'hint_rate': 0.9162584152023515, 'alpha': 48, 'iterations': 1868, 'learning_rate': 0.0007784113996621931, 'p_miss': 0.19319381764433238}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 09:42:21,131] Trial 62 finished with value: 0.19096557170158188 and parameters: {'model_name': 'VAE', 'batch_size': 993, 'iterations': 382, 'learning_rate': 0.0007528734791296914, 'p_miss': 0.021714990977643928}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 09:42:23,865] Trial 64 finished with value: 0.17586805362123348 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 341, 'weights': 'uniform'}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 09:42:24,191] Trial 65 finished with value: 0.3036104621531158 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 09:42:41,139] Trial 66 finished with value: 0.1639465964675733 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 09:46:27,123] Trial 63 finished with value: 0.20647444106314916 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 491, 'learning_rate': 0.009171033546768946, 'p_miss': 0.29733138746701326}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 09:46:48,970] Trial 68 finished with value: 0.1641288532480142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 09:54:40,210] Trial 4 finished with value: 0.30343573600959106 and parameters: {'model_name': 'GAIN', 'batch_size': 73, 'hint_rate': 0.744654583113561, 'alpha': 93, 'iterations': 3374, 'learning_rate': 0.025188064792500815, 'p_miss': 0.06455544799251008}. Best is trial 36 with value: 0.15610739866420756.
running
[I 2024-11-15 10:04:11,303] Trial 67 finished with value: 0.15541742143576753 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:06:24,246] Trial 10 finished with value: 0.29843031041932633 and parameters: {'model_name': 'GAIN', 'batch_size': 455, 'hint_rate': 0.31588031626734286, 'alpha': 24, 'iterations': 3375, 'learning_rate': 0.016744893658820096, 'p_miss': 0.2712474924010309}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:07:41,161] Trial 69 finished with value: 0.15578513850321166 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:11:43,106] Trial 11 finished with value: 0.19295426883944022 and parameters: {'model_name': 'VAE', 'batch_size': 115, 'iterations': 2024, 'learning_rate': 0.0009496503052669788, 'p_miss': 0.2383130305168708}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:15:58,396] Trial 70 finished with value: 0.15730309117360478 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:25:27,707] Trial 71 finished with value: 0.15621356318736832 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:27:43,309] Trial 72 finished with value: 0.15611890186636126 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:28:35,325] Trial 73 finished with value: 0.15645079647900856 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:33:44,528] Trial 74 finished with value: 0.15657848118492423 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:37:37,232] Trial 75 finished with value: 0.15638824129441525 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:46:55,786] Trial 76 finished with value: 0.1557141640381258 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:47:46,331] Trial 77 finished with value: 0.1609945428388579 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:47:52,745] Trial 82 finished with value: 0.19089523566850414 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7720, 'weights': 'distance'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:48:25,384] Trial 78 finished with value: 0.16303482870738223 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:48:25,790] Trial 84 finished with value: 0.3036104621531158 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:54:14,874] Trial 79 finished with value: 0.16245457903625143 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 10:58:06,645] Trial 80 finished with value: 0.16183083607574075 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:06:39,947] Trial 85 finished with value: 0.17079172642765544 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:07:24,264] Trial 81 finished with value: 0.16258401639112519 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:08:05,926] Trial 83 finished with value: 0.1619306111605525 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:08:16,397] Trial 90 finished with value: 0.2932826903396252 and parameters: {'model_name': 'GAIN', 'batch_size': 18, 'hint_rate': 0.3746774257362426, 'alpha': 94, 'iterations': 5, 'learning_rate': 0.00032760344284902106, 'p_miss': 0.14503878537899145}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:13:01,693] Trial 86 finished with value: 0.1720439935207933 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:16:41,695] Trial 87 finished with value: 0.1718558523283445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:27:38,282] Trial 88 finished with value: 0.1555755882568649 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:28:36,234] Trial 89 finished with value: 0.15659780659371794 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:29:25,241] Trial 91 finished with value: 0.15593915990401355 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:30:34,463] Trial 25 finished with value: 0.19510996675761882 and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 3610, 'learning_rate': 0.0026923966519883102, 'p_miss': 0.28854366078667765}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:34:36,584] Trial 92 finished with value: 0.15674039343260288 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:38:01,632] Trial 93 finished with value: 0.15645813749854717 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:38:53,291] Trial 99 finished with value: 0.2457644009263912 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:49:10,093] Trial 94 finished with value: 0.1567742857822992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:50:25,596] Trial 95 finished with value: 0.15615323074938153 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:51:02,957] Trial 96 finished with value: 0.15610197430193193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 67 with value: 0.15541742143576753.
running
[I 2024-11-15 11:52:32,774] Trial 97 finished with value: 0.15536029011595667 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 97 with value: 0.15536029011595667.
running
[I 2024-11-15 11:56:38,838] Trial 98 finished with value: 0.15576706881762345 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 97 with value: 0.15536029011595667.
running
[I 2024-11-15 11:56:52,315] Trial 105 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.4950185104196061, 'alpha': 71, 'iterations': 10, 'learning_rate': 0.005676935060570056, 'p_miss': 0.1056090725061477}. Best is trial 97 with value: 0.15536029011595667.
running
[I 2024-11-15 12:00:11,505] Trial 100 finished with value: 0.1560977282308994 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 97 with value: 0.15536029011595667.
running
[I 2024-11-15 12:09:40,906] Trial 101 finished with value: 0.15682163136725982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 97 with value: 0.15536029011595667.
running
[I 2024-11-15 12:11:07,970] Trial 102 finished with value: 0.15718978356308763 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 97 with value: 0.15536029011595667.
running
[I 2024-11-15 12:11:10,904] Trial 109 finished with value: 0.1648505831597285 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9, 'weights': 'uniform'}. Best is trial 97 with value: 0.15536029011595667.
running
[I 2024-11-15 12:11:11,283] Trial 110 finished with value: 0.18817142095215403 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 97 with value: 0.15536029011595667.
running
[I 2024-11-15 12:18:06,116] Trial 106 finished with value: 0.15497211157637553 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:18:44,222] Trial 112 finished with value: 0.25241564385799586 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:21:26,999] Trial 107 finished with value: 0.15668694520542328 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:25:33,100] Trial 108 finished with value: 0.17426478347200716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:32:25,411] Trial 111 finished with value: 0.1569743324898185 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:33:59,937] Trial 115 finished with value: 0.22309494678590883 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 174, 'learning_rate': 0.000407808572112747, 'p_miss': 0.17754451527455925}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:39:11,405] Trial 104 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.0627348199952662, 'alpha': 72, 'iterations': 9702, 'learning_rate': 0.004706708308241207, 'p_miss': 0.10371296496477858}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:39:52,726] Trial 113 finished with value: 0.155459504414645 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:53:31,689] Trial 116 finished with value: 0.15501070520338828 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 12:54:21,152] Trial 117 finished with value: 0.15579436804912614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 13:00:17,915] Trial 118 finished with value: 0.15620788872258284 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 13:01:12,046] Trial 119 finished with value: 0.15670296442986292 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 13:15:14,369] Trial 120 finished with value: 0.15585518161839945 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 13:15:22,603] Trial 121 finished with value: 0.1568153717215946 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 13:21:40,541] Trial 122 finished with value: 0.1571263661360843 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 13:23:16,353] Trial 123 finished with value: 0.15791966371723737 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 13:36:34,091] Trial 125 finished with value: 0.15658434328521176 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 106 with value: 0.15497211157637553.
running
[I 2024-11-15 13:36:54,974] Trial 124 finished with value: 0.15485168851842765 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 13:43:17,139] Trial 126 finished with value: 0.155913113332142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 13:45:18,106] Trial 127 finished with value: 0.1558952045882438 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 13:57:36,506] Trial 128 finished with value: 0.15615801882704564 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 13:57:43,207] Trial 132 finished with value: 0.19089523566850414 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6272, 'weights': 'distance'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 13:58:25,692] Trial 133 finished with value: 0.24748123363898142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 13:58:26,469] Trial 134 finished with value: 0.3036104621531158 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 13:58:57,729] Trial 129 finished with value: 0.1565029197129954 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:04:56,835] Trial 130 finished with value: 0.15572781095904156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:07:09,701] Trial 131 finished with value: 0.15616710695652164 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:19:30,039] Trial 135 finished with value: 0.1553702811519307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:20:31,680] Trial 136 finished with value: 0.15707249711056429 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:26:15,830] Trial 137 finished with value: 0.15657909536822684 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:26:29,344] Trial 141 finished with value: 0.2062012681248362 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 3, 'learning_rate': 0.03606856078741042, 'p_miss': 0.045243738689113716}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:29:00,195] Trial 138 finished with value: 0.15623632746330895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:40:58,419] Trial 139 finished with value: 0.15715476926541042 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:42:27,595] Trial 140 finished with value: 0.1556272551949946 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:48:03,199] Trial 142 finished with value: 0.15528068592446606 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:51:04,501] Trial 28 finished with value: 0.22010495755388257 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6570, 'learning_rate': 0.00012538746248098203, 'p_miss': 0.05289136539046764}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 14:51:13,423] Trial 143 finished with value: 0.1563162176029212 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:01:13,427] Trial 144 finished with value: 0.1605089430168345 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:03:02,711] Trial 145 finished with value: 0.16143589106994566 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:06:07,742] Trial 148 finished with value: 0.17758926637661937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:10:14,718] Trial 146 finished with value: 0.15681175562058763 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:13:26,245] Trial 147 finished with value: 0.15618596596243708 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:22:58,672] Trial 149 finished with value: 0.15650824196809887 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:23:05,572] Trial 154 finished with value: 0.17392569768250915 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:23:44,102] Trial 155 finished with value: 0.28841156382588123 and parameters: {'model_name': 'GAIN', 'batch_size': 245, 'hint_rate': 0.29984672513807237, 'alpha': 28, 'iterations': 22, 'learning_rate': 0.010364477594687133, 'p_miss': 0.2245401339223887}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:25:06,168] Trial 150 finished with value: 0.1557922446897097 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:28:26,285] Trial 151 finished with value: 0.15550860971935931 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:32:00,233] Trial 152 finished with value: 0.15606528732603947 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:35:07,813] Trial 153 finished with value: 0.15655846439919724 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:37:55,869] Trial 32 finished with value: 0.21303358007012574 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7293, 'learning_rate': 0.00013144210536800832, 'p_miss': 0.033278892549550076}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:45:00,442] Trial 156 finished with value: 0.15576218071558948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:45:28,521] Trial 103 finished with value: 0.3043759270173232 and parameters: {'model_name': 'GAIN', 'batch_size': 31, 'hint_rate': 0.04330915456003309, 'alpha': 74, 'iterations': 9271, 'learning_rate': 0.004064876680226529, 'p_miss': 0.09822823611947865}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:46:52,509] Trial 157 finished with value: 0.1563537889512287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:50:42,159] Trial 158 finished with value: 0.156908970074843 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:53:55,160] Trial 159 finished with value: 0.15677284535279323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:57:32,153] Trial 160 finished with value: 0.15588508155904407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 15:57:49,136] Trial 34 finished with value: 0.21928141164790943 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7543, 'learning_rate': 0.00010757499518326384, 'p_miss': 0.012671410956229756}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:00:43,502] Trial 161 finished with value: 0.15535854368012056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:06:03,778] Trial 29 finished with value: 0.21396907739751322 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7557, 'learning_rate': 0.00010481406584027655, 'p_miss': 0.011047017411262489}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:06:59,772] Trial 162 finished with value: 0.15614797204407577 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:08:05,437] Trial 163 finished with value: 0.1562595989667215 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:08:10,857] Trial 172 finished with value: 0.18701630066923997 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1989, 'weights': 'uniform'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:09:13,630] Trial 164 finished with value: 0.1576979319631742 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:09:39,925] Trial 174 finished with value: 0.17396202013971662 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:13:30,940] Trial 165 finished with value: 0.15666674605606132 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:16:43,124] Trial 166 finished with value: 0.15517384127189485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:20:11,052] Trial 167 finished with value: 0.15739113934091475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:20:53,725] Trial 168 finished with value: 0.1553685452625188 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:20:54,222] Trial 179 finished with value: 0.3036104621531158 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:23:19,292] Trial 169 finished with value: 0.15744370952860484 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:28:47,761] Trial 170 finished with value: 0.1556922996296673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:29:15,864] Trial 171 finished with value: 0.15693234502941372 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:30:48,845] Trial 173 finished with value: 0.1556170540679375 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:31:59,557] Trial 175 finished with value: 0.15615961260744307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:35:55,439] Trial 176 finished with value: 0.1562050308251241 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:38:57,610] Trial 177 finished with value: 0.15589419807678329 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:42:50,751] Trial 178 finished with value: 0.15677435251531263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:43:43,295] Trial 180 finished with value: 0.15704795449780978 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:45:51,014] Trial 181 finished with value: 0.156683047698341 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:51:19,895] Trial 182 finished with value: 0.15669014063689915 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:51:21,698] Trial 183 finished with value: 0.15673834171705933 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:51:34,827] Trial 192 finished with value: 0.17392569239106795 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:51:46,228] Trial 191 finished with value: 0.16335101810291677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:53:17,099] Trial 184 finished with value: 0.15610210931334506 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:54:37,461] Trial 185 finished with value: 0.15672518878469913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 16:58:47,471] Trial 186 finished with value: 0.15730444557271833 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 17:01:43,319] Trial 187 finished with value: 0.1571175619787937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 17:05:23,260] Trial 188 finished with value: 0.1568487782809546 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
running
[I 2024-11-15 17:06:45,683] Trial 189 finished with value: 0.15708608786914982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:08:27,760] Trial 190 finished with value: 0.15749184725331764 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:12:49,050] Trial 193 finished with value: 0.15704796354422842 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:13:33,045] Trial 194 finished with value: 0.15598866464400732 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:14:26,688] Trial 195 finished with value: 0.15634731850849118 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:15:31,654] Trial 196 finished with value: 0.15545786653986907 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:18:44,721] Trial 197 finished with value: 0.1556757384572 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:19:23,767] Trial 30 finished with value: 0.2196360981696554 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8765, 'learning_rate': 0.00010423671915633917, 'p_miss': 0.04611136538825311}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:20:24,226] Trial 198 finished with value: 0.15606031384422997 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:22:43,775] Trial 199 finished with value: 0.15633722643227257 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:34:25,989] Trial 33 finished with value: 0.21225136302197328 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9557, 'learning_rate': 0.00014654154584591418, 'p_miss': 0.018304377998820037}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:39:23,813] Trial 35 finished with value: 0.19122831225937462 and parameters: {'model_name': 'VAE', 'batch_size': 747, 'iterations': 8688, 'learning_rate': 0.000111089928088074, 'p_miss': 0.03485351598098323}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:39:50,969] Trial 31 finished with value: 0.20992806268043313 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9469, 'learning_rate': 0.00019633226868902054, 'p_miss': 0.012928877693145657}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:40:24,215] Trial 44 finished with value: 0.19144984993808428 and parameters: {'model_name': 'VAE', 'batch_size': 963, 'iterations': 8660, 'learning_rate': 0.0001312463430998085, 'p_miss': 0.1276631104075586}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:42:26,672] Trial 114 finished with value: 0.19674239812885233 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 9859, 'learning_rate': 0.00040511905321777666, 'p_miss': 0.175889689835732}. Best is trial 124 with value: 0.15485168851842765.
[I 2024-11-15 17:43:19,966] Trial 61 finished with value: 0.19132303600002218 and parameters: {'model_name': 'VAE', 'batch_size': 953, 'iterations': 9494, 'learning_rate': 0.00042185477487644295, 'p_miss': 0.028240825461844477}. Best is trial 124 with value: 0.15485168851842765.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
dtype: int64
0.15485168851842765
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.5776135759992165
Generation:   4%|▍         | 1/25 [00:27<11:08, 27.84s/it]Generation:  2
Best f1_score score: 0.5776135759992165
Generation:   8%|▊         | 2/25 [00:39<07:02, 18.35s/it]Generation:  3
Best f1_score score: 0.5891571034263908
Generation:  12%|█▏        | 3/25 [00:55<06:18, 17.20s/it]Generation:  4
Best f1_score score: 0.593294640661524
Generation:  16%|█▌        | 4/25 [01:24<07:38, 21.83s/it]Generation:  5
Best f1_score score: 0.6063004567413467
Generation:  20%|██        | 5/25 [04:15<25:12, 75.63s/it]Generation:  6
Best f1_score score: 0.6063004567413467
Generation:  24%|██▍       | 6/25 [04:51<19:41, 62.17s/it]Generation:  7
Best f1_score score: 0.6148559712354041
Generation:  28%|██▊       | 7/25 [05:30<16:25, 54.76s/it]Generation:  8
Best f1_score score: 0.6148559712354041
Generation:  32%|███▏      | 8/25 [05:50<12:21, 43.61s/it]Generation:  9
Best f1_score score: 0.6148559712354041
Generation:  36%|███▌      | 9/25 [06:37<11:54, 44.67s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a90070> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  10
Best f1_score score: 0.6148559712354041
Generation:  40%|████      | 10/25 [07:09<10:12, 40.81s/it]Generation:  11
Best f1_score score: 0.6148559712354041
Generation:  44%|████▍     | 11/25 [07:57<10:02, 43.05s/it]Generation:  12
Best f1_score score: 0.6288542723082315
Generation:  48%|████▊     | 12/25 [08:54<10:12, 47.14s/it]Generation:  13
Best f1_score score: 0.6288542723082315
Generation:  52%|█████▏    | 13/25 [09:30<08:47, 43.93s/it]Generation:  14
Best f1_score score: 0.6288542723082315
Generation:  56%|█████▌    | 14/25 [10:27<08:43, 47.61s/it]Generation:  15
Best f1_score score: 0.6288542723082315
Generation:  60%|██████    | 15/25 [11:08<07:38, 45.80s/it]Generation:  16
Best f1_score score: 0.6288542723082315
Generation:  64%|██████▍   | 16/25 [12:32<08:34, 57.17s/it]Generation:  17
Best f1_score score: 0.6288542723082315
Generation:  68%|██████▊   | 17/25 [13:08<06:46, 50.83s/it]Generation:  18
Best f1_score score: 0.6288542723082315
Generation:  72%|███████▏  | 18/25 [13:57<05:52, 50.32s/it]Generation:  19
Best f1_score score: 0.6288542723082315
Generation:  76%|███████▌  | 19/25 [16:40<08:25, 84.21s/it]Generation:  20
Best f1_score score: 0.6288542723082315
Generation:  80%|████████  | 20/25 [20:09<10:07, 121.57s/it]Generation:  21
Best f1_score score: 0.6288542723082315
Generation:  84%|████████▍ | 21/25 [22:03<07:57, 119.39s/it]Generation:  22
Best f1_score score: 0.6288542723082315
Generation:  88%|████████▊ | 22/25 [22:40<04:44, 94.74s/it] Generation:  23
Best f1_score score: 0.6288542723082315
Generation:  92%|█████████▏| 23/25 [26:08<04:17, 128.51s/it]Generation:  24
Best f1_score score: 0.6288542723082315
Generation:  96%|█████████▌| 24/25 [26:50<01:42, 102.59s/it]Generation:  25
Best f1_score score: 0.6288542723082315
Generation: 100%|██████████| 25/25 [27:52<00:00, 90.37s/it] Generation: 100%|██████████| 25/25 [27:55<00:00, 67.01s/it]
2024-11-15 18:13:23,381 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:36049' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-2317c06f89edce5463e1d9377a25b157', 'ndarray-26814314f5e56af0d614d2cc0f809fa3'} (stimulus_id='handle-worker-cleanup-1731723203.3812952')
Fitted
Pipeline(steps=[('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=True,
                                                l2_regularization=2.6382e-09,
                                                learning_rate=0.2401742762927,
                                                max_features=0.7884258787356,
                                                max_leaf_nodes=1464,
                                                min_samples_leaf=25,
                                                n_iter_no_change=11, tol=0.0001,
                                                validation_fraction=None))])
score start
train score: {'auroc': 0.9997102007955793, 'accuracy': 0.9725960362123807, 'balanced_accuracy': 0.9710032029214645, 'logloss': 0.05721786433344845, 'f1': 0.9689711339750019}
original test score: {'auroc': 0.9823756618146955, 'accuracy': 0.821917808219178, 'balanced_accuracy': 0.8165745403446104, 'logloss': 0.8392489546820101, 'f1': 0.8170183560641646}
imputed test score: {'auroc': 0.9353409645871409, 'accuracy': 0.6477495107632094, 'balanced_accuracy': 0.6359132474711817, 'logloss': 1.9648800169073681, 'f1': 0.6359235507963665}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145b0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0b80> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.1816132746536503
Generation:   4%|▍         | 1/25 [08:34<3:25:51, 514.65s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474593a90> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.3745062989685347
Generation:   8%|▊         | 2/25 [15:39<2:57:06, 462.01s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457326740> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474116710> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  3
Best f1_score score: 0.5599422660872989
Generation:  12%|█▏        | 3/25 [22:45<2:43:15, 445.23s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d19780> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.5599422660872989
Generation:  16%|█▌        | 4/25 [29:51<2:33:16, 437.93s/it]Generation:  5
Best f1_score score: 0.5599422660872989
Generation:  20%|██        | 5/25 [36:58<2:24:35, 433.77s/it]Generation:  6
Best f1_score score: 0.5599422660872989
Generation:  24%|██▍       | 6/25 [44:04<2:16:34, 431.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15541cb5a620> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.5599422660872989
Generation:  28%|██▊       | 7/25 [51:13<2:09:06, 430.36s/it]Generation:  8
Best f1_score score: 0.5599422660872989
Generation:  32%|███▏      | 8/25 [58:20<2:01:40, 429.43s/it]Generation:  9
Best f1_score score: 0.5671107408126321
Generation:  36%|███▌      | 9/25 [1:05:28<1:54:22, 428.90s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fd19a50> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.6080867301735792
Generation:  40%|████      | 10/25 [1:13:41<1:52:10, 448.73s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fe6ece0> 

Generation:  11
Best f1_score score: 0.6441689538029276
Generation:  44%|████▍     | 11/25 [1:23:46<1:55:53, 496.67s/it]Generation:  12
Best f1_score score: 0.6441689538029276
Generation:  48%|████▊     | 12/25 [1:31:08<1:44:00, 480.04s/it]Generation:  13
Best f1_score score: 0.6655736045634286
Generation:  52%|█████▏    | 13/25 [1:38:53<1:35:04, 475.35s/it]Generation:  14
Best f1_score score: 0.6655736045634286
Generation:  56%|█████▌    | 14/25 [1:46:03<1:24:37, 461.59s/it]Generation:  15
Best f1_score score: 0.6655736045634286
Generation:  60%|██████    | 15/25 [1:53:09<1:15:10, 451.00s/it]Generation:  16
Best f1_score score: 0.672320610646549
Generation:  64%|██████▍   | 16/25 [2:00:19<1:06:41, 444.59s/it]Generation:  17
Best f1_score score: 0.672320610646549
Generation:  68%|██████▊   | 17/25 [2:07:30<58:43, 440.46s/it]  Generation:  18
Best f1_score score: 0.6868044653779908
Generation:  72%|███████▏  | 18/25 [2:14:39<51:00, 437.18s/it]Generation:  19
Best f1_score score: 0.6868044653779908
Generation:  76%|███████▌  | 19/25 [2:21:48<43:27, 434.62s/it]Generation:  20
Best f1_score score: 0.6868044653779908
Generation:  80%|████████  | 20/25 [2:28:57<36:04, 432.91s/it]Generation:  21
Best f1_score score: 0.6868044653779908
Generation:  84%|████████▍ | 21/25 [2:36:04<28:45, 431.31s/it]Generation:  22
Best f1_score score: 0.6868044653779908
Generation:  88%|████████▊ | 22/25 [2:43:06<21:25, 428.53s/it]Generation:  23
Best f1_score score: 0.6868044653779908
Generation:  92%|█████████▏| 23/25 [2:50:13<14:15, 427.91s/it]Generation:  24
Best f1_score score: 0.6868044653779908
Generation:  96%|█████████▌| 24/25 [2:52:48<05:46, 346.06s/it]Generation:  25
Best f1_score score: 0.6868044653779908
Generation: 100%|██████████| 25/25 [2:59:51<00:00, 369.02s/it]Generation: 100%|██████████| 25/25 [2:59:51<00:00, 431.64s/it]
2024-11-15 21:13:24,518 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:41691' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-428706ba25d9f129f6b46bebb0782ebc', 'ndarray-26814314f5e56af0d614d2cc0f809fa3'} (stimulus_id='handle-worker-cleanup-1731734004.5181215')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='constant')),
                ('baggingclassifier',
                 BaggingClassifier(bootstrap=False,
                                   max_features=0.5091646531311,
                                   max_samples=0.9744944538337, n_estimators=80,
                                   n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9975511613437831, 'accuracy': 0.9564472718375336, 'balanced_accuracy': 0.9522572049181959, 'logloss': 0.5840086332416349, 'f1': 0.953073567618036}
test score: {'auroc': 0.9560170433925659, 'accuracy': 0.7392367906066536, 'balanced_accuracy': 0.724067279648062, 'logloss': 1.131546921044517, 'f1': 0.7280271120190176}
original test score: {'auroc': 0.9857813841675558, 'accuracy': 0.8527397260273972, 'balanced_accuracy': 0.8423621035737797, 'logloss': 0.7424813364799007, 'f1': 0.8444578127104767}
score end
1459
lvl
0.3
type
MCAR
num_run
3
class_full
finished
all finished
full run takes
12.570103461676174
hours
DONE
