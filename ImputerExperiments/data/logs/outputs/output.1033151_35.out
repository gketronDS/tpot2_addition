Run: 35
/cm/local/apps/slurm/var/spool/job1033151/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/871/871.pkl
working on 
../data/c/871/class_full_MNAR_0.3_2
2.701417922973633
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-30 16:55:35,637] A new study created in memory with name: no-name-a3fce906-1a88-477a-8f6c-a48d267f56bc
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-30 16:55:36,006] Trial 11 finished with value: 0.4109550485805345 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 11 with value: 0.4109550485805345.
[I 2024-10-30 16:55:36,125] Trial 3 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.12297518094462459.
running
running
[I 2024-10-30 16:55:36,278] Trial 14 finished with value: 0.4109550485805345 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:37,065] Trial 9 finished with value: 0.15457160430094108 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2579, 'weights': 'uniform'}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:37,284] Trial 4 finished with value: 0.16348788568201975 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 383, 'weights': 'distance'}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:37,642] Trial 18 finished with value: 0.16339085073605286 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 355, 'weights': 'distance'}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:37,807] Trial 7 finished with value: 0.1653472820704136 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2222, 'weights': 'distance'}. Best is trial 3 with value: 0.12297518094462459.
[I 2024-10-30 16:55:37,935] Trial 21 finished with value: 0.15457160430094108 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.12297518094462459.
running
running
[I 2024-10-30 16:55:38,370] Trial 19 finished with value: 0.1644533388017311 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 877, 'weights': 'distance'}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:39,393] Trial 20 finished with value: 0.1549616736099015 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:40,447] Trial 22 finished with value: 0.1535138464467513 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:40,744] Trial 12 finished with value: 0.15378050896526368 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:40,906] Trial 8 finished with value: 0.2589336638177664 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:55:41,218] Trial 5 finished with value: 0.26322829809255277 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:56:22,557] Trial 6 finished with value: 0.1277943185340036 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 1, 'learning_rate': 0.0053570286733411404, 'p_miss': 0.05686102247911102}. Best is trial 3 with value: 0.12297518094462459.
running
[I 2024-10-30 16:56:24,554] Trial 16 finished with value: 0.11733261415476748 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 2, 'learning_rate': 0.00046720573801215236, 'p_miss': 0.1658438821451893}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 16:56:25,424] Trial 29 finished with value: 0.33513278777593 and parameters: {'model_name': 'GAIN', 'batch_size': 841, 'hint_rate': 0.0897859959664492, 'alpha': 51, 'iterations': 4, 'learning_rate': 0.001232639945411625, 'p_miss': 0.21395878244168903}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 16:56:26,877] Trial 31 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8956333029244414, 'alpha': 67, 'iterations': 6, 'learning_rate': 0.0001187100191806993, 'p_miss': 0.24917113522271478}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 16:56:28,548] Trial 30 finished with value: 0.12154859020316604 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 1, 'learning_rate': 0.007653216831247246, 'p_miss': 0.04393898966638156}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 16:56:32,849] Trial 15 finished with value: 0.3443412730483092 and parameters: {'model_name': 'GAIN', 'batch_size': 112, 'hint_rate': 0.5816661222387017, 'alpha': 9, 'iterations': 9, 'learning_rate': 0.0017997917833955945, 'p_miss': 0.14924690273896943}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 16:57:04,103] Trial 25 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.7613336212430983, 'alpha': 70, 'iterations': 151, 'learning_rate': 0.0005882666509187704, 'p_miss': 0.11728363487161664}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 16:57:04,767] Trial 1 finished with value: 0.12950731202220991 and parameters: {'model_name': 'VAE', 'batch_size': 460, 'iterations': 7, 'learning_rate': 0.007195282438871161, 'p_miss': 0.24976631136871494}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 16:57:13,125] Trial 17 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.5221558599027497, 'alpha': 33, 'iterations': 83, 'learning_rate': 0.01028258763894668, 'p_miss': 0.19829043979014782}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:01:57,781] Trial 23 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5310059761352381, 'alpha': 97, 'iterations': 1098, 'learning_rate': 0.007864769287602895, 'p_miss': 0.1606864370862814}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:02:04,588] Trial 39 finished with value: 0.1347167927145308 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 1, 'learning_rate': 0.030206117451020982, 'p_miss': 0.01904787278753732}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:02:09,281] Trial 40 finished with value: 0.12413788496677503 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 1, 'learning_rate': 0.0002544108551021217, 'p_miss': 0.05892730676109916}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:04:36,222] Trial 13 finished with value: 0.15724225858029675 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 137, 'learning_rate': 0.0014767568715722526, 'p_miss': 0.17869312867185722}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:04:36,723] Trial 42 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:04:42,919] Trial 41 finished with value: 0.1517066797218684 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 46, 'learning_rate': 0.09700426968496298, 'p_miss': 0.10786761064909589}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:27:19,897] Trial 2 finished with value: 0.34017549296464505 and parameters: {'model_name': 'GAIN', 'batch_size': 20, 'hint_rate': 0.8369917661715103, 'alpha': 29, 'iterations': 1252, 'learning_rate': 0.0004404174691984402, 'p_miss': 0.23945515243803095}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:29:02,514] Trial 45 finished with value: 0.16216071293728632 and parameters: {'model_name': 'VAE', 'batch_size': 119, 'iterations': 31, 'learning_rate': 0.028685388803887338, 'p_miss': 0.29949315885718647}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:29:02,998] Trial 46 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:29:03,358] Trial 47 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:29:03,921] Trial 48 finished with value: 0.4109550485805345 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:29:04,390] Trial 49 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:35:25,390] Trial 26 finished with value: 0.15714789475583144 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 620, 'learning_rate': 0.0015468606545261917, 'p_miss': 0.04340074678821845}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:35:34,690] Trial 51 finished with value: 0.12670144405315412 and parameters: {'model_name': 'VAE', 'batch_size': 81, 'iterations': 2, 'learning_rate': 0.020723312518206943, 'p_miss': 0.0991976865528502}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:35:35,088] Trial 52 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:36:06,939] Trial 27 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.15843833906734744, 'alpha': 68, 'iterations': 7629, 'learning_rate': 0.00015928801863362006, 'p_miss': 0.03933193990869931}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:12,259] Trial 54 finished with value: 0.12486866701962955 and parameters: {'model_name': 'VAE', 'batch_size': 289, 'iterations': 14, 'learning_rate': 0.003193516564173778, 'p_miss': 0.1338042127088377}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:12,646] Trial 55 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:13,000] Trial 56 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:13,362] Trial 57 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:13,905] Trial 58 finished with value: 0.12297518094462459 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:14,242] Trial 59 finished with value: 0.15457160430094108 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:26,286] Trial 60 finished with value: 0.12950412937539185 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 3, 'learning_rate': 0.0007215818146059172, 'p_miss': 0.18046411822727104}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:26,889] Trial 61 finished with value: 0.4109550485805345 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:37,706] Trial 62 finished with value: 0.1199389860084632 and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 2, 'learning_rate': 0.0031478721153675488, 'p_miss': 0.06926713309960957}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:37:48,915] Trial 63 finished with value: 0.11849208384889809 and parameters: {'model_name': 'VAE', 'batch_size': 69, 'iterations': 2, 'learning_rate': 0.003298164044347751, 'p_miss': 0.08545366480576874}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:38:01,118] Trial 64 finished with value: 0.1177932196929243 and parameters: {'model_name': 'VAE', 'batch_size': 62, 'iterations': 2, 'learning_rate': 0.0036505941272131173, 'p_miss': 0.08761553756439826}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:38:11,707] Trial 65 finished with value: 0.14226831848224025 and parameters: {'model_name': 'VAE', 'batch_size': 64, 'iterations': 2, 'learning_rate': 0.004160796646808668, 'p_miss': 0.07726906122519434}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:38:17,373] Trial 66 finished with value: 0.1338673923015715 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 1, 'learning_rate': 0.002555344543914505, 'p_miss': 0.08358446955728056}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:38:31,144] Trial 67 finished with value: 0.13003743036215604 and parameters: {'model_name': 'VAE', 'batch_size': 198, 'iterations': 2, 'learning_rate': 0.013931925480771563, 'p_miss': 0.01167368195847475}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:39:39,147] Trial 68 finished with value: 0.13463505592844105 and parameters: {'model_name': 'VAE', 'batch_size': 47, 'iterations': 19, 'learning_rate': 0.004593048714288291, 'p_miss': 0.08030294255524051}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:39:54,475] Trial 69 finished with value: 0.13649501975548245 and parameters: {'model_name': 'VAE', 'batch_size': 169, 'iterations': 3, 'learning_rate': 0.002618459042123866, 'p_miss': 0.12833828880691522}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:39:59,807] Trial 70 finished with value: 0.13216507787283566 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 1, 'learning_rate': 0.0009202132571577748, 'p_miss': 0.06419922454654473}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:40:00,801] Trial 71 finished with value: 0.15457160430094108 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3078, 'weights': 'uniform'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:40:09,739] Trial 72 finished with value: 0.12816681642602834 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 2, 'learning_rate': 0.0024572891433059917, 'p_miss': 0.09751306046104326}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:40:18,823] Trial 73 finished with value: 0.1606535707592323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:40:55,056] Trial 74 finished with value: 0.12354446281286355 and parameters: {'model_name': 'VAE', 'batch_size': 91, 'iterations': 7, 'learning_rate': 0.006997646106718293, 'p_miss': 0.033053180903742325}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:41:14,557] Trial 75 finished with value: 0.13024895956341795 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 5, 'learning_rate': 0.010796068584881167, 'p_miss': 0.06701921860926965}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:42:07,275] Trial 76 finished with value: 0.11961864423989962 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 13, 'learning_rate': 0.0003640867223737462, 'p_miss': 0.1464938637218675}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:42:43,474] Trial 77 finished with value: 0.13107108439488932 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 10, 'learning_rate': 0.00031259808790109236, 'p_miss': 0.1421131432688542}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:42:53,481] Trial 78 finished with value: 0.12088887447105208 and parameters: {'model_name': 'VAE', 'batch_size': 53, 'iterations': 2, 'learning_rate': 0.00045583054391081873, 'p_miss': 0.16274381910184924}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:43:02,159] Trial 79 finished with value: 0.12112766271941725 and parameters: {'model_name': 'VAE', 'batch_size': 64, 'iterations': 2, 'learning_rate': 0.0003598556907684284, 'p_miss': 0.15944508842212618}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:43:12,831] Trial 80 finished with value: 0.13904715451390107 and parameters: {'model_name': 'VAE', 'batch_size': 73, 'iterations': 3, 'learning_rate': 0.00041634544563579686, 'p_miss': 0.16503157197876805}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:43:21,990] Trial 81 finished with value: 0.13288361179519706 and parameters: {'model_name': 'VAE', 'batch_size': 148, 'iterations': 2, 'learning_rate': 0.0002415047197304697, 'p_miss': 0.17785741857723072}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:43:46,501] Trial 82 finished with value: 0.1280809567654225 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 5, 'learning_rate': 0.00047278153564861793, 'p_miss': 0.19559657825383264}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:43:54,866] Trial 83 finished with value: 0.13170036540180657 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.0008954788009019437, 'p_miss': 0.15321045306446776}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:43:55,803] Trial 84 finished with value: 0.15300153009103287 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1604, 'weights': 'uniform'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:44:12,308] Trial 85 finished with value: 0.1248612926672655 and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 4, 'learning_rate': 0.0003785532641785493, 'p_miss': 0.16558676989145601}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:44:16,466] Trial 86 finished with value: 0.12662137956808367 and parameters: {'model_name': 'VAE', 'batch_size': 40, 'iterations': 1, 'learning_rate': 0.00018012111444370066, 'p_miss': 0.12097943037450473}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:44:21,656] Trial 87 finished with value: 0.13328944166409015 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 1, 'learning_rate': 0.0006289405387050252, 'p_miss': 0.14466820545324338}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:44:31,280] Trial 88 finished with value: 0.13960197629664428 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 2, 'learning_rate': 0.00558029817582092, 'p_miss': 0.04965711554920822}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:44:46,853] Trial 89 finished with value: 0.14751006511684545 and parameters: {'model_name': 'VAE', 'batch_size': 98, 'iterations': 3, 'learning_rate': 0.0019215973561428914, 'p_miss': 0.17982664717691887}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:55:04,487] Trial 90 finished with value: 0.15704533116624186 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 17:55:38,443] Trial 91 finished with value: 0.12722592232252708 and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 11, 'learning_rate': 0.0010667368572819217, 'p_miss': 0.19894621656155945}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:15:55,665] Trial 92 finished with value: 0.14949271686716442 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 314, 'learning_rate': 0.0005202291051825921, 'p_miss': 0.030077484395100437}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:15:59,915] Trial 93 finished with value: 0.12840979532182137 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 1, 'learning_rate': 0.003906422184948724, 'p_miss': 0.09755371347190656}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:16:25,781] Trial 94 finished with value: 0.12365545640133599 and parameters: {'model_name': 'VAE', 'batch_size': 109, 'iterations': 7, 'learning_rate': 0.00030500798876886435, 'p_miss': 0.11273389201753616}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:16:41,901] Trial 95 finished with value: 0.12013414462806567 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4, 'learning_rate': 0.0001858032947129934, 'p_miss': 0.04971266778697641}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:16:56,436] Trial 96 finished with value: 0.12611050336979107 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 3, 'learning_rate': 0.00018216579609798297, 'p_miss': 0.04516172443665572}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:17:10,175] Trial 97 finished with value: 0.13153279437577783 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 4, 'learning_rate': 0.00013287565994336197, 'p_miss': 0.06718163689407766}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:17:18,572] Trial 98 finished with value: 0.13159311563124912 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.00022430098763972025, 'p_miss': 0.05261607629421186}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:25:36,582] Trial 10 finished with value: 0.15775246703191667 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 1351, 'learning_rate': 0.040827776469963474, 'p_miss': 0.051040751042317194}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:26:45,172] Trial 100 finished with value: 0.11990708989583314 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 21, 'learning_rate': 0.000338066881697548, 'p_miss': 0.22469609227600074}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:27:12,510] Trial 101 finished with value: 0.3418785413508134 and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.28983945447896936, 'alpha': 6, 'iterations': 17, 'learning_rate': 0.0003459486331791502, 'p_miss': 0.20484912016387546}. Best is trial 16 with value: 0.11733261415476748.
running
[I 2024-10-30 18:31:37,558] Trial 102 finished with value: 0.11732060794204302 and parameters: {'model_name': 'VAE', 'batch_size': 57, 'iterations': 73, 'learning_rate': 0.00010599695906292678, 'p_miss': 0.2996503072207767}. Best is trial 102 with value: 0.11732060794204302.
running
[I 2024-10-30 18:31:38,608] Trial 103 finished with value: 0.1525933416533068 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1391, 'weights': 'uniform'}. Best is trial 102 with value: 0.11732060794204302.
running
[I 2024-10-30 18:36:46,497] Trial 104 finished with value: 0.11732357772046517 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 88, 'learning_rate': 0.0001086627253410959, 'p_miss': 0.2892515122528535}. Best is trial 102 with value: 0.11732060794204302.
running
[I 2024-10-30 18:42:10,105] Trial 35 finished with value: 0.14969218253229394 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 2064, 'learning_rate': 0.07188141263397488, 'p_miss': 0.028486501095093292}. Best is trial 102 with value: 0.11732060794204302.
running
[I 2024-10-30 18:46:14,554] Trial 105 finished with value: 0.17207184164107045 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 102 with value: 0.11732060794204302.
running
[I 2024-10-30 18:46:52,445] Trial 106 finished with value: 0.1310547219574317 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 80, 'learning_rate': 0.0001298031550385173, 'p_miss': 0.2912677061354154}. Best is trial 102 with value: 0.11732060794204302.
running
[I 2024-10-30 18:47:55,213] Trial 107 finished with value: 0.12505494821214153 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 34, 'learning_rate': 0.00010937950597853882, 'p_miss': 0.28194078426895486}. Best is trial 102 with value: 0.11732060794204302.
running
[I 2024-10-30 18:53:14,043] Trial 109 finished with value: 0.12905537343055745 and parameters: {'model_name': 'VAE', 'batch_size': 47, 'iterations': 108, 'learning_rate': 0.00015969639031160923, 'p_miss': 0.2754911239791256}. Best is trial 102 with value: 0.11732060794204302.
running
[I 2024-10-30 18:53:59,017] Trial 108 finished with value: 0.11581721098606482 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 142, 'learning_rate': 0.0001181738346643436, 'p_miss': 0.2752291482510871}. Best is trial 108 with value: 0.11581721098606482.
running
[I 2024-10-30 18:56:02,340] Trial 110 finished with value: 0.11561360243078585 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 53, 'learning_rate': 0.00021095258572703467, 'p_miss': 0.2260835736223216}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:06:34,044] Trial 112 finished with value: 0.13781649425417186 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 178, 'learning_rate': 0.00010017738335432878, 'p_miss': 0.22604708641339658}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:07:50,451] Trial 0 finished with value: 0.154826575976087 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 2287, 'learning_rate': 0.0001458971090425429, 'p_miss': 0.13948841578397472}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:08:59,970] Trial 113 finished with value: 0.13873183474192077 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 43, 'learning_rate': 0.0001376574288425577, 'p_miss': 0.2602424270222616}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:11:04,381] Trial 114 finished with value: 0.13313722209373688 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 59, 'learning_rate': 0.00014273916953853254, 'p_miss': 0.26100401922001154}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:12:07,180] Trial 115 finished with value: 0.12673164116874389 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 59, 'learning_rate': 0.0002163986196808288, 'p_miss': 0.26874135292816764}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:13:16,138] Trial 111 finished with value: 0.12354291404852744 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 340, 'learning_rate': 0.00010135811583855846, 'p_miss': 0.23236797939037937}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:14:21,940] Trial 118 finished with value: 0.13034569460822554 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 22, 'learning_rate': 0.00019434748368337424, 'p_miss': 0.2979729460826426}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:18:10,058] Trial 116 finished with value: 0.12562177360923332 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 126, 'learning_rate': 0.00022768122879180514, 'p_miss': 0.27395408987177505}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:20:26,927] Trial 117 finished with value: 0.13070369848954144 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 182, 'learning_rate': 0.00020312427146220908, 'p_miss': 0.24249271987667936}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:21:05,022] Trial 121 finished with value: 0.32705792424891655 and parameters: {'model_name': 'GAIN', 'batch_size': 75, 'hint_rate': 0.31346223619413255, 'alpha': 95, 'iterations': 24, 'learning_rate': 0.0002725291036563524, 'p_miss': 0.28507623260969006}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:23:09,742] Trial 120 finished with value: 0.16408981194691502 and parameters: {'model_name': 'VAE', 'batch_size': 81, 'iterations': 103, 'learning_rate': 0.0033685584443167663, 'p_miss': 0.08944405701066865}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:26:42,754] Trial 119 finished with value: 0.12352232536815273 and parameters: {'model_name': 'VAE', 'batch_size': 81, 'iterations': 184, 'learning_rate': 0.00026635268169542805, 'p_miss': 0.2847956088716954}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:27:07,664] Trial 122 finished with value: 0.11629846781547412 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 103, 'learning_rate': 0.00012494208248254362, 'p_miss': 0.0822949702392877}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:27:08,525] Trial 125 finished with value: 0.15355058662173202 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1845, 'weights': 'uniform'}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:28:29,736] Trial 124 finished with value: 0.13141220509594637 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 32, 'learning_rate': 0.0021433388979846045, 'p_miss': 0.07351402016220725}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:29:38,866] Trial 126 finished with value: 0.12963879856281096 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 47, 'learning_rate': 0.0001629416243138726, 'p_miss': 0.07413362933291469}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:30:20,832] Trial 34 finished with value: 0.1605701969816674 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 2341, 'learning_rate': 0.024877619368933585, 'p_miss': 0.10877769983392002}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:32:01,779] Trial 127 finished with value: 0.13132388387177646 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 66, 'learning_rate': 0.0001692110555979818, 'p_miss': 0.08915618003479368}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:33:40,996] Trial 129 finished with value: 0.13110758546031526 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 62, 'learning_rate': 0.0001217336201528049, 'p_miss': 0.2165142021060108}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:35:59,528] Trial 130 finished with value: 0.1223688623680341 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 92, 'learning_rate': 0.00011694139305602256, 'p_miss': 0.22212739659291147}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:37:17,069] Trial 123 finished with value: 0.16219804776974364 and parameters: {'model_name': 'VAE', 'batch_size': 135, 'iterations': 241, 'learning_rate': 0.0020900936036192244, 'p_miss': 0.07272034071754746}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:37:24,039] Trial 133 finished with value: 0.15339400946654697 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:38:19,848] Trial 134 finished with value: 0.12752413252812794 and parameters: {'model_name': 'VAE', 'batch_size': 40, 'iterations': 13, 'learning_rate': 0.005386838297687467, 'p_miss': 0.0591089202142948}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:41:35,907] Trial 131 finished with value: 0.1247913000332628 and parameters: {'model_name': 'VAE', 'batch_size': 124, 'iterations': 139, 'learning_rate': 0.00012278784063961184, 'p_miss': 0.29242993755230356}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:41:51,949] Trial 136 finished with value: 0.12103328672301972 and parameters: {'model_name': 'VAE', 'batch_size': 52, 'iterations': 4, 'learning_rate': 0.0005693716034759923, 'p_miss': 0.08482809142690313}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:42:31,474] Trial 128 finished with value: 0.12133323094703696 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 252, 'learning_rate': 0.00012270542875257993, 'p_miss': 0.09118386827051927}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:43:04,973] Trial 138 finished with value: 0.1294692325950611 and parameters: {'model_name': 'VAE', 'batch_size': 55, 'iterations': 8, 'learning_rate': 0.0006896839918323725, 'p_miss': 0.10312346256556452}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:43:23,029] Trial 139 finished with value: 0.12934442542596347 and parameters: {'model_name': 'VAE', 'batch_size': 47, 'iterations': 5, 'learning_rate': 0.0014203670794280378, 'p_miss': 0.17417296118499767}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:45:13,722] Trial 132 finished with value: 0.15445651781114408 and parameters: {'model_name': 'VAE', 'batch_size': 135, 'iterations': 144, 'learning_rate': 0.0014339627771205983, 'p_miss': 0.060118629843539474}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:45:25,166] Trial 141 finished with value: 0.12142932141111654 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 3, 'learning_rate': 0.0003183070655490188, 'p_miss': 0.18838090857520642}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:47:10,374] Trial 135 finished with value: 0.13144369074547818 and parameters: {'model_name': 'VAE', 'batch_size': 54, 'iterations': 139, 'learning_rate': 0.0001464667416452811, 'p_miss': 0.29611582335699704}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:47:18,345] Trial 137 finished with value: 0.12084059341826729 and parameters: {'model_name': 'VAE', 'batch_size': 55, 'iterations': 86, 'learning_rate': 0.0004558433674292461, 'p_miss': 0.1699202044964678}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:48:17,541] Trial 140 finished with value: 0.11794708662010618 and parameters: {'model_name': 'VAE', 'batch_size': 59, 'iterations': 77, 'learning_rate': 0.00042034936058690597, 'p_miss': 0.13613279926498234}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:48:22,861] Trial 24 finished with value: 0.35770987246080843 and parameters: {'model_name': 'GAIN', 'batch_size': 27, 'hint_rate': 0.15118398927317087, 'alpha': 30, 'iterations': 6439, 'learning_rate': 0.00980308704631596, 'p_miss': 0.07072554827274966}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:48:27,138] Trial 142 finished with value: 0.12153052712675612 and parameters: {'model_name': 'VAE', 'batch_size': 67, 'iterations': 48, 'learning_rate': 0.00044957712115513236, 'p_miss': 0.13117762260956153}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:48:41,573] Trial 33 finished with value: 0.15265479435001245 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3468, 'learning_rate': 0.0002467591777400133, 'p_miss': 0.10556359617400077}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:49:22,988] Trial 145 finished with value: 0.35004159274879215 and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.7016801833958273, 'alpha': 30, 'iterations': 39, 'learning_rate': 0.0002758679234451947, 'p_miss': 0.13509603067475026}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:49:34,089] Trial 144 finished with value: 0.3407740627055892 and parameters: {'model_name': 'GAIN', 'batch_size': 65, 'hint_rate': 0.986064642832893, 'alpha': 27, 'iterations': 84, 'learning_rate': 0.0004272148460376912, 'p_miss': 0.16969349822991156}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:52:57,003] Trial 146 finished with value: 0.11928267397251194 and parameters: {'model_name': 'VAE', 'batch_size': 95, 'iterations': 81, 'learning_rate': 0.0004238426991684981, 'p_miss': 0.12992526045872302}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:53:12,082] Trial 147 finished with value: 0.12123661923730251 and parameters: {'model_name': 'VAE', 'batch_size': 101, 'iterations': 74, 'learning_rate': 0.0003715305011994378, 'p_miss': 0.15069924244840097}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:53:46,776] Trial 150 finished with value: 0.12534310557695547 and parameters: {'model_name': 'VAE', 'batch_size': 98, 'iterations': 75, 'learning_rate': 0.0008499432816929112, 'p_miss': 0.15478478304368012}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:54:29,057] Trial 152 finished with value: 0.13432207768158091 and parameters: {'model_name': 'VAE', 'batch_size': 86, 'iterations': 24, 'learning_rate': 0.0028699574207786947, 'p_miss': 0.12278049656212009}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:54:47,733] Trial 148 finished with value: 0.1223067971279149 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 102, 'learning_rate': 0.0003746254569053608, 'p_miss': 0.16906579601289262}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:54:48,481] Trial 155 finished with value: 0.23661869265065555 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:55:07,796] Trial 149 finished with value: 0.135353771377668 and parameters: {'model_name': 'VAE', 'batch_size': 98, 'iterations': 76, 'learning_rate': 0.0003939993047502953, 'p_miss': 0.1507655383687733}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 19:57:02,402] Trial 151 finished with value: 0.16169897031398073 and parameters: {'model_name': 'VAE', 'batch_size': 98, 'iterations': 72, 'learning_rate': 0.0037655666960229703, 'p_miss': 0.15009599635355597}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:00:09,847] Trial 154 finished with value: 0.1420913537955772 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 91, 'learning_rate': 0.0041011727703833, 'p_miss': 0.1142879865256878}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:01:16,526] Trial 153 finished with value: 0.13819679541683333 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 111, 'learning_rate': 0.002975185026986918, 'p_miss': 0.12509681216847676}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:01:56,443] Trial 157 finished with value: 0.12975221999182165 and parameters: {'model_name': 'VAE', 'batch_size': 40, 'iterations': 116, 'learning_rate': 0.0006047923433526451, 'p_miss': 0.1455719210639826}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:02:33,430] Trial 156 finished with value: 0.12419706484070722 and parameters: {'model_name': 'VAE', 'batch_size': 42, 'iterations': 121, 'learning_rate': 0.000478092422639867, 'p_miss': 0.18699449564278706}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:03:21,255] Trial 158 finished with value: 0.12442198333337537 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 111, 'learning_rate': 0.0004927193029821623, 'p_miss': 0.18719796533425473}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:05:20,571] Trial 161 finished with value: 0.12350303838388761 and parameters: {'model_name': 'VAE', 'batch_size': 71, 'iterations': 59, 'learning_rate': 0.0005087145313659568, 'p_miss': 0.14085668553252742}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:05:31,809] Trial 164 finished with value: 0.15774869857997606 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:06:32,950] Trial 163 finished with value: 0.12078641773978402 and parameters: {'model_name': 'VAE', 'batch_size': 58, 'iterations': 52, 'learning_rate': 0.00015112215897703367, 'p_miss': 0.13759346048345672}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:06:50,039] Trial 160 finished with value: 0.12580850161575738 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 121, 'learning_rate': 0.0005044156610162216, 'p_miss': 0.14294670310918067}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:07:00,716] Trial 159 finished with value: 0.12562283768691576 and parameters: {'model_name': 'VAE', 'batch_size': 42, 'iterations': 121, 'learning_rate': 0.00031593149046449354, 'p_miss': 0.1408742956486613}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:08:19,734] Trial 165 finished with value: 0.1570414277752608 and parameters: {'model_name': 'VAE', 'batch_size': 58, 'iterations': 50, 'learning_rate': 0.004668639344494844, 'p_miss': 0.1592755605133443}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:09:34,993] Trial 167 finished with value: 0.11994690139492226 and parameters: {'model_name': 'VAE', 'batch_size': 58, 'iterations': 54, 'learning_rate': 0.0001512417877736802, 'p_miss': 0.07877820796923359}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:09:49,683] Trial 168 finished with value: 0.12216664679658895 and parameters: {'model_name': 'VAE', 'batch_size': 57, 'iterations': 49, 'learning_rate': 0.00014900630512915927, 'p_miss': 0.08157520432428605}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:10:02,813] Trial 166 finished with value: 0.12689419399224036 and parameters: {'model_name': 'VAE', 'batch_size': 60, 'iterations': 53, 'learning_rate': 0.00015486660661863174, 'p_miss': 0.08097495754147077}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:10:58,098] Trial 169 finished with value: 0.11996024981141422 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 39, 'learning_rate': 0.00015696069527415077, 'p_miss': 0.07963878975965492}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:11:47,821] Trial 171 finished with value: 0.13175376775789532 and parameters: {'model_name': 'VAE', 'batch_size': 33, 'iterations': 36, 'learning_rate': 0.0001857333899141394, 'p_miss': 0.03947412343029891}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:11:54,007] Trial 172 finished with value: 0.1282320333972428 and parameters: {'model_name': 'VAE', 'batch_size': 33, 'iterations': 33, 'learning_rate': 0.00020686069836859148, 'p_miss': 0.03552847620239245}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:12:03,166] Trial 170 finished with value: 0.12801191589349836 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 38, 'learning_rate': 0.00019123295538143708, 'p_miss': 0.08208689983780819}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:12:51,998] Trial 176 finished with value: 0.11677965607816627 and parameters: {'model_name': 'VAE', 'batch_size': 74, 'iterations': 16, 'learning_rate': 0.00011164441540667823, 'p_miss': 0.07011283186509766}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:12:59,336] Trial 173 finished with value: 0.1368266461617599 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 30, 'learning_rate': 0.00018699782715995473, 'p_miss': 0.09371139058124363}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:13:06,525] Trial 175 finished with value: 0.12340826866455727 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 18, 'learning_rate': 0.00010064773166520125, 'p_miss': 0.09449821097643439}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:13:35,014] Trial 174 finished with value: 0.11952201388604908 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 30, 'learning_rate': 0.00023405903969424285, 'p_miss': 0.09275023365864488}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:13:53,892] Trial 179 finished with value: 0.13338754211391776 and parameters: {'model_name': 'VAE', 'batch_size': 77, 'iterations': 12, 'learning_rate': 0.00011789912413855178, 'p_miss': 0.07064318948285313}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:13:55,479] Trial 177 finished with value: 0.11914938471964116 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 19, 'learning_rate': 0.00011098210904786316, 'p_miss': 0.06654802290526321}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:14:07,212] Trial 178 finished with value: 0.12645191878472672 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 17, 'learning_rate': 0.00010189386777084671, 'p_miss': 0.05359843743632256}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:14:14,253] Trial 162 finished with value: 0.11781638384282034 and parameters: {'model_name': 'VAE', 'batch_size': 72, 'iterations': 196, 'learning_rate': 0.0001495483123906318, 'p_miss': 0.15830180004765398}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:14:19,265] Trial 180 finished with value: 0.13239621828058365 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 14, 'learning_rate': 0.00010988804652119207, 'p_miss': 0.10292734931594615}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:14:48,238] Trial 181 finished with value: 0.12882622599761948 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 14, 'learning_rate': 0.00024622783379470544, 'p_miss': 0.06456632261415042}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:15:36,417] Trial 183 finished with value: 0.12708293135257703 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 22, 'learning_rate': 0.000239139762752028, 'p_miss': 0.10550333809377843}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:16:03,652] Trial 182 finished with value: 0.11830572160052429 and parameters: {'model_name': 'VAE', 'batch_size': 214, 'iterations': 27, 'learning_rate': 0.0001071320673986579, 'p_miss': 0.06518074849858077}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:16:03,971] Trial 184 finished with value: 0.1532620217141536 and parameters: {'model_name': 'VAE', 'batch_size': 184, 'iterations': 26, 'learning_rate': 0.006234632480930462, 'p_miss': 0.0672870990075696}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:16:06,378] Trial 186 finished with value: 0.11678565941059518 and parameters: {'model_name': 'VAE', 'batch_size': 70, 'iterations': 23, 'learning_rate': 0.00013139957532159774, 'p_miss': 0.0871845126973808}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:17:17,173] Trial 190 finished with value: 0.12099704338517647 and parameters: {'model_name': 'VAE', 'batch_size': 223, 'iterations': 20, 'learning_rate': 0.00012580811146866198, 'p_miss': 0.28765049697727096}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:17:17,720] Trial 187 finished with value: 0.12368448579954032 and parameters: {'model_name': 'VAE', 'batch_size': 72, 'iterations': 26, 'learning_rate': 0.00012919522876202403, 'p_miss': 0.08862242949781704}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:17:18,529] Trial 191 finished with value: 0.16466350371789024 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1193, 'weights': 'distance'}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:17:19,099] Trial 192 finished with value: 0.1646098943768479 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1092, 'weights': 'distance'}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:17:26,416] Trial 189 finished with value: 0.12275215286214491 and parameters: {'model_name': 'VAE', 'batch_size': 362, 'iterations': 20, 'learning_rate': 0.00013236999257174183, 'p_miss': 0.2891858296693647}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:17:59,928] Trial 188 finished with value: 0.13330363926031707 and parameters: {'model_name': 'VAE', 'batch_size': 216, 'iterations': 27, 'learning_rate': 0.00013041913767780188, 'p_miss': 0.2533652830826148}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:20:12,260] Trial 32 finished with value: 0.1819984229106148 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3633, 'learning_rate': 0.0001791924175384407, 'p_miss': 0.28582706081154574}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:26:46,785] Trial 196 finished with value: 0.11725604709153392 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 169, 'learning_rate': 0.00011114299259165446, 'p_miss': 0.2754006310829356}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:28:47,476] Trial 193 finished with value: 0.12356639941155874 and parameters: {'model_name': 'VAE', 'batch_size': 454, 'iterations': 161, 'learning_rate': 0.00013610104047095787, 'p_miss': 0.28056301816298945}. Best is trial 110 with value: 0.11561360243078585.
running
[I 2024-10-30 20:29:28,911] Trial 185 finished with value: 0.13370559521789524 and parameters: {'model_name': 'VAE', 'batch_size': 879, 'iterations': 208, 'learning_rate': 0.0001288178053888824, 'p_miss': 0.25041793618500297}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 20:31:49,283] Trial 43 finished with value: 0.152399320915948 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 3873, 'learning_rate': 0.09506735242879037, 'p_miss': 0.11583585366830873}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 20:35:03,785] Trial 195 finished with value: 0.12114086502664345 and parameters: {'model_name': 'VAE', 'batch_size': 624, 'iterations': 227, 'learning_rate': 0.00011222056806203523, 'p_miss': 0.24781730937502233}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 20:35:33,379] Trial 194 finished with value: 0.11929165481479076 and parameters: {'model_name': 'VAE', 'batch_size': 499, 'iterations': 229, 'learning_rate': 0.00011976067370033043, 'p_miss': 0.2404003480181833}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 20:37:06,356] Trial 197 finished with value: 0.12727245671380755 and parameters: {'model_name': 'VAE', 'batch_size': 448, 'iterations': 216, 'learning_rate': 0.00011222333274836571, 'p_miss': 0.2808716230320579}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 20:37:53,469] Trial 198 finished with value: 0.12748061024576546 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 213, 'learning_rate': 0.00011385263660512923, 'p_miss': 0.28126887984459814}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 20:40:23,175] Trial 199 finished with value: 0.11931069619187448 and parameters: {'model_name': 'VAE', 'batch_size': 83, 'iterations': 257, 'learning_rate': 0.00011144301744118035, 'p_miss': 0.2592908482122953}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 20:59:29,352] Trial 38 finished with value: 0.15843127616765754 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 3799, 'learning_rate': 0.00023583326395987185, 'p_miss': 0.014793882150710515}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 21:00:19,858] Trial 36 finished with value: 0.15126545241609984 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 5530, 'learning_rate': 0.09755614619547433, 'p_miss': 0.012395242294985065}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 21:16:24,081] Trial 53 finished with value: 0.15395953189293682 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 6258, 'learning_rate': 0.0031463607600416056, 'p_miss': 0.13134496378092436}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 21:17:37,168] Trial 37 finished with value: 0.15592829033084865 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 6377, 'learning_rate': 0.07710330420350209, 'p_miss': 0.01176695483112164}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 21:24:13,546] Trial 28 finished with value: 0.15182406242740937 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 8209, 'learning_rate': 0.00033136982723217916, 'p_miss': 0.1982148907485287}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 21:28:25,771] Trial 50 finished with value: 0.16248989755194676 and parameters: {'model_name': 'VAE', 'batch_size': 105, 'iterations': 9520, 'learning_rate': 0.0025042691243772107, 'p_miss': 0.10774618602478113}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 21:28:38,949] Trial 44 finished with value: 0.16321693439633878 and parameters: {'model_name': 'VAE', 'batch_size': 105, 'iterations': 9026, 'learning_rate': 0.0005418442419965079, 'p_miss': 0.28853173478382205}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 21:28:51,777] Trial 99 finished with value: 0.15253236507748932 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 7831, 'learning_rate': 0.00034001899667561713, 'p_miss': 0.087868044017248}. Best is trial 110 with value: 0.11561360243078585.
[I 2024-10-30 21:30:32,673] Trial 143 finished with value: 0.15192058113083554 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7815, 'learning_rate': 0.0028328841883191623, 'p_miss': 0.12459758546682304}. Best is trial 110 with value: 0.11561360243078585.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.11561360243078585
{'model_name': 'VAE', 'batch_size': 3, 'iterations': 53, 'learning_rate': 0.00021095258572703467, 'p_miss': 0.2260835736223216}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4ac0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554748ccb50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a1330> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f44f0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.5093880340863353
Generation:   4%|▍         | 1/25 [00:03<01:17,  3.22s/it]Generation:  2
Best f1_score score: 0.5122788798158575
Generation:   8%|▊         | 2/25 [00:11<02:15,  5.91s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467b75330> 
 Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 317, in fit
    self.coef_, self.intercept_, n_iter_ = _fit_liblinear(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1214, in _fit_liblinear
    solver_type = _get_liblinear_solver_type(multi_class, penalty, loss, dual)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1046, in _get_liblinear_solver_type
    raise ValueError(
ValueError: Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True

Generation:  3
Best f1_score score: 0.5122788798158575
Generation:  12%|█▏        | 3/25 [00:19<02:35,  7.06s/it]Generation:  4
Best f1_score score: 0.5150870276922832
Generation:  16%|█▌        | 4/25 [00:31<03:11,  9.13s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747302b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  5
Best f1_score score: 0.5166401505456392
Generation:  20%|██        | 5/25 [00:42<03:13,  9.69s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467bf3a00> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  6
Best f1_score score: 0.5166401505456392
Generation:  24%|██▍       | 6/25 [00:58<03:43, 11.78s/it]Generation:  7
Best f1_score score: 0.51688592211231
Generation:  28%|██▊       | 7/25 [01:18<04:19, 14.43s/it]Generation:  8
Best f1_score score: 0.51688592211231
Generation:  32%|███▏      | 8/25 [01:59<06:28, 22.87s/it]Generation:  9
Best f1_score score: 0.51688592211231
Generation:  36%|███▌      | 9/25 [02:21<06:04, 22.80s/it]Generation:  10
Best f1_score score: 0.51688592211231
Generation:  40%|████      | 10/25 [03:25<08:53, 35.60s/it]Generation:  11
Best f1_score score: 0.51688592211231
Generation:  44%|████▍     | 11/25 [05:08<13:06, 56.15s/it]Generation:  12
Best f1_score score: 0.5182229787604206
Generation:  48%|████▊     | 12/25 [05:34<10:11, 47.05s/it]Generation:  13
Best f1_score score: 0.5197652340157555
Generation:  52%|█████▏    | 13/25 [07:03<11:55, 59.62s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465918910> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.5221127340565004
Generation:  56%|█████▌    | 14/25 [07:24<08:46, 47.84s/it]Generation:  15
Best f1_score score: 0.5221127340565004
Generation:  60%|██████    | 15/25 [07:58<07:19, 43.90s/it]Generation:  16
Best f1_score score: 0.5221127340565004
Generation:  64%|██████▍   | 16/25 [08:17<05:25, 36.19s/it]Generation:  17
Best f1_score score: 0.5221127340565004
Generation:  68%|██████▊   | 17/25 [08:36<04:08, 31.02s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554652c0a00> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  18
Best f1_score score: 0.5221127340565004
Generation:  72%|███████▏  | 18/25 [09:15<03:54, 33.56s/it]Generation:  19
Best f1_score score: 0.5232095216685956
Generation:  76%|███████▌  | 19/25 [09:35<02:55, 29.31s/it]Generation:  20
Best f1_score score: 0.5232095216685956
Generation:  80%|████████  | 20/25 [09:49<02:04, 24.87s/it]Generation:  21
Best f1_score score: 0.5232095216685956
Generation:  84%|████████▍ | 21/25 [10:08<01:32, 23.02s/it]Generation:  22
Best f1_score score: 0.5232095216685956
Generation:  88%|████████▊ | 22/25 [10:54<01:29, 29.99s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554653dd450> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  23
Best f1_score score: 0.5232095216685956
Generation:  92%|█████████▏| 23/25 [11:59<01:20, 40.41s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554652c2830> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547493c520> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.5232095216685956
Generation:  96%|█████████▌| 24/25 [12:15<00:33, 33.16s/it]Generation:  25
Best f1_score score: 0.5232095216685956
Generation: 100%|██████████| 25/25 [12:36<00:00, 29.46s/it]Generation: 100%|██████████| 25/25 [12:40<00:00, 30.40s/it]
2024-10-30 21:43:24,443 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42305' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-2c00092ba1cd743626b416db9c976854', 'ndarray-6e31bec1f9a56792b7253d87f30ac3fc'} (stimulus_id='handle-worker-cleanup-1730349804.4436517')
Fitted
Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_jobs=1, n_neighbors=17,
                                      weights='distance'))])
score start
train score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 2.2204460492503136e-16, 'f1': 1.0}
original test score: {'auroc': 0.4913948389273065, 'accuracy': 0.5077922077922078, 'balanced_accuracy': 0.5077922077922078, 'logloss': 0.7373256235531007, 'f1': 0.46783155445412755}
imputed test score: {'auroc': 0.5353955135773317, 'accuracy': 0.5194805194805194, 'balanced_accuracy': 0.5194805194805194, 'logloss': 0.713119394148735, 'f1': 0.5193637854361659}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0dc0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.5177064007282196
Generation:   4%|▍         | 1/25 [05:30<2:12:15, 330.66s/it]Generation:  2
Best f1_score score: 0.5177064007282196
Generation:   8%|▊         | 2/25 [11:01<2:06:41, 330.48s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d35db0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  3
Best f1_score score: 0.5193643957976475
Generation:  12%|█▏        | 3/25 [13:23<1:29:44, 244.74s/it]Generation:  4
Best f1_score score: 0.5193643957976475
Generation:  16%|█▌        | 4/25 [15:46<1:11:38, 204.67s/it]Generation:  5
Best f1_score score: 0.5193643957976475
Generation:  20%|██        | 5/25 [18:10<1:00:55, 182.80s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745e7e20> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  6
Best f1_score score: 0.5228316516813558
Generation:  24%|██▍       | 6/25 [20:07<50:45, 160.28s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545724b6d0> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.5228316516813558
Generation:  28%|██▊       | 7/25 [24:32<58:19, 194.39s/it]Generation:  8
Best f1_score score: 0.5228316516813558
Generation:  32%|███▏      | 8/25 [26:56<50:31, 178.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454e8aad0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  9
Best f1_score score: 0.5228316516813558
Generation:  36%|███▌      | 9/25 [28:37<41:07, 154.24s/it]Generation:  10
Best f1_score score: 0.5228316516813558
Generation:  40%|████      | 10/25 [31:01<37:48, 151.23s/it]Generation:  11
Best f1_score score: 0.5228316516813558
Generation:  44%|████▍     | 11/25 [32:43<31:44, 136.03s/it]Generation:  12
Best f1_score score: 0.5228316516813558
Generation:  48%|████▊     | 12/25 [32:56<21:22, 98.62s/it] Generation:  13
Best f1_score score: 0.5228316516813558
Generation:  52%|█████▏    | 13/25 [35:22<22:34, 112.89s/it]Generation:  14
Best f1_score score: 0.5228316516813558
Generation:  56%|█████▌    | 14/25 [35:41<15:32, 84.73s/it] Generation:  15
Best f1_score score: 0.5228316516813558
Generation:  60%|██████    | 15/25 [38:06<17:07, 102.79s/it]Generation:  16
Best f1_score score: 0.5228316516813558
Generation:  64%|██████▍   | 16/25 [39:47<15:19, 102.17s/it]Generation:  17
Best f1_score score: 0.5228316516813558
Generation:  68%|██████▊   | 17/25 [39:59<10:00, 75.02s/it] Generation:  18
Best f1_score score: 0.5228316516813558
Generation:  72%|███████▏  | 18/25 [44:27<15:32, 133.16s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545758a8f0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.5228316516813558
Generation:  76%|███████▌  | 19/25 [48:14<16:07, 161.30s/it]Generation:  20
Best f1_score score: 0.52443315796062
Generation:  80%|████████  | 20/25 [50:40<13:03, 156.67s/it]Generation:  21
Best f1_score score: 0.52443315796062
Generation:  84%|████████▍ | 21/25 [53:02<10:08, 152.20s/it]Generation:  22
Best f1_score score: 0.5443022542631568
Generation:  88%|████████▊ | 22/25 [54:19<06:29, 129.82s/it]Generation:  23
Best f1_score score: 0.5443022542631568
Generation:  92%|█████████▏| 23/25 [54:29<03:07, 93.73s/it] Generation:  24
Best f1_score score: 0.5443022542631568
Generation:  96%|█████████▌| 24/25 [54:39<01:08, 68.74s/it]Generation:  25
Best f1_score score: 0.5443022542631568
Generation: 100%|██████████| 25/25 [55:29<00:00, 62.96s/it]Generation: 100%|██████████| 25/25 [55:29<00:00, 133.17s/it]
2024-10-30 22:39:04,675 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37169' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-2c00092ba1cd743626b416db9c976854', 'DataFrame-989db950d6233989fc7563871aa70030'} (stimulus_id='handle-worker-cleanup-1730353144.6749692')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='constant')),
                ('baggingclassifier',
                 BaggingClassifier(max_features=0.8051363374548,
                                   max_samples=0.5860510328627, n_estimators=5,
                                   n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9103565051777036, 'accuracy': 0.8486029889538661, 'balanced_accuracy': 0.8486029889538662, 'logloss': 0.5226582470637942, 'f1': 0.8485921856210563}
test score: {'auroc': 0.5086658795749706, 'accuracy': 0.5064935064935064, 'balanced_accuracy': 0.5064935064935064, 'logloss': 2.1692697817315723, 'f1': 0.5063303099017384}
original test score: {'auroc': 0.5101264968797435, 'accuracy': 0.525974025974026, 'balanced_accuracy': 0.525974025974026, 'logloss': 2.753825183861862, 'f1': 0.5258772662324407}
score end
871
lvl
0.3
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
5.728402434256342
hours
DONE
