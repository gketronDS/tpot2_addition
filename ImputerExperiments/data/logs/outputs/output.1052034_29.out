Run: 29
/cm/local/apps/slurm/var/spool/job1052034/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/4135/4135.pkl
working on 
../data/c/4135/class_full_MAR_0.01_2
4.867328643798828
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-16 05:08:55,700] A new study created in memory with name: no-name-f3c73cb4-d0ce-4d18-a896-b983e4fe00fd
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-16 05:08:56,193] Trial 7 finished with value: 0.7567113370054181 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.7567113370054181.
running
[I 2024-11-16 05:08:56,822] Trial 13 finished with value: 0.31532838542243663 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 13 with value: 0.31532838542243663.
running
[I 2024-11-16 05:08:57,004] Trial 2 finished with value: 0.438696087832284 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 13 with value: 0.31532838542243663.
running
[I 2024-11-16 05:08:57,302] Trial 6 finished with value: 0.438696087832284 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 13 with value: 0.31532838542243663.
running
[I 2024-11-16 05:08:57,593] Trial 16 finished with value: 0.438696087832284 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 13 with value: 0.31532838542243663.
running
[I 2024-11-16 05:09:09,217] Trial 1 finished with value: 0.31532838542243663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 24511, 'weights': 'uniform'}. Best is trial 13 with value: 0.31532838542243663.
running
[I 2024-11-16 05:09:10,565] Trial 15 finished with value: 0.30735474393231493 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 15857, 'weights': 'uniform'}. Best is trial 15 with value: 0.30735474393231493.
running
[I 2024-11-16 05:09:11,442] Trial 4 finished with value: 0.3087247970553665 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16597, 'weights': 'uniform'}. Best is trial 15 with value: 0.30735474393231493.
running
[I 2024-11-16 05:09:14,209] Trial 12 finished with value: 0.24266190006887906 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21061, 'weights': 'distance'}. Best is trial 12 with value: 0.24266190006887906.
running
[I 2024-11-16 05:09:15,076] Trial 19 finished with value: 0.6832410925792781 and parameters: {'model_name': 'GAIN', 'batch_size': 298, 'hint_rate': 0.13189720387435572, 'alpha': 8, 'iterations': 1, 'learning_rate': 0.0162933921739089, 'p_miss': 0.10741874329746767}. Best is trial 12 with value: 0.24266190006887906.
running
[I 2024-11-16 05:09:15,922] Trial 24 finished with value: 0.3241487781379362 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 12 with value: 0.24266190006887906.
running
[I 2024-11-16 05:09:23,943] Trial 17 finished with value: 0.6438713552696884 and parameters: {'model_name': 'GAIN', 'batch_size': 54, 'hint_rate': 0.6391461564799116, 'alpha': 49, 'iterations': 5, 'learning_rate': 0.009150739987279086, 'p_miss': 0.26507775454006677}. Best is trial 12 with value: 0.24266190006887906.
running
[I 2024-11-16 05:09:35,662] Trial 3 finished with value: 0.6863101763429048 and parameters: {'model_name': 'GAIN', 'batch_size': 339, 'hint_rate': 0.7096681623709237, 'alpha': 67, 'iterations': 9, 'learning_rate': 0.010593674406277074, 'p_miss': 0.10213512030502803}. Best is trial 12 with value: 0.24266190006887906.
running
[I 2024-11-16 05:09:44,023] Trial 27 finished with value: 0.2390916493428886 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 14327, 'weights': 'distance'}. Best is trial 27 with value: 0.2390916493428886.
running
[I 2024-11-16 05:09:45,455] Trial 10 finished with value: 0.2107122286098945 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 10 with value: 0.2107122286098945.
running
[I 2024-11-16 05:09:56,995] Trial 28 finished with value: 0.23974520048374784 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 15268, 'weights': 'distance'}. Best is trial 10 with value: 0.2107122286098945.
running
[I 2024-11-16 05:09:57,487] Trial 20 finished with value: 0.21570334597972077 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 10 with value: 0.2107122286098945.
running
[I 2024-11-16 05:10:03,691] Trial 26 finished with value: 0.2742210641701958 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 10 with value: 0.2107122286098945.
running
[I 2024-11-16 05:10:19,858] Trial 25 finished with value: 0.2093017257648066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:10:49,568] Trial 29 finished with value: 0.27450770023540805 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:10:50,417] Trial 30 finished with value: 0.2107122286098945 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:10:52,008] Trial 34 finished with value: 0.27272512003527105 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:11:03,283] Trial 31 finished with value: 0.2107122286098945 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:11:08,757] Trial 32 finished with value: 0.2110672890239745 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:11:15,124] Trial 33 finished with value: 0.21607715997034216 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:11:40,426] Trial 36 finished with value: 0.2093017257648066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:13:02,330] Trial 21 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.15317800541467388, 'alpha': 69, 'iterations': 825, 'learning_rate': 0.004441038556273307, 'p_miss': 0.026885134014772404}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:29:12,865] Trial 14 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5835499319822882, 'alpha': 11, 'iterations': 4071, 'learning_rate': 0.004032909413759615, 'p_miss': 0.1788098147265634}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:38:31,790] Trial 11 finished with value: 0.3359112331472793 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 524, 'learning_rate': 0.073442441904625, 'p_miss': 0.29288083609240684}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:41:59,270] Trial 43 finished with value: 0.39996073081517103 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 233, 'learning_rate': 0.00020814183149302015, 'p_miss': 0.27108379967899254}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:42:50,210] Trial 44 finished with value: 0.4077389045643313 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 80, 'learning_rate': 0.00012453417134935784, 'p_miss': 0.20483007104910456}. Best is trial 25 with value: 0.2093017257648066.
running
[I 2024-11-16 05:48:43,599] Trial 8 finished with value: 0.19369238441472536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 8 with value: 0.19369238441472536.
running
[I 2024-11-16 05:57:15,512] Trial 18 finished with value: 0.19111452831175796 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 18 with value: 0.19111452831175796.
running
[I 2024-11-16 06:19:20,637] Trial 46 finished with value: 0.19840589690569482 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 18 with value: 0.19111452831175796.
running
[I 2024-11-16 06:20:47,925] Trial 23 finished with value: 0.657479981801663 and parameters: {'model_name': 'GAIN', 'batch_size': 22, 'hint_rate': 0.9862129896069145, 'alpha': 68, 'iterations': 2776, 'learning_rate': 0.03790540802906293, 'p_miss': 0.1854964102824412}. Best is trial 18 with value: 0.19111452831175796.
running
[I 2024-11-16 06:27:12,747] Trial 5 finished with value: 0.32774015367191395 and parameters: {'model_name': 'VAE', 'batch_size': 46, 'iterations': 1310, 'learning_rate': 0.006602932564768474, 'p_miss': 0.2828410155007058}. Best is trial 18 with value: 0.19111452831175796.
running
[I 2024-11-16 06:28:23,748] Trial 45 finished with value: 0.19117692975594444 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 18 with value: 0.19111452831175796.
running
[I 2024-11-16 06:35:01,206] Trial 47 finished with value: 0.19127295429739438 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 18 with value: 0.19111452831175796.
running
[I 2024-11-16 06:43:01,427] Trial 48 finished with value: 0.1897543443427606 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 48 with value: 0.1897543443427606.
running
[I 2024-11-16 07:04:41,411] Trial 49 finished with value: 0.19064845653234594 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 48 with value: 0.1897543443427606.
running
[I 2024-11-16 07:07:04,051] Trial 50 finished with value: 0.1902497444526418 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 48 with value: 0.1897543443427606.
running
[I 2024-11-16 07:13:19,311] Trial 51 finished with value: 0.18972503077807712 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 07:13:51,365] Trial 52 finished with value: 0.19074534807756385 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 07:21:15,300] Trial 53 finished with value: 0.19025943105678783 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 07:28:47,717] Trial 54 finished with value: 0.19033536820550068 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 07:46:41,979] Trial 0 finished with value: 0.37452529469929136 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 3219, 'learning_rate': 0.02306279160749881, 'p_miss': 0.10436161559404972}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 07:50:53,627] Trial 55 finished with value: 0.1897652003580926 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 07:53:44,996] Trial 56 finished with value: 0.19068209743078648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 07:58:50,860] Trial 57 finished with value: 0.19055415149851865 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:00:09,914] Trial 64 finished with value: 0.39904765434066886 and parameters: {'model_name': 'VAE', 'batch_size': 557, 'iterations': 11, 'learning_rate': 0.0009520278444845131, 'p_miss': 0.02862368601044457}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:00:22,077] Trial 58 finished with value: 0.19054417214828864 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:06:40,602] Trial 22 finished with value: 0.3204921644061027 and parameters: {'model_name': 'VAE', 'batch_size': 842, 'iterations': 2206, 'learning_rate': 0.028743392676311607, 'p_miss': 0.11944778893505566}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:07:38,861] Trial 59 finished with value: 0.18988923939461366 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:14:14,863] Trial 60 finished with value: 0.1904722910341475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:15:41,291] Trial 69 finished with value: 0.38620959119300496 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:15:55,342] Trial 70 finished with value: 0.27084843116918533 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:15:55,843] Trial 71 finished with value: 0.7567113370054181 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:28:02,515] Trial 61 finished with value: 0.19006079712784524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:35:57,728] Trial 62 finished with value: 0.18980852875498477 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:36:08,991] Trial 74 finished with value: 0.22819737682420999 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 914, 'weights': 'distance'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:37:37,546] Trial 63 finished with value: 0.18986073670395429 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:39:52,706] Trial 65 finished with value: 0.18985122410606575 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:43:44,501] Trial 9 finished with value: 0.32146820264406617 and parameters: {'model_name': 'VAE', 'batch_size': 131, 'iterations': 4649, 'learning_rate': 0.016267123396078616, 'p_miss': 0.15440020858531775}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:45:14,748] Trial 66 finished with value: 0.1905834183840157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:48:03,716] Trial 67 finished with value: 0.18991393842934381 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:48:10,246] Trial 80 finished with value: 0.6590174416318452 and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.3209587234646779, 'alpha': 99, 'iterations': 1, 'learning_rate': 0.000998993738901871, 'p_miss': 0.23359128174549923}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:48:11,356] Trial 81 finished with value: 0.3241487781379362 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:49:37,350] Trial 68 finished with value: 0.19095974458527365 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 08:58:01,275] Trial 72 finished with value: 0.19019294127652223 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 09:07:54,327] Trial 73 finished with value: 0.19044788890863398 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 09:08:04,670] Trial 85 finished with value: 0.2827375455737841 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3582, 'weights': 'uniform'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 09:14:50,640] Trial 77 finished with value: 0.18990652396715896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 09:15:22,620] Trial 75 finished with value: 0.1917945707972375 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.18972503077807712.
running
[I 2024-11-16 09:20:41,601] Trial 76 finished with value: 0.1896097548098919 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:21:13,792] Trial 78 finished with value: 0.19009272139844396 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:22:02,758] Trial 89 finished with value: 0.27122217220957306 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:24:56,768] Trial 82 finished with value: 0.1897228022841811 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:25:06,028] Trial 79 finished with value: 0.18978864475703344 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:25:48,190] Trial 92 finished with value: 0.6922340382207873 and parameters: {'model_name': 'GAIN', 'batch_size': 99, 'hint_rate': 0.9143781432955442, 'alpha': 34, 'iterations': 36, 'learning_rate': 0.0012635812478400052, 'p_miss': 0.06158210295387137}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:26:10,540] Trial 93 finished with value: 0.6900734368062587 and parameters: {'model_name': 'GAIN', 'batch_size': 17, 'hint_rate': 0.9450430064796063, 'alpha': 27, 'iterations': 48, 'learning_rate': 0.0014201224487366132, 'p_miss': 0.06161515422437336}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:26:24,423] Trial 94 finished with value: 0.2721592775342631 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:26:48,128] Trial 95 finished with value: 0.2741990800224823 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:27:40,746] Trial 83 finished with value: 0.1905197378822131 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:38:55,962] Trial 84 finished with value: 0.1897064774582461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:43:00,686] Trial 91 finished with value: 0.2481204190429657 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:46:44,401] Trial 86 finished with value: 0.1897673284996366 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:46:45,414] Trial 101 finished with value: 0.31532838542243663 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:53:16,686] Trial 87 finished with value: 0.18961204577040883 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:54:51,977] Trial 39 finished with value: 0.38976514422128683 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5599, 'learning_rate': 0.00012259828003035258, 'p_miss': 0.013314021683245109}. Best is trial 76 with value: 0.1896097548098919.
running
[I 2024-11-16 09:55:58,419] Trial 88 finished with value: 0.18924139151995428 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 09:57:30,307] Trial 105 finished with value: 0.3922499704437871 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:02:09,391] Trial 90 finished with value: 0.18932160168527862 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:07:29,307] Trial 96 finished with value: 0.19026915697342422 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:08:24,898] Trial 97 finished with value: 0.19050413971860677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:11:03,564] Trial 98 finished with value: 0.19054702468587675 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:16:38,349] Trial 99 finished with value: 0.1911125062402847 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:16:49,909] Trial 111 finished with value: 0.28945807696413983 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7064, 'weights': 'uniform'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:18:37,841] Trial 41 finished with value: 0.409974002735635 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6497, 'learning_rate': 0.00010588721983965394, 'p_miss': 0.01707349657055804}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:22:12,473] Trial 38 finished with value: 0.394640204315023 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6256, 'learning_rate': 0.00019511359414474703, 'p_miss': 0.01917847533559003}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:23:47,595] Trial 100 finished with value: 0.1905762152696026 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:29:21,068] Trial 35 finished with value: 0.44536196420368046 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7730, 'learning_rate': 0.00011113260749506118, 'p_miss': 0.26957767046389625}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:29:40,553] Trial 103 finished with value: 0.19174179912703773 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:31:36,173] Trial 104 finished with value: 0.19120066507200417 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:37:40,070] Trial 106 finished with value: 0.18968952523796218 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:38:22,263] Trial 119 finished with value: 0.21466653791239843 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:39:04,578] Trial 107 finished with value: 0.19047360959775714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:44:37,484] Trial 108 finished with value: 0.1899339321153155 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:44:42,470] Trial 109 finished with value: 0.19056093630168097 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:46:10,738] Trial 110 finished with value: 0.19065179857015005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:52:01,355] Trial 40 finished with value: 0.37611334419394127 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7048, 'learning_rate': 0.00016080153449296, 'p_miss': 0.2726634835785616}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:52:36,170] Trial 112 finished with value: 0.19012617379956673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:52:47,540] Trial 113 finished with value: 0.19087809369243788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:55:35,505] Trial 114 finished with value: 0.19035738151571752 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 10:59:01,069] Trial 115 finished with value: 0.19050325390068276 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 11:05:14,921] Trial 116 finished with value: 0.1904027689008434 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 11:06:42,100] Trial 117 finished with value: 0.189810875830835 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.18924139151995428.
running
[I 2024-11-16 11:07:55,451] Trial 118 finished with value: 0.18897638993831262 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:14:02,560] Trial 120 finished with value: 0.19018707613816047 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:14:03,792] Trial 133 finished with value: 0.3241487781379362 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:18:07,539] Trial 121 finished with value: 0.19077740764925127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:21:26,847] Trial 122 finished with value: 0.19011586705381295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:24:47,409] Trial 123 finished with value: 0.19042699599185217 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:26:11,831] Trial 124 finished with value: 0.1912677048633095 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:26:50,816] Trial 138 finished with value: 0.21521510744346703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:27:27,237] Trial 131 finished with value: 0.21802219459999478 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:28:46,389] Trial 127 finished with value: 0.18906817674389892 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:29:03,078] Trial 132 finished with value: 0.21818751673992853 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:29:44,623] Trial 126 finished with value: 0.18981139987529785 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:29:57,245] Trial 143 finished with value: 0.23552350846601883 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9459, 'weights': 'distance'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:31:52,551] Trial 125 finished with value: 0.19018585950081437 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 118 with value: 0.18897638993831262.
running
[I 2024-11-16 11:32:04,539] Trial 128 finished with value: 0.18826283669436578 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 128 with value: 0.18826283669436578.
running
[I 2024-11-16 11:33:30,813] Trial 144 finished with value: 0.6676693196448684 and parameters: {'model_name': 'GAIN', 'batch_size': 151, 'hint_rate': 0.3948081806097895, 'alpha': 99, 'iterations': 196, 'learning_rate': 0.0005075980528434911, 'p_miss': 0.14368482258715648}. Best is trial 128 with value: 0.18826283669436578.
running
[I 2024-11-16 11:33:56,192] Trial 37 finished with value: 0.39444601876957563 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7950, 'learning_rate': 0.0001810681935010645, 'p_miss': 0.011137804792741374}. Best is trial 128 with value: 0.18826283669436578.
running
[I 2024-11-16 11:34:47,559] Trial 145 finished with value: 0.646900839443655 and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.3893159553489702, 'alpha': 99, 'iterations': 174, 'learning_rate': 0.0004555201579072962, 'p_miss': 0.23864627632715735}. Best is trial 128 with value: 0.18826283669436578.
running
[I 2024-11-16 11:35:37,853] Trial 129 finished with value: 0.187236469921716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 11:36:11,425] Trial 42 finished with value: 0.45672281109501156 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9230, 'learning_rate': 0.00014666660306599893, 'p_miss': 0.27173779878550874}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 11:44:12,040] Trial 130 finished with value: 0.19029302551286092 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 11:52:30,251] Trial 134 finished with value: 0.19012621699205098 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 11:54:04,622] Trial 153 finished with value: 0.38745504138312514 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 11:54:22,117] Trial 154 finished with value: 0.27084843651255486 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 11:56:31,820] Trial 135 finished with value: 0.19000643470622894 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 11:59:28,214] Trial 137 finished with value: 0.188994571299678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 11:59:53,414] Trial 136 finished with value: 0.19051891029837553 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:01:05,507] Trial 139 finished with value: 0.19027695795048946 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:01:13,022] Trial 140 finished with value: 0.19120150893962445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:03:00,984] Trial 141 finished with value: 0.19187235168094263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:03:26,405] Trial 142 finished with value: 0.1916577091263857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:05:22,884] Trial 146 finished with value: 0.1910976668717715 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:07:05,593] Trial 147 finished with value: 0.1895901481683743 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:07:08,478] Trial 148 finished with value: 0.19113496902676613 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:07:09,065] Trial 165 finished with value: 0.31532838542243663 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:08:17,396] Trial 149 finished with value: 0.19109488100622044 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:08:59,296] Trial 150 finished with value: 0.188239952834212 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:09:37,539] Trial 151 finished with value: 0.1894431028083437 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:20:37,811] Trial 152 finished with value: 0.18993166073002096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:27:10,114] Trial 155 finished with value: 0.18765936791825005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 129 with value: 0.187236469921716.
running
[I 2024-11-16 12:28:16,196] Trial 156 finished with value: 0.18650627606828332 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:32:27,436] Trial 157 finished with value: 0.1885956223731299 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:32:47,893] Trial 158 finished with value: 0.1895428736413091 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:32:54,303] Trial 159 finished with value: 0.18891137536822855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:33:27,997] Trial 175 finished with value: 0.21636298280473634 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:33:57,769] Trial 160 finished with value: 0.1893637677822279 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:34:58,101] Trial 161 finished with value: 0.18895442876024088 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:39:48,842] Trial 162 finished with value: 0.19012797733924502 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:40:51,131] Trial 163 finished with value: 0.1903302059637471 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:41:52,397] Trial 168 finished with value: 0.1884496860120649 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:42:18,269] Trial 169 finished with value: 0.18920184337983134 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:42:33,521] Trial 182 finished with value: 0.4016048883374744 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6, 'learning_rate': 0.0022161502140245954, 'p_miss': 0.0754325902118586}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:42:47,194] Trial 183 finished with value: 0.24266190006887906 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 20949, 'weights': 'distance'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:42:50,288] Trial 166 finished with value: 0.18935249631928114 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:44:03,358] Trial 167 finished with value: 0.1900003972902871 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:44:09,800] Trial 164 finished with value: 0.18969761069805965 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 12:53:26,687] Trial 170 finished with value: 0.18966100899583 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:01:03,836] Trial 172 finished with value: 0.18836926258331727 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:01:29,548] Trial 171 finished with value: 0.18888269812851483 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:02:15,213] Trial 190 finished with value: 0.2711478927473966 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:03:51,448] Trial 191 finished with value: 0.2711536857961521 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:07:42,090] Trial 176 finished with value: 0.18839903321495796 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:08:41,615] Trial 173 finished with value: 0.18899615858311056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:09:13,901] Trial 174 finished with value: 0.1889163175774592 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:09:27,490] Trial 177 finished with value: 0.18881274813442595 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:09:32,066] Trial 178 finished with value: 0.18915672415624715 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:15:16,694] Trial 180 finished with value: 0.18997124347578453 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:16:15,308] Trial 179 finished with value: 0.18821141820564208 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
running
[I 2024-11-16 13:18:09,286] Trial 185 finished with value: 0.1889590978047291 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:18:14,689] Trial 184 finished with value: 0.1890967508730022 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:18:34,414] Trial 181 finished with value: 0.1887554278103373 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:19:09,372] Trial 186 finished with value: 0.1886332127089801 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:20:13,092] Trial 102 finished with value: 0.3733139479705885 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 9283, 'learning_rate': 0.00040712562204714696, 'p_miss': 0.22887537827953758}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:20:20,584] Trial 187 finished with value: 0.18882895496693666 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:24:41,016] Trial 188 finished with value: 0.19006448855155952 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:29:20,797] Trial 189 finished with value: 0.18842916354884337 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:30:45,381] Trial 192 finished with value: 0.18907717509221492 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:32:44,524] Trial 193 finished with value: 0.18868130139414818 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:33:54,583] Trial 197 finished with value: 0.18983065527530174 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:33:56,480] Trial 194 finished with value: 0.18966241754668176 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:33:57,270] Trial 196 finished with value: 0.1890651143325445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:34:09,940] Trial 195 finished with value: 0.1887021585015756 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:36:59,518] Trial 198 finished with value: 0.18928447502168658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
[I 2024-11-16 13:37:46,972] Trial 199 finished with value: 0.18896384710590225 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 156 with value: 0.18650627606828332.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
dtype: int64
0.18650627606828332
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.6646729982554811
Generation:   4%|▍         | 1/25 [00:15<06:20, 15.86s/it]Generation:  2
Best f1_score score: 0.6646729982554811
Generation:   8%|▊         | 2/25 [00:56<11:36, 30.26s/it]Generation:  3
Best f1_score score: 0.6929048244177292
Generation:  12%|█▏        | 3/25 [02:04<17:29, 47.68s/it]Generation:  4
Best f1_score score: 0.6929048244177292
Generation:  16%|█▌        | 4/25 [03:52<25:01, 71.50s/it]Generation:  5
Best f1_score score: 0.6932546128082249
Generation:  20%|██        | 5/25 [04:24<19:02, 57.12s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a19f0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  6
Best f1_score score: 0.6932546128082249
Generation:  24%|██▍       | 6/25 [04:56<15:26, 48.74s/it]Generation:  7
Best f1_score score: 0.6932546128082249
Generation:  28%|██▊       | 7/25 [05:44<14:33, 48.52s/it]Generation:  8
Best f1_score score: 0.6932546128082249
Generation:  32%|███▏      | 8/25 [06:11<11:45, 41.49s/it]Generation:  9
Best f1_score score: 0.6932546128082249
Generation:  36%|███▌      | 9/25 [07:20<13:22, 50.18s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f1e5f0> 

Generation:  10
Best f1_score score: 0.6932546128082249
Generation:  40%|████      | 10/25 [17:27<55:32, 222.15s/it]Generation:  11
Best f1_score score: 0.6932546128082249
Generation:  44%|████▍     | 11/25 [19:11<43:23, 185.98s/it]Generation:  12
Best f1_score score: 0.6932546128082249
Generation:  48%|████▊     | 12/25 [19:46<30:17, 139.84s/it]Generation:  13
Best f1_score score: 0.693321911293953
Generation:  52%|█████▏    | 13/25 [21:35<26:09, 130.77s/it]Generation:  14
Best f1_score score: 0.693321911293953
Generation:  56%|█████▌    | 14/25 [22:07<18:27, 100.68s/it]Generation:  15
Best f1_score score: 0.693321911293953
Generation:  60%|██████    | 15/25 [22:55<14:09, 84.91s/it] Generation:  16
Best f1_score score: 0.693321911293953
Generation:  64%|██████▍   | 16/25 [27:32<21:25, 142.81s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f24370> 

Generation:  17
Best f1_score score: 0.693321911293953
Generation:  68%|██████▊   | 17/25 [37:43<37:48, 283.53s/it]Generation:  18
Best f1_score score: 0.6934014596895113
Generation:  72%|███████▏  | 18/25 [38:39<25:05, 215.03s/it]Generation:  19
Best f1_score score: 0.693433557378873
Generation:  76%|███████▌  | 19/25 [40:56<19:09, 191.63s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a11e0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  20
Best f1_score score: 0.693433557378873
Generation:  80%|████████  | 20/25 [41:45<12:23, 148.76s/it]Generation:  21
Best f1_score score: 0.6942862409040091
Generation:  84%|████████▍ | 21/25 [42:24<07:44, 116.00s/it]Generation:  22
Best f1_score score: 0.6942862409040091
Generation:  88%|████████▊ | 22/25 [44:12<05:40, 113.48s/it]Generation:  23
Best f1_score score: 0.6949784908279767
Generation:  92%|█████████▏| 23/25 [45:09<03:13, 96.64s/it] Generation:  24
Best f1_score score: 0.6949784908279767
Generation:  96%|█████████▌| 24/25 [45:53<01:20, 80.93s/it]Generation:  25
Best f1_score score: 0.6949784908279767
Generation: 100%|██████████| 25/25 [47:46<00:00, 90.55s/it]Generation: 100%|██████████| 25/25 [47:50<00:00, 114.82s/it]
2024-11-16 14:29:45,893 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:44557' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b7e4639ccb3c3412fc3ae1fd38edaaae', 'ndarray-35dcfaa5ebbc03b464e09989aca4f0a7'} (stimulus_id='handle-worker-cleanup-1731796185.8935158')
Fitted
Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_jobs=1, n_neighbors=18, p=1,
                                      weights='distance'))])
score start
train score: {'auroc': 0.9876775824708244, 'accuracy': 0.9736028991035667, 'balanced_accuracy': 0.8598629620246399, 'logloss': 0.06217981271178049, 'f1': 0.8741939605489224}
original test score: {'auroc': 0.7859137085661181, 'accuracy': 0.9455294476655478, 'balanced_accuracy': 0.6392315169901617, 'logloss': 0.716286807662868, 'f1': 0.6774628974768175}
imputed test score: {'auroc': 0.7855176097336909, 'accuracy': 0.9452242905096124, 'balanced_accuracy': 0.636592994562721, 'logloss': 0.7165518083967073, 'f1': 0.6745836702793363}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd08e0> 
 Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.5395450598284556
Generation:   4%|▍         | 1/25 [04:30<1:48:12, 270.53s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d19e10> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547464ffa0> 

Generation:  2
Best f1_score score: 0.5432257328983623
Generation:   8%|▊         | 2/25 [14:34<2:58:55, 466.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554740c2a10> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  3
Best f1_score score: 0.5625895085017245
Generation:  12%|█▏        | 3/25 [19:35<2:23:26, 391.22s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fc763e0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547441a530> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.6871297051748471
Generation:  16%|█▌        | 4/25 [21:53<1:41:52, 291.09s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd3370> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545efdbc40> 

Generation:  5
Best f1_score score: 0.6871297051748471
Generation:  20%|██        | 5/25 [31:58<2:14:44, 404.23s/it]Generation:  6
Best f1_score score: 0.6903049961249483
Generation:  24%|██▍       | 6/25 [32:46<1:29:40, 283.17s/it]Generation:  7
Best f1_score score: 0.6903049961249483
Generation:  28%|██▊       | 7/25 [33:13<59:47, 199.30s/it]  Generation:  8
Best f1_score score: 0.6906611682091308
Generation:  32%|███▏      | 8/25 [33:41<41:00, 144.73s/it]Generation:  9
Best f1_score score: 0.6909435432336007
Generation:  36%|███▌      | 9/25 [34:05<28:36, 107.27s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456d90ac0> 

Generation:  10
Best f1_score score: 0.6909435432336007
Generation:  40%|████      | 10/25 [44:11<1:05:17, 261.14s/it]Generation:  11
Best f1_score score: 0.6909435432336007
Generation:  44%|████▍     | 11/25 [44:32<43:45, 187.53s/it]  Generation:  12
Best f1_score score: 0.6918483825439913
Generation:  48%|████▊     | 12/25 [46:01<34:08, 157.56s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474148040> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.6918483825439913
Generation:  52%|█████▏    | 13/25 [46:53<25:06, 125.52s/it]Generation:  14
Best f1_score score: 0.6918483825439913
Generation:  56%|█████▌    | 14/25 [47:16<17:22, 94.78s/it] Generation:  15
Best f1_score score: 0.6918483825439913
Generation:  60%|██████    | 15/25 [47:42<12:19, 73.97s/it]Generation:  16
Best f1_score score: 0.6918483825439913
Generation:  64%|██████▍   | 16/25 [54:24<25:54, 172.68s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fd7f700> 

Generation:  17
Best f1_score score: 0.6918483825439913
Generation:  68%|██████▊   | 17/25 [1:04:32<40:29, 303.63s/it]Generation:  18
Best f1_score score: 0.6918483825439913
Generation:  72%|███████▏  | 18/25 [1:07:34<31:09, 267.12s/it]Generation:  19
Best f1_score score: 0.6918483825439913
Generation:  76%|███████▌  | 19/25 [1:07:59<19:26, 194.41s/it]Generation:  20
Best f1_score score: 0.6918483825439913
Generation:  80%|████████  | 20/25 [1:08:26<12:00, 144.10s/it]Generation:  21
Best f1_score score: 0.6918483825439913
Generation:  84%|████████▍ | 21/25 [1:09:19<07:46, 116.73s/it]Generation:  22
Best f1_score score: 0.6918483825439913
Generation:  88%|████████▊ | 22/25 [1:09:58<04:40, 93.51s/it] Generation:  23
Best f1_score score: 0.6918483825439913
Generation:  92%|█████████▏| 23/25 [1:14:13<04:43, 141.95s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456beafb0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.6918483825439913
Generation:  96%|█████████▌| 24/25 [1:17:29<02:38, 158.06s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fc02650> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  25
Best f1_score score: 0.6918483825439913
Generation: 100%|██████████| 25/25 [1:18:00<00:00, 119.81s/it]Generation: 100%|██████████| 25/25 [1:18:00<00:00, 187.20s/it]
2024-11-16 15:48:10,821 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46733' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b7e4639ccb3c3412fc3ae1fd38edaaae', 'DataFrame-2e208a4006a6210bf75e4e66774cb442'} (stimulus_id='handle-worker-cleanup-1731800890.8215778')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=15)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(metric='euclidean', n_jobs=1,
                                      n_neighbors=18, p=3,
                                      weights='distance'))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9874198740647051, 'accuracy': 0.9737936296013733, 'balanced_accuracy': 0.8605824596747627, 'logloss': 0.06321672876074576, 'f1': 0.8750625815952346}
test score: {'auroc': 0.7669693311826349, 'accuracy': 0.9452242905096124, 'balanced_accuracy': 0.6266866781323106, 'logloss': 0.7694536576972071, 'f1': 0.6657294419684304}
original test score: {'auroc': 0.7709236964951448, 'accuracy': 0.9455294476655478, 'balanced_accuracy': 0.6305634901135526, 'logloss': 0.7586929434736269, 'f1': 0.6698397512556804}
score end
4135
lvl
0.01
type
MAR
num_run
2
class_full
finished
all finished
full run takes
10.66342661221822
hours
DONE
