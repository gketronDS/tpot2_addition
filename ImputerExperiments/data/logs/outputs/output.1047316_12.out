Run: 12
/cm/local/apps/slurm/var/spool/job1047316/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1481/1481.pkl
working on 
../data/c/1481/class_full_MNAR_0.5_1
0.7103879451751709
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-12 22:23:12,333] A new study created in memory with name: no-name-4d9d6cd4-c68c-4eec-8e58-9a9acbe0fead
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-12 22:23:12,705] Trial 8 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 8 with value: 0.42836883918555807.
running
[I 2024-11-12 22:23:12,972] Trial 1 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 8 with value: 0.42836883918555807.
running
[I 2024-11-12 22:23:13,192] Trial 3 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 8 with value: 0.42836883918555807.
running
[I 2024-11-12 22:23:13,370] Trial 15 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 8 with value: 0.42836883918555807.
running
[I 2024-11-12 22:23:13,613] Trial 19 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 8 with value: 0.42836883918555807.
running
[I 2024-11-12 22:23:16,096] Trial 2 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.156292685111729, 'alpha': 74, 'iterations': 2, 'learning_rate': 0.010272703436356072, 'p_miss': 0.022216179533496878}. Best is trial 8 with value: 0.42836883918555807.
running
[I 2024-11-12 22:23:17,747] Trial 9 finished with value: 0.426551427459626 and parameters: {'model_name': 'GAIN', 'batch_size': 51, 'hint_rate': 0.6639036263417669, 'alpha': 79, 'iterations': 1, 'learning_rate': 0.00071489014582395, 'p_miss': 0.16251957735831862}. Best is trial 9 with value: 0.426551427459626.
running
[I 2024-11-12 22:23:19,275] Trial 0 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.06037602618392741, 'alpha': 20, 'iterations': 5, 'learning_rate': 0.0015193526820212377, 'p_miss': 0.2533390674080261}. Best is trial 9 with value: 0.426551427459626.
running
[I 2024-11-12 22:23:20,086] Trial 17 finished with value: 0.42669462667054836 and parameters: {'model_name': 'GAIN', 'batch_size': 438, 'hint_rate': 0.3636647918142302, 'alpha': 5, 'iterations': 3, 'learning_rate': 0.00012410494373721754, 'p_miss': 0.04798899701495833}. Best is trial 9 with value: 0.426551427459626.
running
[I 2024-11-12 22:23:22,458] Trial 21 finished with value: 0.2881771988032734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:26,415] Trial 20 finished with value: 0.2898045821471666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17234, 'weights': 'uniform'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:26,672] Trial 18 finished with value: 0.2898045821471666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 19463, 'weights': 'uniform'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:29,737] Trial 25 finished with value: 0.2881771988032734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:31,135] Trial 7 finished with value: 0.43033009927019766 and parameters: {'model_name': 'GAIN', 'batch_size': 85, 'hint_rate': 0.15799812114939055, 'alpha': 27, 'iterations': 25, 'learning_rate': 0.00032624917353163673, 'p_miss': 0.22486121161147524}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:33,717] Trial 27 finished with value: 0.2881771988032734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:36,625] Trial 28 finished with value: 0.2881771988032734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:39,031] Trial 29 finished with value: 0.2881771988032734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:39,960] Trial 13 finished with value: 0.376383388437799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:40,314] Trial 5 finished with value: 0.4283446082233759 and parameters: {'model_name': 'GAIN', 'batch_size': 64, 'hint_rate': 0.2493437546899553, 'alpha': 83, 'iterations': 41, 'learning_rate': 0.002700542714456546, 'p_miss': 0.2001206524340867}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:42,360] Trial 26 finished with value: 0.2898045821471666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17381, 'weights': 'uniform'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:42,783] Trial 30 finished with value: 0.2881771988032734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 21 with value: 0.2881771988032734.
running
[I 2024-11-12 22:23:51,267] Trial 11 finished with value: 0.24395251109723448 and parameters: {'model_name': 'VAE', 'batch_size': 51, 'iterations': 28, 'learning_rate': 0.0001281258581727553, 'p_miss': 0.16090476955009264}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 22:23:55,589] Trial 23 finished with value: 0.28772596073701684 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 22:24:05,728] Trial 22 finished with value: 0.3013792659714647 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 22:24:17,557] Trial 24 finished with value: 0.2879027914171108 and parameters: {'model_name': 'VAE', 'batch_size': 517, 'iterations': 10, 'learning_rate': 0.010809885930226125, 'p_miss': 0.1799511272239126}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 22:24:40,167] Trial 10 finished with value: 0.42752644861308137 and parameters: {'model_name': 'GAIN', 'batch_size': 174, 'hint_rate': 0.19088180816447384, 'alpha': 87, 'iterations': 88, 'learning_rate': 0.0019227858608359732, 'p_miss': 0.29313514439592114}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 22:26:25,381] Trial 16 finished with value: 0.3051278703829908 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 80, 'learning_rate': 0.03759853119422016, 'p_miss': 0.10667928718677236}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 22:34:22,719] Trial 12 finished with value: 0.24504782345352544 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 171, 'learning_rate': 0.00019453514023744155, 'p_miss': 0.2627346570509878}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 22:34:26,309] Trial 6 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5766643846161092, 'alpha': 85, 'iterations': 2045, 'learning_rate': 0.005961152373790049, 'p_miss': 0.2663235317437288}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 23:03:27,823] Trial 44 finished with value: 0.24433569618815176 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 458, 'learning_rate': 0.00015236661019398022, 'p_miss': 0.11326131825341444}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 23:44:48,592] Trial 43 finished with value: 0.2668260306710427 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 1240, 'learning_rate': 0.00011578039677621648, 'p_miss': 0.11352268436626368}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 23:49:06,562] Trial 45 finished with value: 0.25059962606976105 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 749, 'learning_rate': 0.00010478470214379975, 'p_miss': 0.10777012498483426}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-12 23:54:45,981] Trial 40 finished with value: 0.29612431040091663 and parameters: {'model_name': 'VAE', 'batch_size': 766, 'iterations': 1155, 'learning_rate': 0.05480285182764205, 'p_miss': 0.11526732458740203}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:12:14,132] Trial 48 finished with value: 0.25218376661624403 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 266, 'learning_rate': 0.0002887699069247143, 'p_miss': 0.08132427684446636}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:20:06,726] Trial 47 finished with value: 0.2623768505238569 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 516, 'learning_rate': 0.0002471555325089522, 'p_miss': 0.10666585973697874}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:25:54,843] Trial 46 finished with value: 0.24576005037242984 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 668, 'learning_rate': 0.00010315461965353548, 'p_miss': 0.10250285833157044}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:27:24,216] Trial 49 finished with value: 0.24576055000646355 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 265, 'learning_rate': 0.000256037639498733, 'p_miss': 0.13472298805395524}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:33:18,447] Trial 37 finished with value: 0.30046091571471367 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 1965, 'learning_rate': 0.09399761966381712, 'p_miss': 0.10706906726178808}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:39:01,617] Trial 52 finished with value: 0.2578918358996859 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 189, 'learning_rate': 0.000690868192101277, 'p_miss': 0.06709244162506164}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:39:08,707] Trial 38 finished with value: 0.2980995790811814 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 2115, 'learning_rate': 0.0447256583835892, 'p_miss': 0.10477785625774189}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:39:18,394] Trial 4 finished with value: 0.43524039298317013 and parameters: {'model_name': 'GAIN', 'batch_size': 579, 'hint_rate': 0.42040587325345463, 'alpha': 71, 'iterations': 4020, 'learning_rate': 0.001353132822844906, 'p_miss': 0.29381974999912996}. Best is trial 11 with value: 0.24395251109723448.
running
[I 2024-11-13 00:40:19,887] Trial 55 finished with value: 0.2421582542533424 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 22, 'learning_rate': 0.0005535108757061187, 'p_miss': 0.16093416042033842}. Best is trial 55 with value: 0.2421582542533424.
running
[I 2024-11-13 00:41:08,390] Trial 57 finished with value: 0.24524590330393625 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 14, 'learning_rate': 0.00016894768427420806, 'p_miss': 0.1469888757205212}. Best is trial 55 with value: 0.2421582542533424.
running
[I 2024-11-13 00:41:51,472] Trial 58 finished with value: 0.24376438854046775 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 13, 'learning_rate': 0.0005146617551506945, 'p_miss': 0.14336239476484539}. Best is trial 55 with value: 0.2421582542533424.
running
[I 2024-11-13 00:43:19,627] Trial 59 finished with value: 0.24481967473306412 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 27, 'learning_rate': 0.0005255400945947799, 'p_miss': 0.17774680765331236}. Best is trial 55 with value: 0.2421582542533424.
running
[I 2024-11-13 00:45:13,792] Trial 60 finished with value: 0.24268489864414863 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 28, 'learning_rate': 0.0005569041135519727, 'p_miss': 0.17103353590542264}. Best is trial 55 with value: 0.2421582542533424.
running
[I 2024-11-13 00:45:17,299] Trial 53 finished with value: 0.2590606201333625 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 209, 'learning_rate': 0.0005884037374314589, 'p_miss': 0.05704730790389754}. Best is trial 55 with value: 0.2421582542533424.
running
[I 2024-11-13 00:45:35,488] Trial 61 finished with value: 0.2412955873076857 and parameters: {'model_name': 'VAE', 'batch_size': 127, 'iterations': 7, 'learning_rate': 0.00047750489399662815, 'p_miss': 0.1508132124353117}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:45:58,175] Trial 62 finished with value: 0.2426532278060649 and parameters: {'model_name': 'VAE', 'batch_size': 131, 'iterations': 10, 'learning_rate': 0.0004537795914293905, 'p_miss': 0.13661754296579848}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:45:59,000] Trial 64 finished with value: 0.2898045821471666 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:46:04,321] Trial 63 finished with value: 0.24358161779454512 and parameters: {'model_name': 'VAE', 'batch_size': 140, 'iterations': 7, 'learning_rate': 0.0012011306998935827, 'p_miss': 0.20362774338438325}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:46:27,843] Trial 65 finished with value: 0.2425163081979223 and parameters: {'model_name': 'VAE', 'batch_size': 112, 'iterations': 7, 'learning_rate': 0.001197794006852523, 'p_miss': 0.2087254888778704}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:46:32,714] Trial 66 finished with value: 0.24421401391496875 and parameters: {'model_name': 'VAE', 'batch_size': 150, 'iterations': 7, 'learning_rate': 0.0010962703074357846, 'p_miss': 0.1938699560980333}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:46:52,463] Trial 68 finished with value: 0.24585184785206252 and parameters: {'model_name': 'VAE', 'batch_size': 165, 'iterations': 4, 'learning_rate': 0.0012069399484009376, 'p_miss': 0.22709069212283053}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:47:01,915] Trial 67 finished with value: 0.2463047121201749 and parameters: {'model_name': 'VAE', 'batch_size': 163, 'iterations': 7, 'learning_rate': 0.001144471870338295, 'p_miss': 0.21180989275484075}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:47:02,916] Trial 69 finished with value: 0.24512297146231501 and parameters: {'model_name': 'VAE', 'batch_size': 243, 'iterations': 2, 'learning_rate': 0.0009861121436588042, 'p_miss': 0.2233650749280822}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:47:12,857] Trial 71 finished with value: 0.30230661813528203 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1095, 'weights': 'distance'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:47:14,757] Trial 70 finished with value: 0.24346695384842856 and parameters: {'model_name': 'VAE', 'batch_size': 298, 'iterations': 2, 'learning_rate': 0.0024534798093437003, 'p_miss': 0.1824990172729107}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:47:15,419] Trial 73 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:47:20,605] Trial 74 finished with value: 0.2436669976708446 and parameters: {'model_name': 'VAE', 'batch_size': 79, 'iterations': 1, 'learning_rate': 0.0037128071761363475, 'p_miss': 0.1742806924874255}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:47:29,157] Trial 75 finished with value: 0.42487947902933376 and parameters: {'model_name': 'GAIN', 'batch_size': 335, 'hint_rate': 0.9820629959115422, 'alpha': 50, 'iterations': 2, 'learning_rate': 0.0003873557279786093, 'p_miss': 0.13656346168346686}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:47:46,079] Trial 72 finished with value: 0.4295516950269224 and parameters: {'model_name': 'GAIN', 'batch_size': 100, 'hint_rate': 0.927482501065594, 'alpha': 50, 'iterations': 17, 'learning_rate': 0.00042266108060616894, 'p_miss': 0.17836924341863866}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:48:44,014] Trial 76 finished with value: 0.24334007233273489 and parameters: {'model_name': 'VAE', 'batch_size': 110, 'iterations': 18, 'learning_rate': 0.0021385795220600756, 'p_miss': 0.1914256425332535}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:50:55,831] Trial 77 finished with value: 0.2578111810653709 and parameters: {'model_name': 'VAE', 'batch_size': 257, 'iterations': 45, 'learning_rate': 0.0019143339326029587, 'p_miss': 0.19763575105585146}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:52:13,741] Trial 42 finished with value: 0.2960931388335343 and parameters: {'model_name': 'VAE', 'batch_size': 952, 'iterations': 1692, 'learning_rate': 0.012064187800810014, 'p_miss': 0.12211773894972199}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:53:13,973] Trial 79 finished with value: 0.2723165617870605 and parameters: {'model_name': 'VAE', 'batch_size': 45, 'iterations': 44, 'learning_rate': 0.002802418545810103, 'p_miss': 0.15998610249492995}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:53:25,501] Trial 81 finished with value: 0.3023180413836331 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4451, 'weights': 'distance'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:53:41,277] Trial 78 finished with value: 0.27052885524044273 and parameters: {'model_name': 'VAE', 'batch_size': 287, 'iterations': 63, 'learning_rate': 0.0019204646990211446, 'p_miss': 0.15839321605403536}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:54:44,458] Trial 56 finished with value: 0.24689419582499444 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 256, 'learning_rate': 0.0002028426682635628, 'p_miss': 0.14008335066705632}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:54:46,123] Trial 80 finished with value: 0.27855497920646355 and parameters: {'model_name': 'VAE', 'batch_size': 48, 'iterations': 45, 'learning_rate': 0.0031956655001257684, 'p_miss': 0.1587934096892731}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:54:46,878] Trial 85 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:54:49,374] Trial 82 finished with value: 0.24331766285269704 and parameters: {'model_name': 'VAE', 'batch_size': 87, 'iterations': 21, 'learning_rate': 0.001897832683555917, 'p_miss': 0.1611858635883014}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:54:58,032] Trial 83 finished with value: 0.24883145252879588 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 20, 'learning_rate': 0.003664349311518411, 'p_miss': 0.24745909181138476}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:55:15,927] Trial 86 finished with value: 0.24357897150618224 and parameters: {'model_name': 'VAE', 'batch_size': 111, 'iterations': 7, 'learning_rate': 0.0008624061655955046, 'p_miss': 0.24393433203129486}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:55:47,768] Trial 88 finished with value: 0.24339017519812067 and parameters: {'model_name': 'VAE', 'batch_size': 100, 'iterations': 10, 'learning_rate': 0.0008627794882891833, 'p_miss': 0.18744140260645323}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:55:54,783] Trial 89 finished with value: 0.2421351356410498 and parameters: {'model_name': 'VAE', 'batch_size': 68, 'iterations': 11, 'learning_rate': 0.0016357426509116919, 'p_miss': 0.18839931701656393}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:55:58,531] Trial 84 finished with value: 0.25561483700916254 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 20, 'learning_rate': 0.003971785700558252, 'p_miss': 0.24136899997200043}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:56:03,282] Trial 87 finished with value: 0.24493352243685124 and parameters: {'model_name': 'VAE', 'batch_size': 108, 'iterations': 20, 'learning_rate': 0.0007625777644559022, 'p_miss': 0.18831939934425745}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:56:15,816] Trial 93 finished with value: 0.30232484329883547 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10508, 'weights': 'distance'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:56:29,783] Trial 90 finished with value: 0.24161837316129398 and parameters: {'model_name': 'VAE', 'batch_size': 67, 'iterations': 11, 'learning_rate': 0.0008412241094968168, 'p_miss': 0.16807684836994588}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:56:31,530] Trial 94 finished with value: 0.24429116518967042 and parameters: {'model_name': 'VAE', 'batch_size': 64, 'iterations': 4, 'learning_rate': 0.0015778017651767626, 'p_miss': 0.1690757534243724}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:56:43,267] Trial 95 finished with value: 0.4298855289424125 and parameters: {'model_name': 'GAIN', 'batch_size': 65, 'hint_rate': 0.7973762822462256, 'alpha': 52, 'iterations': 5, 'learning_rate': 0.001599804472607081, 'p_miss': 0.1247934768451768}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:57:06,062] Trial 96 finished with value: 0.24196988964897903 and parameters: {'model_name': 'VAE', 'batch_size': 69, 'iterations': 11, 'learning_rate': 0.0003592858572575824, 'p_miss': 0.15028658917745907}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:57:26,206] Trial 97 finished with value: 0.2429863024050431 and parameters: {'model_name': 'VAE', 'batch_size': 73, 'iterations': 11, 'learning_rate': 0.00037220369928158304, 'p_miss': 0.15049721951235534}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:57:33,763] Trial 91 finished with value: 0.27198787371329514 and parameters: {'model_name': 'VAE', 'batch_size': 60, 'iterations': 29, 'learning_rate': 0.005343636870121864, 'p_miss': 0.21074587626249053}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:57:53,301] Trial 98 finished with value: 0.2465376377237003 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 11, 'learning_rate': 0.0003857800814267556, 'p_miss': 0.15177651276151272}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:58:00,432] Trial 99 finished with value: 0.245887153674098 and parameters: {'model_name': 'VAE', 'batch_size': 68, 'iterations': 10, 'learning_rate': 0.0003654207434018335, 'p_miss': 0.12902254543574646}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:58:06,239] Trial 92 finished with value: 0.2472315629378289 and parameters: {'model_name': 'VAE', 'batch_size': 67, 'iterations': 30, 'learning_rate': 0.0015948889378531624, 'p_miss': 0.17026851370179397}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:58:13,085] Trial 102 finished with value: 0.24521845013029675 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 3, 'learning_rate': 0.0006704979888229695, 'p_miss': 0.17071277757578135}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:58:17,366] Trial 100 finished with value: 0.24394443586773612 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 10, 'learning_rate': 0.00044555296767971586, 'p_miss': 0.1506407397440597}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:59:05,491] Trial 105 finished with value: 0.24147899611097948 and parameters: {'model_name': 'VAE', 'batch_size': 192, 'iterations': 14, 'learning_rate': 0.0002869067294151998, 'p_miss': 0.14351552376202925}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 00:59:30,028] Trial 106 finished with value: 0.24445583120452805 and parameters: {'model_name': 'VAE', 'batch_size': 131, 'iterations': 5, 'learning_rate': 0.0003090261211897093, 'p_miss': 0.1493344689777861}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:00:22,513] Trial 107 finished with value: 0.24252488055499452 and parameters: {'model_name': 'VAE', 'batch_size': 203, 'iterations': 15, 'learning_rate': 0.00022256906271453958, 'p_miss': 0.13733669879614913}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:05:57,627] Trial 104 finished with value: 0.24575850391722437 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 113, 'learning_rate': 0.00047476597898136547, 'p_miss': 0.15111999548084445}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:06:53,849] Trial 109 finished with value: 0.24420029542826752 and parameters: {'model_name': 'VAE', 'batch_size': 213, 'iterations': 13, 'learning_rate': 0.00018925685766665805, 'p_miss': 0.017040297181686648}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:07:31,331] Trial 110 finished with value: 0.24404959738656093 and parameters: {'model_name': 'VAE', 'batch_size': 392, 'iterations': 8, 'learning_rate': 0.00025270985310154546, 'p_miss': 0.13051884546198148}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:07:32,040] Trial 111 finished with value: 0.2898045821471666 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:08:32,423] Trial 112 finished with value: 0.24604063304365525 and parameters: {'model_name': 'VAE', 'batch_size': 174, 'iterations': 14, 'learning_rate': 0.000598154544703528, 'p_miss': 0.13973416605805158}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:12:47,680] Trial 39 finished with value: 0.3064130991902407 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 2689, 'learning_rate': 0.08025244048570199, 'p_miss': 0.111213611702828}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:30:17,372] Trial 113 finished with value: 0.2894768567047204 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:34:06,609] Trial 114 finished with value: 0.2916979564155648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:34:36,919] Trial 116 finished with value: 0.24161438036278113 and parameters: {'model_name': 'VAE', 'batch_size': 203, 'iterations': 8, 'learning_rate': 0.00032308544646292113, 'p_miss': 0.1208600095498967}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:35:01,119] Trial 117 finished with value: 0.24513222228923567 and parameters: {'model_name': 'VAE', 'batch_size': 201, 'iterations': 5, 'learning_rate': 0.0003167250756975766, 'p_miss': 0.12205249977525262}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:35:47,031] Trial 118 finished with value: 0.2420174324196022 and parameters: {'model_name': 'VAE', 'batch_size': 128, 'iterations': 14, 'learning_rate': 0.0002262612851684963, 'p_miss': 0.16629470043064232}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:36:19,688] Trial 119 finished with value: 0.24332131136976454 and parameters: {'model_name': 'VAE', 'batch_size': 135, 'iterations': 8, 'learning_rate': 0.00022844361873235498, 'p_miss': 0.14211653492291876}. Best is trial 61 with value: 0.2412955873076857.
running
[I 2024-11-13 01:36:33,197] Trial 120 finished with value: 0.24065946262515384 and parameters: {'model_name': 'VAE', 'batch_size': 199, 'iterations': 3, 'learning_rate': 0.00013636604830272045, 'p_miss': 0.12230399687082376}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 01:36:50,732] Trial 121 finished with value: 0.2418844033593155 and parameters: {'model_name': 'VAE', 'batch_size': 191, 'iterations': 3, 'learning_rate': 0.00014458845299399032, 'p_miss': 0.1215472373584618}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 01:37:02,910] Trial 122 finished with value: 0.24260673433831106 and parameters: {'model_name': 'VAE', 'batch_size': 90, 'iterations': 3, 'learning_rate': 0.0001451424344139898, 'p_miss': 0.20714518533703513}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 01:37:15,051] Trial 123 finished with value: 0.4282529887173371 and parameters: {'model_name': 'GAIN', 'batch_size': 432, 'hint_rate': 0.743924064464627, 'alpha': 97, 'iterations': 4, 'learning_rate': 0.00014753878081003992, 'p_miss': 0.09486021918292513}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 01:37:28,363] Trial 124 finished with value: 0.3023230904168749 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9788, 'weights': 'distance'}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 01:37:33,647] Trial 125 finished with value: 0.24611811416174073 and parameters: {'model_name': 'VAE', 'batch_size': 55, 'iterations': 1, 'learning_rate': 0.00017538626227802225, 'p_miss': 0.11858620371399634}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 01:37:55,384] Trial 126 finished with value: 0.24240354414068013 and parameters: {'model_name': 'VAE', 'batch_size': 212, 'iterations': 6, 'learning_rate': 0.000208158022683464, 'p_miss': 0.09083267680094566}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 01:38:16,978] Trial 127 finished with value: 0.24332528580322627 and parameters: {'model_name': 'VAE', 'batch_size': 235, 'iterations': 6, 'learning_rate': 0.0001267933290831816, 'p_miss': 0.07469392902650335}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:11:57,077] Trial 14 finished with value: 0.2972084559023728 and parameters: {'model_name': 'VAE', 'batch_size': 141, 'iterations': 3358, 'learning_rate': 0.0027656214410695726, 'p_miss': 0.2200726535118011}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:12:17,043] Trial 129 finished with value: 0.24401315683660604 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6, 'learning_rate': 0.00030842360631551353, 'p_miss': 0.10195803034479704}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:12:33,782] Trial 130 finished with value: 0.24264824092827916 and parameters: {'model_name': 'VAE', 'batch_size': 188, 'iterations': 4, 'learning_rate': 0.00020298312832080066, 'p_miss': 0.09122345797819528}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:13:03,935] Trial 131 finished with value: 0.24637968772398197 and parameters: {'model_name': 'VAE', 'batch_size': 148, 'iterations': 6, 'learning_rate': 0.0002566197235573631, 'p_miss': 0.16463982842325792}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:13:16,480] Trial 132 finished with value: 0.24478899915851926 and parameters: {'model_name': 'VAE', 'batch_size': 121, 'iterations': 3, 'learning_rate': 0.00016402852087401618, 'p_miss': 0.1272254206885688}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:14:08,383] Trial 133 finished with value: 0.24407274689925393 and parameters: {'model_name': 'VAE', 'batch_size': 601, 'iterations': 9, 'learning_rate': 0.00010149758387612847, 'p_miss': 0.050542578339846114}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:14:18,197] Trial 134 finished with value: 0.24793621404207636 and parameters: {'model_name': 'VAE', 'batch_size': 176, 'iterations': 2, 'learning_rate': 0.00027890456137334707, 'p_miss': 0.17962308333426721}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:16:59,925] Trial 135 finished with value: 0.24313723496555997 and parameters: {'model_name': 'VAE', 'batch_size': 357, 'iterations': 35, 'learning_rate': 0.0007690635300155958, 'p_miss': 0.16462717418994469}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:18:03,951] Trial 136 finished with value: 0.2472214797242987 and parameters: {'model_name': 'VAE', 'batch_size': 271, 'iterations': 15, 'learning_rate': 0.0002187330510337952, 'p_miss': 0.1360564782273167}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:18:56,236] Trial 137 finished with value: 0.24196825927214682 and parameters: {'model_name': 'VAE', 'batch_size': 218, 'iterations': 13, 'learning_rate': 0.00013560775746786823, 'p_miss': 0.145123797101791}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:19:41,266] Trial 138 finished with value: 0.24353457801542228 and parameters: {'model_name': 'VAE', 'batch_size': 234, 'iterations': 12, 'learning_rate': 0.00012346670204089233, 'p_miss': 0.15637772224880764}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:20:22,435] Trial 139 finished with value: 0.2827711712350408 and parameters: {'model_name': 'VAE', 'batch_size': 97, 'iterations': 8, 'learning_rate': 0.015502769863624779, 'p_miss': 0.14497920674103515}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:21:26,558] Trial 140 finished with value: 0.24373615021385503 and parameters: {'model_name': 'VAE', 'batch_size': 155, 'iterations': 16, 'learning_rate': 0.00013946180119757165, 'p_miss': 0.11980378501330848}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:21:27,600] Trial 141 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:21:54,057] Trial 142 finished with value: 0.24196673630759458 and parameters: {'model_name': 'VAE', 'batch_size': 324, 'iterations': 5, 'learning_rate': 0.0013083796481657337, 'p_miss': 0.09528017380315272}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:22:07,423] Trial 143 finished with value: 0.2463363654931495 and parameters: {'model_name': 'VAE', 'batch_size': 320, 'iterations': 3, 'learning_rate': 0.00017230545867493377, 'p_miss': 0.08422904802456037}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:24:09,824] Trial 144 finished with value: 0.24365157502007517 and parameters: {'model_name': 'VAE', 'batch_size': 506, 'iterations': 24, 'learning_rate': 0.00034852076000934577, 'p_miss': 0.09903305793302204}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:24:41,295] Trial 145 finished with value: 0.24150467286601005 and parameters: {'model_name': 'VAE', 'batch_size': 288, 'iterations': 6, 'learning_rate': 0.0013726677151855034, 'p_miss': 0.11431621545513071}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:25:07,201] Trial 146 finished with value: 0.24431783144870534 and parameters: {'model_name': 'VAE', 'batch_size': 281, 'iterations': 6, 'learning_rate': 0.0013150857620828178, 'p_miss': 0.11483526609835627}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 02:25:43,607] Trial 147 finished with value: 0.2414822933014713 and parameters: {'model_name': 'VAE', 'batch_size': 238, 'iterations': 9, 'learning_rate': 0.0009541647337498985, 'p_miss': 0.08760086494313468}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 04:08:29,949] Trial 36 finished with value: 0.302845162092082 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 5489, 'learning_rate': 0.068094916979385, 'p_miss': 0.09294504212098062}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 04:09:36,504] Trial 149 finished with value: 0.24327900819206047 and parameters: {'model_name': 'VAE', 'batch_size': 242, 'iterations': 12, 'learning_rate': 0.000987041716096775, 'p_miss': 0.10728926259668833}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 04:10:13,988] Trial 150 finished with value: 0.2457420900919479 and parameters: {'model_name': 'VAE', 'batch_size': 335, 'iterations': 9, 'learning_rate': 0.0006102418163471703, 'p_miss': 0.13121828428318275}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 04:10:36,585] Trial 151 finished with value: 0.24690594918327072 and parameters: {'model_name': 'VAE', 'batch_size': 390, 'iterations': 4, 'learning_rate': 0.0008205245519999258, 'p_miss': 0.1114540002059819}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 04:10:48,680] Trial 152 finished with value: 0.42835086947583206 and parameters: {'model_name': 'GAIN', 'batch_size': 178, 'hint_rate': 0.49461544551175546, 'alpha': 0, 'iterations': 5, 'learning_rate': 0.0005259264074137658, 'p_miss': 0.08310045125800648}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 04:12:18,323] Trial 153 finished with value: 0.24602309302539274 and parameters: {'model_name': 'VAE', 'batch_size': 123, 'iterations': 23, 'learning_rate': 0.0006796569496316855, 'p_miss': 0.06604307169736155}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 04:12:27,983] Trial 154 finished with value: 0.2907025733181478 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6098, 'weights': 'uniform'}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:07:59,825] Trial 35 finished with value: 0.3054631806666878 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6203, 'learning_rate': 0.0894544340259269, 'p_miss': 0.09353504091909795}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:08:37,191] Trial 156 finished with value: 0.2410611078345466 and parameters: {'model_name': 'VAE', 'batch_size': 226, 'iterations': 8, 'learning_rate': 0.0009778825810830335, 'p_miss': 0.07591354616966632}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:10:11,478] Trial 157 finished with value: 0.2416450777660739 and parameters: {'model_name': 'VAE', 'batch_size': 286, 'iterations': 18, 'learning_rate': 0.0009029673704383596, 'p_miss': 0.146611915339865}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:11:34,634] Trial 158 finished with value: 0.24255205387473083 and parameters: {'model_name': 'VAE', 'batch_size': 282, 'iterations': 17, 'learning_rate': 0.000998360930189566, 'p_miss': 0.15543936976341777}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:12:17,908] Trial 159 finished with value: 0.24615025003635854 and parameters: {'model_name': 'VAE', 'batch_size': 234, 'iterations': 8, 'learning_rate': 0.0009176401405734513, 'p_miss': 0.07398238401868583}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:13:32,994] Trial 160 finished with value: 0.24421685707814905 and parameters: {'model_name': 'VAE', 'batch_size': 510, 'iterations': 12, 'learning_rate': 0.001120163276372333, 'p_miss': 0.14383163013565506}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:14:16,338] Trial 161 finished with value: 0.24234506947314652 and parameters: {'model_name': 'VAE', 'batch_size': 200, 'iterations': 9, 'learning_rate': 0.0013325180574071116, 'p_miss': 0.28727589393544295}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:14:40,250] Trial 162 finished with value: 0.2454371227260849 and parameters: {'model_name': 'VAE', 'batch_size': 156, 'iterations': 5, 'learning_rate': 0.0014778829024390521, 'p_miss': 0.13214824889331758}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:15:21,104] Trial 163 finished with value: 0.2421297812820593 and parameters: {'model_name': 'VAE', 'batch_size': 324, 'iterations': 7, 'learning_rate': 0.0017759252628471694, 'p_miss': 0.12113023101440823}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:15:44,521] Trial 164 finished with value: 0.2967900467302139 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:16:24,080] Trial 165 finished with value: 0.24387361117647316 and parameters: {'model_name': 'VAE', 'batch_size': 604, 'iterations': 7, 'learning_rate': 0.0021817529020097225, 'p_miss': 0.12586424815808533}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:17:07,186] Trial 166 finished with value: 0.24436126829736687 and parameters: {'model_name': 'VAE', 'batch_size': 363, 'iterations': 11, 'learning_rate': 0.0014460341504609776, 'p_miss': 0.11704483115556188}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:18:10,185] Trial 167 finished with value: 0.24466693591573074 and parameters: {'model_name': 'VAE', 'batch_size': 304, 'iterations': 14, 'learning_rate': 0.0017981040801658993, 'p_miss': 0.14447499676826026}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:18:59,610] Trial 168 finished with value: 0.247143361195551 and parameters: {'model_name': 'VAE', 'batch_size': 263, 'iterations': 9, 'learning_rate': 0.0012910989811396115, 'p_miss': 0.09744041031309408}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:19:14,536] Trial 169 finished with value: 0.24354364211462814 and parameters: {'model_name': 'VAE', 'batch_size': 216, 'iterations': 4, 'learning_rate': 0.0004176251558234396, 'p_miss': 0.031166937963000227}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:20:22,384] Trial 170 finished with value: 0.24314000175941947 and parameters: {'model_name': 'VAE', 'batch_size': 173, 'iterations': 18, 'learning_rate': 0.0010484939635387162, 'p_miss': 0.08841252522045762}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:20:55,665] Trial 171 finished with value: 0.24490748773597107 and parameters: {'model_name': 'VAE', 'batch_size': 432, 'iterations': 7, 'learning_rate': 0.00010953467504774649, 'p_miss': 0.07673050674354487}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:21:20,319] Trial 172 finished with value: 0.24204713922567578 and parameters: {'model_name': 'VAE', 'batch_size': 314, 'iterations': 5, 'learning_rate': 0.002198338452771585, 'p_miss': 0.10857691393171669}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:21:52,195] Trial 173 finished with value: 0.24173480550310272 and parameters: {'model_name': 'VAE', 'batch_size': 303, 'iterations': 5, 'learning_rate': 0.002111662686190082, 'p_miss': 0.10442174486711159}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:22:08,716] Trial 174 finished with value: 0.24479569320049258 and parameters: {'model_name': 'VAE', 'batch_size': 250, 'iterations': 3, 'learning_rate': 0.0023058002720513205, 'p_miss': 0.10119036278131412}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 05:22:28,572] Trial 175 finished with value: 0.24578669052101781 and parameters: {'model_name': 'VAE', 'batch_size': 193, 'iterations': 5, 'learning_rate': 0.0002774997494937525, 'p_miss': 0.10489589735195541}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:26:01,844] Trial 115 finished with value: 0.2982467178380136 and parameters: {'model_name': 'VAE', 'batch_size': 207, 'iterations': 6272, 'learning_rate': 0.0002209121319064069, 'p_miss': 0.12294522533975423}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:26:29,504] Trial 177 finished with value: 0.24617091230461777 and parameters: {'model_name': 'VAE', 'batch_size': 331, 'iterations': 4, 'learning_rate': 0.0027975511107246327, 'p_miss': 0.1084176780123114}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:26:41,865] Trial 178 finished with value: 0.24255766220900554 and parameters: {'model_name': 'VAE', 'batch_size': 399, 'iterations': 2, 'learning_rate': 0.0024167318260176133, 'p_miss': 0.11232931587731139}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:26:42,378] Trial 179 finished with value: 0.42836883918555807 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:27:19,713] Trial 180 finished with value: 0.24491374983813546 and parameters: {'model_name': 'VAE', 'batch_size': 315, 'iterations': 7, 'learning_rate': 0.0017246000631040057, 'p_miss': 0.06765240301175787}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:27:53,812] Trial 181 finished with value: 0.24153808833806342 and parameters: {'model_name': 'VAE', 'batch_size': 274, 'iterations': 6, 'learning_rate': 0.0020445624472534203, 'p_miss': 0.12022712408466915}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:28:18,679] Trial 182 finished with value: 0.243848155773156 and parameters: {'model_name': 'VAE', 'batch_size': 268, 'iterations': 6, 'learning_rate': 0.0011728418573877907, 'p_miss': 0.09562557392422745}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:29:07,555] Trial 183 finished with value: 0.2478217241140051 and parameters: {'model_name': 'VAE', 'batch_size': 220, 'iterations': 9, 'learning_rate': 0.003117440303443343, 'p_miss': 0.13468178352253735}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:29:30,330] Trial 184 finished with value: 0.24347678052627555 and parameters: {'model_name': 'VAE', 'batch_size': 162, 'iterations': 4, 'learning_rate': 0.0007473436519213138, 'p_miss': 0.11519522156342164}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:29:49,664] Trial 185 finished with value: 0.24349778793965177 and parameters: {'model_name': 'VAE', 'batch_size': 136, 'iterations': 5, 'learning_rate': 0.00013173928399301348, 'p_miss': 0.1638600206188136}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:30:20,092] Trial 186 finished with value: 0.24222765630835172 and parameters: {'model_name': 'VAE', 'batch_size': 291, 'iterations': 6, 'learning_rate': 0.001748605753041162, 'p_miss': 0.11850676182365838}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:30:50,278] Trial 187 finished with value: 0.24469002669015363 and parameters: {'model_name': 'VAE', 'batch_size': 357, 'iterations': 8, 'learning_rate': 0.0019946948089654627, 'p_miss': 0.1245071245607067}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:31:44,072] Trial 188 finished with value: 0.24217971301470112 and parameters: {'model_name': 'VAE', 'batch_size': 247, 'iterations': 13, 'learning_rate': 0.0015004213444567323, 'p_miss': 0.10944376461386404}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:32:01,104] Trial 189 finished with value: 0.24377787230733733 and parameters: {'model_name': 'VAE', 'batch_size': 433, 'iterations': 3, 'learning_rate': 0.000888612356842929, 'p_miss': 0.0862022967996123}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:32:22,668] Trial 190 finished with value: 0.4278328382686012 and parameters: {'model_name': 'GAIN', 'batch_size': 299, 'hint_rate': 0.8570081138706749, 'alpha': 35, 'iterations': 10, 'learning_rate': 0.0003359960470909453, 'p_miss': 0.15350570404016256}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:32:44,205] Trial 191 finished with value: 0.24411174389172885 and parameters: {'model_name': 'VAE', 'batch_size': 201, 'iterations': 5, 'learning_rate': 0.00018347409743579767, 'p_miss': 0.10285689289935498}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:32:53,077] Trial 192 finished with value: 0.2898045821471666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21972, 'weights': 'uniform'}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:33:36,110] Trial 193 finished with value: 0.24152938991500714 and parameters: {'model_name': 'VAE', 'batch_size': 504, 'iterations': 8, 'learning_rate': 0.0022528696951861775, 'p_miss': 0.13973088634849037}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:35:07,894] Trial 194 finished with value: 0.24756554058348068 and parameters: {'model_name': 'VAE', 'batch_size': 462, 'iterations': 14, 'learning_rate': 0.002602190994554521, 'p_miss': 0.14131080274926097}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:35:55,638] Trial 195 finished with value: 0.2410488563526294 and parameters: {'model_name': 'VAE', 'batch_size': 183, 'iterations': 11, 'learning_rate': 0.00047524695187307675, 'p_miss': 0.14690229957554063}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:36:47,815] Trial 196 finished with value: 0.24770185478304305 and parameters: {'model_name': 'VAE', 'batch_size': 148, 'iterations': 11, 'learning_rate': 0.00045832543409558623, 'p_miss': 0.14699723509664928}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:37:28,677] Trial 197 finished with value: 0.247639380645961 and parameters: {'model_name': 'VAE', 'batch_size': 680, 'iterations': 8, 'learning_rate': 0.00038371840554950057, 'p_miss': 0.15686600823125502}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:37:51,967] Trial 198 finished with value: 0.24448804473906863 and parameters: {'model_name': 'VAE', 'batch_size': 187, 'iterations': 6, 'learning_rate': 0.0006631928531396288, 'p_miss': 0.1292834976674325}. Best is trial 120 with value: 0.24065946262515384.
running
[I 2024-11-13 07:38:16,486] Trial 54 finished with value: 0.303532295671826 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 6151, 'learning_rate': 0.0005570095470159273, 'p_miss': 0.14912729354307028}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 07:38:55,645] Trial 199 finished with value: 0.2418691692274034 and parameters: {'model_name': 'VAE', 'batch_size': 237, 'iterations': 16, 'learning_rate': 0.00026023167961849395, 'p_miss': 0.13819371229795396}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 07:44:59,612] Trial 51 finished with value: 0.3101097288217285 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 7949, 'learning_rate': 0.0005993726507789065, 'p_miss': 0.1439984605958158}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 07:51:37,802] Trial 101 finished with value: 0.30466317219957245 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 7258, 'learning_rate': 0.0005936851908708001, 'p_miss': 0.16883228626536181}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:00:24,615] Trial 33 finished with value: 0.30591430373024353 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 9037, 'learning_rate': 0.08901435010524764, 'p_miss': 0.2955621129841691}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:01:56,522] Trial 41 finished with value: 0.29601872041326593 and parameters: {'model_name': 'VAE', 'batch_size': 919, 'iterations': 8004, 'learning_rate': 0.039986084230982905, 'p_miss': 0.11123561314121447}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:08:52,595] Trial 103 finished with value: 0.306440786387527 and parameters: {'model_name': 'VAE', 'batch_size': 40, 'iterations': 8550, 'learning_rate': 0.0006584395127371514, 'p_miss': 0.1504131181916819}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:13:16,277] Trial 50 finished with value: 0.30920075425189586 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 7969, 'learning_rate': 0.00010021956356005017, 'p_miss': 0.14042940672112475}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:14:31,584] Trial 31 finished with value: 0.29514715660880936 and parameters: {'model_name': 'VAE', 'batch_size': 824, 'iterations': 8385, 'learning_rate': 0.05378007246518058, 'p_miss': 0.29873094168690384}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:15:57,247] Trial 34 finished with value: 0.30734580617010904 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 9887, 'learning_rate': 0.08714182200627925, 'p_miss': 0.2997011237407039}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:21:24,349] Trial 108 finished with value: 0.2984817524706259 and parameters: {'model_name': 'VAE', 'batch_size': 212, 'iterations': 8171, 'learning_rate': 0.000197824181439043, 'p_miss': 0.13201181860457592}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:22:18,608] Trial 32 finished with value: 0.29561753717592787 and parameters: {'model_name': 'VAE', 'batch_size': 729, 'iterations': 9223, 'learning_rate': 0.0752308363835736, 'p_miss': 0.29990737208925233}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:26:32,469] Trial 128 finished with value: 0.3003043080909693 and parameters: {'model_name': 'VAE', 'batch_size': 177, 'iterations': 9439, 'learning_rate': 0.0002950138312179373, 'p_miss': 0.09206592445989221}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:42:14,969] Trial 148 finished with value: 0.29875854062284396 and parameters: {'model_name': 'VAE', 'batch_size': 233, 'iterations': 9634, 'learning_rate': 0.0006064979091491565, 'p_miss': 0.10850230965051165}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:43:17,532] Trial 155 finished with value: 0.29877997450723115 and parameters: {'model_name': 'VAE', 'batch_size': 286, 'iterations': 9473, 'learning_rate': 0.0010788564637880093, 'p_miss': 0.29022142728996236}. Best is trial 120 with value: 0.24065946262515384.
[I 2024-11-13 08:43:30,541] Trial 176 finished with value: 0.29679475529501 and parameters: {'model_name': 'VAE', 'batch_size': 319, 'iterations': 9393, 'learning_rate': 0.002687717671432816, 'p_miss': 0.10975762024781727}. Best is trial 120 with value: 0.24065946262515384.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.24065946262515384
{'model_name': 'VAE', 'batch_size': 199, 'iterations': 3, 'learning_rate': 0.00013636604830272045, 'p_miss': 0.12230399687082376}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0c70> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0df0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.061507577797995094
Generation:   4%|▍         | 1/25 [02:51<1:08:35, 171.46s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0b130> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0e20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  2
Best f1_score score: 0.061507577797995094
Generation:   8%|▊         | 2/25 [08:51<1:48:21, 282.68s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465194eb0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  3
Best f1_score score: 0.061507577797995094
Generation:  12%|█▏        | 3/25 [11:23<1:21:36, 222.56s/it]Generation:  4
Best f1_score score: 0.06318360132004526
Generation:  16%|█▌        | 4/25 [13:00<1:00:33, 173.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467177a60> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  5
Best f1_score score: 0.06678484848814181
Generation:  20%|██        | 5/25 [15:50<57:20, 172.05s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a2320> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467fe7ca0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  6
Best f1_score score: 0.06678484848814181
Generation:  24%|██▍       | 6/25 [21:57<1:15:28, 238.33s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554671dda20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.06678484848814181
Generation:  28%|██▊       | 7/25 [25:10<1:07:05, 223.66s/it]Generation:  8
Best f1_score score: 0.06678484848814181
Generation:  32%|███▏      | 8/25 [32:12<1:21:15, 286.81s/it]Generation:  9
Best f1_score score: 0.06678484848814181
Generation:  36%|███▌      | 9/25 [37:13<1:17:40, 291.26s/it]Generation:  10
Best f1_score score: 0.06678484848814181
Generation:  40%|████      | 10/25 [39:26<1:00:33, 242.26s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554657c2890> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  11
Best f1_score score: 0.06678484848814181
Generation:  44%|████▍     | 11/25 [42:12<51:06, 219.02s/it]  Generation:  12
Best f1_score score: 0.06678484848814181
Generation:  48%|████▊     | 12/25 [46:33<50:11, 231.67s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466c4aa70> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464eb5900> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  13
Best f1_score score: 0.06678484848814181
Generation:  52%|█████▏    | 13/25 [53:13<56:32, 282.71s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747364d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.06678484848814181
Generation:  56%|█████▌    | 14/25 [58:05<52:22, 285.64s/it]Generation:  15
Best f1_score score: 0.06678484848814181
Generation:  60%|██████    | 15/25 [1:02:56<47:52, 287.25s/it]Generation:  16
Best f1_score score: 0.06678484848814181
Generation:  64%|██████▍   | 16/25 [1:04:51<35:17, 235.22s/it]Generation:  17
Best f1_score score: 0.06678484848814181
Generation:  68%|██████▊   | 17/25 [1:09:11<32:21, 242.68s/it]Generation:  18
Best f1_score score: 0.06678484848814181
Generation:  72%|███████▏  | 18/25 [1:18:22<39:07, 335.33s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546728af50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  19
Best f1_score score: 0.06678484848814181
Generation:  76%|███████▌  | 19/25 [1:23:16<32:17, 322.89s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467670b50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  20
Best f1_score score: 0.06678484848814181
Generation:  80%|████████  | 20/25 [1:31:26<31:06, 373.23s/it]Generation:  21
Best f1_score score: 0.06678484848814181
Generation:  84%|████████▍ | 21/25 [1:35:29<22:15, 333.90s/it]Generation:  22
Best f1_score score: 0.06678484848814181
Generation:  88%|████████▊ | 22/25 [1:39:33<15:21, 307.18s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465387ee0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  23
Best f1_score score: 0.06678484848814181
Generation:  92%|█████████▏| 23/25 [1:46:17<11:12, 336.00s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466efff70> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.06678484848814181
Generation:  96%|█████████▌| 24/25 [1:50:03<05:03, 303.11s/it]Generation:  25
Best f1_score score: 0.06678484848814181
Generation: 100%|██████████| 25/25 [1:54:47<00:00, 297.49s/it]Generation: 100%|██████████| 25/25 [1:54:52<00:00, 275.69s/it]
2024-11-13 10:38:35,493 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46315' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-99d2a838b7a1da59b6e78761e0c9c140', 'ndarray-04ef1e3a7246aa787bf6714e77e9803f'} (stimulus_id='handle-worker-cleanup-1731523115.4933279')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(class_weight='balanced', max_depth=9,
                                n_estimators=85, n_jobs=1, num_leaves=221,
                                verbose=-1))])
score start
train score: {'auroc': 0.9789906032066832, 'accuracy': 0.7604259490286936, 'balanced_accuracy': 0.882108620886668, 'logloss': 1.2253711523747977, 'f1': 0.7562479965341703}
original test score: {'auroc': 0.5374758879512409, 'accuracy': 0.1443335709194583, 'balanced_accuracy': 0.06419178264328393, 'logloss': 2.608729745373135, 'f1': 0.05315350715749841}
imputed test score: {'auroc': 0.46922812802011926, 'accuracy': 0.08624376336421953, 'balanced_accuracy': 0.050331000026713896, 'logloss': 2.8589971008720476, 'f1': 0.05038020647655515}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747243a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0ca0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 382, in predict
    scores = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 760, in decision_function
    return super().decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 363, in decision_function
    X = self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fdab0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.15515265766974567
Generation:   4%|▍         | 1/25 [07:42<3:04:59, 462.48s/it]Generation:  2
Best f1_score score: 0.16079087674635892
Generation:   8%|▊         | 2/25 [15:34<2:59:26, 468.09s/it]Generation:  3
Best f1_score score: 0.17330255949515028
Generation:  12%|█▏        | 3/25 [23:05<2:48:49, 460.41s/it]Generation:  4
Best f1_score score: 0.17330255949515028
Generation:  16%|█▌        | 4/25 [30:44<2:40:56, 459.84s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547473a7a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546786d000> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  5
Best f1_score score: 0.17330255949515028
Generation:  20%|██        | 5/25 [39:35<2:41:49, 485.48s/it]Generation:  6
Best f1_score score: 0.17330255949515028
Generation:  24%|██▍       | 6/25 [42:23<1:59:31, 377.43s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467841f90> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.17330255949515028
Generation:  28%|██▊       | 7/25 [50:12<2:02:13, 407.43s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fc2e0> 

Generation:  8
Best f1_score score: 0.17520492162987913
Generation:  32%|███▏      | 8/25 [1:00:17<2:13:15, 470.32s/it]Generation:  9
Best f1_score score: 0.17520492162987913
Generation:  36%|███▌      | 9/25 [1:03:06<1:40:17, 376.09s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465587f10> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.17520492162987913
Generation:  40%|████      | 10/25 [1:10:30<1:39:15, 397.01s/it]Generation:  11
Best f1_score score: 0.17520492162987913
Generation:  44%|████▍     | 11/25 [1:15:10<1:24:15, 361.13s/it]Generation:  12
Best f1_score score: 0.17520492162987913
Generation:  48%|████▊     | 12/25 [1:18:19<1:06:55, 308.90s/it]Generation:  13
Best f1_score score: 0.17520492162987913
Generation:  52%|█████▏    | 13/25 [1:23:26<1:01:40, 308.37s/it]Generation:  14
Best f1_score score: 0.17520492162987913
Generation:  56%|█████▌    | 14/25 [1:31:00<1:04:34, 352.23s/it]Generation:  15
Best f1_score score: 0.17520492162987913
Generation:  60%|██████    | 15/25 [1:33:53<49:43, 298.39s/it]  Generation:  16
Best f1_score score: 0.17520492162987913
Generation:  64%|██████▍   | 16/25 [1:38:05<42:38, 284.28s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554676f40d0> 

Generation:  17
Best f1_score score: 0.17520492162987913
Generation:  68%|██████▊   | 17/25 [1:48:12<50:51, 381.44s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547471beb0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  18
Best f1_score score: 0.17520492162987913
Generation:  72%|███████▏  | 18/25 [1:51:01<37:02, 317.49s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452202710> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.17520492162987913
Generation:  76%|███████▌  | 19/25 [1:54:25<28:19, 283.32s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467eacfd0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.17520492162987913
Generation:  80%|████████  | 20/25 [1:59:02<23:27, 281.57s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464befb50> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  21
Best f1_score score: 0.17520492162987913
Generation:  84%|████████▍ | 21/25 [2:06:59<22:40, 340.12s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546531f070> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451f41f00> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.17520492162987913
Generation:  88%|████████▊ | 22/25 [2:15:01<19:08, 382.77s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554654f03a0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.17520492162987913
Generation:  92%|█████████▏| 23/25 [2:22:58<13:42, 411.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ebf580> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.17520492162987913
Generation:  96%|█████████▌| 24/25 [2:31:05<07:13, 433.95s/it]Generation:  25
Best f1_score score: 0.17560857651164563
Generation: 100%|██████████| 25/25 [2:33:55<00:00, 354.62s/it]Generation: 100%|██████████| 25/25 [2:33:55<00:00, 369.41s/it]
2024-11-13 13:13:17,603 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37645' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-0022d9ac2721d6b8957dda4cbafddb81', 'ndarray-04ef1e3a7246aa787bf6714e77e9803f'} (stimulus_id='handle-worker-cleanup-1731532397.603621')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.9572465838611,
                                      min_samples_leaf=3, min_samples_split=10,
                                      n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9325346713635922, 'accuracy': 0.4474692568169667, 'balanced_accuracy': 0.29399547981776475, 'logloss': 1.5230855684678122, 'f1': 0.3220273243257517}
test score: {'auroc': 0.7689661873816892, 'accuracy': 0.2517818959372773, 'balanced_accuracy': 0.1466988079148378, 'logloss': 2.472366406117185, 'f1': 0.1549030502849358}
original test score: {'auroc': 0.9210134308138191, 'accuracy': 0.4613328581610834, 'balanced_accuracy': 0.35177587026825735, 'logloss': 1.5306758077800364, 'f1': 0.3564901780737853}
score end
1481
lvl
0.5
type
MNAR
num_run
1
class_full
finished
all finished
full run takes
14.840627344316907
hours
DONE
