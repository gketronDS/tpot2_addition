Run: 28
/cm/local/apps/slurm/var/spool/job1032689/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/871/871.pkl
working on 
../data/c/871/class_full_MCAR_0.5_2
2.6236982345581055
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-30 10:42:18,308] A new study created in memory with name: no-name-0fe598d0-393c-4403-b172-bc509dc1d9a0
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-30 10:42:18,476] Trial 4 finished with value: 0.2079361250484614 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.2079361250484614.
running
[I 2024-10-30 10:42:18,728] Trial 14 finished with value: 0.3334887664731639 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.2079361250484614.
running
[I 2024-10-30 10:42:18,938] Trial 6 finished with value: 0.3771792042845493 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.2079361250484614.
running
[I 2024-10-30 10:42:19,051] Trial 15 finished with value: 0.3771792042845493 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.2079361250484614.
running
[I 2024-10-30 10:42:19,204] Trial 9 finished with value: 0.3771792042845493 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.2079361250484614.
running
[I 2024-10-30 10:42:19,785] Trial 13 finished with value: 0.2431796824704276 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1139, 'weights': 'distance'}. Best is trial 4 with value: 0.2079361250484614.
running
[I 2024-10-30 10:42:19,907] Trial 11 finished with value: 0.2063237343668823 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1239, 'weights': 'uniform'}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:20,123] Trial 21 finished with value: 0.3771792042845493 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:20,328] Trial 23 finished with value: 0.2079361250484614 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:20,492] Trial 8 finished with value: 0.2063852171789186 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1346, 'weights': 'uniform'}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:20,790] Trial 19 finished with value: 0.24315582103977462 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1569, 'weights': 'distance'}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:25,056] Trial 10 finished with value: 0.20687597071775038 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:25,368] Trial 1 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.8664020021521297, 'alpha': 92, 'iterations': 2, 'learning_rate': 0.035871837667952426, 'p_miss': 0.2808861827843253}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:26,068] Trial 7 finished with value: 0.3508917107056282 and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.10287722621543337, 'alpha': 21, 'iterations': 1, 'learning_rate': 0.00016271258339175577, 'p_miss': 0.12429136670279908}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:26,213] Trial 12 finished with value: 0.3317689437097619 and parameters: {'model_name': 'GAIN', 'batch_size': 36, 'hint_rate': 0.29783837817946196, 'alpha': 76, 'iterations': 1, 'learning_rate': 0.04859250527756438, 'p_miss': 0.28520599140215236}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:26,595] Trial 3 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.9570619021560093, 'alpha': 79, 'iterations': 11, 'learning_rate': 0.008026366342518828, 'p_miss': 0.20265155849567804}. Best is trial 11 with value: 0.2063237343668823.
running
[I 2024-10-30 10:42:26,919] Trial 27 finished with value: 0.20618621487476857 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 742, 'weights': 'uniform'}. Best is trial 27 with value: 0.20618621487476857.
running
[I 2024-10-30 10:42:27,133] Trial 28 finished with value: 0.2061705966677938 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 736, 'weights': 'uniform'}. Best is trial 28 with value: 0.2061705966677938.
running
[I 2024-10-30 10:42:27,462] Trial 20 finished with value: 0.3532378773332356 and parameters: {'model_name': 'GAIN', 'batch_size': 19, 'hint_rate': 0.22266428295815663, 'alpha': 19, 'iterations': 2, 'learning_rate': 0.0001767880562353915, 'p_miss': 0.13144495433234685}. Best is trial 28 with value: 0.2061705966677938.
running
[I 2024-10-30 10:42:27,889] Trial 0 finished with value: 0.20775699360372935 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 28 with value: 0.2061705966677938.
running
[I 2024-10-30 10:42:28,424] Trial 29 finished with value: 0.20630064085981883 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 823, 'weights': 'uniform'}. Best is trial 28 with value: 0.2061705966677938.
running
[I 2024-10-30 10:42:28,704] Trial 30 finished with value: 0.20625455908999527 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 788, 'weights': 'uniform'}. Best is trial 28 with value: 0.2061705966677938.
running
[I 2024-10-30 10:42:28,917] Trial 16 finished with value: 0.3470699215361731 and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.6630971572679181, 'alpha': 97, 'iterations': 3, 'learning_rate': 0.0006437719677826935, 'p_miss': 0.15332411133227997}. Best is trial 28 with value: 0.2061705966677938.
running
[I 2024-10-30 10:42:29,595] Trial 31 finished with value: 0.20616203574301234 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 649, 'weights': 'uniform'}. Best is trial 31 with value: 0.20616203574301234.
running
[I 2024-10-30 10:42:34,181] Trial 25 finished with value: 0.28804881693929496 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 31 with value: 0.20616203574301234.
running
[I 2024-10-30 10:42:34,711] Trial 26 finished with value: 0.2073803124053703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 31 with value: 0.20616203574301234.
running
[I 2024-10-30 10:42:35,122] Trial 17 finished with value: 0.18394489395995922 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 3, 'learning_rate': 0.07526990283666098, 'p_miss': 0.09351247962370729}. Best is trial 17 with value: 0.18394489395995922.
running
[I 2024-10-30 10:42:36,221] Trial 5 finished with value: 0.3648325440988281 and parameters: {'model_name': 'GAIN', 'batch_size': 167, 'hint_rate': 0.06912957469498993, 'alpha': 51, 'iterations': 6, 'learning_rate': 0.00018031394080928134, 'p_miss': 0.04463677943138241}. Best is trial 17 with value: 0.18394489395995922.
running
[I 2024-10-30 10:42:36,653] Trial 41 finished with value: 0.20421605333158016 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 57, 'weights': 'uniform'}. Best is trial 17 with value: 0.18394489395995922.
running
[I 2024-10-30 10:44:28,503] Trial 2 finished with value: 0.11008548563932899 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 40, 'learning_rate': 0.0010850345025491973, 'p_miss': 0.2747473899389758}. Best is trial 2 with value: 0.11008548563932899.
running
[I 2024-10-30 10:48:41,462] Trial 24 finished with value: 0.11751133293798813 and parameters: {'model_name': 'VAE', 'batch_size': 73, 'iterations': 102, 'learning_rate': 0.000144032239848368, 'p_miss': 0.1999422459368731}. Best is trial 2 with value: 0.11008548563932899.
running
[I 2024-10-30 10:54:27,775] Trial 22 finished with value: 0.2162956396996361 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 2 with value: 0.11008548563932899.
running
[I 2024-10-30 10:54:53,429] Trial 18 finished with value: 0.21569187106736482 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 2 with value: 0.11008548563932899.
running
[I 2024-10-30 11:04:56,076] Trial 46 finished with value: 0.23398477654192748 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 305, 'learning_rate': 0.001674518912396033, 'p_miss': 0.21588305000225574}. Best is trial 2 with value: 0.11008548563932899.
running
[I 2024-10-30 11:09:32,499] Trial 49 finished with value: 0.2164622296465552 and parameters: {'model_name': 'VAE', 'batch_size': 150, 'iterations': 78, 'learning_rate': 0.007109175723260628, 'p_miss': 0.0742110758717737}. Best is trial 2 with value: 0.11008548563932899.
running
[I 2024-10-30 11:12:00,646] Trial 50 finished with value: 0.10707951399078122 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 37, 'learning_rate': 0.0008921219886117577, 'p_miss': 0.21861307981104647}. Best is trial 50 with value: 0.10707951399078122.
running
[I 2024-10-30 11:12:30,257] Trial 48 finished with value: 0.2441191077872853 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 310, 'learning_rate': 0.0017437319904662007, 'p_miss': 0.21385198067000416}. Best is trial 50 with value: 0.10707951399078122.
running
[I 2024-10-30 11:14:26,475] Trial 51 finished with value: 0.11481579420689778 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 42, 'learning_rate': 0.000882966470578756, 'p_miss': 0.22073296978740561}. Best is trial 50 with value: 0.10707951399078122.
running
[I 2024-10-30 11:14:53,892] Trial 52 finished with value: 0.11443381025646067 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 29, 'learning_rate': 0.0005814365392123564, 'p_miss': 0.23951789134507123}. Best is trial 50 with value: 0.10707951399078122.
running
[I 2024-10-30 11:15:15,133] Trial 42 finished with value: 0.21659166945372466 and parameters: {'model_name': 'VAE', 'batch_size': 121, 'iterations': 532, 'learning_rate': 0.003424683813922996, 'p_miss': 0.023519396066174827}. Best is trial 50 with value: 0.10707951399078122.
running
[I 2024-10-30 11:16:19,102] Trial 54 finished with value: 0.10612745297209603 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 23, 'learning_rate': 0.0006286477149527698, 'p_miss': 0.2517348182069152}. Best is trial 54 with value: 0.10612745297209603.
running
[I 2024-10-30 11:16:26,586] Trial 55 finished with value: 0.1083709992687509 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 22, 'learning_rate': 0.0005475505235378658, 'p_miss': 0.2487486022057527}. Best is trial 54 with value: 0.10612745297209603.
running
[I 2024-10-30 11:17:09,876] Trial 53 finished with value: 0.11641457609573644 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 48, 'learning_rate': 0.0006307801176370876, 'p_miss': 0.2440470034649963}. Best is trial 54 with value: 0.10612745297209603.
running
[I 2024-10-30 11:17:40,162] Trial 56 finished with value: 0.10883099035686153 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 20, 'learning_rate': 0.0006158480249259151, 'p_miss': 0.25058327650950885}. Best is trial 54 with value: 0.10612745297209603.
running
[I 2024-10-30 11:17:42,092] Trial 57 finished with value: 0.10782434345182779 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 26, 'learning_rate': 0.0006063542812248842, 'p_miss': 0.2518891911411418}. Best is trial 54 with value: 0.10612745297209603.
running
[I 2024-10-30 11:18:31,669] Trial 58 finished with value: 0.11236787998677777 and parameters: {'model_name': 'VAE', 'batch_size': 682, 'iterations': 17, 'learning_rate': 0.0003967597088665937, 'p_miss': 0.2588076108880829}. Best is trial 54 with value: 0.10612745297209603.
running
[I 2024-10-30 11:18:38,525] Trial 59 finished with value: 0.10533276287834863 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 15, 'learning_rate': 0.0003405048207339586, 'p_miss': 0.26158760294944755}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 11:18:59,590] Trial 60 finished with value: 0.11170018239594486 and parameters: {'model_name': 'VAE', 'batch_size': 925, 'iterations': 15, 'learning_rate': 0.00032616789758227764, 'p_miss': 0.2511411752254617}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 11:34:48,857] Trial 44 finished with value: 0.27336792699099854 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 903, 'learning_rate': 0.004596259767359388, 'p_miss': 0.012793429166274267}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 11:35:14,322] Trial 64 finished with value: 0.10735873384114684 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 7, 'learning_rate': 0.0003041597187720285, 'p_miss': 0.29868920896376244}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 11:36:00,299] Trial 47 finished with value: 0.26425938325641185 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 712, 'learning_rate': 0.0016899278599801495, 'p_miss': 0.22269740840170782}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 11:36:21,898] Trial 66 finished with value: 0.12350389816210708 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 6, 'learning_rate': 0.00035542232187474765, 'p_miss': 0.2699826417701835}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 12:04:41,974] Trial 45 finished with value: 0.2847145857469101 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1219, 'learning_rate': 0.0029589860748080628, 'p_miss': 0.05868022113648106}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 12:09:54,487] Trial 43 finished with value: 0.27697499163723055 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1383, 'learning_rate': 0.005553478797455945, 'p_miss': 0.02680709053181926}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 12:10:29,036] Trial 69 finished with value: 0.12137736447717092 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 8, 'learning_rate': 0.0002791474553456385, 'p_miss': 0.298404437060775}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 12:16:10,817] Trial 70 finished with value: 0.12095249983389507 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 109, 'learning_rate': 0.00025972176706343537, 'p_miss': 0.28953488202323524}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 12:17:39,825] Trial 71 finished with value: 0.12193863733058238 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 23, 'learning_rate': 0.0011139369254355195, 'p_miss': 0.1831091855820639}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 13:21:31,426] Trial 37 finished with value: 0.2157404845173539 and parameters: {'model_name': 'VAE', 'batch_size': 608, 'iterations': 2021, 'learning_rate': 0.0014618218995642931, 'p_miss': 0.013131343664606276}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 13:21:40,245] Trial 73 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.48141835008549966, 'alpha': 0, 'iterations': 8, 'learning_rate': 0.00010086140857544684, 'p_miss': 0.2711386702480141}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:42:41,481] Trial 61 finished with value: 0.21437920983194192 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 3813, 'learning_rate': 0.00036803872613814137, 'p_miss': 0.24787679724577355}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:43:23,457] Trial 75 finished with value: 0.1170702603794713 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 12, 'learning_rate': 0.0004963027012816368, 'p_miss': 0.269597874613667}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:44:54,344] Trial 76 finished with value: 0.11142971424392516 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 25, 'learning_rate': 0.000909285260051505, 'p_miss': 0.23650952770858064}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:48:11,887] Trial 77 finished with value: 0.11547245074953691 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 52, 'learning_rate': 0.0006993584585727962, 'p_miss': 0.2581566985752278}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:49:20,858] Trial 78 finished with value: 0.11582150719136056 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 18, 'learning_rate': 0.00023447377494364977, 'p_miss': 0.280586342126797}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:49:36,941] Trial 79 finished with value: 0.11481307715573094 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 4, 'learning_rate': 0.00045710025234725464, 'p_miss': 0.23231320350527135}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:50:52,178] Trial 62 finished with value: 0.21084511439094972 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 3358, 'learning_rate': 0.0003299854752393093, 'p_miss': 0.1806463610486717}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:50:52,549] Trial 81 finished with value: 0.3334887664731639 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:51:42,958] Trial 82 finished with value: 0.3393326742832664 and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.6593309277994661, 'alpha': 50, 'iterations': 30, 'learning_rate': 0.0011180496281618163, 'p_miss': 0.26226572003129534}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:51:46,770] Trial 80 finished with value: 0.21444936435034556 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 31, 'learning_rate': 0.014398271812427678, 'p_miss': 0.26182504245949717}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:51:52,861] Trial 83 finished with value: 0.21094695554893658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:51:57,246] Trial 84 finished with value: 0.21094695554893658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:52:32,356] Trial 85 finished with value: 0.105801968409259 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 11, 'learning_rate': 0.0007629338512550845, 'p_miss': 0.29265212233257876}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:52:46,481] Trial 86 finished with value: 0.11085375255489402 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 12, 'learning_rate': 0.0007564333301909574, 'p_miss': 0.28311748625306543}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:53:16,120] Trial 88 finished with value: 0.11424585406728276 and parameters: {'model_name': 'VAE', 'batch_size': 37, 'iterations': 7, 'learning_rate': 0.00047638114196880634, 'p_miss': 0.2902588974937152}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:53:19,182] Trial 87 finished with value: 0.12358078880338781 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 11, 'learning_rate': 0.0007457988348845521, 'p_miss': 0.29474022999218424}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:53:38,141] Trial 90 finished with value: 0.11338365818527245 and parameters: {'model_name': 'VAE', 'batch_size': 51, 'iterations': 4, 'learning_rate': 0.00021377805445675998, 'p_miss': 0.2770749975120625}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:53:55,282] Trial 89 finished with value: 0.11352062664174882 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 11, 'learning_rate': 0.00020584349461753163, 'p_miss': 0.2974541233446333}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:53:55,554] Trial 92 finished with value: 0.3771792042845493 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:56:58,495] Trial 91 finished with value: 0.11989178855156601 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 57, 'learning_rate': 0.0012195462363271071, 'p_miss': 0.2308599950310625}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:57:28,819] Trial 93 finished with value: 0.13025439087328708 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 66, 'learning_rate': 0.0012810191244449077, 'p_miss': 0.23338358006805354}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 14:58:42,131] Trial 95 finished with value: 0.11481318256956148 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 19, 'learning_rate': 0.002343064748690932, 'p_miss': 0.2506362766516338}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:05:10,627] Trial 94 finished with value: 0.20986489887977244 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 135, 'learning_rate': 0.0024287925582316978, 'p_miss': 0.2491028260040135}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:06:56,959] Trial 96 finished with value: 0.11950583806704802 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 115, 'learning_rate': 0.0005485084693205112, 'p_miss': 0.28079540762300476}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:07:42,461] Trial 97 finished with value: 0.1254357371874036 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 35, 'learning_rate': 0.0005683983139785613, 'p_miss': 0.27686867727480147}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:07:47,487] Trial 99 finished with value: 0.34194136204914927 and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.44308545076938466, 'alpha': 55, 'iterations': 2, 'learning_rate': 0.0008278313121497758, 'p_miss': 0.20086026053351402}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:08:54,487] Trial 98 finished with value: 0.10845764405032435 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 30, 'learning_rate': 0.0009395997587135731, 'p_miss': 0.2664544284033817}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:09:22,432] Trial 100 finished with value: 0.11473567841645309 and parameters: {'model_name': 'VAE', 'batch_size': 51, 'iterations': 21, 'learning_rate': 0.00013873931940384831, 'p_miss': 0.2636570331318993}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:10:25,680] Trial 102 finished with value: 0.1177468041469324 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 14, 'learning_rate': 0.0009672488027774922, 'p_miss': 0.1329410896504306}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:10:31,354] Trial 101 finished with value: 0.11856078132184793 and parameters: {'model_name': 'VAE', 'batch_size': 51, 'iterations': 22, 'learning_rate': 0.0009994402094613474, 'p_miss': 0.26275087665690167}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:10:48,316] Trial 103 finished with value: 0.1175767905523234 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 5, 'learning_rate': 0.0006399299039702671, 'p_miss': 0.21211658267788058}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:11:25,818] Trial 105 finished with value: 0.10792025260397516 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 9, 'learning_rate': 0.0004214888740829501, 'p_miss': 0.25258642545959986}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:12:05,078] Trial 106 finished with value: 0.11217996520166147 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 9, 'learning_rate': 0.00044861415472304336, 'p_miss': 0.24363121951564023}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:13:08,707] Trial 104 finished with value: 0.10904392375713719 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 38, 'learning_rate': 0.00043491044240504337, 'p_miss': 0.22595369146235805}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:14:13,370] Trial 108 finished with value: 0.10674208651412813 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 15, 'learning_rate': 0.0003460693721367662, 'p_miss': 0.25433683578952243}. Best is trial 59 with value: 0.10533276287834863.
running
[I 2024-10-30 15:14:49,050] Trial 107 finished with value: 0.10438135151248676 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 38, 'learning_rate': 0.00029265582284612496, 'p_miss': 0.25585608725271647}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:15:24,205] Trial 109 finished with value: 0.11722995451927216 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 15, 'learning_rate': 0.0003071348832149476, 'p_miss': 0.25602404583764987}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:15:39,914] Trial 110 finished with value: 0.12266151067198516 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 15, 'learning_rate': 0.0002968711359938156, 'p_miss': 0.25470859361430426}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:15:40,294] Trial 112 finished with value: 0.2079361250484614 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:15:44,876] Trial 111 finished with value: 0.11142501957169085 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 5, 'learning_rate': 0.0001617707486898358, 'p_miss': 0.24388233120992947}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:15:46,869] Trial 114 finished with value: 0.20783801855722417 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:15:48,299] Trial 115 finished with value: 0.24331687622448062 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2884, 'weights': 'distance'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:18:09,939] Trial 116 finished with value: 0.11098893059852441 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 36, 'learning_rate': 0.00038698533513131415, 'p_miss': 0.274440070654247}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:20:59,184] Trial 113 finished with value: 0.1066487666208474 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 74, 'learning_rate': 0.00017867383788774501, 'p_miss': 0.23992120438665684}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:22:46,923] Trial 117 finished with value: 0.10856999444462918 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 84, 'learning_rate': 0.0002553514341584286, 'p_miss': 0.2687321815067607}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:26:06,790] Trial 119 finished with value: 0.11549537776915583 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 46, 'learning_rate': 0.00013136089585714632, 'p_miss': 0.23878301400968915}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:26:47,721] Trial 120 finished with value: 0.122151922237502 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 9, 'learning_rate': 0.0003812309100260227, 'p_miss': 0.22475964063902143}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:32:01,709] Trial 118 finished with value: 0.11207734850741453 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 173, 'learning_rate': 0.00025046605961256984, 'p_miss': 0.23850828696443044}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:36:25,839] Trial 122 finished with value: 0.1171319765578148 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 67, 'learning_rate': 0.0005308407505560045, 'p_miss': 0.21249992031880885}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:37:05,700] Trial 123 finished with value: 0.34763109052056634 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.7292272968867116, 'alpha': 32, 'iterations': 23, 'learning_rate': 0.0003253772088899275, 'p_miss': 0.18899486705125054}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:37:16,892] Trial 124 finished with value: 0.11297696948111109 and parameters: {'model_name': 'VAE', 'batch_size': 38, 'iterations': 3, 'learning_rate': 0.00017793221783349864, 'p_miss': 0.2876302829774857}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 15:39:31,941] Trial 121 finished with value: 0.10827168315466273 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 196, 'learning_rate': 0.00017547537232011698, 'p_miss': 0.2082114194234948}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:00:29,277] Trial 126 finished with value: 0.11943286071894788 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 258, 'learning_rate': 0.0001911485138181413, 'p_miss': 0.2548951862396782}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:11:11,235] Trial 35 finished with value: 0.21557300344209365 and parameters: {'model_name': 'VAE', 'batch_size': 980, 'iterations': 3804, 'learning_rate': 0.001419753971255784, 'p_miss': 0.02373745924155915}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:13:07,836] Trial 128 finished with value: 0.10968841614494129 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 26, 'learning_rate': 0.00022340163562687717, 'p_miss': 0.2437526695950727}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:30:41,966] Trial 127 finished with value: 0.13932794464617276 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 458, 'learning_rate': 0.0002251128211701896, 'p_miss': 0.22197711674665688}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:31:19,474] Trial 130 finished with value: 0.10775053355951988 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 10, 'learning_rate': 0.00011494071990064111, 'p_miss': 0.2289613683548679}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:31:46,858] Trial 131 finished with value: 0.10891793368079053 and parameters: {'model_name': 'VAE', 'batch_size': 291, 'iterations': 6, 'learning_rate': 0.00010278225847986287, 'p_miss': 0.19140020167975436}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:32:33,692] Trial 132 finished with value: 0.11896762240877164 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 10, 'learning_rate': 0.00012624923220462919, 'p_miss': 0.16301525312099652}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:35:25,160] Trial 72 finished with value: 0.2440419490008079 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 4206, 'learning_rate': 0.0004806649670868923, 'p_miss': 0.26920532838204414}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:35:50,978] Trial 134 finished with value: 0.1069815141322985 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 7, 'learning_rate': 0.00014913208021938325, 'p_miss': 0.20684728983704453}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:35:51,208] Trial 135 finished with value: 0.3771792042845493 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:36:15,837] Trial 136 finished with value: 0.11345253366836479 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 7, 'learning_rate': 0.0001548399851753059, 'p_miss': 0.20632216718106747}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:37:02,442] Trial 137 finished with value: 0.10911964504889264 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 13, 'learning_rate': 0.00011571756778907387, 'p_miss': 0.2291542676388569}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:42:50,913] Trial 129 finished with value: 0.1161278450655148 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 465, 'learning_rate': 0.00011428103347119204, 'p_miss': 0.16072236523404076}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:43:07,508] Trial 139 finished with value: 0.1162752075289557 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4, 'learning_rate': 0.0001758543129762874, 'p_miss': 0.2329474249062578}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:44:02,706] Trial 140 finished with value: 0.10998926776385769 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 17, 'learning_rate': 0.0002640819006036305, 'p_miss': 0.21645890712706428}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:44:04,297] Trial 141 finished with value: 0.24331687622448062 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3006, 'weights': 'distance'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:44:28,978] Trial 142 finished with value: 0.11360434192756433 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 7, 'learning_rate': 0.00015353696566406498, 'p_miss': 0.2996219946798351}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:54:10,413] Trial 143 finished with value: 0.21741019525982735 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:54:56,742] Trial 144 finished with value: 0.12102864696135462 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 11, 'learning_rate': 0.00019895809234500884, 'p_miss': 0.2055401881628525}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:57:21,624] Trial 36 finished with value: 0.21571746082926394 and parameters: {'model_name': 'VAE', 'batch_size': 916, 'iterations': 5067, 'learning_rate': 0.0013428757684212666, 'p_miss': 0.010766205683858443}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:57:28,533] Trial 145 finished with value: 0.20625505966888302 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 44, 'learning_rate': 0.015865209352631627, 'p_miss': 0.1948672134392173}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:58:27,486] Trial 146 finished with value: 0.11777277458454671 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 17, 'learning_rate': 0.0006869986802817522, 'p_miss': 0.24786845577983893}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 16:58:30,267] Trial 147 finished with value: 0.11889060629431687 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 16, 'learning_rate': 0.0007448757775074507, 'p_miss': 0.24918442310595074}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:00:03,593] Trial 149 finished with value: 0.11305614136468026 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 28, 'learning_rate': 0.0004189020763806967, 'p_miss': 0.25768098895222613}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:00:27,415] Trial 148 finished with value: 0.10690427008961452 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 27, 'learning_rate': 0.00040333755545122584, 'p_miss': 0.2379538026472217}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:00:59,384] Trial 151 finished with value: 0.11542030807028 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 8, 'learning_rate': 0.0003510565163672979, 'p_miss': 0.23808902401617998}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:03:13,493] Trial 150 finished with value: 0.11019005648286369 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 55, 'learning_rate': 0.0003459120491280499, 'p_miss': 0.21922847612441887}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:04:08,533] Trial 153 finished with value: 0.3409938833615271 and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.32304537526287197, 'alpha': 4, 'iterations': 35, 'learning_rate': 0.00029474099956124073, 'p_miss': 0.227205833971991}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:04:28,290] Trial 154 finished with value: 0.10961004469904807 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 5, 'learning_rate': 0.0005011112136605692, 'p_miss': 0.283888536404564}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:06:18,899] Trial 152 finished with value: 0.11294028710529047 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 83, 'learning_rate': 0.0003333328101682249, 'p_miss': 0.2171080775000722}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:09:59,155] Trial 155 finished with value: 0.11902806446638352 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 88, 'learning_rate': 0.0005814477811029283, 'p_miss': 0.27305778879015574}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:11:13,757] Trial 157 finished with value: 0.12192027031870947 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 20, 'learning_rate': 0.00041482982861025297, 'p_miss': 0.24313261973277933}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:11:55,490] Trial 158 finished with value: 0.1112641940774141 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 12, 'learning_rate': 0.00065701024865124, 'p_miss': 0.29295215463126717}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:13:48,769] Trial 159 finished with value: 0.11168161624636674 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 26, 'learning_rate': 0.0002890843641495931, 'p_miss': 0.2531110224351858}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:14:30,571] Trial 160 finished with value: 0.10750588333469849 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 10, 'learning_rate': 0.0008153337049438793, 'p_miss': 0.2598666466620792}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:15:09,757] Trial 161 finished with value: 0.11261422719762477 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 8, 'learning_rate': 0.00048672468197440914, 'p_miss': 0.09145786709646116}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:15:44,611] Trial 162 finished with value: 0.11318228307689993 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 10, 'learning_rate': 0.00024152608234676587, 'p_miss': 0.2617116474076477}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:16:33,355] Trial 163 finished with value: 0.10971972874649019 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 13, 'learning_rate': 0.000816646917735579, 'p_miss': 0.23528666196995154}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:19:00,591] Trial 164 finished with value: 0.10581987480466512 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 42, 'learning_rate': 0.0001471538269771152, 'p_miss': 0.2651997884375922}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:19:29,062] Trial 165 finished with value: 0.2541749554729817 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 6, 'learning_rate': 0.06976056172667254, 'p_miss': 0.2763912263743682}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:22:05,380] Trial 166 finished with value: 0.12168709984194823 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 44, 'learning_rate': 0.00013239278607159614, 'p_miss': 0.2669528270819651}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:25:04,437] Trial 167 finished with value: 0.10601161887522084 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 59, 'learning_rate': 0.0001711324743186622, 'p_miss': 0.2583450686047717}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:27:39,094] Trial 68 finished with value: 0.22984651474136367 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 5647, 'learning_rate': 0.00027175469812888974, 'p_miss': 0.29357588879720137}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:29:23,301] Trial 168 finished with value: 0.10869390778772059 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 62, 'learning_rate': 0.00010116812303296007, 'p_miss': 0.2610457718307423}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:30:50,721] Trial 169 finished with value: 0.11591206403973335 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 60, 'learning_rate': 0.0001483220194586773, 'p_miss': 0.25845655640245224}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:30:51,016] Trial 171 finished with value: 0.3334887664731639 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:30:52,519] Trial 172 finished with value: 0.2432958636705523 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2252, 'weights': 'distance'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:31:26,841] Trial 170 finished with value: 0.11942146156671711 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 33, 'learning_rate': 0.00019165502761314907, 'p_miss': 0.2557561103418743}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:33:20,182] Trial 174 finished with value: 0.11571492798249199 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 37, 'learning_rate': 0.0005839647250023974, 'p_miss': 0.24534079935790903}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:33:20,655] Trial 173 finished with value: 0.11648410652019943 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 40, 'learning_rate': 0.0014836795851079028, 'p_miss': 0.24596139019767854}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:33:26,709] Trial 175 finished with value: 0.20792877281580177 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:35:08,818] Trial 177 finished with value: 0.11876396997726728 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 21, 'learning_rate': 0.00016148035059290763, 'p_miss': 0.2661649204912426}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:35:44,154] Trial 178 finished with value: 0.1342457645822853 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 9, 'learning_rate': 0.00011965187061883776, 'p_miss': 0.25305026363385963}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:36:32,688] Trial 179 finished with value: 0.10873832507646694 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 14, 'learning_rate': 0.0002186840439968222, 'p_miss': 0.24005466330812164}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:37:55,963] Trial 180 finished with value: 0.11673771173747353 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 25, 'learning_rate': 0.0003852008016939508, 'p_miss': 0.23028257907929953}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:45:15,626] Trial 176 finished with value: 0.12358614930284754 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 164, 'learning_rate': 0.00017343968703964027, 'p_miss': 0.2529063012335344}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:48:05,822] Trial 182 finished with value: 0.11251678810756796 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 53, 'learning_rate': 0.00014009860830693712, 'p_miss': 0.2109305774245718}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:49:22,597] Trial 183 finished with value: 0.1049325317565235 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 18, 'learning_rate': 0.0010435615389761477, 'p_miss': 0.2796437450743585}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:50:27,305] Trial 184 finished with value: 0.11891946612092781 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 18, 'learning_rate': 0.0008825242686026769, 'p_miss': 0.28272411281316945}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:52:18,549] Trial 181 finished with value: 0.12062196935697053 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 184, 'learning_rate': 0.00013978906414962178, 'p_miss': 0.28063786806349206}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:52:32,939] Trial 185 finished with value: 0.12362164561418014 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 30, 'learning_rate': 0.001014481000126634, 'p_miss': 0.2887285858245188}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:53:16,154] Trial 187 finished with value: 0.10847997233097643 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 11, 'learning_rate': 0.00044055783555094295, 'p_miss': 0.2728388184954804}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:53:55,947] Trial 186 finished with value: 0.11405795271547392 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 31, 'learning_rate': 0.0007849558788755554, 'p_miss': 0.273969092315018}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:54:22,694] Trial 188 finished with value: 0.1084001159871536 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 15, 'learning_rate': 0.0007147450623562771, 'p_miss': 0.2652051074952121}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:54:53,615] Trial 189 finished with value: 0.1172313136094324 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 15, 'learning_rate': 0.001108286000296403, 'p_miss': 0.24841977058187667}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:54:56,660] Trial 190 finished with value: 0.33228792301292975 and parameters: {'model_name': 'GAIN', 'batch_size': 22, 'hint_rate': 0.750591669974046, 'alpha': 69, 'iterations': 22, 'learning_rate': 0.00027386876531835115, 'p_miss': 0.26066880772512435}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:55:21,160] Trial 192 finished with value: 0.11560654424691678 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 7, 'learning_rate': 0.004184830494492229, 'p_miss': 0.29428003388447593}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:55:51,694] Trial 193 finished with value: 0.11062580850103583 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 10, 'learning_rate': 0.00019000437434836965, 'p_miss': 0.22323902387551603}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:56:07,813] Trial 191 finished with value: 0.10611324405315352 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 21, 'learning_rate': 0.00020267804518300618, 'p_miss': 0.29253549797208306}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:57:13,616] Trial 194 finished with value: 0.11784969776054191 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 19, 'learning_rate': 0.0005321209794875595, 'p_miss': 0.17694688648092802}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 17:58:40,515] Trial 195 finished with value: 0.11541012580499407 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 47, 'learning_rate': 0.00023605835012805896, 'p_miss': 0.2992574445909654}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 18:00:01,606] Trial 196 finished with value: 0.13344563341721455 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 48, 'learning_rate': 0.00021353950600287548, 'p_miss': 0.28902867176131497}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 18:00:11,813] Trial 38 finished with value: 0.2151116591307511 and parameters: {'model_name': 'VAE', 'batch_size': 823, 'iterations': 6525, 'learning_rate': 0.003064809008490208, 'p_miss': 0.010813847931903736}. Best is trial 107 with value: 0.10438135151248676.
running
[I 2024-10-30 18:00:31,643] Trial 197 finished with value: 0.12435544502598961 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 26, 'learning_rate': 0.0002025531102169558, 'p_miss': 0.2909499565189398}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 18:01:21,212] Trial 198 finished with value: 0.10740558829368232 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 26, 'learning_rate': 0.00016449830771619558, 'p_miss': 0.24001523750303794}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 18:01:25,623] Trial 199 finished with value: 0.11300771249948802 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 26, 'learning_rate': 0.00017074670341976893, 'p_miss': 0.2849893477257433}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 19:38:14,301] Trial 32 finished with value: 0.21572667854179936 and parameters: {'model_name': 'VAE', 'batch_size': 992, 'iterations': 7815, 'learning_rate': 0.00010845469451284524, 'p_miss': 0.01703957390045202}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:07:57,947] Trial 39 finished with value: 0.2156783463982485 and parameters: {'model_name': 'VAE', 'batch_size': 791, 'iterations': 7622, 'learning_rate': 0.002261808076835608, 'p_miss': 0.01901878831101897}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:15:40,950] Trial 65 finished with value: 0.21818688520118673 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 9751, 'learning_rate': 0.00027425386650249765, 'p_miss': 0.29320509768595027}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:16:27,276] Trial 33 finished with value: 0.21525418101578886 and parameters: {'model_name': 'VAE', 'batch_size': 811, 'iterations': 8091, 'learning_rate': 0.00012826071664698424, 'p_miss': 0.015588901496859847}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:17:21,044] Trial 67 finished with value: 0.21246334932808977 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 9476, 'learning_rate': 0.0002800419030528782, 'p_miss': 0.29644561985490225}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:31:34,831] Trial 34 finished with value: 0.21552702679124786 and parameters: {'model_name': 'VAE', 'batch_size': 877, 'iterations': 9402, 'learning_rate': 0.0016388933301258457, 'p_miss': 0.026266220115933714}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:35:23,969] Trial 74 finished with value: 0.2193112914867809 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 6320, 'learning_rate': 0.0004673102995811808, 'p_miss': 0.23450524187040223}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:38:51,539] Trial 125 finished with value: 0.21270146547123686 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 6749, 'learning_rate': 0.00019617550255216984, 'p_miss': 0.2562551180921084}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:38:57,023] Trial 63 finished with value: 0.2329171699735441 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 9660, 'learning_rate': 0.0003304604473164303, 'p_miss': 0.29232835746611824}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:41:06,073] Trial 40 finished with value: 0.21544240000044165 and parameters: {'model_name': 'VAE', 'batch_size': 577, 'iterations': 9879, 'learning_rate': 0.0024782047022838855, 'p_miss': 0.04608715728105332}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:43:39,939] Trial 156 finished with value: 0.22394532185938204 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 8510, 'learning_rate': 0.0005993298433260197, 'p_miss': 0.2446690360117864}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:44:37,776] Trial 138 finished with value: 0.21428717110056889 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 8590, 'learning_rate': 0.00018189032792812992, 'p_miss': 0.19557783591692912}. Best is trial 107 with value: 0.10438135151248676.
[I 2024-10-30 20:45:28,688] Trial 133 finished with value: 0.21919598548693506 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 9404, 'learning_rate': 0.00016980284603492396, 'p_miss': 0.2192429953959898}. Best is trial 107 with value: 0.10438135151248676.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.10438135151248676
{'model_name': 'VAE', 'batch_size': 9, 'iterations': 38, 'learning_rate': 0.00029265582284612496, 'p_miss': 0.25585608725271647}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a5000> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474700ca0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.5144760519968993
Generation:   4%|▍         | 1/25 [00:19<07:45, 19.39s/it]Generation:  2
Best f1_score score: 0.5144760519968993
Generation:   8%|▊         | 2/25 [00:41<07:59, 20.83s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f2fc70> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fc910> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  3
Best f1_score score: 0.5144760519968993
Generation:  12%|█▏        | 3/25 [01:08<08:40, 23.64s/it]Generation:  4
Best f1_score score: 0.5170759719012656
Generation:  16%|█▌        | 4/25 [01:25<07:25, 21.20s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467bbd750> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0c910> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  5
Best f1_score score: 0.5170759719012656
Generation:  20%|██        | 5/25 [01:40<06:16, 18.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465b2f640> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  6
Best f1_score score: 0.5170759719012656
Generation:  24%|██▍       | 6/25 [01:53<05:21, 16.92s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747220e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.5170759719012656
Generation:  28%|██▊       | 7/25 [02:21<06:08, 20.45s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465c64310> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.5228538764639744
Generation:  32%|███▏      | 8/25 [02:35<05:16, 18.59s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0b9a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  9
Best f1_score score: 0.5228538764639744
Generation:  36%|███▌      | 9/25 [04:02<10:39, 39.95s/it]Generation:  10
Best f1_score score: 0.5228538764639744
Generation:  40%|████      | 10/25 [04:19<08:12, 32.86s/it]Generation:  11
Best f1_score score: 0.5228538764639744
Generation:  44%|████▍     | 11/25 [04:38<06:39, 28.54s/it]Generation:  12
Best f1_score score: 0.5228538764639744
Generation:  48%|████▊     | 12/25 [04:57<05:33, 25.68s/it]Generation:  13
Best f1_score score: 0.5228538764639744
Generation:  52%|█████▏    | 13/25 [05:17<04:45, 23.79s/it]Generation:  14
Best f1_score score: 0.5228538764639744
Generation:  56%|█████▌    | 14/25 [05:49<04:49, 26.33s/it]Generation:  15
Best f1_score score: 0.5228538764639744
Generation:  60%|██████    | 15/25 [06:18<04:31, 27.13s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c11b70> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  16
Best f1_score score: 0.5228538764639744
Generation:  64%|██████▍   | 16/25 [06:36<03:39, 24.38s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547471af50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.5228538764639744
Generation:  68%|██████▊   | 17/25 [07:00<03:15, 24.44s/it]Generation:  18
Best f1_score score: 0.5228538764639744
Generation:  72%|███████▏  | 18/25 [07:36<03:15, 27.90s/it]Generation:  19
Best f1_score score: 0.5228538764639744
Generation:  76%|███████▌  | 19/25 [08:03<02:45, 27.53s/it]Generation:  20
Best f1_score score: 0.5228538764639744
Generation:  80%|████████  | 20/25 [08:23<02:06, 25.24s/it]Generation:  21
Best f1_score score: 0.5228538764639744
Generation:  84%|████████▍ | 21/25 [08:47<01:39, 24.92s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465596f80> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  22
Best f1_score score: 0.5228538764639744
Generation:  88%|████████▊ | 22/25 [09:09<01:12, 24.06s/it]Generation:  23
Best f1_score score: 0.5228538764639744
Generation:  92%|█████████▏| 23/25 [09:35<00:49, 24.71s/it]Generation:  24
Best f1_score score: 0.5228538764639744
Generation:  96%|█████████▌| 24/25 [09:57<00:23, 23.72s/it]Generation:  25
Best f1_score score: 0.5228538764639744
Generation: 100%|██████████| 25/25 [10:17<00:00, 22.69s/it]Generation: 100%|██████████| 25/25 [10:21<00:00, 24.87s/it]
2024-10-30 20:56:04,416 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:34205' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-4817cb733e87b1d2d5c80127aca964e8', 'ndarray-2c00092ba1cd743626b416db9c976854'} (stimulus_id='handle-worker-cleanup-1730346964.4164124')
Fitted
Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_jobs=1, n_neighbors=11, p=3,
                                      weights='distance'))])
score start
train score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 2.2204460492503136e-16, 'f1': 1.0}
original test score: {'auroc': 0.465974025974026, 'accuracy': 0.4714285714285714, 'balanced_accuracy': 0.4714285714285714, 'logloss': 0.7689033646863672, 'f1': 0.4593694742743779}
imputed test score: {'auroc': 0.5008669252825098, 'accuracy': 0.512987012987013, 'balanced_accuracy': 0.512987012987013, 'logloss': 0.8180124345916454, 'f1': 0.5128021259543595}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4c40> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4910> 
 Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 101, in predict
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 574, in _check_X
    return self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.5085486821540751
Generation:   4%|▍         | 1/25 [01:50<44:23, 110.98s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d22e00> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4e20> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 813, in predict
    y = super().predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 428, in predict
    X = self._validate_for_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 606, in _validate_for_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.5127757771459462
Generation:   8%|▊         | 2/25 [03:22<38:07, 99.48s/it] Generation:  3
Best f1_score score: 0.5157068478879268
Generation:  12%|█▏        | 3/25 [09:20<1:19:42, 217.38s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545706feb0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  4
Best f1_score score: 0.5157068478879268
Generation:  16%|█▌        | 4/25 [11:02<1:00:14, 172.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fe3d990> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  5
Best f1_score score: 0.5157068478879268
Generation:  20%|██        | 5/25 [12:06<44:18, 132.92s/it]  Generation:  6
Best f1_score score: 0.5157068478879268
Generation:  24%|██▍       | 6/25 [13:52<39:11, 123.78s/it]Generation:  7
Best f1_score score: 0.5157968828075239
Generation:  28%|██▊       | 7/25 [15:34<35:01, 116.77s/it]Generation:  8
Best f1_score score: 0.5157968828075239
Generation:  32%|███▏      | 8/25 [18:10<36:38, 129.31s/it]Generation:  9
Best f1_score score: 0.5157968828075239
Generation:  36%|███▌      | 9/25 [20:00<32:50, 123.15s/it]Generation:  10
Best f1_score score: 0.5157968828075239
Generation:  40%|████      | 10/25 [20:15<22:29, 89.95s/it]Generation:  11
Best f1_score score: 0.5195651256194782
Generation:  44%|████▍     | 11/25 [22:21<23:29, 100.70s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554570cece0> 

Generation:  12
Best f1_score score: 0.5195651256194782
Generation:  48%|████▊     | 12/25 [32:27<55:08, 254.50s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155436c47f70> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 825, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.5199356641842119
Generation:  52%|█████▏    | 13/25 [34:10<41:42, 208.52s/it]Generation:  14
Best f1_score score: 0.5199356641842119
Generation:  56%|█████▌    | 14/25 [34:28<27:40, 150.98s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f46b90> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 825, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.5199356641842119
Generation:  60%|██████    | 15/25 [36:11<22:47, 136.71s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547428c4c0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.5199356641842119
Generation:  64%|██████▍   | 16/25 [36:36<15:28, 103.16s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545726e110> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 274, in predict
    neigh_dist, neigh_ind = self.kneighbors(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 825, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.5199356641842119
Generation:  68%|██████▊   | 17/25 [40:41<19:24, 145.56s/it]Generation:  18
Best f1_score score: 0.5199356641842119
Generation:  72%|███████▏  | 18/25 [44:34<20:03, 171.91s/it]Generation:  19
Best f1_score score: 0.5199356641842119
Generation:  76%|███████▌  | 19/25 [46:17<15:07, 151.21s/it]Generation:  20
Best f1_score score: 0.5199356641842119
Generation:  80%|████████  | 20/25 [47:20<10:24, 124.85s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741db3a0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  21
Best f1_score score: 0.5199356641842119
Generation:  84%|████████▍ | 21/25 [47:27<05:57, 89.48s/it] Generation:  22
Best f1_score score: 0.5199356641842119
Generation:  88%|████████▊ | 22/25 [47:43<03:21, 67.32s/it]Generation:  23
Best f1_score score: 0.5199356641842119
Generation:  92%|█████████▏| 23/25 [47:50<01:38, 49.37s/it]Generation:  24
Best f1_score score: 0.5223293587704536
Generation:  96%|█████████▌| 24/25 [49:31<01:04, 64.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456b5fa90> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  25
Best f1_score score: 0.5223293587704536
Generation: 100%|██████████| 25/25 [49:46<00:00, 49.76s/it]Generation: 100%|██████████| 25/25 [49:46<00:00, 119.46s/it]
2024-10-30 21:46:05,666 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:35257' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-3e61093e8767b69759336d3b58975687', 'ndarray-2c00092ba1cd743626b416db9c976854'} (stimulus_id='handle-worker-cleanup-1730349965.6666417')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=93, weights='distance')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(metric='euclidean', n_jobs=1,
                                      n_neighbors=7, weights='distance'))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.999339672310273, 'accuracy': 0.9824561403508771, 'balanced_accuracy': 0.9824561403508771, 'logloss': 0.025403242649110275, 'f1': 0.9824511317252607}
test score: {'auroc': 0.509239332096475, 'accuracy': 0.5, 'balanced_accuracy': 0.5, 'logloss': 0.9914229411882316, 'f1': 0.49989793835476626}
original test score: {'auroc': 0.4838050261426885, 'accuracy': 0.4883116883116883, 'balanced_accuracy': 0.4883116883116883, 'logloss': 1.0048716278244205, 'f1': 0.4849725662755324}
score end
871
lvl
0.5
type
MCAR
num_run
2
class_full
finished
all finished
full run takes
11.067324614922205
hours
DONE
