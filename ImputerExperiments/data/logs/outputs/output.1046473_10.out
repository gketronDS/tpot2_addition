Run: 10
/cm/local/apps/slurm/var/spool/job1046473/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1496/1496.pkl
working on 
../data/c/1496/class_full_MNAR_0.1_1
2.2171716690063477
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-12 13:48:55,614] A new study created in memory with name: no-name-48f1fd0f-c88a-45c0-8291-b69951ad0c29
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-12 13:48:55,948] Trial 11 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 11 with value: 0.5113690319216204.
running
[I 2024-11-12 13:48:56,073] Trial 10 finished with value: 0.11555952930777577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.11555952930777577.
running
[I 2024-11-12 13:48:56,271] Trial 3 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:48:56,533] Trial 16 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:48:56,784] Trial 7 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:00,237] Trial 14 finished with value: 0.112908580016156 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 186, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:00,771] Trial 8 finished with value: 0.11207026127346309 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 524, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:00,923] Trial 12 finished with value: 0.11236439136870624 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1038, 'weights': 'uniform'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:01,439] Trial 4 finished with value: 0.11493641416019965 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5091, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:01,615] Trial 24 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:06,973] Trial 1 finished with value: 0.13361323623652238 and parameters: {'model_name': 'VAE', 'batch_size': 118, 'iterations': 3, 'learning_rate': 0.08689678818344686, 'p_miss': 0.06018516394720712}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:07,165] Trial 25 finished with value: 0.4313014623324117 and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.9562357727475692, 'alpha': 18, 'iterations': 5, 'learning_rate': 0.008731043446593967, 'p_miss': 0.2575650707952981}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:07,542] Trial 5 finished with value: 0.47191063729497307 and parameters: {'model_name': 'GAIN', 'batch_size': 24, 'hint_rate': 0.4809176945389859, 'alpha': 88, 'iterations': 5, 'learning_rate': 0.0888262825377822, 'p_miss': 0.05265436751921867}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:08,195] Trial 21 finished with value: 0.11237467093773086 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1127, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:09,026] Trial 17 finished with value: 0.46684973809705 and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.39550790038549544, 'alpha': 65, 'iterations': 7, 'learning_rate': 0.0001975785850497283, 'p_miss': 0.07951732589627697}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:10,511] Trial 6 finished with value: 0.1156813816399628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:11,357] Trial 9 finished with value: 0.4793927497674709 and parameters: {'model_name': 'GAIN', 'batch_size': 762, 'hint_rate': 0.8282678617456591, 'alpha': 53, 'iterations': 3, 'learning_rate': 0.09051664563694634, 'p_miss': 0.05265545866001629}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:11,564] Trial 22 finished with value: 0.11350849043317375 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2688, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:21,913] Trial 0 finished with value: 0.11554371042636565 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:23,441] Trial 13 finished with value: 0.4661659192007533 and parameters: {'model_name': 'GAIN', 'batch_size': 14, 'hint_rate': 0.5997593544390477, 'alpha': 35, 'iterations': 35, 'learning_rate': 0.05765658900933563, 'p_miss': 0.09020865870032617}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:46,632] Trial 27 finished with value: 0.11605375704647358 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:49:54,787] Trial 36 finished with value: 0.11317058210197857 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1847, 'weights': 'uniform'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:50:11,154] Trial 20 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.42463377392731355, 'alpha': 0, 'iterations': 639, 'learning_rate': 0.014990017998821907, 'p_miss': 0.03168558532951598}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:50:14,908] Trial 30 finished with value: 0.13494168352064195 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:50:41,357] Trial 29 finished with value: 0.13711504286606718 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 13:51:12,693] Trial 28 finished with value: 0.21131467682554428 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:08:45,772] Trial 19 finished with value: 0.15180183973360614 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 467, 'learning_rate': 0.003435644547530773, 'p_miss': 0.07169259284670197}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:08:52,106] Trial 42 finished with value: 0.12015361587845334 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 19, 'weights': 'uniform'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:09:01,183] Trial 43 finished with value: 0.1127813713461155 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1419, 'weights': 'uniform'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:09:12,659] Trial 44 finished with value: 0.11439802159686267 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3571, 'weights': 'uniform'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:13:36,251] Trial 26 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.38087161334265607, 'alpha': 3, 'iterations': 5704, 'learning_rate': 0.000114846318132791, 'p_miss': 0.29765083310670976}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:13:46,534] Trial 46 finished with value: 0.11233097417941669 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1078, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:13:56,389] Trial 47 finished with value: 0.11215816403372432 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 904, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:04,147] Trial 18 finished with value: 0.16905633285132116 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 611, 'learning_rate': 0.0018347053253587528, 'p_miss': 0.016417834726522276}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:16,694] Trial 49 finished with value: 0.11323162848190824 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2202, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:25,552] Trial 50 finished with value: 0.11199181421910887 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 607, 'weights': 'distance'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:26,125] Trial 51 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:26,822] Trial 52 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:27,632] Trial 53 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:28,350] Trial 54 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:28,962] Trial 55 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:29,671] Trial 56 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:30,396] Trial 57 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:31,281] Trial 58 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:32,088] Trial 59 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:33,001] Trial 60 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:33,692] Trial 61 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:34,619] Trial 62 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:35,471] Trial 63 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:36,054] Trial 64 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:36,879] Trial 65 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:37,595] Trial 66 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:14:38,275] Trial 67 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:20:50,169] Trial 68 finished with value: 0.12045769267367117 and parameters: {'model_name': 'VAE', 'batch_size': 814, 'iterations': 56, 'learning_rate': 0.0005480456618013338, 'p_miss': 0.17869688252849114}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:20:50,617] Trial 69 finished with value: 0.11555952930777577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:20:51,349] Trial 70 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:20:53,203] Trial 71 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:20:53,991] Trial 72 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:20:54,761] Trial 73 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:03,512] Trial 48 finished with value: 0.1251903782125527 and parameters: {'model_name': 'VAE', 'batch_size': 958, 'iterations': 83, 'learning_rate': 0.0009559184236739705, 'p_miss': 0.20316174191131728}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:04,296] Trial 75 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:05,086] Trial 76 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:05,914] Trial 77 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:06,563] Trial 78 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:07,240] Trial 79 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:09,222] Trial 80 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:10,055] Trial 81 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:23:10,808] Trial 82 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:38:27,020] Trial 15 finished with value: 0.15397855352583764 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 960, 'learning_rate': 0.0012430718263445725, 'p_miss': 0.2858792410856261}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:38:34,414] Trial 84 finished with value: 0.4605977469638611 and parameters: {'model_name': 'GAIN', 'batch_size': 133, 'hint_rate': 0.047929295925591364, 'alpha': 99, 'iterations': 1, 'learning_rate': 0.009465272095771457, 'p_miss': 0.12741021039196618}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:38:34,887] Trial 85 finished with value: 0.11555952930777577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:38:35,635] Trial 86 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 14:38:36,357] Trial 87 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 15:07:01,774] Trial 23 finished with value: 0.1309467276030309 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 15:07:02,211] Trial 89 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 15:07:03,188] Trial 90 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 16:09:14,692] Trial 40 finished with value: 0.12644320119877686 and parameters: {'model_name': 'VAE', 'batch_size': 294, 'iterations': 2193, 'learning_rate': 0.0004654001936004005, 'p_miss': 0.28638054319833245}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 16:09:16,893] Trial 92 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 16:09:17,882] Trial 93 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:20:38,899] Trial 31 finished with value: 0.12647396785172238 and parameters: {'model_name': 'VAE', 'batch_size': 869, 'iterations': 2882, 'learning_rate': 0.00017869150589078494, 'p_miss': 0.2789880979250714}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:21:54,699] Trial 95 finished with value: 0.11563596089720744 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 19, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:21:55,592] Trial 96 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:21:56,422] Trial 97 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:21:57,370] Trial 98 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:21:57,850] Trial 99 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:21:58,481] Trial 100 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:22:41,143] Trial 101 finished with value: 0.4335955451657923 and parameters: {'model_name': 'GAIN', 'batch_size': 18, 'hint_rate': 0.029656082289037267, 'alpha': 72, 'iterations': 26, 'learning_rate': 0.005526895093270362, 'p_miss': 0.22230400558512942}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:22:41,959] Trial 102 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:22:42,708] Trial 103 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:22:43,244] Trial 104 finished with value: 0.11555952930777577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:30:59,961] Trial 83 finished with value: 0.471572477522595 and parameters: {'model_name': 'GAIN', 'batch_size': 146, 'hint_rate': 0.018346286398906453, 'alpha': 100, 'iterations': 6839, 'learning_rate': 0.02269574913615505, 'p_miss': 0.14423165648154046}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:31:00,628] Trial 106 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:31:01,416] Trial 107 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:31:02,119] Trial 108 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:31:03,036] Trial 109 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:42:49,185] Trial 38 finished with value: 0.12550313379907074 and parameters: {'model_name': 'VAE', 'batch_size': 580, 'iterations': 2897, 'learning_rate': 0.00039476110760569197, 'p_miss': 0.2961502294130703}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:51,413] Trial 88 finished with value: 0.12466253141273431 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 19, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:52,232] Trial 112 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:52,935] Trial 113 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:53,807] Trial 114 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:54,610] Trial 115 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:55,421] Trial 116 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:56,170] Trial 117 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:56,831] Trial 118 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:44:57,578] Trial 119 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:08,297] Trial 120 finished with value: 0.1429160306063941 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 250, 'learning_rate': 0.02747467687034312, 'p_miss': 0.10510352114759053}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:08,975] Trial 121 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:10,737] Trial 122 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:11,411] Trial 123 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:11,843] Trial 124 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:12,731] Trial 125 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:13,591] Trial 126 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:14,211] Trial 127 finished with value: 0.11555952930777577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:14,946] Trial 128 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:15,785] Trial 129 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:16,520] Trial 130 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:56:17,305] Trial 131 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:57:35,123] Trial 132 finished with value: 0.13532277769626297 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:57:35,799] Trial 133 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:57:36,633] Trial 134 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:57:43,325] Trial 135 finished with value: 0.42746831224603515 and parameters: {'model_name': 'GAIN', 'batch_size': 44, 'hint_rate': 0.23986022074046814, 'alpha': 35, 'iterations': 1, 'learning_rate': 0.002870991602556898, 'p_miss': 0.24967299028390846}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:57:44,189] Trial 136 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:57:44,923] Trial 137 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:57:45,712] Trial 138 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 17:57:46,345] Trial 139 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:03:22,894] Trial 41 finished with value: 0.12623879842452562 and parameters: {'model_name': 'VAE', 'batch_size': 682, 'iterations': 3081, 'learning_rate': 0.00047422452942702905, 'p_miss': 0.25834787112459484}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:03:23,690] Trial 141 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:03:25,462] Trial 142 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:03:26,072] Trial 143 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:03:26,807] Trial 144 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:05:22,437] Trial 140 finished with value: 0.1279638898271595 and parameters: {'model_name': 'VAE', 'batch_size': 57, 'iterations': 159, 'learning_rate': 0.030102181099724994, 'p_miss': 0.16262761607734366}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:05:23,012] Trial 146 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:05:23,794] Trial 147 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:05:24,570] Trial 148 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:05:25,024] Trial 149 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:05:25,602] Trial 150 finished with value: 0.11555952930777577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:05:26,250] Trial 151 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:05:26,901] Trial 152 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:10:55,798] Trial 145 finished with value: 0.12740398341123257 and parameters: {'model_name': 'VAE', 'batch_size': 55, 'iterations': 149, 'learning_rate': 0.024993663856339034, 'p_miss': 0.17943604924309842}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:11:05,470] Trial 154 finished with value: 0.11555952930777577 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5827, 'weights': 'uniform'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:38,081] Trial 155 finished with value: 0.2153106165069762 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:38,942] Trial 156 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:39,717] Trial 157 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:40,593] Trial 158 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:41,229] Trial 159 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:41,975] Trial 160 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:42,970] Trial 161 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:43,913] Trial 162 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:13:44,648] Trial 163 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:09,715] Trial 164 finished with value: 0.45667384503056613 and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.7344507413749319, 'alpha': 33, 'iterations': 15, 'learning_rate': 0.004241445794145165, 'p_miss': 0.12180183849050089}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:10,556] Trial 165 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:11,221] Trial 166 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:12,087] Trial 167 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:12,737] Trial 168 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:13,424] Trial 169 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:15,436] Trial 170 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:16,045] Trial 171 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:16,726] Trial 172 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:17,449] Trial 173 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:17,921] Trial 174 finished with value: 0.5113690319216204 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:18,455] Trial 175 finished with value: 0.11555952930777577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:19,301] Trial 176 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:20,160] Trial 177 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:21,058] Trial 178 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:21,988] Trial 179 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:22,710] Trial 180 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:14:23,235] Trial 181 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:18:03,432] Trial 2 finished with value: 0.18259970627674024 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5955, 'learning_rate': 0.00057666194584891, 'p_miss': 0.11731026076048685}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:18:04,365] Trial 183 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 18:40:23,760] Trial 33 finished with value: 0.12574632582921116 and parameters: {'model_name': 'VAE', 'batch_size': 902, 'iterations': 3889, 'learning_rate': 0.0002607334496275183, 'p_miss': 0.29639340877953546}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:36,056] Trial 94 finished with value: 0.12551317885803676 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 20, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:36,857] Trial 186 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:37,567] Trial 187 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:38,159] Trial 188 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:38,851] Trial 189 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:39,521] Trial 190 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:50,037] Trial 191 finished with value: 0.1146605827503467 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3840, 'weights': 'uniform'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:50,684] Trial 192 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:51,289] Trial 193 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:17:51,895] Trial 194 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:18:12,094] Trial 195 finished with value: 0.46158129246280544 and parameters: {'model_name': 'GAIN', 'batch_size': 255, 'hint_rate': 0.20776630497521797, 'alpha': 76, 'iterations': 12, 'learning_rate': 0.05156515033561063, 'p_miss': 0.22285170737171045}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:18:12,738] Trial 196 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:18:13,638] Trial 197 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:18:14,453] Trial 198 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
running
[I 2024-11-12 19:18:15,086] Trial 199 finished with value: 0.10570078820024575 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 19:56:22,442] Trial 105 finished with value: 0.12501228055558292 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 19:59:15,351] Trial 74 finished with value: 0.12719688078416375 and parameters: {'model_name': 'VAE', 'batch_size': 135, 'iterations': 7779, 'learning_rate': 0.0006959321557004116, 'p_miss': 0.15354241688112708}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:00:20,268] Trial 45 finished with value: 0.12592962035336783 and parameters: {'model_name': 'VAE', 'batch_size': 656, 'iterations': 4887, 'learning_rate': 0.00011114512157076582, 'p_miss': 0.29398894340501025}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:02:45,528] Trial 110 finished with value: 0.12513066573057013 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:10:07,337] Trial 39 finished with value: 0.12619650311946104 and parameters: {'model_name': 'VAE', 'batch_size': 452, 'iterations': 5671, 'learning_rate': 0.0003908557637840579, 'p_miss': 0.2760864292561241}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:13:07,542] Trial 111 finished with value: 0.1253523721813052 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:17:49,854] Trial 153 finished with value: 0.12533630670643967 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:25:48,809] Trial 34 finished with value: 0.19273396385280123 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9289, 'learning_rate': 0.00010069845790042097, 'p_miss': 0.27782224286969553}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:34:54,416] Trial 184 finished with value: 0.12531248302132558 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:38:49,615] Trial 182 finished with value: 0.12535340668163658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:40:52,436] Trial 91 finished with value: 0.12635717808918892 and parameters: {'model_name': 'VAE', 'batch_size': 164, 'iterations': 9996, 'learning_rate': 0.0002927195904179029, 'p_miss': 0.22540775735853266}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:45:17,376] Trial 37 finished with value: 0.12632258070464858 and parameters: {'model_name': 'VAE', 'batch_size': 894, 'iterations': 7535, 'learning_rate': 0.00012603204517121788, 'p_miss': 0.2615479143350429}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:52:16,134] Trial 35 finished with value: 0.12586955687331972 and parameters: {'model_name': 'VAE', 'batch_size': 846, 'iterations': 9084, 'learning_rate': 0.00010239753678510497, 'p_miss': 0.2856023874572805}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:56:20,909] Trial 32 finished with value: 0.12633776793558815 and parameters: {'model_name': 'VAE', 'batch_size': 911, 'iterations': 9891, 'learning_rate': 0.00014925231833148685, 'p_miss': 0.29908488680212597}. Best is trial 3 with value: 0.10570078820024575.
[I 2024-11-12 20:58:03,046] Trial 185 finished with value: 0.12521789723971877 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.10570078820024575.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0.10570078820024575
{'model_name': 'SimpleImputer', 'strategy': 'median'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9731324725257805
Generation:   4%|▍         | 1/25 [00:06<02:29,  6.24s/it]Generation:  2
Best f1_score score: 0.9731324725257805
Generation:   8%|▊         | 2/25 [00:19<03:53, 10.15s/it]Generation:  3
Best f1_score score: 0.9731324725257805
Generation:  12%|█▏        | 3/25 [00:32<04:14, 11.55s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0ae30> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  4
Best f1_score score: 0.9731324725257805
Generation:  16%|█▌        | 4/25 [00:46<04:24, 12.58s/it]Generation:  5
Best f1_score score: 0.9731324725257805
Generation:  20%|██        | 5/25 [01:06<05:02, 15.11s/it]Generation:  6
Best f1_score score: 0.9731324725257805
Generation:  24%|██▍       | 6/25 [01:33<06:06, 19.31s/it]Generation:  7
Best f1_score score: 0.9731324725257805
Generation:  28%|██▊       | 7/25 [02:01<06:38, 22.11s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a1390> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  8
Best f1_score score: 0.9731324725257805
Generation:  32%|███▏      | 8/25 [07:45<35:19, 124.68s/it]Generation:  9
Best f1_score score: 0.9731324725257805
Generation:  36%|███▌      | 9/25 [08:42<27:33, 103.35s/it]Generation:  10
Best f1_score score: 0.9731324725257805
Generation:  40%|████      | 10/25 [10:14<24:57, 99.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554658c09a0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  11
Best f1_score score: 0.9731324725257805
Generation:  44%|████▍     | 11/25 [13:55<31:57, 136.94s/it]Generation:  12
Best f1_score score: 0.9731324725257805
Generation:  48%|████▊     | 12/25 [14:46<24:02, 110.93s/it]Generation:  13
Best f1_score score: 0.9731324725257805
Generation:  52%|█████▏    | 13/25 [15:08<16:47, 83.94s/it] Generation:  14
Best f1_score score: 0.9731324725257805
Generation:  56%|█████▌    | 14/25 [17:09<17:26, 95.18s/it]Generation:  15
Best f1_score score: 0.9731324725257805
Generation:  60%|██████    | 15/25 [18:09<14:05, 84.51s/it]Generation:  16
Best f1_score score: 0.9731324725257805
Generation:  64%|██████▍   | 16/25 [18:58<11:03, 73.72s/it]Generation:  17
Best f1_score score: 0.9731324725257805
Generation:  68%|██████▊   | 17/25 [20:09<09:43, 72.92s/it]Generation:  18
Best f1_score score: 0.9731324725257805
Generation:  72%|███████▏  | 18/25 [20:27<06:36, 56.66s/it]Generation:  19
Best f1_score score: 0.9731324725257805
Generation:  76%|███████▌  | 19/25 [21:39<06:06, 61.14s/it]Generation:  20
Best f1_score score: 0.9731324725257805
Generation:  80%|████████  | 20/25 [22:33<04:55, 59.02s/it]Generation:  21
Best f1_score score: 0.9731324725257805
Generation:  84%|████████▍ | 21/25 [23:23<03:45, 56.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546592feb0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  22
Best f1_score score: 0.9731324725257805
Generation:  88%|████████▊ | 22/25 [23:55<02:26, 48.97s/it]Generation:  23
Best f1_score score: 0.9731324725257805
Generation:  92%|█████████▏| 23/25 [24:33<01:31, 45.62s/it]Generation:  24
Best f1_score score: 0.9731324725257805
Generation:  96%|█████████▌| 24/25 [26:27<01:06, 66.13s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f2d2a0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  25
Best f1_score score: 0.9731324725257805
Generation: 100%|██████████| 25/25 [28:00<00:00, 74.17s/it]Generation: 100%|██████████| 25/25 [28:04<00:00, 67.38s/it]
2024-11-12 21:26:20,942 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:39623' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8', 'ndarray-91d40ac0e057aaef8efa08db7d75c694'} (stimulus_id='handle-worker-cleanup-1731475580.9420123')
Fitted
Pipeline(steps=[('gaussiannb', GaussianNB())])
score start
train score: {'auroc': 0.9958470493252924, 'accuracy': 0.9724662162162162, 'balanced_accuracy': 0.9723659217197962, 'logloss': 0.07933190956988281, 'f1': 0.972455457415214}
original test score: {'auroc': 0.9973883711288994, 'accuracy': 0.9790540540540541, 'balanced_accuracy': 0.9790841401074968, 'logloss': 0.05920536829662585, 'f1': 0.9790532794538147}
imputed test score: {'auroc': 0.9958140885506556, 'accuracy': 0.9763513513513513, 'balanced_accuracy': 0.9762405693716202, 'logloss': 0.07143311298188461, 'f1': 0.9763409713629838}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547457f430> 

Generation:  1
Best f1_score score: 0.9724560642487845
Generation:   4%|▍         | 1/25 [10:04<4:01:49, 604.55s/it]Generation:  2
Best f1_score score: 0.9724560642487845
Generation:   8%|▊         | 2/25 [11:15<1:51:23, 290.61s/it]Generation:  3
Best f1_score score: 0.9724560642487845
Generation:  12%|█▏        | 3/25 [12:07<1:06:38, 181.73s/it]Generation:  4
Best f1_score score: 0.972962923243981
Generation:  16%|█▌        | 4/25 [14:20<56:51, 162.44s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545debb5b0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bd7b970> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd5720> 

Generation:  5
Best f1_score score: 0.9741446393091906
Generation:  20%|██        | 5/25 [24:25<1:47:23, 322.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474202200> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  6
Best f1_score score: 0.9741446393091906
Generation:  24%|██▍       | 6/25 [31:13<1:51:15, 351.33s/it]Generation:  7
Best f1_score score: 0.9741446393091906
Generation:  28%|██▊       | 7/25 [31:29<1:12:29, 241.65s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452cc0cd0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f51f010> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547427f6a0> 

Generation:  8
Best f1_score score: 0.9741446393091906
Generation:  32%|███▏      | 8/25 [41:37<1:41:27, 358.11s/it]Generation:  9
Best f1_score score: 0.9741446393091906
Generation:  36%|███▌      | 9/25 [42:27<1:09:52, 262.04s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f3ce4d0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554569d0d90> 

Generation:  10
Best f1_score score: 0.9741446393091906
Generation:  40%|████      | 10/25 [52:34<1:32:06, 368.41s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454cc3b20> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f2b100> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474209420> 

Generation:  11
Best f1_score score: 0.9741446393091906
Generation:  44%|████▍     | 11/25 [1:02:41<1:42:59, 441.38s/it]Generation:  12
Best f1_score score: 0.9741446393091906
Generation:  48%|████▊     | 12/25 [1:04:11<1:12:28, 334.48s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452e81a50> 

Generation:  13
Best f1_score score: 0.9741446393091906
Generation:  52%|█████▏    | 13/25 [1:14:17<1:23:23, 416.93s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b7ced40> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474560730> 

Generation:  14
Best f1_score score: 0.9741446393091906
Generation:  56%|█████▌    | 14/25 [1:24:25<1:26:59, 474.52s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554660f4fa0> 

Generation:  15
Best f1_score score: 0.9741446393091906
Generation:  60%|██████    | 15/25 [1:34:32<1:25:45, 514.57s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465c796f0> 

Generation:  16
Best f1_score score: 0.9741446393091906
Generation:  64%|██████▍   | 16/25 [1:44:37<1:21:14, 541.57s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d78df0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b8e3760> 

Generation:  17
Best f1_score score: 0.9741446393091906
Generation:  68%|██████▊   | 17/25 [1:54:43<1:14:48, 561.11s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b8a8580> 

Generation:  18
Best f1_score score: 0.9741446393091906
Generation:  72%|███████▏  | 18/25 [2:04:50<1:07:03, 574.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f76ae30> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b96e7d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745947f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545be1a740> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553b8ad1300> 

Generation:  19
Best f1_score score: 0.9741446393091906
Generation:  76%|███████▌  | 19/25 [2:14:56<58:25, 584.22s/it]  Generation:  20
Best f1_score score: 0.9741446393091906
Generation:  80%|████████  | 20/25 [2:17:17<37:35, 451.14s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f7cdc90> 

Generation:  21
Best f1_score score: 0.9741446393091906
Generation:  84%|████████▍ | 21/25 [2:27:24<33:11, 497.93s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554661d7580> 

Generation:  22
Best f1_score score: 0.9741446393091906
Generation:  88%|████████▊ | 22/25 [2:37:31<26:31, 530.57s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745cbac0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454624a90> 

Generation:  23
Best f1_score score: 0.9741446393091906
Generation:  92%|█████████▏| 23/25 [2:47:39<18:28, 554.01s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d58dc0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554528f13c0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454bf2860> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554661f30a0> 

Generation:  24
Best f1_score score: 0.9741446393091906
Generation:  96%|█████████▌| 24/25 [2:57:46<09:29, 569.65s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553c30e2dd0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c57fd0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd72b0> 

Generation:  25
Best f1_score score: 0.9741446393091906
Generation: 100%|██████████| 25/25 [3:07:54<00:00, 581.39s/it]Generation: 100%|██████████| 25/25 [3:07:54<00:00, 451.00s/it]
2024-11-13 00:34:25,628 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45055' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8', 'DataFrame-c601e5f4d06004de2d25ce2d7e219378'} (stimulus_id='handle-worker-cleanup-1731486865.6280477')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=KNeighborsRegressor(),
                                  imputation_order='random',
                                  initial_strategy='median',
                                  n_nearest_features=4)),
                ('gaussiannb', GaussianNB())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9960651811104495, 'accuracy': 0.9738175675675675, 'balanced_accuracy': 0.9737273334422281, 'logloss': 0.07648298405772512, 'f1': 0.9738083595689786}
test score: {'auroc': 0.9962323144328108, 'accuracy': 0.977027027027027, 'balanced_accuracy': 0.9768971292171871, 'logloss': 0.06760464430609484, 'f1': 0.9770148964665428}
original test score: {'auroc': 0.9974468131735674, 'accuracy': 0.981081081081081, 'balanced_accuracy': 0.9810538196441976, 'logloss': 0.05537555066594418, 'f1': 0.9810782822148638}
score end
1496
lvl
0.1
type
MNAR
num_run
1
class_full
finished
all finished
full run takes
10.76345212870174
hours
DONE
