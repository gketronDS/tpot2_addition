Run: 33
/cm/local/apps/slurm/var/spool/job1024952/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/737/737.pkl
working on 
../data/c/737/class_full_MNAR_0.01_2
3.874541997909546
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-26 04:50:26,975] A new study created in memory with name: no-name-9f0fe4cb-2b59-4d38-8213-abc86a16113d
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-26 04:50:27,236] Trial 7 finished with value: 0.13781740677994617 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 7 with value: 0.13781740677994617.
[I 2024-10-26 04:50:27,238] Trial 2 finished with value: 0.5585626287771547 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 7 with value: 0.13781740677994617.
running
running
[I 2024-10-26 04:50:27,491] Trial 8 finished with value: 0.5585626287771547 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 7 with value: 0.13781740677994617.
running
[I 2024-10-26 04:50:27,993] Trial 17 finished with value: 0.13781740677994617 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2412, 'weights': 'uniform'}. Best is trial 7 with value: 0.13781740677994617.
running
[I 2024-10-26 04:50:28,146] Trial 9 finished with value: 0.10699022258481591 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1092, 'weights': 'distance'}. Best is trial 9 with value: 0.10699022258481591.
running
[I 2024-10-26 04:50:28,272] Trial 15 finished with value: 0.0908252902789554 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 142, 'weights': 'uniform'}. Best is trial 15 with value: 0.0908252902789554.
[I 2024-10-26 04:50:28,389] Trial 3 finished with value: 0.11123682862832363 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1362, 'weights': 'distance'}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:28,527] Trial 20 finished with value: 0.13913231478985597 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 15 with value: 0.0908252902789554.
running
running
[I 2024-10-26 04:50:28,688] Trial 21 finished with value: 0.13781740677994617 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 15 with value: 0.0908252902789554.
[I 2024-10-26 04:50:28,693] Trial 18 finished with value: 0.1187480277463806 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1987, 'weights': 'distance'}. Best is trial 15 with value: 0.0908252902789554.
running
running
[I 2024-10-26 04:50:28,963] Trial 22 finished with value: 0.13781740677994617 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:31,649] Trial 26 finished with value: 0.09868396841228669 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:31,949] Trial 1 finished with value: 0.1023353035886529 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:32,330] Trial 23 finished with value: 0.10233460793714053 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:34,183] Trial 14 finished with value: 0.18194151969767694 and parameters: {'model_name': 'VAE', 'batch_size': 65, 'iterations': 1, 'learning_rate': 0.010474535047961184, 'p_miss': 0.02255198124561142}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:34,665] Trial 5 finished with value: 0.1712848409764452 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:36,108] Trial 29 finished with value: 0.19930979818216854 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 4, 'learning_rate': 0.000674182708362094, 'p_miss': 0.12709056365398727}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:38,254] Trial 27 finished with value: 0.09868396841228669 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:50:43,783] Trial 25 finished with value: 0.1516040608602839 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:51:15,464] Trial 12 finished with value: 0.16309159487423755 and parameters: {'model_name': 'VAE', 'batch_size': 447, 'iterations': 11, 'learning_rate': 0.004698280699920756, 'p_miss': 0.22914504369319905}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:51:29,057] Trial 4 finished with value: 0.31813355684316236 and parameters: {'model_name': 'GAIN', 'batch_size': 255, 'hint_rate': 0.688557840595091, 'alpha': 12, 'iterations': 62, 'learning_rate': 0.011442205937444447, 'p_miss': 0.11128757732380035}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:51:37,440] Trial 36 finished with value: 0.0981785905846883 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:55:03,839] Trial 16 finished with value: 0.14528749270329328 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 119, 'learning_rate': 0.011061931504282049, 'p_miss': 0.017310682368641073}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:55:20,942] Trial 13 finished with value: 0.17340329142243588 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 98, 'learning_rate': 0.000530027241106296, 'p_miss': 0.11166492649126938}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:55:35,832] Trial 10 finished with value: 0.19508808811250158 and parameters: {'model_name': 'VAE', 'batch_size': 989, 'iterations': 85, 'learning_rate': 0.00016164350578679637, 'p_miss': 0.1403203883103636}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:56:44,832] Trial 24 finished with value: 0.35442734995985364 and parameters: {'model_name': 'GAIN', 'batch_size': 21, 'hint_rate': 0.28151680420977615, 'alpha': 18, 'iterations': 288, 'learning_rate': 0.08341934518685586, 'p_miss': 0.21873915906424451}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:56:51,690] Trial 41 finished with value: 0.10201632795672595 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:56:59,003] Trial 42 finished with value: 0.0998454488057665 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 15 with value: 0.0908252902789554.
running
[I 2024-10-26 04:56:59,991] Trial 43 finished with value: 0.0835700182945702 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 51, 'weights': 'uniform'}. Best is trial 43 with value: 0.0835700182945702.
running
[I 2024-10-26 04:57:01,301] Trial 44 finished with value: 0.08492548507573258 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11, 'weights': 'uniform'}. Best is trial 43 with value: 0.0835700182945702.
running
[I 2024-10-26 04:57:02,393] Trial 45 finished with value: 0.0909307843997655 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 143, 'weights': 'uniform'}. Best is trial 43 with value: 0.0835700182945702.
running
[I 2024-10-26 04:57:03,338] Trial 46 finished with value: 0.08508104907327724 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 67, 'weights': 'uniform'}. Best is trial 43 with value: 0.0835700182945702.
running
[I 2024-10-26 04:57:04,304] Trial 47 finished with value: 0.08314748003981305 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 28, 'weights': 'uniform'}. Best is trial 47 with value: 0.08314748003981305.
running
[I 2024-10-26 04:57:05,088] Trial 48 finished with value: 0.08294260356577451 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 29, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 04:57:05,939] Trial 49 finished with value: 0.08511470794849404 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 04:57:07,450] Trial 50 finished with value: 0.10596521542069845 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 603, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 04:57:08,853] Trial 51 finished with value: 0.10162393711571846 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 455, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 04:57:10,255] Trial 52 finished with value: 0.10362484331669061 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 521, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:00:35,450] Trial 11 finished with value: 0.08758170712251197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:02:16,910] Trial 0 finished with value: 0.18157402159651387 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 263, 'learning_rate': 0.00011154198162233526, 'p_miss': 0.19258881063089997}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:47,417] Trial 35 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8963291302964941, 'alpha': 84, 'iterations': 2898, 'learning_rate': 0.08913309542278318, 'p_miss': 0.2745258983576022}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:48,253] Trial 56 finished with value: 0.0884453547085153 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 101, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:48,923] Trial 57 finished with value: 0.08344369517964288 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 34, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:49,700] Trial 58 finished with value: 0.09885222555320983 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 362, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:50,678] Trial 59 finished with value: 0.09747414537776816 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 322, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:51,226] Trial 60 finished with value: 0.08513264629796165 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:52,432] Trial 61 finished with value: 0.11000132574571024 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 759, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:53,113] Trial 62 finished with value: 0.09736771914425094 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 320, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:54,088] Trial 63 finished with value: 0.09488450404867413 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 246, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:03:54,822] Trial 64 finished with value: 0.11087002590755209 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 794, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:05,946] Trial 37 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.09934373479069564, 'alpha': 100, 'iterations': 3189, 'learning_rate': 0.0001100382439109836, 'p_miss': 0.28623828289929976}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:06,625] Trial 66 finished with value: 0.08434265539714496 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:07,310] Trial 67 finished with value: 0.08434265539714496 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:08,098] Trial 68 finished with value: 0.09469589039660324 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 242, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:08,631] Trial 69 finished with value: 0.11859307219849555 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:09,578] Trial 70 finished with value: 0.09523581704461465 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 255, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:10,405] Trial 71 finished with value: 0.09535042064035064 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 258, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:11,387] Trial 72 finished with value: 0.08734412180001225 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 173, 'weights': 'distance'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:11,627] Trial 73 finished with value: 0.5585626287771547 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:05:12,520] Trial 74 finished with value: 0.1022360809398459 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 476, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:08:28,562] Trial 19 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.3175775087836105, 'alpha': 25, 'iterations': 4491, 'learning_rate': 0.007055780632133395, 'p_miss': 0.032261870060438506}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:08:29,423] Trial 76 finished with value: 0.11859307219849555 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:08:30,324] Trial 77 finished with value: 0.1296193748144344 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1617, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:08:30,884] Trial 33 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.4422047716312442, 'alpha': 69, 'iterations': 4286, 'learning_rate': 0.00014922369373087388, 'p_miss': 0.29570543830749224}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:08:31,218] Trial 78 finished with value: 0.09017409071864853 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 130, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:08:32,179] Trial 79 finished with value: 0.09138905840182143 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 153, 'weights': 'uniform'}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:08:33,635] Trial 80 finished with value: 0.17070333203710028 and parameters: {'model_name': 'VAE', 'batch_size': 103, 'iterations': 1, 'learning_rate': 0.032447403697012066, 'p_miss': 0.06508552863481527}. Best is trial 48 with value: 0.08294260356577451.
running
[I 2024-10-26 05:08:34,461] Trial 82 finished with value: 0.08215971454670236 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 42, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:35,416] Trial 83 finished with value: 0.09317625769612994 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 387, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:35,653] Trial 81 finished with value: 0.1930260599531738 and parameters: {'model_name': 'VAE', 'batch_size': 84, 'iterations': 1, 'learning_rate': 0.0017229506458702262, 'p_miss': 0.08178426167991923}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:35,934] Trial 84 finished with value: 0.13913231478985597 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:36,846] Trial 86 finished with value: 0.08340251697032178 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:37,258] Trial 85 finished with value: 0.10852079279107138 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1189, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:37,883] Trial 87 finished with value: 0.08687427534798367 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 162, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:38,330] Trial 88 finished with value: 0.08687086253654021 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 161, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:39,340] Trial 89 finished with value: 0.08573319867947032 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 130, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:08:40,045] Trial 90 finished with value: 0.11263433482881227 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1460, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:09:03,536] Trial 92 finished with value: 0.3331857229763537 and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.9232491922533345, 'alpha': 52, 'iterations': 17, 'learning_rate': 0.0016765071502541085, 'p_miss': 0.20190551454175262}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:09:04,598] Trial 93 finished with value: 0.1187480277463806 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2442, 'weights': 'distance'}. Best is trial 82 with value: 0.08215971454670236.
running
[I 2024-10-26 05:09:05,396] Trial 94 finished with value: 0.08212366125717616 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 27, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:06,731] Trial 95 finished with value: 0.1187480277463806 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2012, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:07,572] Trial 96 finished with value: 0.10074885664184381 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:08,395] Trial 97 finished with value: 0.08330221033236343 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 79, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:09,064] Trial 98 finished with value: 0.08549931312615901 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 126, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:09,689] Trial 99 finished with value: 0.08537015824699352 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 122, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:10,421] Trial 100 finished with value: 0.08970442807030801 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 256, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:11,441] Trial 101 finished with value: 0.0835578550679196 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 82, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:11,677] Trial 102 finished with value: 0.5585626287771547 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:09:12,467] Trial 103 finished with value: 0.08401772734795461 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 91, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:14,938] Trial 91 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.9222495719575725, 'alpha': 47, 'iterations': 950, 'learning_rate': 0.0019768439495871535, 'p_miss': 0.17871538444947505}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:15,876] Trial 105 finished with value: 0.09219312996944228 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 347, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:16,852] Trial 106 finished with value: 0.08482010461097675 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 112, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:17,630] Trial 107 finished with value: 0.08386058389169605 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 89, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:18,884] Trial 108 finished with value: 0.0889929801570112 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 230, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:19,847] Trial 109 finished with value: 0.08366897273613158 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 85, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:20,582] Trial 110 finished with value: 0.08847264608620238 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 210, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:26,955] Trial 111 finished with value: 0.10933186537939514 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:43,842] Trial 112 finished with value: 0.14914954288109422 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 4, 'learning_rate': 0.030953080133521264, 'p_miss': 0.26072255885560147}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:44,586] Trial 113 finished with value: 0.08303240534678738 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 74, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:45,374] Trial 114 finished with value: 0.08260304149579747 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 67, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:46,289] Trial 115 finished with value: 0.0935990825998262 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 403, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:47,035] Trial 116 finished with value: 0.08242911468505794 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 62, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:47,694] Trial 117 finished with value: 0.0825623326046632 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:48,555] Trial 118 finished with value: 0.08214869231492936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 57, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:49,563] Trial 119 finished with value: 0.09045875969040207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 285, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:50,673] Trial 120 finished with value: 0.10470120639949773 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 951, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:51,800] Trial 121 finished with value: 0.08821081079710366 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 202, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:52,714] Trial 122 finished with value: 0.08219677382798148 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:53,522] Trial 123 finished with value: 0.08276420195756932 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 70, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:54,888] Trial 124 finished with value: 0.09805310152779381 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 600, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:55,257] Trial 125 finished with value: 0.5585626287771547 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:55,988] Trial 126 finished with value: 0.08264060252261689 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 68, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:56,714] Trial 127 finished with value: 0.08219677382798148 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:57,567] Trial 128 finished with value: 0.08257085684776226 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 66, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:58,336] Trial 129 finished with value: 0.08810918925409045 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 197, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:12:59,092] Trial 130 finished with value: 0.0823599300526898 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 60, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:13:00,086] Trial 131 finished with value: 0.09098717692248541 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 303, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:14:55,555] Trial 38 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.061564893714685154, 'alpha': 99, 'iterations': 5137, 'learning_rate': 0.09907011732871351, 'p_miss': 0.26558966244902177}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:15:04,074] Trial 133 finished with value: 0.08603182090479358 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:15:05,066] Trial 134 finished with value: 0.08788358191089206 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 192, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:19:35,547] Trial 40 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.03446014697656535, 'alpha': 99, 'iterations': 6235, 'learning_rate': 0.07917076688643895, 'p_miss': 0.29608822752347375}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:19:36,391] Trial 136 finished with value: 0.0825623326046632 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:19:37,047] Trial 137 finished with value: 0.0825623326046632 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'distance'}. Best is trial 94 with value: 0.08212366125717616.
running
[I 2024-10-26 05:19:37,795] Trial 138 finished with value: 0.0818870168101363 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 51, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:19:38,454] Trial 139 finished with value: 0.08679374914348705 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 159, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:19:39,368] Trial 140 finished with value: 0.08528040522111657 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:19:55,756] Trial 31 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.6152307690766085, 'alpha': 94, 'iterations': 7343, 'learning_rate': 0.00012862279157823843, 'p_miss': 0.2918667605633509}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:23:33,845] Trial 53 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9720464210631719, 'alpha': 96, 'iterations': 6548, 'learning_rate': 0.09491438880178342, 'p_miss': 0.2884321401645335}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:24:33,759] Trial 34 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.6794753485448016, 'alpha': 87, 'iterations': 7978, 'learning_rate': 0.08293230567871838, 'p_miss': 0.2994460070896814}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:25:28,149] Trial 32 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.2707894982926239, 'alpha': 63, 'iterations': 8627, 'learning_rate': 0.07957487573529794, 'p_miss': 0.2981214071328675}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:27:52,120] Trial 30 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.35385899578195035, 'alpha': 80, 'iterations': 9298, 'learning_rate': 0.00012549949747513902, 'p_miss': 0.28070302936347846}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:27:52,927] Trial 146 finished with value: 0.08251808856620402 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 64, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:27:53,894] Trial 147 finished with value: 0.08242911468505794 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 62, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:27:54,692] Trial 148 finished with value: 0.08712595507886907 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 169, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:28:58,047] Trial 132 finished with value: 0.34529186745411566 and parameters: {'model_name': 'GAIN', 'batch_size': 194, 'hint_rate': 0.032022922224806405, 'alpha': 40, 'iterations': 721, 'learning_rate': 0.0003383823667703389, 'p_miss': 0.16494563715387262}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:29:16,820] Trial 39 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.03353637763374001, 'alpha': 91, 'iterations': 8515, 'learning_rate': 0.0582773884318843, 'p_miss': 0.2940707102176348}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:29:17,743] Trial 151 finished with value: 0.10074885664184381 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:29:18,809] Trial 152 finished with value: 0.08583074755747647 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 133, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:30:23,463] Trial 150 finished with value: 0.14322303022284427 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 27, 'learning_rate': 0.029852835929496287, 'p_miss': 0.05412199248114337}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:30:24,345] Trial 154 finished with value: 0.08204491800804949 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 55, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:30:25,266] Trial 155 finished with value: 0.08749674172982935 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 178, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:30:26,232] Trial 156 finished with value: 0.08219677382798148 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:30:27,146] Trial 157 finished with value: 0.0825623326046632 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:30:28,011] Trial 158 finished with value: 0.08544531922048682 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 125, 'weights': 'distance'}. Best is trial 138 with value: 0.0818870168101363.
running
[I 2024-10-26 05:30:29,000] Trial 159 finished with value: 0.08187818422800353 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 50, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:30,107] Trial 160 finished with value: 0.08937459925262262 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 245, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:30,912] Trial 161 finished with value: 0.08210203587734494 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 34, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:31,789] Trial 162 finished with value: 0.08528040522111657 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:32,700] Trial 163 finished with value: 0.08712595507886907 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 169, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:33,706] Trial 164 finished with value: 0.08544504316194206 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 124, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:34,487] Trial 165 finished with value: 0.08224985114621072 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 40, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:35,320] Trial 166 finished with value: 0.08210203587734494 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 34, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:36,104] Trial 167 finished with value: 0.08227903535059411 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 39, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:36,868] Trial 168 finished with value: 0.08537015824699352 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 122, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:38,049] Trial 169 finished with value: 0.1187480277463806 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2266, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:39,018] Trial 170 finished with value: 0.09390680840134671 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:39,879] Trial 171 finished with value: 0.08234258663391059 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 36, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:40,776] Trial 172 finished with value: 0.08224985114621072 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 40, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:30:42,019] Trial 173 finished with value: 0.08887444790875292 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 224, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:33:05,643] Trial 104 finished with value: 0.35115966180498726 and parameters: {'model_name': 'GAIN', 'batch_size': 248, 'hint_rate': 0.6767378776527312, 'alpha': 40, 'iterations': 1064, 'learning_rate': 0.028185701058390227, 'p_miss': 0.16894522109405272}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:33:06,013] Trial 175 finished with value: 0.13913231478985597 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:33:07,194] Trial 176 finished with value: 0.08215971454670236 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 42, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:33:08,344] Trial 177 finished with value: 0.08516032207192296 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 120, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:33:09,295] Trial 178 finished with value: 0.08966583001461866 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:33:10,476] Trial 179 finished with value: 0.08214428311620783 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 41, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:33:11,840] Trial 180 finished with value: 0.08482010461097675 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 112, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:33:13,337] Trial 181 finished with value: 0.08215675088641808 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 35, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:35:26,212] Trial 54 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9548585175284772, 'alpha': 95, 'iterations': 8429, 'learning_rate': 0.0629338811102543, 'p_miss': 0.2998186712347376}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:41:45,016] Trial 174 finished with value: 0.08393979405325158 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:41:46,298] Trial 184 finished with value: 0.08657132819245776 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 153, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:46:40,757] Trial 183 finished with value: 0.0846394053578303 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:46:41,866] Trial 186 finished with value: 0.08227903535059411 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 39, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:46:42,753] Trial 187 finished with value: 0.08228939170872161 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 37, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:46:43,954] Trial 188 finished with value: 0.08539509024165468 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 123, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:46:44,912] Trial 189 finished with value: 0.08214428311620783 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 41, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:49:06,458] Trial 182 finished with value: 0.15708211778360642 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 316, 'learning_rate': 0.0008979774608653573, 'p_miss': 0.2412253243101991}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:49:07,725] Trial 191 finished with value: 0.08457802833196346 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 103, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:49:09,223] Trial 192 finished with value: 0.08803124314111188 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 195, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:49:10,063] Trial 193 finished with value: 0.09390680840134671 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:49:12,102] Trial 194 finished with value: 0.1172649452333256 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1783, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:49:13,164] Trial 195 finished with value: 0.08442719852312927 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 100, 'weights': 'distance'}. Best is trial 159 with value: 0.08187818422800353.
running
[I 2024-10-26 05:49:14,048] Trial 196 finished with value: 0.08170216982987455 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 47, 'weights': 'distance'}. Best is trial 196 with value: 0.08170216982987455.
running
[I 2024-10-26 05:49:15,123] Trial 197 finished with value: 0.08170216982987455 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 47, 'weights': 'distance'}. Best is trial 196 with value: 0.08170216982987455.
running
[I 2024-10-26 05:49:16,249] Trial 198 finished with value: 0.0842991999149673 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 97, 'weights': 'distance'}. Best is trial 196 with value: 0.08170216982987455.
running
[I 2024-10-26 05:49:17,320] Trial 199 finished with value: 0.08663091295213572 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 154, 'weights': 'distance'}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 05:52:25,127] Trial 6 finished with value: 0.32899863855948047 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.40375376983893513, 'alpha': 28, 'iterations': 2914, 'learning_rate': 0.00012032509352902259, 'p_miss': 0.10266301017163532}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 05:55:05,433] Trial 185 finished with value: 0.15449701866793136 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 265, 'learning_rate': 0.0009574571838169937, 'p_miss': 0.2499819817753479}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:01:17,921] Trial 142 finished with value: 0.14563992670545875 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 1061, 'learning_rate': 0.00035709962076069924, 'p_miss': 0.16012271470283304}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:01:54,593] Trial 190 finished with value: 0.16566428202974381 and parameters: {'model_name': 'VAE', 'batch_size': 923, 'iterations': 238, 'learning_rate': 0.00026948039724262925, 'p_miss': 0.23935454009119603}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:05:07,493] Trial 135 finished with value: 0.14090641190950598 and parameters: {'model_name': 'VAE', 'batch_size': 234, 'iterations': 983, 'learning_rate': 0.0003458808886619829, 'p_miss': 0.17161865439694624}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:08:54,401] Trial 145 finished with value: 0.14350055209044985 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 1224, 'learning_rate': 0.00032681851397482325, 'p_miss': 0.05755751542945836}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:09:44,910] Trial 143 finished with value: 0.14157716835809653 and parameters: {'model_name': 'VAE', 'batch_size': 206, 'iterations': 1002, 'learning_rate': 0.00035128371547687374, 'p_miss': 0.1595044140195541}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:11:58,640] Trial 144 finished with value: 0.14143397559304624 and parameters: {'model_name': 'VAE', 'batch_size': 189, 'iterations': 962, 'learning_rate': 0.00038945957924890084, 'p_miss': 0.16447290449502508}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:12:21,645] Trial 141 finished with value: 0.14045098678404122 and parameters: {'model_name': 'VAE', 'batch_size': 209, 'iterations': 1112, 'learning_rate': 0.0002458485895830571, 'p_miss': 0.05046192433379279}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:12:28,418] Trial 153 finished with value: 0.14350825168254683 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 1190, 'learning_rate': 0.000879098823255667, 'p_miss': 0.045936877227534006}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:13:08,483] Trial 149 finished with value: 0.14254796546558257 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 1280, 'learning_rate': 0.0003301713253244921, 'p_miss': 0.16294322979398568}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:14:11,789] Trial 28 finished with value: 0.3787461862951741 and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.36506939283293477, 'alpha': 4, 'iterations': 5584, 'learning_rate': 0.0012591440737771188, 'p_miss': 0.29879415656162567}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:14:28,102] Trial 65 finished with value: 0.36081170842568505 and parameters: {'model_name': 'GAIN', 'batch_size': 113, 'hint_rate': 0.054224385045450574, 'alpha': 90, 'iterations': 5056, 'learning_rate': 0.0011184330583703167, 'p_miss': 0.2973119076436921}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:15:28,086] Trial 75 finished with value: 0.32972693116313356 and parameters: {'model_name': 'GAIN', 'batch_size': 103, 'hint_rate': 0.503502137131938, 'alpha': 59, 'iterations': 7317, 'learning_rate': 0.001637727203430271, 'p_miss': 0.05106820686475956}. Best is trial 196 with value: 0.08170216982987455.
[I 2024-10-26 06:15:56,718] Trial 55 finished with value: 0.3648343384117153 and parameters: {'model_name': 'GAIN', 'batch_size': 105, 'hint_rate': 0.9672270090858328, 'alpha': 99, 'iterations': 9537, 'learning_rate': 0.047506876925481105, 'p_miss': 0.2850051269613062}. Best is trial 196 with value: 0.08170216982987455.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.08170216982987455
{'model_name': 'KNNImputer', 'n_neighbors': 47, 'weights': 'distance'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8401088978101944
Generation:   4%|▍         | 1/25 [00:07<02:49,  7.08s/it]Generation:  2
Best f1_score score: 0.8401088978101944
Generation:   8%|▊         | 2/25 [00:15<02:56,  7.66s/it]Generation:  3
Best f1_score score: 0.8401088978101944
Generation:  12%|█▏        | 3/25 [00:22<02:47,  7.61s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c20dc0> 
 l1_ratio must be specified when penalty is elasticnet. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1204, in fit
    raise ValueError("l1_ratio must be specified when penalty is elasticnet.")
ValueError: l1_ratio must be specified when penalty is elasticnet.

Generation:  4
Best f1_score score: 0.8433795641252928
Generation:  16%|█▌        | 4/25 [00:33<03:07,  8.95s/it]Generation:  5
Best f1_score score: 0.8433795641252928
Generation:  20%|██        | 5/25 [00:44<03:12,  9.64s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a75e0> 
 l1_ratio must be specified when penalty is elasticnet. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1204, in fit
    raise ValueError("l1_ratio must be specified when penalty is elasticnet.")
ValueError: l1_ratio must be specified when penalty is elasticnet.

Generation:  6
Best f1_score score: 0.8433795641252928
Generation:  24%|██▍       | 6/25 [00:55<03:11, 10.10s/it]Generation:  7
Best f1_score score: 0.8433795641252928
Generation:  28%|██▊       | 7/25 [01:05<02:58,  9.92s/it]Generation:  8
Best f1_score score: 0.8433795641252928
Generation:  32%|███▏      | 8/25 [01:16<02:56, 10.37s/it]Generation:  9
Best f1_score score: 0.8433795641252928
Generation:  36%|███▌      | 9/25 [01:25<02:40, 10.06s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465b22410> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  10
Best f1_score score: 0.8433795641252928
Generation:  40%|████      | 10/25 [01:38<02:42, 10.86s/it]Generation:  11
Best f1_score score: 0.8433795641252928
Generation:  44%|████▍     | 11/25 [01:48<02:30, 10.73s/it]Generation:  12
Best f1_score score: 0.8433795641252928
Generation:  48%|████▊     | 12/25 [02:02<02:32, 11.76s/it]Generation:  13
Best f1_score score: 0.8433795641252928
Generation:  52%|█████▏    | 13/25 [02:55<04:50, 24.19s/it]Generation:  14
Best f1_score score: 0.8433795641252928
Generation:  56%|█████▌    | 14/25 [03:17<04:16, 23.36s/it]Generation:  15
Best f1_score score: 0.8433795641252928
Generation:  60%|██████    | 15/25 [03:28<03:17, 19.70s/it]Generation:  16
Best f1_score score: 0.8445859598538636
Generation:  64%|██████▍   | 16/25 [03:41<02:39, 17.69s/it]Generation:  17
Best f1_score score: 0.8445859598538636
Generation:  68%|██████▊   | 17/25 [03:57<02:17, 17.15s/it]Generation:  18
Best f1_score score: 0.8445859598538636
Generation:  72%|███████▏  | 18/25 [04:12<01:55, 16.44s/it]Generation:  19
Best f1_score score: 0.8445859598538636
Generation:  76%|███████▌  | 19/25 [04:28<01:39, 16.51s/it]Generation:  20
Best f1_score score: 0.8445859598538636
Generation:  80%|████████  | 20/25 [04:47<01:26, 17.29s/it]Generation:  21
Best f1_score score: 0.8445859598538636
Generation:  84%|████████▍ | 21/25 [05:02<01:05, 16.49s/it]Generation:  22
Best f1_score score: 0.8545962540347543
Generation:  88%|████████▊ | 22/25 [06:37<02:00, 40.13s/it]Generation:  23
Best f1_score score: 0.8545962540347543
Generation:  92%|█████████▏| 23/25 [10:06<03:01, 90.71s/it]Generation:  24
Best f1_score score: 0.8545962540347543
Generation:  96%|█████████▌| 24/25 [10:44<01:14, 74.95s/it]Generation:  25
Best f1_score score: 0.8545962540347543
Generation: 100%|██████████| 25/25 [12:25<00:00, 82.72s/it]Generation: 100%|██████████| 25/25 [12:29<00:00, 29.97s/it]
2024-10-26 06:28:46,473 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:35115' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-bc1ee22df90b340c13f4c4b70d48b351', 'ndarray-79adc72652e43bbd82ccf756e5d6753b'} (stimulus_id='handle-worker-cleanup-1729949326.4729705')
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.0003428970806,
                               hidden_layer_sizes=[275, 275, 275],
                               learning_rate='adaptive',
                               learning_rate_init=0.0040352601522,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9348099002666294, 'accuracy': 0.8446680080482898, 'balanced_accuracy': 0.845028165802518, 'logloss': 0.34738107957772324, 'f1': 0.8444109868834249}
original test score: {'auroc': 0.9272685912813301, 'accuracy': 0.8327974276527331, 'balanced_accuracy': 0.8333402266523287, 'logloss': 0.36718495211098656, 'f1': 0.8324075609351683}
imputed test score: {'auroc': 0.9239804781206056, 'accuracy': 0.8231511254019293, 'balanced_accuracy': 0.8237550665894615, 'logloss': 0.377256709152993, 'f1': 0.8226211216193795}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8409954161818934
Generation:   4%|▍         | 1/25 [03:33<1:25:21, 213.42s/it]Generation:  2
Best f1_score score: 0.8409954161818934
Generation:   8%|▊         | 2/25 [07:45<1:30:28, 236.01s/it]Generation:  3
Best f1_score score: 0.8430372542820403
Generation:  12%|█▏        | 3/25 [11:33<1:25:12, 232.38s/it]Generation:  4
Best f1_score score: 0.8430372542820403
Generation:  16%|█▌        | 4/25 [15:21<1:20:47, 230.84s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d69bd0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  5
Best f1_score score: 0.8442222858849864
Generation:  20%|██        | 5/25 [19:09<1:16:35, 229.76s/it]Generation:  6
Best f1_score score: 0.8466869426557306
Generation:  24%|██▍       | 6/25 [22:59<1:12:45, 229.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545523b7c0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454e374f0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.8466869426557306
Generation:  28%|██▊       | 7/25 [26:47<1:08:48, 229.37s/it]Generation:  8
Best f1_score score: 0.8466869426557306
Generation:  32%|███▏      | 8/25 [30:38<1:05:03, 229.63s/it]Generation:  9
Best f1_score score: 0.8474934946609991
Generation:  36%|███▌      | 9/25 [34:41<1:02:23, 233.95s/it]malloc(): invalid next size (unsorted)
2024-10-26 07:04:28,025 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
malloc(): invalid next size (unsorted)
2024-10-26 07:05:13,145 - distributed.scheduler - ERROR - Task eval_objective_list-59ab8c565ab9a63341291b35c4c61a88 marked as failed because 2 workers died while trying to run it
Exception in future
Attempted to run task 'eval_objective_list-59ab8c565ab9a63341291b35c4c61a88' on 2 different workers, but all those workers died while running it. The last worker that attempt to run the task was tcp://127.0.0.1:46507. Inspecting worker logs is often a good next step to diagnose what went wrong. For more information see https://distributed.dask.org/en/stable/killed.html.
2024-10-26 07:05:13,150 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Generation:  10
Best f1_score score: 0.8483091280115073
Generation:  40%|████      | 10/25 [38:34<58:23, 233.59s/it] Generation:  11
Best f1_score score: 0.8483091280115073
Generation:  44%|████▍     | 11/25 [42:26<54:22, 233.03s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455497b20> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.8483091280115073
Generation:  48%|████▊     | 12/25 [46:20<50:33, 233.34s/it]malloc(): invalid next size (unsorted)
2024-10-26 07:15:57,546 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Generation:  13
Best f1_score score: 0.8601897819453974
Generation:  52%|█████▏    | 13/25 [50:11<46:32, 232.74s/it]Generation:  14
Best f1_score score: 0.8661471062542659
Generation:  56%|█████▌    | 14/25 [54:02<42:35, 232.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742c2590> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.8661471062542659
Generation:  60%|██████    | 15/25 [57:52<38:34, 231.41s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474263e80> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.8661471062542659
Generation:  64%|██████▍   | 16/25 [1:01:44<34:44, 231.66s/it]Generation:  17
Best f1_score score: 0.8661471062542659
Generation:  68%|██████▊   | 17/25 [1:05:33<30:48, 231.02s/it]Generation:  18
Best f1_score score: 0.8661471062542659
Generation:  72%|███████▏  | 18/25 [1:09:23<26:53, 230.44s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d2db40> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.8661471062542659
Generation:  76%|███████▌  | 19/25 [1:13:10<22:58, 229.69s/it]Generation:  20
Best f1_score score: 0.8661471062542659
Generation:  80%|████████  | 20/25 [1:17:01<19:09, 229.88s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b38b580> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553f7a582e0> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  21
Best f1_score score: 0.8661488791456566
Generation:  84%|████████▍ | 21/25 [1:26:08<21:40, 325.16s/it]Generation:  22
Best f1_score score: 0.8661488791456566
Generation:  88%|████████▊ | 22/25 [1:30:00<14:51, 297.16s/it]Generation:  23
Best f1_score score: 0.8665441428701948
Generation:  92%|█████████▏| 23/25 [1:33:48<09:12, 276.42s/it]Generation:  24
Best f1_score score: 0.8665441428701948
Generation:  96%|█████████▌| 24/25 [1:37:38<04:22, 262.62s/it]Generation:  25
Best f1_score score: 0.8665441428701948
Generation: 100%|██████████| 25/25 [1:41:30<00:00, 253.41s/it]Generation: 100%|██████████| 25/25 [1:41:30<00:00, 243.64s/it]
2024-10-26 08:11:22,954 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42121' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-173487fe6ff623e65429ae8fd95bedce', 'ndarray-bc1ee22df90b340c13f4c4b70d48b351'} (stimulus_id='handle-worker-cleanup-1729955482.9539149')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=RandomForestRegressor(),
                                  imputation_order='roman',
                                  initial_strategy='constant',
                                  n_nearest_features=68)),
                ('svc',
                 SVC(C=71.4175862130415, gamma=1.3674795014088, max_iter=3000,
                     probability=True, shrinking=False))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9238214801168092, 'accuracy': 0.8740442655935614, 'balanced_accuracy': 0.8737384337533588, 'logloss': 0.34953355104067696, 'f1': 0.8737692049150171}
test score: {'auroc': 0.9300810654313839, 'accuracy': 0.8681672025723473, 'balanced_accuracy': 0.8677206551410372, 'logloss': 0.33598851035337646, 'f1': 0.8677721088435374}
original test score: {'auroc': 0.9324696004632311, 'accuracy': 0.8745980707395499, 'balanced_accuracy': 0.8741521217635868, 'logloss': 0.3300384548230009, 'f1': 0.87422224987556}
score end
737
lvl
0.01
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
3.357400489449501
hours
DONE
