Run: 8
/cm/local/apps/slurm/var/spool/job1019386/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/737/737.pkl
working on 
../data/c/737/class_full_MAR_0.5_1
0.3625357151031494
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-25 16:18:19,819] A new study created in memory with name: no-name-0048d221-2a42-4527-902e-ae09ed9e3934
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-25 16:18:20,157] Trial 13 finished with value: 0.124385781478256 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 13 with value: 0.124385781478256.
[I 2024-10-25 16:18:20,289] Trial 9 finished with value: 0.124385781478256 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 13 with value: 0.124385781478256.
running
running
[I 2024-10-25 16:18:20,725] Trial 3 finished with value: 0.0929136835089753 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 287, 'weights': 'distance'}. Best is trial 3 with value: 0.0929136835089753.
running
[I 2024-10-25 16:18:20,938] Trial 1 finished with value: 0.10703602027964014 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1473, 'weights': 'distance'}. Best is trial 3 with value: 0.0929136835089753.
running
[I 2024-10-25 16:18:21,111] Trial 7 finished with value: 0.10060878264309596 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 748, 'weights': 'distance'}. Best is trial 3 with value: 0.0929136835089753.
running
[I 2024-10-25 16:18:21,419] Trial 18 finished with value: 0.0747861611391046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11, 'weights': 'distance'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:21,820] Trial 20 finished with value: 0.10708585228586584 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1485, 'weights': 'distance'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:22,110] Trial 22 finished with value: 0.1688478286501624 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:22,636] Trial 23 finished with value: 0.12381769235113953 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1861, 'weights': 'uniform'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:23,209] Trial 24 finished with value: 0.11842044353366554 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1407, 'weights': 'uniform'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:24,441] Trial 14 finished with value: 0.07846500956255598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:25,226] Trial 2 finished with value: 0.07780015821129889 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:25,750] Trial 4 finished with value: 0.15370820167760976 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 18 with value: 0.0747861611391046.
[I 2024-10-25 16:18:25,882] Trial 6 finished with value: 0.07479883332974199 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 18 with value: 0.0747861611391046.
running
running
[I 2024-10-25 16:18:26,537] Trial 5 finished with value: 0.11559401001142562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:27,491] Trial 26 finished with value: 0.07846500956255598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:27,799] Trial 16 finished with value: 0.37353290254469185 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.051166356955109765, 'alpha': 21, 'iterations': 1, 'learning_rate': 0.00024143283724920738, 'p_miss': 0.27067472785547814}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:28,010] Trial 0 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 15, 'hint_rate': 0.9317984819342205, 'alpha': 35, 'iterations': 12, 'learning_rate': 0.0033299125245916292, 'p_miss': 0.0150808362980446}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:28,286] Trial 12 finished with value: 0.37027757562837105 and parameters: {'model_name': 'GAIN', 'batch_size': 25, 'hint_rate': 0.036225136732468285, 'alpha': 57, 'iterations': 2, 'learning_rate': 0.0011969374236302204, 'p_miss': 0.2348655519671593}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:33,283] Trial 21 finished with value: 0.12846837364331737 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:18:58,685] Trial 31 finished with value: 0.17496460714040782 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 16, 'learning_rate': 0.09002040672317065, 'p_miss': 0.19037854150341}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:19:00,308] Trial 29 finished with value: 0.12224636493116967 and parameters: {'model_name': 'VAE', 'batch_size': 83, 'iterations': 13, 'learning_rate': 0.0013372878355817214, 'p_miss': 0.05284621652040332}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:19:07,472] Trial 37 finished with value: 0.07850172827428624 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:19:28,751] Trial 25 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.5635378204856004, 'alpha': 68, 'iterations': 266, 'learning_rate': 0.0025815103492716437, 'p_miss': 0.19465084173186872}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:19:30,232] Trial 30 finished with value: 0.11762501233345175 and parameters: {'model_name': 'VAE', 'batch_size': 36, 'iterations': 26, 'learning_rate': 0.0004257657278784794, 'p_miss': 0.016284004917165418}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:23:39,947] Trial 8 finished with value: 0.11752115298296031 and parameters: {'model_name': 'VAE', 'batch_size': 726, 'iterations': 67, 'learning_rate': 0.0018069852887806163, 'p_miss': 0.18653030850063118}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:26:21,030] Trial 10 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.8132452201333504, 'alpha': 82, 'iterations': 1484, 'learning_rate': 0.0009578859537251804, 'p_miss': 0.22057490856548878}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:29:57,789] Trial 38 finished with value: 0.0845692106910175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:05,626] Trial 43 finished with value: 0.08216197406416177 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:08,260] Trial 40 finished with value: 0.08516046358863757 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:13,187] Trial 44 finished with value: 0.07593120898213836 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:14,056] Trial 45 finished with value: 0.09231073071629185 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:19,611] Trial 46 finished with value: 0.09548293554023536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:20,697] Trial 48 finished with value: 0.07517542974904746 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 19, 'weights': 'distance'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:22,149] Trial 49 finished with value: 0.07563483393351393 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 23, 'weights': 'distance'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:22,477] Trial 47 finished with value: 0.07593120898213836 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 18 with value: 0.0747861611391046.
running
[I 2024-10-25 16:30:23,411] Trial 51 finished with value: 0.07471540144057662 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:23,839] Trial 50 finished with value: 0.0747861611391046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:25,270] Trial 52 finished with value: 0.09535290918067511 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 411, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:25,457] Trial 53 finished with value: 0.09825633949517493 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 586, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:26,644] Trial 54 finished with value: 0.10018862584580868 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 717, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:27,167] Trial 55 finished with value: 0.1019910545071993 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 872, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:27,827] Trial 56 finished with value: 0.07991485653264323 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 78, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:28,397] Trial 57 finished with value: 0.07523455390345757 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:28,901] Trial 58 finished with value: 0.0753240841418506 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:29,706] Trial 59 finished with value: 0.09010923588120272 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 215, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:30,217] Trial 60 finished with value: 0.10310958040516009 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 294, 'weights': 'uniform'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:30,887] Trial 62 finished with value: 0.21156112555526616 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:31,099] Trial 61 finished with value: 0.1050865582000402 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 403, 'weights': 'uniform'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:32,480] Trial 63 finished with value: 0.09548765759409591 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 419, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:32,738] Trial 64 finished with value: 0.11021472941291313 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2393, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:34,007] Trial 66 finished with value: 0.07547367430854124 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 27, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:34,990] Trial 67 finished with value: 0.09029470279658865 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 219, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:35,977] Trial 68 finished with value: 0.08691086088515407 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 162, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:50,444] Trial 39 finished with value: 0.08033211607219955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:30:58,679] Trial 17 finished with value: 0.08002574930697826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:34:55,514] Trial 41 finished with value: 0.08278219164769876 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:37:10,623] Trial 42 finished with value: 0.08540013105126201 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 16:47:25,634] Trial 11 finished with value: 0.14370828751060008 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 653, 'learning_rate': 0.08496069063837594, 'p_miss': 0.12077700530651712}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 17:08:58,049] Trial 28 finished with value: 0.4005581421032886 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.689494544430528, 'alpha': 38, 'iterations': 2154, 'learning_rate': 0.001701077838937545, 'p_miss': 0.19369555144743364}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 17:08:58,296] Trial 75 finished with value: 0.42965352572867194 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 17:08:59,023] Trial 76 finished with value: 0.07684597234286591 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 17:08:59,910] Trial 77 finished with value: 0.09573045887001277 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 17:09:00,890] Trial 78 finished with value: 0.08997774529649497 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 212, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 17:09:01,667] Trial 79 finished with value: 0.0751021103546891 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 17:32:19,361] Trial 19 finished with value: 0.15039162041089624 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 1594, 'learning_rate': 0.00042289965222171437, 'p_miss': 0.12979079264592108}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 18:45:10,364] Trial 27 finished with value: 0.14160348488257002 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 2974, 'learning_rate': 0.00010728679058979501, 'p_miss': 0.0529187668562144}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:44,363] Trial 81 finished with value: 0.40240581622684096 and parameters: {'model_name': 'GAIN', 'batch_size': 941, 'hint_rate': 0.3668581604961917, 'alpha': 99, 'iterations': 5207, 'learning_rate': 0.013090989389965146, 'p_miss': 0.2894053475340267}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:45,297] Trial 83 finished with value: 0.09698561240346477 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 506, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:46,113] Trial 84 finished with value: 0.08869523475550609 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 188, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:47,130] Trial 85 finished with value: 0.10377771382320936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1090, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:47,810] Trial 86 finished with value: 0.0751021103546891 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:48,455] Trial 87 finished with value: 0.08642123215855786 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 155, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:49,295] Trial 88 finished with value: 0.09346695895115294 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 304, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:50,078] Trial 89 finished with value: 0.08447957423200067 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 134, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:50,346] Trial 90 finished with value: 0.1688478286501624 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:51,231] Trial 91 finished with value: 0.09260779643258242 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 277, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:56,897] Trial 92 finished with value: 0.40137289770950363 and parameters: {'model_name': 'GAIN', 'batch_size': 354, 'hint_rate': 0.2930656520127506, 'alpha': 13, 'iterations': 3, 'learning_rate': 0.014693089130739159, 'p_miss': 0.08862692475682232}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:54:57,737] Trial 93 finished with value: 0.0830112191812861 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 116, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:57:33,080] Trial 70 finished with value: 0.41878019982932885 and parameters: {'model_name': 'GAIN', 'batch_size': 838, 'hint_rate': 0.36138222103112516, 'alpha': 3, 'iterations': 7326, 'learning_rate': 0.016162701122723343, 'p_miss': 0.10697688134770866}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:57:33,976] Trial 95 finished with value: 0.0927024359552894 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 280, 'weights': 'distance'}. Best is trial 51 with value: 0.07471540144057662.
running
[I 2024-10-25 19:57:34,822] Trial 96 finished with value: 0.07470363707836518 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 13, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 19:57:35,733] Trial 97 finished with value: 0.07563483393351393 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 23, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:13,692] Trial 98 finished with value: 0.13022600202626622 and parameters: {'model_name': 'VAE', 'batch_size': 158, 'iterations': 165, 'learning_rate': 0.006951971265786405, 'p_miss': 0.14543067216510513}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:14,718] Trial 99 finished with value: 0.08363634674824816 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 121, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:15,481] Trial 100 finished with value: 0.08892373538070775 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 122, 'weights': 'uniform'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:16,374] Trial 101 finished with value: 0.07684597234286591 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:17,648] Trial 102 finished with value: 0.10850213136386344 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1705, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:18,558] Trial 103 finished with value: 0.09462296885177146 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 367, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:19,552] Trial 104 finished with value: 0.08436070666034892 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 131, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:20,581] Trial 105 finished with value: 0.09767728918613908 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 548, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:21,687] Trial 106 finished with value: 0.07581479050898773 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 38, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:22,649] Trial 107 finished with value: 0.0814650575952559 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 99, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:23,639] Trial 108 finished with value: 0.09226453820982816 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 268, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:24,596] Trial 109 finished with value: 0.08532945429829673 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'uniform'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:52,868] Trial 110 finished with value: 0.13148043004621565 and parameters: {'model_name': 'VAE', 'batch_size': 130, 'iterations': 4, 'learning_rate': 0.03899981313059962, 'p_miss': 0.07634839195285642}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:53,880] Trial 111 finished with value: 0.08130809392169668 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 98, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:55,083] Trial 112 finished with value: 0.08962547391546057 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 206, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:06:55,318] Trial 113 finished with value: 0.42965352572867194 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:02,786] Trial 114 finished with value: 0.0779684240253187 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:04,298] Trial 115 finished with value: 0.11021472941291313 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2299, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:05,096] Trial 116 finished with value: 0.0747861611391046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:06,251] Trial 117 finished with value: 0.08025399041408268 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 84, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:07,138] Trial 118 finished with value: 0.0747861611391046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:08,206] Trial 119 finished with value: 0.08916371222437473 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 197, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:09,163] Trial 120 finished with value: 0.08584895925489501 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:09,984] Trial 121 finished with value: 0.09446243698106113 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 353, 'weights': 'distance'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:10,787] Trial 122 finished with value: 0.08498190764866091 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 95, 'weights': 'uniform'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:18,213] Trial 123 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:26,044] Trial 124 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:33,339] Trial 125 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:40,187] Trial 126 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:47,703] Trial 127 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:07:54,804] Trial 128 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:08:02,117] Trial 129 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:08:09,544] Trial 130 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:08:16,811] Trial 131 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:08:24,258] Trial 132 finished with value: 0.07852897467616282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:08:31,708] Trial 133 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:08:38,701] Trial 134 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:08:45,641] Trial 135 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:08:53,320] Trial 136 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:00,971] Trial 137 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:09,031] Trial 138 finished with value: 0.07852897467616282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:16,559] Trial 139 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:24,348] Trial 140 finished with value: 0.07852897467616282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:30,602] Trial 72 finished with value: 0.4166989304875329 and parameters: {'model_name': 'GAIN', 'batch_size': 874, 'hint_rate': 0.37086211744913156, 'alpha': 3, 'iterations': 7346, 'learning_rate': 0.019290951183673622, 'p_miss': 0.11430910239277217}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:44,146] Trial 141 finished with value: 0.08031111490550824 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:50,509] Trial 142 finished with value: 0.08031111490550824 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:52,490] Trial 143 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:57,836] Trial 144 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:09:59,414] Trial 145 finished with value: 0.07490235293188788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:04,962] Trial 146 finished with value: 0.07486318523217628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:06,742] Trial 147 finished with value: 0.07487792822245948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:09,281] Trial 73 finished with value: 0.41348705879517383 and parameters: {'model_name': 'GAIN', 'batch_size': 734, 'hint_rate': 0.4092360286351684, 'alpha': 5, 'iterations': 7606, 'learning_rate': 0.020356960961701864, 'p_miss': 0.1150609229337339}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:12,938] Trial 148 finished with value: 0.07478898642960383 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:13,118] Trial 149 finished with value: 0.07846500956255598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:15,737] Trial 150 finished with value: 0.07795346875277445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:20,327] Trial 151 finished with value: 0.07795346875277445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:21,540] Trial 152 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:23,008] Trial 153 finished with value: 0.07478898642960383 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:27,981] Trial 154 finished with value: 0.07478898642960383 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:28,159] Trial 155 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:29,776] Trial 156 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:34,226] Trial 158 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:34,533] Trial 157 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:35,134] Trial 161 finished with value: 0.21156112555526616 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:36,700] Trial 159 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:10:41,089] Trial 162 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:11:09,745] Trial 74 finished with value: 0.4103175193023774 and parameters: {'model_name': 'GAIN', 'batch_size': 981, 'hint_rate': 0.3744243439421123, 'alpha': 8, 'iterations': 7035, 'learning_rate': 0.017484672551426675, 'p_miss': 0.11979682200938441}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:11:25,290] Trial 165 finished with value: 0.07832353835450173 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:12:32,952] Trial 160 finished with value: 0.12426518103074657 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 60, 'learning_rate': 0.005811596008328775, 'p_miss': 0.252279088615817}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:12:38,737] Trial 167 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:12:39,182] Trial 163 finished with value: 0.12724283232164516 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 54, 'learning_rate': 0.005699009294868995, 'p_miss': 0.250386083688404}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:12:45,530] Trial 168 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:12:46,106] Trial 169 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:13:30,558] Trial 164 finished with value: 0.1227272129039495 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 76, 'learning_rate': 0.004817180300407422, 'p_miss': 0.2524684225061277}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:14:07,777] Trial 94 finished with value: 0.1296629662308751 and parameters: {'model_name': 'VAE', 'batch_size': 188, 'iterations': 289, 'learning_rate': 0.010028729720769194, 'p_miss': 0.14803992644541425}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:16:11,846] Trial 166 finished with value: 0.13195516526507065 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 87, 'learning_rate': 0.006180302787543086, 'p_miss': 0.25161379860809907}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:17:31,931] Trial 65 finished with value: 0.41376311379012376 and parameters: {'model_name': 'GAIN', 'batch_size': 995, 'hint_rate': 0.37203894107114277, 'alpha': 0, 'iterations': 8455, 'learning_rate': 0.03697576783657017, 'p_miss': 0.12738165861269712}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:19:59,771] Trial 71 finished with value: 0.4143937268578407 and parameters: {'model_name': 'GAIN', 'batch_size': 480, 'hint_rate': 0.368238656804007, 'alpha': 1, 'iterations': 8358, 'learning_rate': 0.015110148179772034, 'p_miss': 0.13166137208729775}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:20:07,347] Trial 176 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:20:14,484] Trial 177 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:24:43,273] Trial 170 finished with value: 0.07841657759297799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:24:47,712] Trial 171 finished with value: 0.07678777281241043 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:24:52,283] Trial 179 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:24:55,962] Trial 180 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:00,914] Trial 181 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:05,040] Trial 182 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:10,045] Trial 183 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:13,737] Trial 184 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:18,654] Trial 185 finished with value: 0.07487792822245948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:23,200] Trial 186 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:27,555] Trial 187 finished with value: 0.07480372941988703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:32,720] Trial 188 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:33,439] Trial 190 finished with value: 0.21156112555526616 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:36,258] Trial 189 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:40,933] Trial 191 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:43,858] Trial 192 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:48,638] Trial 193 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:51,872] Trial 194 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:54,228] Trial 172 finished with value: 0.07887494387116016 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:56,671] Trial 195 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:25:59,100] Trial 196 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
running
[I 2024-10-25 20:26:00,530] Trial 197 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 20:26:03,973] Trial 198 finished with value: 0.0747908224628747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 20:26:05,199] Trial 199 finished with value: 0.07487792822245948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 20:26:17,017] Trial 173 finished with value: 0.07987883068120097 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 20:28:22,289] Trial 174 finished with value: 0.0762411765413678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 20:28:59,047] Trial 175 finished with value: 0.07774944136767578 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 20:31:01,900] Trial 178 finished with value: 0.07704728936018387 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 20:34:43,056] Trial 69 finished with value: 0.4144244407505651 and parameters: {'model_name': 'GAIN', 'batch_size': 627, 'hint_rate': 0.3971168066956408, 'alpha': 0, 'iterations': 9497, 'learning_rate': 0.025024921970863326, 'p_miss': 0.11398459657289256}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 20:49:59,002] Trial 80 finished with value: 0.41885872965896065 and parameters: {'model_name': 'GAIN', 'batch_size': 856, 'hint_rate': 0.30366670769474485, 'alpha': 100, 'iterations': 8897, 'learning_rate': 0.012608804441850356, 'p_miss': 0.11713618792170735}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 21:15:42,041] Trial 35 finished with value: 0.1286272825199648 and parameters: {'model_name': 'VAE', 'batch_size': 764, 'iterations': 6279, 'learning_rate': 0.04452363273027003, 'p_miss': 0.0699499863211936}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 21:17:01,438] Trial 15 finished with value: 0.1492262104737466 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6698, 'learning_rate': 0.07093299684662126, 'p_miss': 0.04686844641704447}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 21:19:17,683] Trial 32 finished with value: 0.12928143093661953 and parameters: {'model_name': 'VAE', 'batch_size': 563, 'iterations': 6566, 'learning_rate': 0.08781538065924362, 'p_miss': 0.028857984935404368}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 21:25:14,289] Trial 82 finished with value: 0.39543519632302204 and parameters: {'model_name': 'GAIN', 'batch_size': 643, 'hint_rate': 0.35762860868412083, 'alpha': 6, 'iterations': 9379, 'learning_rate': 0.011823394600162991, 'p_miss': 0.27455894397090513}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 21:30:56,872] Trial 36 finished with value: 0.1281516914057098 and parameters: {'model_name': 'VAE', 'batch_size': 919, 'iterations': 6978, 'learning_rate': 0.08649027523111842, 'p_miss': 0.060562800785408294}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 21:40:45,535] Trial 34 finished with value: 0.12885498657939054 and parameters: {'model_name': 'VAE', 'batch_size': 800, 'iterations': 9419, 'learning_rate': 0.03480759618015494, 'p_miss': 0.0791641735067114}. Best is trial 96 with value: 0.07470363707836518.
[I 2024-10-25 21:42:42,980] Trial 33 finished with value: 0.12898712428513398 and parameters: {'model_name': 'VAE', 'batch_size': 813, 'iterations': 9769, 'learning_rate': 0.0820347021462949, 'p_miss': 0.11500426614302456}. Best is trial 96 with value: 0.07470363707836518.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.07470363707836518
{'model_name': 'KNNImputer', 'n_neighbors': 13, 'weights': 'distance'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8335765143121204
Generation:   4%|▍         | 1/25 [03:42<1:29:10, 222.94s/it]Generation:  2
Best f1_score score: 0.8335765143121204
Generation:   8%|▊         | 2/25 [03:47<36:19, 94.76s/it]   Generation:  3
Best f1_score score: 0.8335765143121204
Generation:  12%|█▏        | 3/25 [03:59<20:46, 56.67s/it]Generation:  4
Best f1_score score: 0.8335765143121204
Generation:  16%|█▌        | 4/25 [04:05<12:53, 36.82s/it]Generation:  5
Best f1_score score: 0.8335765143121204
Generation:  20%|██        | 5/25 [04:16<09:06, 27.34s/it]Generation:  6
Best f1_score score: 0.8335765143121204
Generation:  24%|██▍       | 6/25 [04:26<06:45, 21.37s/it]Generation:  7
Best f1_score score: 0.8489449629720698
Generation:  28%|██▊       | 7/25 [04:37<05:28, 18.27s/it]Generation:  8
Best f1_score score: 0.8489449629720698
Generation:  32%|███▏      | 8/25 [04:49<04:34, 16.15s/it]Generation:  9
Best f1_score score: 0.8489449629720698
Generation:  36%|███▌      | 9/25 [05:21<05:38, 21.13s/it]Generation:  10
Best f1_score score: 0.8489449629720698
Generation:  40%|████      | 10/25 [05:33<04:35, 18.34s/it]Generation:  11
Best f1_score score: 0.8489449629720698
Generation:  44%|████▍     | 11/25 [05:44<03:45, 16.11s/it]Generation:  12
Best f1_score score: 0.8489449629720698
Generation:  48%|████▊     | 12/25 [06:12<04:15, 19.68s/it]Generation:  13
Best f1_score score: 0.8489449629720698
Generation:  52%|█████▏    | 13/25 [06:32<03:57, 19.76s/it]Generation:  14
Best f1_score score: 0.8489449629720698
Generation:  56%|█████▌    | 14/25 [07:56<07:09, 39.05s/it]Generation:  15
Best f1_score score: 0.8489449629720698
Generation:  60%|██████    | 15/25 [08:09<05:14, 31.44s/it]Generation:  16
Best f1_score score: 0.8489449629720698
Generation:  64%|██████▍   | 16/25 [08:20<03:47, 25.26s/it]Generation:  17
Best f1_score score: 0.8489449629720698
Generation:  68%|██████▊   | 17/25 [08:35<02:55, 21.98s/it]Generation:  18
Best f1_score score: 0.8489449629720698
Generation:  72%|███████▏  | 18/25 [09:18<03:18, 28.40s/it]Generation:  19
Best f1_score score: 0.8489449629720698
Generation:  76%|███████▌  | 19/25 [09:34<02:27, 24.61s/it]Generation:  20
Best f1_score score: 0.8489449629720698
Generation:  80%|████████  | 20/25 [09:48<01:47, 21.42s/it]Generation:  21
Best f1_score score: 0.8489449629720698
Generation:  84%|████████▍ | 21/25 [10:07<01:22, 20.60s/it]Generation:  22
Best f1_score score: 0.8517372600231843
Generation:  88%|████████▊ | 22/25 [10:22<00:57, 19.17s/it]Generation:  23
Best f1_score score: 0.8517372600231843
Generation:  92%|█████████▏| 23/25 [10:39<00:36, 18.35s/it]Generation:  24
Best f1_score score: 0.8517372600231843
Generation:  96%|█████████▌| 24/25 [10:55<00:17, 17.79s/it]Generation:  25
Best f1_score score: 0.8517372600231843
Generation: 100%|██████████| 25/25 [11:12<00:00, 17.43s/it]Generation: 100%|██████████| 25/25 [11:15<00:00, 27.02s/it]
2024-10-25 21:54:06,968 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33407' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-7fe5b4a0f24048e887dad77f10a7904c', 'ndarray-bc1ee22df90b340c13f4c4b70d48b351'} (stimulus_id='handle-worker-cleanup-1729918446.9685752')
Fitted
Pipeline(steps=[('svc',
                 SVC(C=38.1900980283827, coef0=0.7514898785994,
                     gamma=0.3212510342393, kernel='poly', max_iter=3000,
                     probability=True))])
score start
train score: {'auroc': 0.908398954211785, 'accuracy': 0.854728370221328, 'balanced_accuracy': 0.8545321807897308, 'logloss': 0.38449472476671787, 'f1': 0.8545776545776547}
original test score: {'auroc': 0.9136715195632392, 'accuracy': 0.8553054662379421, 'balanced_accuracy': 0.8549197617668955, 'logloss': 0.3911341426214899, 'f1': 0.854968081578511}
imputed test score: {'auroc': 0.7667300852014228, 'accuracy': 0.7491961414790996, 'balanced_accuracy': 0.7481491438497808, 'logloss': 0.8329301036351832, 'f1': 0.7457898873460833}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4bb0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  1
Best f1_score score: 0.829577806377434
Generation:   4%|▍         | 1/25 [00:49<19:46, 49.43s/it]Generation:  2
Best f1_score score: 0.830483444826539
Generation:   8%|▊         | 2/25 [03:34<45:04, 117.57s/it]Generation:  3
Best f1_score score: 0.830483444826539
Generation:  12%|█▏        | 3/25 [03:49<25:56, 70.75s/it] malloc(): invalid next size (unsorted)
2024-10-25 21:58:43,338 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
malloc(): invalid next size (unsorted)
2024-10-25 21:59:16,244 - distributed.scheduler - ERROR - Task eval_objective_list-a1cd2a4c249196c3ad350cf7f97f242e marked as failed because 2 workers died while trying to run it
Exception in future
2024-10-25 21:59:16,250 - distributed.nanny - WARNING - Restarting worker
Attempted to run task 'eval_objective_list-a1cd2a4c249196c3ad350cf7f97f242e' on 2 different workers, but all those workers died while running it. The last worker that attempt to run the task was tcp://127.0.0.1:46147. Inspecting worker logs is often a good next step to diagnose what went wrong. For more information see https://distributed.dask.org/en/stable/killed.html.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Generation:  4
Best f1_score score: 0.8311856261796642
Generation:  16%|█▌        | 4/25 [06:38<38:19, 109.51s/it]Generation:  5
Best f1_score score: 0.8311856261796642
Generation:  20%|██        | 5/25 [06:45<24:09, 72.49s/it] Generation:  6
Best f1_score score: 0.8352138075538995
Generation:  24%|██▍       | 6/25 [06:52<15:54, 50.25s/it]Generation:  7
Best f1_score score: 0.8356180084455949
Generation:  28%|██▊       | 7/25 [07:00<10:56, 36.47s/it]Generation:  8
Best f1_score score: 0.8356180084455949
Generation:  32%|███▏      | 8/25 [07:06<07:32, 26.62s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd60b0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  9
Best f1_score score: 0.8356180084455949
Generation:  36%|███▌      | 9/25 [07:17<05:51, 21.95s/it]Generation:  10
Best f1_score score: 0.8356180084455949
Generation:  40%|████      | 10/25 [07:24<04:16, 17.10s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545df2b730> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.8356180084455949
Generation:  44%|████▍     | 11/25 [10:13<14:52, 63.73s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dfc3580> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.8356180084455949
Generation:  48%|████▊     | 12/25 [13:36<22:57, 105.92s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452f55b40> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.8356180084455949
Generation:  52%|█████▏    | 13/25 [13:46<15:25, 77.09s/it] Generation:  14
Best f1_score score: 0.8356180084455949
Generation:  56%|█████▌    | 14/25 [14:05<10:53, 59.44s/it]Generation:  15
Best f1_score score: 0.8405602799557602
Generation:  60%|██████    | 15/25 [14:51<09:14, 55.49s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745a4730> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f77820> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.8405602799557602
Generation:  64%|██████▍   | 16/25 [17:38<13:22, 89.12s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452d85390> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545729b6a0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  17
Best f1_score score: 0.8405602799557602
Generation:  68%|██████▊   | 17/25 [17:44<08:31, 63.97s/it]Generation:  18
Best f1_score score: 0.8405602799557602
Generation:  72%|███████▏  | 18/25 [17:56<05:38, 48.39s/it]Generation:  19
Best f1_score score: 0.8417121355081963
Generation:  76%|███████▌  | 19/25 [19:29<06:10, 61.77s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545322d000> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.8417121355081963
Generation:  80%|████████  | 20/25 [22:03<07:27, 89.47s/it]Generation:  21
Best f1_score score: 0.8417121355081963
Generation:  84%|████████▍ | 21/25 [23:14<05:35, 83.84s/it]Generation:  22
Best f1_score score: 0.8497352719629154
Generation:  88%|████████▊ | 22/25 [25:53<05:19, 106.45s/it]Generation:  23
Best f1_score score: 0.8505407546591053
Generation:  92%|█████████▏| 23/25 [26:02<02:34, 77.25s/it] Generation:  24
Best f1_score score: 0.8534037965194979
Generation:  96%|█████████▌| 24/25 [26:52<01:08, 68.92s/it]Generation:  25
Best f1_score score: 0.8534037965194979
Generation: 100%|██████████| 25/25 [28:32<00:00, 78.37s/it]Generation: 100%|██████████| 25/25 [28:32<00:00, 68.50s/it]
2024-10-25 22:22:49,937 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42207' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-9239194c0feea87ab8bfd98a8334c842', 'ndarray-bc1ee22df90b340c13f4c4b70d48b351'} (stimulus_id='handle-worker-cleanup-1729920169.9373114')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=51)),
                ('svc',
                 SVC(C=1815.9278153783105, gamma=0.0764058319255, max_iter=3000,
                     probability=True))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9077712480793099, 'accuracy': 0.847887323943662, 'balanced_accuracy': 0.8477984292447575, 'logloss': 0.3865979297099715, 'f1': 0.8478374262943045}
test score: {'auroc': 0.813161758623542, 'accuracy': 0.7652733118971061, 'balanced_accuracy': 0.7645069898254612, 'logloss': 0.5739351758165864, 'f1': 0.7634907075589632}
original test score: {'auroc': 0.9164891637025395, 'accuracy': 0.8585209003215434, 'balanced_accuracy': 0.8582285548846058, 'logloss': 0.36860479729881485, 'f1': 0.858309949573915}
score end
737
lvl
0.5
type
MAR
num_run
1
class_full
finished
all finished
full run takes
6.0782326237360635
hours
DONE
