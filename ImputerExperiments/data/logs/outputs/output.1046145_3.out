Run: 3
/cm/local/apps/slurm/var/spool/job1046145/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1496/1496.pkl
working on 
../data/c/1496/class_full_MCAR_0.3_1
1.8981554508209229
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-12 08:59:00,292] A new study created in memory with name: no-name-cf7be19d-4522-4189-a6c4-db4bcdfad5e4
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-12 08:59:00,812] Trial 5 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:01,316] Trial 6 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:01,767] Trial 17 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:02,304] Trial 18 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:06,954] Trial 11 finished with value: 0.1576181346267052 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 356, 'weights': 'distance'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:07,664] Trial 8 finished with value: 0.1582087238829053 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4118, 'weights': 'uniform'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:07,916] Trial 9 finished with value: 0.1577674631322984 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2316, 'weights': 'uniform'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:08,388] Trial 21 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:08,777] Trial 16 finished with value: 0.15764895050333746 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 439, 'weights': 'distance'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:09,250] Trial 7 finished with value: 0.15764557696029388 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1979, 'weights': 'distance'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:09,540] Trial 4 finished with value: 0.15765269636103046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1952, 'weights': 'distance'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:10,340] Trial 13 finished with value: 0.15796450857606784 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3548, 'weights': 'distance'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:10,476] Trial 19 finished with value: 0.15779699544901785 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2572, 'weights': 'uniform'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:11,727] Trial 14 finished with value: 0.15910132107692668 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 20, 'imputation_order': 'random'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:16,935] Trial 26 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.6205021001993821, 'alpha': 96, 'iterations': 46, 'learning_rate': 0.045947574163913214, 'p_miss': 0.02748245279437314}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:18,662] Trial 28 finished with value: 0.15399909127166866 and parameters: {'model_name': 'VAE', 'batch_size': 175, 'iterations': 1, 'learning_rate': 0.012085565823000079, 'p_miss': 0.2455943509154007}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:19,220] Trial 31 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:19,607] Trial 32 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:22,901] Trial 12 finished with value: 0.1586387568485485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:31,923] Trial 10 finished with value: 0.43711972474745303 and parameters: {'model_name': 'GAIN', 'batch_size': 122, 'hint_rate': 0.49404012509574285, 'alpha': 32, 'iterations': 27, 'learning_rate': 0.008244767927387568, 'p_miss': 0.09002071135730955}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:33,953] Trial 2 finished with value: 0.18749287079532187 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:34,769] Trial 36 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:35,152] Trial 37 finished with value: 0.15834496112395363 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:35,820] Trial 38 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:37,043] Trial 22 finished with value: 0.19793820035074233 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 33, 'learning_rate': 0.01214436996968663, 'p_miss': 0.08728582398257961}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:37,733] Trial 40 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:38,375] Trial 41 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:38,925] Trial 42 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:39,359] Trial 43 finished with value: 0.15834496112395363 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:41,121] Trial 27 finished with value: 0.1589152219507532 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:41,710] Trial 3 finished with value: 0.42146528557937063 and parameters: {'model_name': 'GAIN', 'batch_size': 125, 'hint_rate': 0.2732772193727704, 'alpha': 89, 'iterations': 38, 'learning_rate': 0.01396623201626012, 'p_miss': 0.20361185612724106}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:42,478] Trial 46 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:43,156] Trial 47 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:43,941] Trial 48 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 08:59:52,182] Trial 0 finished with value: 0.18519591363645907 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 35, 'learning_rate': 0.032954474031964165, 'p_miss': 0.04814698539276041}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 09:03:26,506] Trial 15 finished with value: 0.4132412426572564 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.03194513527544324, 'alpha': 43, 'iterations': 217, 'learning_rate': 0.00044335403454769616, 'p_miss': 0.18521720525486707}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 09:04:58,370] Trial 29 finished with value: 0.3978336920871143 and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.5809802694999314, 'alpha': 60, 'iterations': 277, 'learning_rate': 0.00010893459955900325, 'p_miss': 0.2571919356190943}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 09:37:44,982] Trial 1 finished with value: 0.17199156245406164 and parameters: {'model_name': 'VAE', 'batch_size': 287, 'iterations': 586, 'learning_rate': 0.01456923457975, 'p_miss': 0.07136967580510233}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 09:37:45,406] Trial 53 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 10:08:02,188] Trial 24 finished with value: 0.17205944147113975 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 10:40:02,943] Trial 25 finished with value: 0.16825033580793225 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 10:40:03,863] Trial 56 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 10:40:04,811] Trial 57 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 10:40:05,707] Trial 58 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:24,660] Trial 23 finished with value: 0.42109308342484014 and parameters: {'model_name': 'GAIN', 'batch_size': 283, 'hint_rate': 0.9063175096161509, 'alpha': 17, 'iterations': 5155, 'learning_rate': 0.002891899791977612, 'p_miss': 0.26041830365584}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:30,449] Trial 60 finished with value: 0.11358626411517395 and parameters: {'model_name': 'VAE', 'batch_size': 36, 'iterations': 1, 'learning_rate': 0.001367113358851016, 'p_miss': 0.13177068792998525}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:32,629] Trial 61 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:33,588] Trial 62 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:34,416] Trial 63 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:35,445] Trial 64 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:36,198] Trial 65 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:36,924] Trial 66 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:37,666] Trial 67 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:37:38,684] Trial 68 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:38:30,398] Trial 69 finished with value: 0.17446947441820013 and parameters: {'model_name': 'VAE', 'batch_size': 954, 'iterations': 6, 'learning_rate': 0.09951739596204404, 'p_miss': 0.1323529255664171}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:38:31,215] Trial 70 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:38:31,849] Trial 71 finished with value: 0.15834496112395363 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:38:41,818] Trial 72 finished with value: 0.15834496112395363 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5883, 'weights': 'uniform'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:38:43,629] Trial 73 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 11:43:58,444] Trial 74 finished with value: 0.27209241632898146 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 20, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:53:54,365] Trial 20 finished with value: 0.1748137129550358 and parameters: {'model_name': 'VAE', 'batch_size': 68, 'iterations': 3949, 'learning_rate': 0.01544549471629019, 'p_miss': 0.1785565014650032}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:53:55,194] Trial 76 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:53:56,000] Trial 77 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:53:56,790] Trial 78 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:54:09,287] Trial 79 finished with value: 0.39542585520892776 and parameters: {'model_name': 'GAIN', 'batch_size': 24, 'hint_rate': 0.9249846871239948, 'alpha': 0, 'iterations': 4, 'learning_rate': 0.00013965285240984045, 'p_miss': 0.28858659585870694}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:54:09,788] Trial 80 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:54:10,459] Trial 81 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:54:12,762] Trial 82 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:54:22,795] Trial 83 finished with value: 0.15834496112395363 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5339, 'weights': 'uniform'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:54:23,560] Trial 84 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:59:06,133] Trial 85 finished with value: 0.15841669771309 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:59:06,944] Trial 86 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:59:07,890] Trial 87 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:59:08,879] Trial 88 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 12:59:09,413] Trial 89 finished with value: 0.15834496112395363 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:24:29,296] Trial 44 finished with value: 0.4206010737953515 and parameters: {'model_name': 'GAIN', 'batch_size': 832, 'hint_rate': 0.02324253211164712, 'alpha': 0, 'iterations': 6017, 'learning_rate': 0.00013406225600138278, 'p_miss': 0.2573891180668769}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:24:30,137] Trial 91 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:34,884] Trial 50 finished with value: 0.1709418724683594 and parameters: {'model_name': 'VAE', 'batch_size': 874, 'iterations': 3072, 'learning_rate': 0.00018089519247240632, 'p_miss': 0.2979641925420159}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:35,526] Trial 93 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:36,431] Trial 94 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:37,239] Trial 95 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:37,945] Trial 96 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:38,774] Trial 97 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:39,578] Trial 98 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:40,348] Trial 99 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:42:41,144] Trial 100 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:47:21,154] Trial 101 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.31880774222846026, 'alpha': 69, 'iterations': 852, 'learning_rate': 0.0009523632362311504, 'p_miss': 0.015712376244160442}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:47:22,016] Trial 102 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:55:29,818] Trial 103 finished with value: 0.20605768292454657 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 150, 'learning_rate': 0.004681409305963284, 'p_miss': 0.2210201833724028}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:55:44,473] Trial 104 finished with value: 0.15823210226664766 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4622, 'weights': 'distance'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:55:45,035] Trial 105 finished with value: 0.15834496112395363 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:55:45,781] Trial 106 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:55:46,499] Trial 107 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:55:47,210] Trial 108 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:55:48,088] Trial 109 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:45,169] Trial 110 finished with value: 0.18521964113505052 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:46,011] Trial 111 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:46,799] Trial 112 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:48,715] Trial 113 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:49,299] Trial 114 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:50,151] Trial 115 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:50,889] Trial 116 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:51,644] Trial 117 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:52,595] Trial 118 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:56:53,439] Trial 119 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 13:57:34,712] Trial 120 finished with value: 0.11841547795207166 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 9, 'learning_rate': 0.000728744538644161, 'p_miss': 0.13962986411688647}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:35,949] Trial 90 finished with value: 0.44738442185169214 and parameters: {'model_name': 'GAIN', 'batch_size': 945, 'hint_rate': 0.02682411496059628, 'alpha': 64, 'iterations': 1407, 'learning_rate': 0.0006824855034899245, 'p_miss': 0.014659133039548411}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:36,931] Trial 122 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:37,794] Trial 123 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:46,694] Trial 124 finished with value: 0.15764942573629048 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1200, 'weights': 'uniform'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:47,598] Trial 125 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:48,465] Trial 126 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:49,301] Trial 127 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:50,061] Trial 128 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:50,920] Trial 129 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:53,091] Trial 130 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:05:53,697] Trial 131 finished with value: 0.15834496112395363 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:07,255] Trial 132 finished with value: 0.26985054607338704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:08,179] Trial 133 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:08,993] Trial 134 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:09,559] Trial 135 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:10,385] Trial 136 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:11,146] Trial 137 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:12,077] Trial 138 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:12,856] Trial 139 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:22,669] Trial 140 finished with value: 0.4264520200656188 and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.7784798637836954, 'alpha': 78, 'iterations': 2, 'learning_rate': 0.0003180552465743536, 'p_miss': 0.1128421457983535}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:23,497] Trial 141 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:24,453] Trial 142 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:25,350] Trial 143 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:10:26,087] Trial 144 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:24,613] Trial 145 finished with value: 0.11061886208372784 and parameters: {'model_name': 'VAE', 'batch_size': 54, 'iterations': 13, 'learning_rate': 0.0016577500049757901, 'p_miss': 0.16319364644153186}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:25,479] Trial 146 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:26,328] Trial 147 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:27,169] Trial 148 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:27,836] Trial 149 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:28,699] Trial 150 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:42,399] Trial 151 finished with value: 0.15792771763762792 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3372, 'weights': 'distance'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:43,084] Trial 152 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:11:43,954] Trial 153 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:22,234] Trial 154 finished with value: 0.1833626102432328 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:22,862] Trial 155 finished with value: 0.15834496112395363 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:23,610] Trial 156 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:24,415] Trial 157 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:25,113] Trial 158 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:27,215] Trial 159 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:28,140] Trial 160 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:28,926] Trial 161 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:29,455] Trial 162 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:30,401] Trial 163 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:41,600] Trial 164 finished with value: 0.42182541815398844 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.2499993872772866, 'alpha': 25, 'iterations': 3, 'learning_rate': 0.09747531229292096, 'p_miss': 0.22218821884845488}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:42,379] Trial 165 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:43,217] Trial 166 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:43,922] Trial 167 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:44,595] Trial 168 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:45,431] Trial 169 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:46,197] Trial 170 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:12:47,005] Trial 171 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:16,779] Trial 45 finished with value: 0.41292849055858005 and parameters: {'model_name': 'GAIN', 'batch_size': 870, 'hint_rate': 0.012783350630964752, 'alpha': 0, 'iterations': 7325, 'learning_rate': 0.00011099598826707408, 'p_miss': 0.27733473788006613}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:17,594] Trial 173 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:18,438] Trial 174 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:23,155] Trial 39 finished with value: 0.19674225101342496 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5698, 'learning_rate': 0.00015468245947710475, 'p_miss': 0.29567645404538545}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:23,977] Trial 176 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:24,791] Trial 177 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:25,535] Trial 178 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:26,330] Trial 179 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:27,202] Trial 180 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:27,547] Trial 175 finished with value: 0.1576627977359678 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1215, 'weights': 'uniform'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:24:37,216] Trial 181 finished with value: 0.15767089237314902 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1395, 'weights': 'uniform'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:25:48,270] Trial 172 finished with value: 0.17124507762937427 and parameters: {'model_name': 'VAE', 'batch_size': 460, 'iterations': 130, 'learning_rate': 0.0032915908585575628, 'p_miss': 0.059019823221398135}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:25:49,161] Trial 184 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:25:49,798] Trial 185 finished with value: 0.15834496112395363 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:25:50,858] Trial 186 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:25:51,623] Trial 187 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:25:52,508] Trial 188 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:25:54,255] Trial 189 finished with value: 0.44773444681375024 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:25:55,084] Trial 190 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:31:56,425] Trial 182 finished with value: 0.17230276912742376 and parameters: {'model_name': 'VAE', 'batch_size': 364, 'iterations': 92, 'learning_rate': 0.003333218070299814, 'p_miss': 0.04422247877204634}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:33:17,849] Trial 55 finished with value: 0.1709250788909343 and parameters: {'model_name': 'VAE', 'batch_size': 727, 'iterations': 3145, 'learning_rate': 0.0013882710273382776, 'p_miss': 0.13781300892287085}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:33:18,659] Trial 193 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:35:03,168] Trial 183 finished with value: 0.17160809342796077 and parameters: {'model_name': 'VAE', 'batch_size': 470, 'iterations': 111, 'learning_rate': 0.0034609145851526154, 'p_miss': 0.04758014040845769}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:35:57,240] Trial 121 finished with value: 0.4330251737430144 and parameters: {'model_name': 'GAIN', 'batch_size': 50, 'hint_rate': 0.726463556617978, 'alpha': 77, 'iterations': 1571, 'learning_rate': 0.0003406959240138678, 'p_miss': 0.10890359007352571}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:35:57,944] Trial 196 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:35:58,840] Trial 197 finished with value: 0.09560163374277143 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:39:40,091] Trial 92 finished with value: 0.20933929095456993 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1613, 'learning_rate': 0.0005021161080661922, 'p_miss': 0.2192982302762812}. Best is trial 5 with value: 0.09560163374277143.
running
[I 2024-11-12 14:45:47,362] Trial 34 finished with value: 0.4425478011546479 and parameters: {'model_name': 'GAIN', 'batch_size': 750, 'hint_rate': 0.04503008821125665, 'alpha': 18, 'iterations': 7931, 'learning_rate': 0.00010261569698303533, 'p_miss': 0.0775838388719789}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 15:01:14,331] Trial 75 finished with value: 0.4313591346066721 and parameters: {'model_name': 'GAIN', 'batch_size': 33, 'hint_rate': 0.9460567539391567, 'alpha': 4, 'iterations': 7471, 'learning_rate': 0.0001404359452166441, 'p_miss': 0.20642561101999357}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 15:23:41,015] Trial 35 finished with value: 0.20802719060257097 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 8150, 'learning_rate': 0.00014841019893818138, 'p_miss': 0.2973603045899966}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:07:32,189] Trial 52 finished with value: 0.17163167670118515 and parameters: {'model_name': 'VAE', 'batch_size': 921, 'iterations': 5444, 'learning_rate': 0.0012239011863997096, 'p_miss': 0.29564330092229696}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:08:30,336] Trial 30 finished with value: 0.1719035842912196 and parameters: {'model_name': 'VAE', 'batch_size': 877, 'iterations': 5689, 'learning_rate': 0.00010096586147045483, 'p_miss': 0.29760571084067466}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:23:37,073] Trial 191 finished with value: 0.16795319327162564 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:24:35,988] Trial 51 finished with value: 0.17093193983423038 and parameters: {'model_name': 'VAE', 'batch_size': 933, 'iterations': 6236, 'learning_rate': 0.00013631730259587962, 'p_miss': 0.2925764764578412}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:28:13,718] Trial 192 finished with value: 0.16732516667300495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:31:27,634] Trial 195 finished with value: 0.16690966223194872 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:31:47,190] Trial 198 finished with value: 0.16784803454025543 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:31:53,722] Trial 194 finished with value: 0.16736298492159468 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:34:29,420] Trial 49 finished with value: 0.17108839536959103 and parameters: {'model_name': 'VAE', 'batch_size': 950, 'iterations': 5892, 'learning_rate': 0.00013394432255083363, 'p_miss': 0.1681935547242174}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:34:49,595] Trial 54 finished with value: 0.17133450820410054 and parameters: {'model_name': 'VAE', 'batch_size': 1000, 'iterations': 5981, 'learning_rate': 0.0013768834077248144, 'p_miss': 0.2939493170651517}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:35:50,063] Trial 33 finished with value: 0.1708651108481654 and parameters: {'model_name': 'VAE', 'batch_size': 696, 'iterations': 8042, 'learning_rate': 0.00014896648420698738, 'p_miss': 0.07454361976486107}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:38:25,484] Trial 59 finished with value: 0.17092293134044031 and parameters: {'model_name': 'VAE', 'batch_size': 965, 'iterations': 6764, 'learning_rate': 0.0014699057607225942, 'p_miss': 0.12509939410356719}. Best is trial 5 with value: 0.09560163374277143.
[I 2024-11-12 16:38:41,538] Trial 199 finished with value: 0.16724198282356792 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.09560163374277143.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0.09560163374277143
{'model_name': 'SimpleImputer', 'strategy': 'median'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4f40> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  1
Best f1_score score: 0.8836536819998428
Generation:   4%|▍         | 1/25 [00:04<01:56,  4.85s/it]Generation:  2
Best f1_score score: 0.9426733742233628
Generation:   8%|▊         | 2/25 [00:12<02:28,  6.47s/it]Generation:  3
Best f1_score score: 0.9426733742233628
Generation:  12%|█▏        | 3/25 [00:29<04:06, 11.22s/it]Generation:  4
Best f1_score score: 0.9426733742233628
Generation:  16%|█▌        | 4/25 [00:56<06:03, 17.33s/it]Generation:  5
Best f1_score score: 0.9426733742233628
Generation:  20%|██        | 5/25 [01:35<08:28, 25.42s/it]Generation:  6
Best f1_score score: 0.9426733742233628
Generation:  24%|██▍       | 6/25 [01:59<07:51, 24.80s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a6a10> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  7
Best f1_score score: 0.9426733742233628
Generation:  28%|██▊       | 7/25 [03:29<13:50, 46.13s/it]Generation:  8
Best f1_score score: 0.9426733742233628
Generation:  32%|███▏      | 8/25 [04:10<12:34, 44.37s/it]Generation:  9
Best f1_score score: 0.9426733742233628
Generation:  36%|███▌      | 9/25 [04:28<09:42, 36.39s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554658ca7a0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  10
Best f1_score score: 0.9426733742233628
Generation:  40%|████      | 10/25 [05:02<08:52, 35.48s/it]Generation:  11
Best f1_score score: 0.9426733742233628
Generation:  44%|████▍     | 11/25 [08:00<18:28, 79.15s/it]Generation:  12
Best f1_score score: 0.9426733742233628
Generation:  48%|████▊     | 12/25 [08:30<13:55, 64.26s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474714ee0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  13
Best f1_score score: 0.9426733742233628
Generation:  52%|█████▏    | 13/25 [08:48<10:04, 50.34s/it]Generation:  14
Best f1_score score: 0.9426733742233628
Generation:  56%|█████▌    | 14/25 [09:42<09:24, 51.31s/it]Generation:  15
Best f1_score score: 0.9426733742233628
Generation:  60%|██████    | 15/25 [10:01<06:54, 41.45s/it]Generation:  16
Best f1_score score: 0.9426733742233628
Generation:  64%|██████▍   | 16/25 [12:35<11:19, 75.45s/it]Generation:  17
Best f1_score score: 0.9426733742233628
Generation:  68%|██████▊   | 17/25 [14:20<11:13, 84.18s/it]Generation:  18
Best f1_score score: 0.9426733742233628
Generation:  72%|███████▏  | 18/25 [15:19<08:57, 76.76s/it]Generation:  19
Best f1_score score: 0.9426733742233628
Generation:  76%|███████▌  | 19/25 [15:46<06:10, 61.77s/it]Generation:  20
Best f1_score score: 0.9426733742233628
Generation:  80%|████████  | 20/25 [16:18<04:24, 52.89s/it]Generation:  21
Best f1_score score: 0.9426733742233628
Generation:  84%|████████▍ | 21/25 [16:52<03:08, 47.12s/it]Generation:  22
Best f1_score score: 0.9426733742233628
Generation:  88%|████████▊ | 22/25 [17:25<02:09, 43.04s/it]Generation:  23
Best f1_score score: 0.9426733742233628
Generation:  92%|█████████▏| 23/25 [17:58<01:19, 39.96s/it]Generation:  24
Best f1_score score: 0.9426733742233628
Generation:  96%|█████████▌| 24/25 [18:58<00:46, 46.10s/it]Generation:  25
Best f1_score score: 0.9426733742233628
Generation: 100%|██████████| 25/25 [19:28<00:00, 41.10s/it]Generation: 100%|██████████| 25/25 [19:32<00:00, 46.88s/it]
2024-11-12 16:58:26,846 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:34415' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8', 'ndarray-debdf323b5c060d2ff1a3ab710e24cdf'} (stimulus_id='handle-worker-cleanup-1731459506.8462274')
Fitted
Pipeline(steps=[('gaussiannb', GaussianNB())])
score start
train score: {'auroc': 0.9827860805211056, 'accuracy': 0.9427364864864864, 'balanced_accuracy': 0.9425009294286031, 'logloss': 0.18830774981124068, 'f1': 0.9426730048348657}
original test score: {'auroc': 0.9971856502864573, 'accuracy': 0.9222972972972973, 'balanced_accuracy': 0.9229998666790856, 'logloss': 0.22066507006907624, 'f1': 0.9219620805404516}
imputed test score: {'auroc': 0.9873399920737977, 'accuracy': 0.9486486486486486, 'balanced_accuracy': 0.9484650744862122, 'logloss': 0.16146883625779632, 'f1': 0.9486072604124213}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014550>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4b80> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4c70> 

Generation:  1
Best f1_score score: 0.9301636376554316
Generation:   4%|▍         | 1/25 [10:03<4:01:16, 603.17s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554744f2050> 

Generation:  2
Best f1_score score: 0.9324822720796876
Generation:   8%|▊         | 2/25 [20:07<3:51:32, 604.03s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d741c0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d744f0> 

Generation:  3
Best f1_score score: 0.9324822720796876
Generation:  12%|█▏        | 3/25 [30:11<3:41:27, 604.00s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1f550> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155417896e90> 

Generation:  4
Best f1_score score: 0.9324822720796876
Generation:  16%|█▌        | 4/25 [40:15<3:31:20, 603.83s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553fe36e9e0> 

Generation:  5
Best f1_score score: 0.9337527370205887
Generation:  20%|██        | 5/25 [50:19<3:21:22, 604.13s/it]Generation:  6
Best f1_score score: 0.9354434727851839
Generation:  24%|██▍       | 6/25 [55:03<2:36:47, 495.15s/it]Generation:  7
Best f1_score score: 0.942841436612221
Generation:  28%|██▊       | 7/25 [57:05<1:51:58, 373.26s/it]Generation:  8
Best f1_score score: 0.9433487232832277
Generation:  32%|███▏      | 8/25 [1:01:16<1:34:39, 334.10s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d2ab8b0> 

Generation:  9
Best f1_score score: 0.9448681551496174
Generation:  36%|███▌      | 9/25 [1:11:20<1:51:36, 418.53s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d4985b0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.9450393643658931
Generation:  40%|████      | 10/25 [1:13:16<1:21:15, 325.04s/it]Generation:  11
Best f1_score score: 0.9489242361688248
Generation:  44%|████▍     | 11/25 [1:18:14<1:13:55, 316.80s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d766890> 

Generation:  12
Best f1_score score: 0.9489242361688248
Generation:  48%|████▊     | 12/25 [1:28:20<1:27:41, 404.75s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bc07d00> 

Generation:  13
Best f1_score score: 0.9489242361688248
Generation:  52%|█████▏    | 13/25 [1:38:25<1:33:06, 465.51s/it]Generation:  14
Best f1_score score: 0.9489242361688248
Generation:  56%|█████▌    | 14/25 [1:39:02<1:01:38, 336.23s/it]Generation:  15
Best f1_score score: 0.9489242361688248
Generation:  60%|██████    | 15/25 [1:41:14<45:45, 274.56s/it]  Generation:  16
Best f1_score score: 0.9489242361688248
Generation:  64%|██████▍   | 16/25 [1:41:41<30:00, 200.09s/it]Generation:  17
Best f1_score score: 0.9489242361688248
Generation:  68%|██████▊   | 17/25 [1:43:11<22:15, 166.97s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553bda83070> 

Generation:  18
Best f1_score score: 0.9489242361688248
Generation:  72%|███████▏  | 18/25 [1:53:18<34:54, 299.23s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15529d3d00d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff34e80> 

Generation:  19
Best f1_score score: 0.9489242361688248
Generation:  76%|███████▌  | 19/25 [2:03:23<39:05, 390.97s/it]Generation:  20
Best f1_score score: 0.9489242361688248
Generation:  80%|████████  | 20/25 [2:04:56<25:08, 301.68s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554526e2d40> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545c73db10> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454c3ec50> 

Generation:  21
Best f1_score score: 0.9489242361688248
Generation:  84%|████████▍ | 21/25 [2:15:04<26:14, 393.57s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554526ae6b0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454c71f90> 

Generation:  22
Best f1_score score: 0.9489242361688248
Generation:  88%|████████▊ | 22/25 [2:25:11<22:52, 457.43s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545db248b0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454e55d20> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454d2e380> 

Generation:  23
Best f1_score score: 0.9489242361688248
Generation:  92%|█████████▏| 23/25 [2:35:19<16:45, 502.77s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474c83c10> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b89d810> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.9489242361688248
Generation:  96%|█████████▌| 24/25 [2:36:50<06:19, 379.24s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b4d6aa0> 

Generation:  25
Best f1_score score: 0.9489242361688248
Generation: 100%|██████████| 25/25 [2:46:58<00:00, 447.77s/it]Generation: 100%|██████████| 25/25 [2:46:58<00:00, 400.74s/it]
2024-11-12 19:45:56,759 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:34161' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8', 'DataFrame-10d4ab9b154335aa56416e462f6ea5a7'} (stimulus_id='handle-worker-cleanup-1731469556.759241')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=KNeighborsRegressor(),
                                  imputation_order='descending',
                                  n_nearest_features=10)),
                ('gaussiannb', GaussianNB())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9850035824521596, 'accuracy': 0.9461148648648648, 'balanced_accuracy': 0.9458663912567393, 'logloss': 0.17436218497698297, 'f1': 0.9460501722998911}
test score: {'auroc': 0.9887882589932262, 'accuracy': 0.95, 'balanced_accuracy': 0.9498421151637017, 'logloss': 0.14868149970808708, 'f1': 0.9499670162397051}
original test score: {'auroc': 0.9974468131735674, 'accuracy': 0.9466216216216217, 'balanced_accuracy': 0.947070683826712, 'logloss': 0.13755831339030747, 'f1': 0.9465423283531864}
score end
1496
lvl
0.3
type
MCAR
num_run
1
class_full
finished
all finished
full run takes
10.821513875656658
hours
DONE
