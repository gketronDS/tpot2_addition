Run: 56
/cm/local/apps/slurm/var/spool/job1040631/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/923/923.pkl
working on 
../data/c/923/class_full_MAR_0.5_3
3.3070271015167236
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-05 01:34:19,466] A new study created in memory with name: no-name-187406b6-6579-4ee0-b0ea-176b1385e130
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-05 01:34:19,532] Trial 2 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.0033868819839238265, 'p_miss': 0.20352970535587606}. Best is trial 2 with value: inf.
running
running
running
running
running
running
[I 2024-11-05 01:34:19,806] Trial 0 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.4585793171319351.
[I 2024-11-05 01:34:19,807] Trial 3 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 191, 'iterations': 1585, 'learning_rate': 0.0022444632192354873, 'p_miss': 0.13527778540991114}. Best is trial 0 with value: 0.4585793171319351.
running
[I 2024-11-05 01:34:20,034] Trial 10 finished with value: 0.3623172339657157 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.3623172339657157.
running
running
[I 2024-11-05 01:34:20,191] Trial 5 finished with value: 0.3623172339657157 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.3623172339657157.
running
[I 2024-11-05 01:34:20,311] Trial 16 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.3623172339657157.
[I 2024-11-05 01:34:20,467] Trial 17 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 10 with value: 0.3623172339657157.
running
running
[I 2024-11-05 01:34:20,641] Trial 21 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2121, 'learning_rate': 0.0009486905771202818, 'p_miss': 0.24584150350316122}. Best is trial 10 with value: 0.3623172339657157.
running
[I 2024-11-05 01:34:20,780] Trial 22 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 404, 'iterations': 2, 'learning_rate': 0.000135014716500362, 'p_miss': 0.012136483257019864}. Best is trial 10 with value: 0.3623172339657157.
running
[I 2024-11-05 01:34:21,140] Trial 23 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.3623172339657157.
running
[I 2024-11-05 01:34:22,276] Trial 18 finished with value: 0.33980619801594675 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 563, 'weights': 'distance'}. Best is trial 18 with value: 0.33980619801594675.
[I 2024-11-05 01:34:22,492] Trial 7 finished with value: 0.34306851942364625 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1264, 'weights': 'distance'}. Best is trial 18 with value: 0.33980619801594675.
running
[I 2024-11-05 01:34:22,511] Trial 9 finished with value: 0.34686809336808383 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3264, 'weights': 'distance'}. Best is trial 18 with value: 0.33980619801594675.
running
[I 2024-11-05 01:34:22,811] Trial 15 finished with value: 0.34785841785047245 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 18 with value: 0.33980619801594675.
running
running
[I 2024-11-05 01:34:22,950] Trial 20 finished with value: 0.33971806850419334 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 551, 'weights': 'distance'}. Best is trial 20 with value: 0.33971806850419334.
running
[I 2024-11-05 01:34:23,827] Trial 12 finished with value: 0.34783771348744263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 20 with value: 0.33971806850419334.
running
[I 2024-11-05 01:34:24,111] Trial 19 finished with value: 0.34702711361751376 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3709, 'weights': 'distance'}. Best is trial 20 with value: 0.33971806850419334.
running
[I 2024-11-05 01:34:24,302] Trial 24 finished with value: 0.3458524700804217 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2354, 'weights': 'distance'}. Best is trial 20 with value: 0.33971806850419334.
running
[I 2024-11-05 01:34:24,585] Trial 6 finished with value: 0.34783771348744263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 20 with value: 0.33971806850419334.
running
[I 2024-11-05 01:34:25,038] Trial 29 finished with value: 0.3217474945939607 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 30, 'weights': 'distance'}. Best is trial 29 with value: 0.3217474945939607.
running
[I 2024-11-05 01:34:25,315] Trial 28 finished with value: 0.31993550689560474 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
[I 2024-11-05 01:34:25,459] Trial 27 finished with value: 0.3277869565713509 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 59, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:34:25,608] Trial 30 finished with value: 0.3375139157411309 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 289, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
[I 2024-11-05 01:34:25,756] Trial 26 finished with value: 0.32643726124133055 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 50, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
running
running
[I 2024-11-05 01:34:26,023] Trial 25 finished with value: 0.34783709516330685 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:34:26,237] Trial 31 finished with value: 0.3287978207036524 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 74, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:34:26,538] Trial 13 finished with value: 0.34891723362544264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:34:28,514] Trial 11 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.7621132024834041, 'alpha': 35, 'iterations': 3, 'learning_rate': 0.003333555629091359, 'p_miss': 0.24812715254817883}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:34:43,764] Trial 8 finished with value: 0.4442968556920551 and parameters: {'model_name': 'GAIN', 'batch_size': 578, 'hint_rate': 0.016355335623316262, 'alpha': 47, 'iterations': 10, 'learning_rate': 0.0012918200610290962, 'p_miss': 0.2669655789491752}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:34:44,861] Trial 44 finished with value: 0.3623172339657157 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5753, 'weights': 'uniform'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:20,170] Trial 36 finished with value: 0.4567958078087676 and parameters: {'model_name': 'GAIN', 'batch_size': 39, 'hint_rate': 0.5111303565577604, 'alpha': 93, 'iterations': 40, 'learning_rate': 0.09007908694382352, 'p_miss': 0.07536422760997334}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:21,234] Trial 46 finished with value: 0.34587533435453494 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1518, 'weights': 'uniform'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:22,142] Trial 47 finished with value: 0.3291763675742846 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 78, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:23,604] Trial 48 finished with value: 0.34438808845598246 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1546, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:24,776] Trial 49 finished with value: 0.34226524671718583 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1084, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:25,693] Trial 34 finished with value: 0.4604952988006515 and parameters: {'model_name': 'GAIN', 'batch_size': 30, 'hint_rate': 0.43839058317947116, 'alpha': 82, 'iterations': 47, 'learning_rate': 0.08065903721291691, 'p_miss': 0.08576785881403967}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:25,993] Trial 50 finished with value: 0.333385232945507 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 143, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:26,754] Trial 51 finished with value: 0.3240808259084259 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:27,028] Trial 53 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 217, 'learning_rate': 0.017277050718533776, 'p_miss': 0.2992936213096885}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:27,492] Trial 52 finished with value: 0.34663591901272095 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2293, 'weights': 'uniform'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:28,516] Trial 54 finished with value: 0.3464945691770286 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2181, 'weights': 'uniform'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:28,809] Trial 55 finished with value: 0.34155666108322436 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 969, 'weights': 'distance'}. Best is trial 28 with value: 0.31993550689560474.
running
[I 2024-11-05 01:35:30,019] Trial 57 finished with value: 0.3195748032258449 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 18, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:30,443] Trial 56 finished with value: 0.3403577655427275 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 697, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:31,458] Trial 58 finished with value: 0.34066111077688355 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 750, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:31,978] Trial 35 finished with value: 0.493894526917768 and parameters: {'model_name': 'GAIN', 'batch_size': 34, 'hint_rate': 0.5757822973795877, 'alpha': 7, 'iterations': 55, 'learning_rate': 0.08644957891621283, 'p_miss': 0.29964051022718463}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:32,233] Trial 59 finished with value: 0.3497287900903797 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6178, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:33,348] Trial 62 finished with value: 0.3227532212608248 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 33, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:33,757] Trial 60 finished with value: 0.3497287900903797 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6264, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:34,351] Trial 61 finished with value: 0.3489581728694787 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4836, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:35,011] Trial 63 finished with value: 0.34027062156716875 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 668, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:36,059] Trial 66 finished with value: 0.3288868401159557 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 77, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:37,431] Trial 40 finished with value: 0.48338797520204063 and parameters: {'model_name': 'GAIN', 'batch_size': 37, 'hint_rate': 0.1719400289218821, 'alpha': 64, 'iterations': 62, 'learning_rate': 0.08383963179644094, 'p_miss': 0.29766991994859704}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:37,746] Trial 67 finished with value: 0.3204016106301815 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:38,334] Trial 69 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:38,514] Trial 70 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 6944, 'learning_rate': 0.00010661493730831776, 'p_miss': 0.1693565987821011}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:39,793] Trial 64 finished with value: 0.38044606152821503 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:41,880] Trial 72 finished with value: 0.3432354386684223 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1300, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:42,389] Trial 33 finished with value: 0.4642291616383029 and parameters: {'model_name': 'GAIN', 'batch_size': 33, 'hint_rate': 0.38055433062069705, 'alpha': 10, 'iterations': 68, 'learning_rate': 0.07535783437916081, 'p_miss': 0.07912826459702135}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:43,427] Trial 68 finished with value: 0.346967521576711 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:43,990] Trial 74 finished with value: 0.339926608325985 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 581, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:44,264] Trial 73 finished with value: 0.3397969572660128 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 561, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:45,298] Trial 75 finished with value: 0.33968689265233765 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 544, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:45,533] Trial 76 finished with value: 0.3217043878632492 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 29, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:46,088] Trial 77 finished with value: 0.33081343561869736 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 101, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:46,271] Trial 79 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:46,939] Trial 80 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:47,282] Trial 39 finished with value: 0.4549889283164921 and parameters: {'model_name': 'GAIN', 'batch_size': 33, 'hint_rate': 0.22084686163244677, 'alpha': 72, 'iterations': 76, 'learning_rate': 0.07845989628091775, 'p_miss': 0.07985312798008085}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:47,829] Trial 78 finished with value: 0.327560921440477 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:48,741] Trial 81 finished with value: 0.34234196811165607 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1095, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:49,042] Trial 82 finished with value: 0.34242270680363324 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1114, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:49,283] Trial 85 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 141, 'iterations': 502, 'learning_rate': 0.0003219916321652918, 'p_miss': 0.19997975551519231}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:49,838] Trial 84 finished with value: 0.3389251944396104 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 437, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:50,152] Trial 83 finished with value: 0.34138747211836595 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 944, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:51,324] Trial 41 finished with value: 0.4608432060568372 and parameters: {'model_name': 'GAIN', 'batch_size': 33, 'hint_rate': 0.3915191360029366, 'alpha': 15, 'iterations': 80, 'learning_rate': 0.08327369924901747, 'p_miss': 0.07126799572866775}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:51,562] Trial 86 finished with value: 0.3387217955519667 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 376, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:52,183] Trial 87 finished with value: 0.33864477357947415 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 403, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:52,483] Trial 88 finished with value: 0.3383752254235525 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 329, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:52,762] Trial 43 finished with value: 0.4557697998213251 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.03519278861233033, 'alpha': 97, 'iterations': 81, 'learning_rate': 0.08811545952094194, 'p_miss': 0.07985640137852493}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:53,073] Trial 89 finished with value: 0.3386751054409728 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 398, 'weights': 'distance'}. Best is trial 57 with value: 0.3195748032258449.
running
[I 2024-11-05 01:35:54,103] Trial 91 finished with value: 0.3195348580503373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 13, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
[I 2024-11-05 01:35:54,300] Trial 90 finished with value: 0.3385848478383385 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 358, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
running
[I 2024-11-05 01:35:54,708] Trial 92 finished with value: 0.3238647049969301 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 37, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:55,405] Trial 38 finished with value: 0.4599822515931738 and parameters: {'model_name': 'GAIN', 'batch_size': 35, 'hint_rate': 0.8172668077880118, 'alpha': 23, 'iterations': 83, 'learning_rate': 0.05158909554902376, 'p_miss': 0.07467235051926549}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:55,604] Trial 93 finished with value: 0.34707251079643503 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3754, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:55,881] Trial 94 finished with value: 0.3470067005874061 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3644, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:56,676] Trial 98 finished with value: 0.3221543931705961 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 31, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:56,899] Trial 97 finished with value: 0.33373049480716654 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 148, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:57,383] Trial 96 finished with value: 0.3298749259991533 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 87, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:58,222] Trial 32 finished with value: 0.45635911097955956 and parameters: {'model_name': 'GAIN', 'batch_size': 33, 'hint_rate': 0.18534348884560825, 'alpha': 50, 'iterations': 87, 'learning_rate': 0.0888031578218031, 'p_miss': 0.0820336879317841}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:58,538] Trial 100 finished with value: 0.32475627890165226 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 43, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:59,453] Trial 99 finished with value: 0.34688227424385104 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3280, 'weights': 'distance'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:35:59,858] Trial 103 finished with value: 0.34190393143851294 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 722, 'weights': 'uniform'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:36:03,635] Trial 42 finished with value: 0.4646855314041334 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.4776560905570476, 'alpha': 68, 'iterations': 90, 'learning_rate': 0.09353926347144804, 'p_miss': 0.08042402993814061}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:36:48,704] Trial 37 finished with value: 0.46525774124228125 and parameters: {'model_name': 'GAIN', 'batch_size': 25, 'hint_rate': 0.24352414938195066, 'alpha': 17, 'iterations': 122, 'learning_rate': 0.06322205307089859, 'p_miss': 0.0778177329124393}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:38:06,248] Trial 45 finished with value: 0.45435747029104434 and parameters: {'model_name': 'GAIN', 'batch_size': 32, 'hint_rate': 0.25306015511050095, 'alpha': 92, 'iterations': 219, 'learning_rate': 0.09611985663488112, 'p_miss': 0.08821761729606012}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:38:41,211] Trial 1 finished with value: 0.46803453635820025 and parameters: {'model_name': 'GAIN', 'batch_size': 199, 'hint_rate': 0.22314187779517278, 'alpha': 53, 'iterations': 274, 'learning_rate': 0.008525550894036256, 'p_miss': 0.25645246064114646}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:39:24,249] Trial 14 finished with value: 0.4619451137617652 and parameters: {'model_name': 'GAIN', 'batch_size': 212, 'hint_rate': 0.8514210509394978, 'alpha': 51, 'iterations': 331, 'learning_rate': 0.01168381000666475, 'p_miss': 0.10797050254092541}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:40:50,122] Trial 4 finished with value: 0.46152085795956294 and parameters: {'model_name': 'GAIN', 'batch_size': 174, 'hint_rate': 0.1770117726758434, 'alpha': 7, 'iterations': 491, 'learning_rate': 0.020657092926762176, 'p_miss': 0.05449353269812463}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:45:17,769] Trial 65 finished with value: 0.33284153672886185 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 91 with value: 0.3195348580503373.
running
[I 2024-11-05 01:45:20,126] Trial 115 finished with value: 0.3194971523439572 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:22,779] Trial 116 finished with value: 0.3374848452514771 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 283, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:24,902] Trial 117 finished with value: 0.3215712817078984 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 27, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:27,477] Trial 118 finished with value: 0.3374848452514771 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 283, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:29,376] Trial 119 finished with value: 0.3238647049969301 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 37, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:31,948] Trial 120 finished with value: 0.3409104433340719 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 809, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:34,135] Trial 121 finished with value: 0.3437636357451292 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 289, 'weights': 'uniform'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:36,259] Trial 122 finished with value: 0.3370161692073219 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 257, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:36,603] Trial 123 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 17, 'learning_rate': 0.00038062197395947946, 'p_miss': 0.032796669816309465}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:38,337] Trial 124 finished with value: 0.32592769271955624 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:41,065] Trial 125 finished with value: 0.3396350560269015 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 530, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:42,336] Trial 71 finished with value: 0.3612590279129907 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:42,987] Trial 126 finished with value: 0.3240808259084259 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:44,847] Trial 127 finished with value: 0.32040337461127816 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 22, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:45,740] Trial 128 finished with value: 0.33669820002607337 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 232, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:47,624] Trial 129 finished with value: 0.3370161692073219 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 257, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:48,655] Trial 130 finished with value: 0.3397268132076734 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 550, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:50,440] Trial 131 finished with value: 0.3399807996689784 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 586, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:50,865] Trial 133 finished with value: 0.3623172339657157 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:51,324] Trial 132 finished with value: 0.33946861955066243 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 503, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:54,030] Trial 134 finished with value: 0.3463344197754736 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2761, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:54,306] Trial 135 finished with value: 0.34529305175125014 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1997, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:56,328] Trial 136 finished with value: 0.33548223431569235 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 198, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:56,854] Trial 137 finished with value: 0.32368933789281307 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:58,612] Trial 139 finished with value: 0.3195348580503373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 13, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:45:58,933] Trial 138 finished with value: 0.32512487924576206 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 44, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:01,075] Trial 141 finished with value: 0.3441351426462826 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 248, 'weights': 'uniform'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:01,630] Trial 140 finished with value: 0.3410540269634928 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 864, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:04,376] Trial 142 finished with value: 0.34114395017098453 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 877, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:10,834] Trial 143 finished with value: 0.34759870863166825 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:11,324] Trial 145 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 84, 'iterations': 1, 'learning_rate': 0.00732989478662921, 'p_miss': 0.12264414294418366}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:14,195] Trial 146 finished with value: 0.31993550689560474 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:14,607] Trial 144 finished with value: 0.3489284120131816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:16,596] Trial 148 finished with value: 0.33868386259919625 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 397, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:16,838] Trial 147 finished with value: 0.3387972347727241 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 418, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:18,887] Trial 149 finished with value: 0.3360555680108032 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 213, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:19,221] Trial 150 finished with value: 0.3352692978804804 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 192, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:21,394] Trial 152 finished with value: 0.3345527673382785 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 168, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:22,142] Trial 151 finished with value: 0.3477348586945256 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4227, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:24,094] Trial 154 finished with value: 0.3678717546115087 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:25,048] Trial 153 finished with value: 0.3497287900903797 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6656, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:26,527] Trial 155 finished with value: 0.3388649454330787 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 426, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:27,478] Trial 156 finished with value: 0.32592769271955624 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:28,977] Trial 157 finished with value: 0.3341740483380837 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 160, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:29,778] Trial 158 finished with value: 0.3341740483380837 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 160, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:31,713] Trial 159 finished with value: 0.34024099082931536 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 650, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:32,574] Trial 160 finished with value: 0.3448972423349462 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:34,943] Trial 161 finished with value: 0.3384246005027883 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 345, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:35,272] Trial 162 finished with value: 0.33847967808155666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 355, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:35,657] Trial 163 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:36,344] Trial 164 finished with value: 0.4585793171319351 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:37,858] Trial 165 finished with value: 0.3436350100595303 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 186, 'weights': 'uniform'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:38,407] Trial 166 finished with value: 0.33287146714708554 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 133, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:40,229] Trial 167 finished with value: 0.332627173114841 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 130, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:40,513] Trial 168 finished with value: 0.3240808259084259 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:42,546] Trial 169 finished with value: 0.33916791230469967 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 468, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:43,309] Trial 170 finished with value: 0.33907707761487205 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 459, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:44,870] Trial 171 finished with value: 0.33767685878695075 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 295, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:45,773] Trial 172 finished with value: 0.33771245013087464 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 299, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:47,697] Trial 173 finished with value: 0.34039396660671545 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 701, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:48,150] Trial 175 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8133, 'learning_rate': 0.028442425482214796, 'p_miss': 0.1845907058545524}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:48,965] Trial 174 finished with value: 0.3404282789794188 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 710, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:50,687] Trial 176 finished with value: 0.3448972423349462 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:51,051] Trial 177 finished with value: 0.3399435608791824 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:52,832] Trial 178 finished with value: 0.3309803630739735 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 106, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:53,589] Trial 179 finished with value: 0.33383514587602187 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 153, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:55,344] Trial 180 finished with value: 0.3342818814037355 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 162, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:55,872] Trial 181 finished with value: 0.3376724491127504 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 296, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:57,599] Trial 182 finished with value: 0.338008575406756 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 307, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:46:58,578] Trial 183 finished with value: 0.3398139083069619 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 566, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:00,079] Trial 184 finished with value: 0.3392099902602892 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 476, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:01,049] Trial 185 finished with value: 0.33279808458814086 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 132, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:03,822] Trial 186 finished with value: 0.3495902381304047 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5197, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:04,224] Trial 187 finished with value: 0.3497287900903797 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5514, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:05,983] Trial 188 finished with value: 0.3309803630739735 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 106, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:06,420] Trial 189 finished with value: 0.31993550689560474 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:08,225] Trial 190 finished with value: 0.33640814913562433 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 223, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:08,892] Trial 191 finished with value: 0.34362591910746065 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 194, 'weights': 'uniform'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:10,808] Trial 193 finished with value: 0.3399435608791824 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:22,831] Trial 194 finished with value: 0.4470489360618055 and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.9892419004278348, 'alpha': 38, 'iterations': 5, 'learning_rate': 0.0078021856855651495, 'p_miss': 0.21921521332518856}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:24,981] Trial 195 finished with value: 0.3386465807801053 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 367, 'weights': 'distance'}. Best is trial 115 with value: 0.3194971523439572.
running
[I 2024-11-05 01:47:26,216] Trial 95 finished with value: 0.3062463453969581 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 95 with value: 0.3062463453969581.
running
[I 2024-11-05 01:47:26,798] Trial 196 finished with value: 0.3195348580503373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 13, 'weights': 'distance'}. Best is trial 95 with value: 0.3062463453969581.
running
[I 2024-11-05 01:47:27,470] Trial 104 finished with value: 0.30343850171448816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 104 with value: 0.30343850171448816.
running
[I 2024-11-05 01:47:27,818] Trial 108 finished with value: 0.3045715861588866 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 104 with value: 0.30343850171448816.
[I 2024-11-05 01:47:29,062] Trial 105 finished with value: 0.30161471046214994 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 105 with value: 0.30161471046214994.
[I 2024-11-05 01:47:30,669] Trial 192 finished with value: 0.4546381820042704 and parameters: {'model_name': 'GAIN', 'batch_size': 829, 'hint_rate': 0.9791743081217716, 'alpha': 29, 'iterations': 9, 'learning_rate': 0.006218030951961804, 'p_miss': 0.2208318743095876}. Best is trial 105 with value: 0.30161471046214994.
[I 2024-11-05 01:47:32,144] Trial 107 finished with value: 0.30129715125591694 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:47:35,771] Trial 102 finished with value: 0.30227525369867037 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:47:35,986] Trial 109 finished with value: 0.3053345576344402 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:47:36,480] Trial 101 finished with value: 0.30410551691035237 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:47:37,193] Trial 106 finished with value: 0.30213002632079855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:47:49,892] Trial 110 finished with value: 0.30441363702347124 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:48:10,136] Trial 111 finished with value: 0.3039680901116445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:48:15,982] Trial 112 finished with value: 0.3018566032507466 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:48:24,865] Trial 113 finished with value: 0.3051709713565421 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:48:41,494] Trial 114 finished with value: 0.3048644047177776 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 107 with value: 0.30129715125591694.
[I 2024-11-05 01:50:45,665] Trial 197 finished with value: 0.2897321114342449 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 197 with value: 0.2897321114342449.
[I 2024-11-05 01:50:46,131] Trial 198 finished with value: 0.29559932924794563 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 197 with value: 0.2897321114342449.
[I 2024-11-05 01:50:47,193] Trial 199 finished with value: 0.2914092671587769 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 197 with value: 0.2897321114342449.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
dtype: int64
0    0
1    0
2    0
3    0
dtype: int64
0.2897321114342449
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8959788584568458
Generation:   4%|▍         | 1/25 [00:07<03:10,  7.94s/it]Generation:  2
Best f1_score score: 0.8960955163162388
Generation:   8%|▊         | 2/25 [00:24<05:03, 13.21s/it]Generation:  3
Best f1_score score: 0.896238735252779
Generation:  12%|█▏        | 3/25 [00:35<04:21, 11.87s/it]Generation:  4
Best f1_score score: 0.896238735252779
Generation:  16%|█▌        | 4/25 [02:37<19:28, 55.64s/it]Generation:  5
Best f1_score score: 0.896238735252779
Generation:  20%|██        | 5/25 [04:01<21:52, 65.60s/it]Generation:  6
Best f1_score score: 0.896238735252779
Generation:  24%|██▍       | 6/25 [04:13<15:05, 47.64s/it]Generation:  7
Best f1_score score: 0.896238735252779
Generation:  28%|██▊       | 7/25 [04:47<12:54, 43.03s/it]Generation:  8
Best f1_score score: 0.896238735252779
Generation:  32%|███▏      | 8/25 [05:06<10:00, 35.32s/it]Generation:  9
Best f1_score score: 0.896238735252779
Generation:  36%|███▌      | 9/25 [05:24<07:58, 29.93s/it]Generation:  10
Best f1_score score: 0.896238735252779
Generation:  40%|████      | 10/25 [10:50<30:22, 121.48s/it]Generation:  11
Best f1_score score: 0.896238735252779
Generation:  44%|████▍     | 11/25 [11:10<21:03, 90.26s/it] Generation:  12
Best f1_score score: 0.896238735252779
Generation:  48%|████▊     | 12/25 [11:31<15:01, 69.32s/it]Generation:  13
Best f1_score score: 0.896238735252779
Generation:  52%|█████▏    | 13/25 [11:48<10:40, 53.36s/it]Generation:  14
Best f1_score score: 0.8963739308974288
Generation:  56%|█████▌    | 14/25 [12:03<07:39, 41.75s/it]Generation:  15
Best f1_score score: 0.8963739308974288
Generation:  60%|██████    | 15/25 [12:22<05:48, 34.86s/it]Generation:  16
Best f1_score score: 0.8963739308974288
Generation:  64%|██████▍   | 16/25 [12:46<04:44, 31.60s/it]Generation:  17
Best f1_score score: 0.8963739308974288
Generation:  68%|██████▊   | 17/25 [16:35<12:08, 91.09s/it]Generation:  18
Best f1_score score: 0.8963739308974288
Generation:  72%|███████▏  | 18/25 [17:00<08:17, 71.08s/it]Generation:  19
Best f1_score score: 0.8963739308974288
Generation:  76%|███████▌  | 19/25 [17:56<06:40, 66.81s/it]Generation:  20
Best f1_score score: 0.8964302204991146
Generation:  80%|████████  | 20/25 [18:21<04:30, 54.17s/it]Generation:  21
Best f1_score score: 0.8964302204991146
Generation:  84%|████████▍ | 21/25 [18:49<03:04, 46.12s/it]Generation:  22
Best f1_score score: 0.8964302204991146
Generation:  88%|████████▊ | 22/25 [19:11<01:56, 38.92s/it]Generation:  23
Best f1_score score: 0.8964302204991146
Generation:  92%|█████████▏| 23/25 [19:50<01:18, 39.05s/it]Generation:  24
Best f1_score score: 0.8964302204991146
Generation:  96%|█████████▌| 24/25 [22:12<01:09, 69.88s/it]Generation:  25
Best f1_score score: 0.8964302204991146
Generation: 100%|██████████| 25/25 [22:35<00:00, 56.00s/it]Generation: 100%|██████████| 25/25 [22:39<00:00, 54.39s/it]
2024-11-05 02:14:21,828 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:36721' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-1dac7a513ce3a3bfee02052c05ac5d3d', 'ndarray-782bc5f56dfe6ad3c3952dbb6d6329f9'} (stimulus_id='handle-worker-cleanup-1730801661.827934')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(boosting_type='dart', max_depth=10,
                                n_estimators=56, n_jobs=1, num_leaves=220,
                                verbose=-1))])
score start
train score: {'auroc': 0.9822552354404773, 'accuracy': 0.9195601851851852, 'balanced_accuracy': 0.9208233608643953, 'logloss': 0.19524075091157742, 'f1': 0.9190476218562187}
original test score: {'auroc': 0.9998526784145494, 'accuracy': 0.9965297860034702, 'balanced_accuracy': 0.9961439588688946, 'logloss': 0.09056811133194093, 'f1': 0.9964921890850071}
imputed test score: {'auroc': 0.9691165300225173, 'accuracy': 0.9109311740890689, 'balanced_accuracy': 0.9101473486169341, 'logloss': 0.2307615532688826, 'f1': 0.9100513478818999}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd51e0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd49d0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4b80> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  1
Best f1_score score: 0.8954932205348772
Generation:   4%|▍         | 1/25 [00:56<22:38, 56.59s/it]Generation:  2
Best f1_score score: 0.9031023344139129
Generation:   8%|▊         | 2/25 [01:29<16:27, 42.95s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d3f9d0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  3
Best f1_score score: 0.9042903734430295
Generation:  12%|█▏        | 3/25 [04:45<41:21, 112.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745c0280> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.9048599369728876
Generation:  16%|█▌        | 4/25 [05:03<26:17, 75.13s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545df233d0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  5
Best f1_score score: 0.9065420426337975
Generation:  20%|██        | 5/25 [05:29<19:07, 57.38s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547405d9f0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fdcf130> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  6
Best f1_score score: 0.9065420426337975
Generation:  24%|██▍       | 6/25 [08:47<33:22, 105.40s/it]Generation:  7
Best f1_score score: 0.9069268239154391
Generation:  28%|██▊       | 7/25 [09:04<22:57, 76.52s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bb89ab0> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474120070> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  8
Best f1_score score: 0.9070139117207836
Generation:  32%|███▏      | 8/25 [09:22<16:22, 57.80s/it]Generation:  9
Best f1_score score: 0.9070139117207836
Generation:  36%|███▌      | 9/25 [09:44<12:26, 46.68s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742696c0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fd45cf0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fdeb550> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  10
Best f1_score score: 0.9079518728205308
Generation:  40%|████      | 10/25 [09:55<08:52, 35.52s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547459a0b0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.9079518728205308
Generation:  44%|████▍     | 11/25 [12:17<15:52, 68.01s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547418d9c0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d49150> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  12
Best f1_score score: 0.9079518728205308
Generation:  48%|████▊     | 12/25 [12:29<11:06, 51.24s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d8e70d0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547507fee0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554553db6d0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  13
Best f1_score score: 0.908852429194565
Generation:  52%|█████▏    | 13/25 [12:36<07:32, 37.67s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745bcfd0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f8ab30> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  14
Best f1_score score: 0.908852429194565
Generation:  56%|█████▌    | 14/25 [12:48<05:30, 30.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745cb310> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d3d1e0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547457c280> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  15
Best f1_score score: 0.908852429194565
Generation:  60%|██████    | 15/25 [13:05<04:21, 26.17s/it]Generation:  16
Best f1_score score: 0.908852429194565
Generation:  64%|██████▍   | 16/25 [13:16<03:14, 21.56s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547507e980> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554530cffd0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f9cea10> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f07760> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bde09d0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.908852429194565
Generation:  68%|██████▊   | 17/25 [13:49<03:19, 24.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474599030> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452ac8b20> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  18
Best f1_score score: 0.908852429194565
Generation:  72%|███████▏  | 18/25 [13:57<02:19, 19.94s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fb79de0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d111c90> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.908852429194565
Generation:  76%|███████▌  | 19/25 [14:16<01:57, 19.58s/it]Generation:  20
Best f1_score score: 0.908852429194565
Generation:  80%|████████  | 20/25 [17:31<06:00, 72.17s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454ac4910> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  21
Best f1_score score: 0.908852429194565
Generation:  84%|████████▍ | 21/25 [18:43<04:48, 72.16s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554548910f0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  22
Best f1_score score: 0.908852429194565
Generation:  88%|████████▊ | 22/25 [19:08<02:54, 58.04s/it]Generation:  23
Best f1_score score: 0.908852429194565
Generation:  92%|█████████▏| 23/25 [22:17<03:14, 97.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fdb2dd0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  24
Best f1_score score: 0.908852429194565
Generation:  96%|█████████▌| 24/25 [24:15<01:43, 103.39s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454dd46d0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  25
Best f1_score score: 0.908852429194565
Generation: 100%|██████████| 25/25 [24:25<00:00, 75.50s/it] Generation: 100%|██████████| 25/25 [24:25<00:00, 58.62s/it]
2024-11-05 02:38:56,238 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46239' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-782bc5f56dfe6ad3c3952dbb6d6329f9', 'DataFrame-06dffc2eb29e9d94be202140c213d3a4'} (stimulus_id='handle-worker-cleanup-1730803136.238867')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='constant')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8014404226399,
                                      min_samples_leaf=3, min_samples_split=14,
                                      n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.98624492778382, 'accuracy': 0.9283854166666666, 'balanced_accuracy': 0.9308937925715185, 'logloss': 0.1554914215955584, 'f1': 0.9280513315594726}
test score: {'auroc': 0.9843190363816738, 'accuracy': 0.9236552920763447, 'balanced_accuracy': 0.9240523437647828, 'logloss': 0.1602584900712428, 'f1': 0.9230527519595204}
original test score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 0.008457208440022597, 'f1': 1.0}
score end
923
lvl
0.5
type
MAR
num_run
3
class_full
finished
all finished
full run takes
1.0816930542389551
hours
DONE
