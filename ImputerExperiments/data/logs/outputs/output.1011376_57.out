Run: 57
/cm/local/apps/slurm/var/spool/job1011376/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/310/310.pkl
working on 
../data/c/310/class_full_MNAR_0.01_3
2.034791946411133
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-22 21:24:46,971] A new study created in memory with name: no-name-bb298f77-85ba-4ede-9297-ad60741834d3
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-22 21:24:47,339] Trial 0 finished with value: 0.2140588898738855 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.2140588898738855.
running
[I 2024-10-22 21:24:47,587] Trial 13 finished with value: 0.2140588898738855 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.2140588898738855.
running
[I 2024-10-22 21:24:47,760] Trial 9 finished with value: 0.2140588898738855 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.2140588898738855.
[I 2024-10-22 21:24:47,948] Trial 3 finished with value: 0.2140588898738855 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.2140588898738855.
running
running
[I 2024-10-22 21:24:48,086] Trial 17 finished with value: 0.1626343265939935 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 17 with value: 0.1626343265939935.
running
[I 2024-10-22 21:24:48,714] Trial 19 finished with value: 0.2140588898738855 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 17 with value: 0.1626343265939935.
running
[I 2024-10-22 21:24:51,181] Trial 2 finished with value: 0.1626343265939935 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6867, 'weights': 'uniform'}. Best is trial 17 with value: 0.1626343265939935.
running
[I 2024-10-22 21:24:51,702] Trial 10 finished with value: 0.1626343265939935 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7596, 'weights': 'uniform'}. Best is trial 17 with value: 0.1626343265939935.
running
[I 2024-10-22 21:24:51,985] Trial 15 finished with value: 0.09657151995621313 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2019, 'weights': 'uniform'}. Best is trial 15 with value: 0.09657151995621313.
running
[I 2024-10-22 21:24:52,311] Trial 1 finished with value: 0.13839506280608 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4715, 'weights': 'uniform'}. Best is trial 15 with value: 0.09657151995621313.
running
[I 2024-10-22 21:24:55,828] Trial 22 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.7133038773017986, 'alpha': 75, 'iterations': 3, 'learning_rate': 0.013431861453924906, 'p_miss': 0.0611288926180789}. Best is trial 15 with value: 0.09657151995621313.
running
[I 2024-10-22 21:24:57,619] Trial 5 finished with value: 0.2515535134456373 and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.05610178619432728, 'alpha': 23, 'iterations': 1, 'learning_rate': 0.0004555029773656405, 'p_miss': 0.2801578321667887}. Best is trial 15 with value: 0.09657151995621313.
running
[I 2024-10-22 21:24:58,967] Trial 16 finished with value: 0.45418478632203046 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.0007871890885333983, 'p_miss': 0.11035154862856172}. Best is trial 15 with value: 0.09657151995621313.
running
[I 2024-10-22 21:24:59,722] Trial 23 finished with value: 0.2377693255498711 and parameters: {'model_name': 'GAIN', 'batch_size': 864, 'hint_rate': 0.6873127791722489, 'alpha': 80, 'iterations': 3, 'learning_rate': 0.012944806707320039, 'p_miss': 0.25951652093679595}. Best is trial 15 with value: 0.09657151995621313.
running
[I 2024-10-22 21:25:00,406] Trial 4 finished with value: 0.4485301659503612 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 4, 'learning_rate': 0.0026029129067058525, 'p_miss': 0.28599467196257033}. Best is trial 15 with value: 0.09657151995621313.
running
[I 2024-10-22 21:25:04,481] Trial 27 finished with value: 0.0935938892740256 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1570, 'weights': 'uniform'}. Best is trial 27 with value: 0.0935938892740256.
running
[I 2024-10-22 21:25:04,740] Trial 28 finished with value: 0.09226925178760645 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1369, 'weights': 'uniform'}. Best is trial 28 with value: 0.09226925178760645.
running
[I 2024-10-22 21:25:05,607] Trial 29 finished with value: 0.09112303074318574 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1203, 'weights': 'uniform'}. Best is trial 29 with value: 0.09112303074318574.
running
[I 2024-10-22 21:25:07,533] Trial 30 finished with value: 0.09933396185768772 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1304, 'weights': 'distance'}. Best is trial 29 with value: 0.09112303074318574.
running
[I 2024-10-22 21:25:09,887] Trial 8 finished with value: 0.07336300640463603 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 8 with value: 0.07336300640463603.
running
[I 2024-10-22 21:25:10,279] Trial 18 finished with value: 0.08600054794230663 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 8 with value: 0.07336300640463603.
running
[I 2024-10-22 21:25:11,435] Trial 6 finished with value: 0.07362077168246635 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 8 with value: 0.07336300640463603.
running
[I 2024-10-22 21:25:16,325] Trial 26 finished with value: 0.11274701456316791 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 8 with value: 0.07336300640463603.
running
[I 2024-10-22 21:25:18,728] Trial 25 finished with value: 0.0740868341230646 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 8 with value: 0.07336300640463603.
running
[I 2024-10-22 21:25:30,922] Trial 31 finished with value: 0.08320793395643131 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 8 with value: 0.07336300640463603.
running
[I 2024-10-22 21:25:32,932] Trial 33 finished with value: 0.0807670237179373 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 8 with value: 0.07336300640463603.
running
[I 2024-10-22 21:25:35,320] Trial 34 finished with value: 0.072269471974895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:25:36,111] Trial 20 finished with value: 0.44931602357025724 and parameters: {'model_name': 'VAE', 'batch_size': 64, 'iterations': 18, 'learning_rate': 0.0004129607374252803, 'p_miss': 0.1916421292344732}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:25:37,897] Trial 36 finished with value: 0.09322061030788271 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:25:40,484] Trial 35 finished with value: 0.07336300640463603 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:25:42,162] Trial 38 finished with value: 0.0865712135491461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:25:42,473] Trial 37 finished with value: 0.073167771469328 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:25:47,204] Trial 39 finished with value: 0.07549336210919276 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:25:58,362] Trial 40 finished with value: 0.07487341981194776 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:26:03,096] Trial 41 finished with value: 0.11365430366925092 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:26:06,109] Trial 43 finished with value: 0.11365788871328412 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:26:10,165] Trial 45 finished with value: 0.113657888713284 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:26:12,721] Trial 42 finished with value: 0.15550202495200546 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:26:20,579] Trial 47 finished with value: 0.1553358211122809 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:26:41,739] Trial 49 finished with value: 0.11365788871328412 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:27:56,111] Trial 11 finished with value: 0.16801186226099993 and parameters: {'model_name': 'VAE', 'batch_size': 201, 'iterations': 61, 'learning_rate': 0.006475771119056884, 'p_miss': 0.27898644926689636}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:32:30,604] Trial 12 finished with value: 0.1638723353896909 and parameters: {'model_name': 'VAE', 'batch_size': 683, 'iterations': 114, 'learning_rate': 0.008680101477601954, 'p_miss': 0.06930432781177423}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:32:51,512] Trial 57 finished with value: 0.07300906926603219 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:39:59,208] Trial 24 finished with value: 0.16263424888699413 and parameters: {'model_name': 'VAE', 'batch_size': 370, 'iterations': 270, 'learning_rate': 0.058004764990539116, 'p_miss': 0.07871166619299283}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:44:45,256] Trial 7 finished with value: 0.16364068203753743 and parameters: {'model_name': 'VAE', 'batch_size': 74, 'iterations': 476, 'learning_rate': 0.057871037192681496, 'p_miss': 0.060712903635069315}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:46:08,761] Trial 32 finished with value: 0.07433858443203775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:47:48,605] Trial 14 finished with value: 0.1635732143374873 and parameters: {'model_name': 'VAE', 'batch_size': 131, 'iterations': 472, 'learning_rate': 0.018041864717407406, 'p_miss': 0.2940135897724342}. Best is trial 34 with value: 0.072269471974895.
running
[I 2024-10-22 21:47:54,456] Trial 53 finished with value: 0.06753390700831305 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:48:39,522] Trial 46 finished with value: 0.07016598734446003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:48:50,565] Trial 52 finished with value: 0.07201063980772127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:48:54,603] Trial 44 finished with value: 0.0700838329762149 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:48:57,161] Trial 51 finished with value: 0.07303869772599239 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:48:58,703] Trial 56 finished with value: 0.06972527522142899 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:49:10,369] Trial 48 finished with value: 0.07007894802603297 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:49:12,879] Trial 50 finished with value: 0.06968845406689096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:54:04,647] Trial 58 finished with value: 0.06899550661203295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 53 with value: 0.06753390700831305.
running
[I 2024-10-22 21:59:56,794] Trial 59 finished with value: 0.06751218814390327 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:03:20,267] Trial 60 finished with value: 0.07429277768404259 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:09:24,426] Trial 66 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 20, 'hint_rate': 0.1702579814109163, 'alpha': 2, 'iterations': 4211, 'learning_rate': 0.00011237570049799569, 'p_miss': 0.013202223711085065}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:09:25,052] Trial 74 finished with value: 0.2127605094798577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:17:55,497] Trial 62 finished with value: 0.23936325966331232 and parameters: {'model_name': 'GAIN', 'batch_size': 14, 'hint_rate': 0.14794493917364332, 'alpha': 1, 'iterations': 1293, 'learning_rate': 0.0001027737510100841, 'p_miss': 0.1857292066777409}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:19:57,537] Trial 64 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 17, 'hint_rate': 0.1437893196183303, 'alpha': 0, 'iterations': 6691, 'learning_rate': 0.00016274227348508986, 'p_miss': 0.017884117757372475}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:28:39,510] Trial 63 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 17, 'hint_rate': 0.16069106379987924, 'alpha': 4, 'iterations': 8463, 'learning_rate': 0.00012985470035841614, 'p_miss': 0.015619722876589026}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:31:28,304] Trial 71 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 16, 'hint_rate': 0.9897508735660062, 'alpha': 11, 'iterations': 7790, 'learning_rate': 0.00010724339556294751, 'p_miss': 0.015008968580966231}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:33:38,641] Trial 61 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 18, 'hint_rate': 0.1491866101782282, 'alpha': 7, 'iterations': 9801, 'learning_rate': 0.00018930816361585525, 'p_miss': 0.010624218442154137}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:38:06,780] Trial 76 finished with value: 0.06789729377782526 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 59 with value: 0.06751218814390327.
running
[I 2024-10-22 22:40:20,275] Trial 77 finished with value: 0.06623870496410414 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 22:40:21,410] Trial 82 finished with value: 0.2127605094798577 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 22:47:26,371] Trial 75 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.989357050854117, 'alpha': 41, 'iterations': 7874, 'learning_rate': 0.0018037822543939396, 'p_miss': 0.1975016071328153}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 22:49:53,686] Trial 78 finished with value: 0.07089338907721796 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 22:53:09,488] Trial 79 finished with value: 0.06912192205238302 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 22:54:55,466] Trial 80 finished with value: 0.06869736990845181 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 22:59:53,241] Trial 81 finished with value: 0.0708675371539062 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:01:23,431] Trial 83 finished with value: 0.06786832444540673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:04:35,203] Trial 89 finished with value: 0.4065824601406641 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 55, 'learning_rate': 0.0010506566240954707, 'p_miss': 0.23211864515163222}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:09:19,064] Trial 84 finished with value: 0.07085697700342469 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:09:37,611] Trial 91 finished with value: 0.11381973859675598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:10:15,159] Trial 72 finished with value: 0.23221632372568207 and parameters: {'model_name': 'GAIN', 'batch_size': 22, 'hint_rate': 0.13573173868115174, 'alpha': 16, 'iterations': 2833, 'learning_rate': 0.00010256273823506032, 'p_miss': 0.1857036058932519}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:11:35,516] Trial 85 finished with value: 0.06808716415195389 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:15:10,896] Trial 86 finished with value: 0.06742123022551741 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:17:14,284] Trial 87 finished with value: 0.07029715154263315 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:21:55,766] Trial 88 finished with value: 0.06810331012944229 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:26:01,912] Trial 90 finished with value: 0.06778529568630834 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:29:51,973] Trial 73 finished with value: 0.23986096825829212 and parameters: {'model_name': 'GAIN', 'batch_size': 14, 'hint_rate': 0.14623147392533814, 'alpha': 4, 'iterations': 3403, 'learning_rate': 0.0001269641074641409, 'p_miss': 0.1883259936703383}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:31:50,539] Trial 93 finished with value: 0.06844443298194673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:31:58,469] Trial 100 finished with value: 0.12132806790519349 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8938, 'weights': 'distance'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:32:36,007] Trial 92 finished with value: 0.06777099617645287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:33:03,595] Trial 94 finished with value: 0.07495497299745313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:33:23,260] Trial 103 finished with value: 0.1182956548720546 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:34:52,668] Trial 104 finished with value: 0.16537518322759467 and parameters: {'model_name': 'VAE', 'batch_size': 52, 'iterations': 17, 'learning_rate': 0.030919195152443915, 'p_miss': 0.1351430786185769}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:36:26,032] Trial 95 finished with value: 0.07738236431580778 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:38:07,960] Trial 96 finished with value: 0.07691956160106456 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:42:23,413] Trial 97 finished with value: 0.07711576001658511 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:46:26,754] Trial 98 finished with value: 0.07637149000760621 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:49:23,240] Trial 99 finished with value: 0.07182675555531917 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:51:31,654] Trial 101 finished with value: 0.0740810954973367 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:51:32,202] Trial 111 finished with value: 0.1626343265939935 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:52:19,088] Trial 67 finished with value: 0.25381814903926114 and parameters: {'model_name': 'GAIN', 'batch_size': 17, 'hint_rate': 0.12659002522402713, 'alpha': 6, 'iterations': 4657, 'learning_rate': 0.00012498537688983562, 'p_miss': 0.19226965510473043}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:52:41,686] Trial 102 finished with value: 0.07271543881702938 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:55:40,020] Trial 105 finished with value: 0.07502168931364502 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:56:57,494] Trial 106 finished with value: 0.07559132190957965 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-22 23:58:27,466] Trial 107 finished with value: 0.0717108936911002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:02:07,448] Trial 108 finished with value: 0.07604126515612991 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:06:33,911] Trial 109 finished with value: 0.06875793079178154 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:08:56,814] Trial 110 finished with value: 0.06804073198397374 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:09:03,790] Trial 120 finished with value: 0.11007892586230708 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4027, 'weights': 'distance'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:11:17,360] Trial 112 finished with value: 0.06738568747681414 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:13:03,449] Trial 113 finished with value: 0.0698045748063463 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:13:08,564] Trial 114 finished with value: 0.06729648718506762 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:13:20,358] Trial 124 finished with value: 0.14284528802184626 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:13:23,038] Trial 123 finished with value: 0.11286887656412581 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:16:06,314] Trial 115 finished with value: 0.06921318340203815 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:17:17,704] Trial 116 finished with value: 0.07052731590961714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:19:21,073] Trial 117 finished with value: 0.06992155962366876 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:20:44,789] Trial 70 finished with value: 0.27200815477208645 and parameters: {'model_name': 'GAIN', 'batch_size': 15, 'hint_rate': 0.14061955869006565, 'alpha': 0, 'iterations': 5665, 'learning_rate': 0.00016227400375835226, 'p_miss': 0.1828625230388356}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:22:18,725] Trial 118 finished with value: 0.06703210713374722 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:27:19,336] Trial 119 finished with value: 0.07180389421905946 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:28:57,847] Trial 121 finished with value: 0.07260726813990179 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:29:27,233] Trial 133 finished with value: 0.4145579060075125 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 10, 'learning_rate': 0.004458730250665387, 'p_miss': 0.22245368173143143}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:30:58,727] Trial 122 finished with value: 0.07019677688555911 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:30:59,251] Trial 135 finished with value: 0.2140588898738855 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:33:10,747] Trial 125 finished with value: 0.07175443453587386 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:33:25,948] Trial 126 finished with value: 0.07183957150132415 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:34:55,013] Trial 21 finished with value: 0.16423930314950558 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 3482, 'learning_rate': 0.0038168194836596513, 'p_miss': 0.05301995701193892}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:35:31,099] Trial 127 finished with value: 0.0716133345521717 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:36:21,151] Trial 128 finished with value: 0.0712709197961632 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:38:20,231] Trial 129 finished with value: 0.06952177169298247 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:39:18,575] Trial 130 finished with value: 0.06846090123600099 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:40:12,354] Trial 131 finished with value: 0.07395240505498624 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:44:42,828] Trial 132 finished with value: 0.06900788313277992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:44:49,450] Trial 145 finished with value: 0.11150802743953492 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4248, 'weights': 'distance'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:46:17,929] Trial 134 finished with value: 0.06865861010692002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:47:47,057] Trial 136 finished with value: 0.07065768423732441 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:50:23,526] Trial 137 finished with value: 0.07273546871632476 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:50:41,137] Trial 138 finished with value: 0.07322523728778423 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:51:07,282] Trial 149 finished with value: 0.15682324439786596 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:51:24,932] Trial 150 finished with value: 0.15682324439786596 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:52:47,231] Trial 139 finished with value: 0.07345313937255152 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:53:30,120] Trial 140 finished with value: 0.07399227882512985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:54:05,919] Trial 141 finished with value: 0.07401360052329013 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:54:22,366] Trial 155 finished with value: 0.0691608152096432 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:56:18,632] Trial 142 finished with value: 0.06877658150049845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:57:05,459] Trial 143 finished with value: 0.07388476100340632 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 00:58:37,856] Trial 144 finished with value: 0.07068372423801064 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:02:42,487] Trial 146 finished with value: 0.0741805469472798 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:04:59,845] Trial 147 finished with value: 0.07011787223752511 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:06:02,578] Trial 148 finished with value: 0.07183809936270487 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:08:24,996] Trial 151 finished with value: 0.06776914113335872 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:08:37,518] Trial 152 finished with value: 0.06632722875455227 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:08:38,044] Trial 164 finished with value: 0.1626343265939935 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:08:42,942] Trial 165 finished with value: 0.39229285363639066 and parameters: {'model_name': 'VAE', 'batch_size': 393, 'iterations': 1, 'learning_rate': 0.09056435932124797, 'p_miss': 0.14092025535879604}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:10:12,337] Trial 153 finished with value: 0.06743746634344633 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:10:32,152] Trial 154 finished with value: 0.06848446866018061 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:11:35,678] Trial 156 finished with value: 0.06845004578849438 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:14:02,866] Trial 157 finished with value: 0.06734180411605632 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:14:38,222] Trial 158 finished with value: 0.06856939596994317 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:16:07,576] Trial 159 finished with value: 0.06742825933771221 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:20:14,541] Trial 160 finished with value: 0.06946158136702099 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:22:17,739] Trial 161 finished with value: 0.06817599569085162 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:22:58,456] Trial 162 finished with value: 0.06879910420937702 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:25:56,855] Trial 163 finished with value: 0.06925357352774704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:26:09,918] Trial 166 finished with value: 0.06645708526013402 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:28:07,043] Trial 167 finished with value: 0.06860548413586827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:28:38,763] Trial 168 finished with value: 0.06871954333814478 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:29:40,505] Trial 169 finished with value: 0.06892040826157393 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:32:02,904] Trial 170 finished with value: 0.06917932880743269 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:32:21,832] Trial 181 finished with value: 0.0691608152096432 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:32:28,523] Trial 182 finished with value: 0.11940381879606857 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5756, 'weights': 'distance'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:32:35,933] Trial 171 finished with value: 0.06737704635586517 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:33:37,918] Trial 172 finished with value: 0.06941283306409102 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:38:21,124] Trial 173 finished with value: 0.06685707073200337 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:40:12,260] Trial 174 finished with value: 0.06714194291142754 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:40:14,618] Trial 175 finished with value: 0.06925939318530243 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:43:30,443] Trial 176 finished with value: 0.06962689552826948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:43:50,527] Trial 177 finished with value: 0.0697790398749791 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:44:09,783] Trial 190 finished with value: 0.11381973859675598 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:44:48,927] Trial 65 finished with value: 0.2644248011546638 and parameters: {'model_name': 'GAIN', 'batch_size': 19, 'hint_rate': 0.1856877360806516, 'alpha': 8, 'iterations': 8770, 'learning_rate': 0.00010874778467428531, 'p_miss': 0.1919206410042895}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:46:27,766] Trial 178 finished with value: 0.06972817488963944 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:47:04,042] Trial 179 finished with value: 0.06766503461746087 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:47:52,160] Trial 180 finished with value: 0.06735474518214805 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:49:26,977] Trial 69 finished with value: 0.28455754898034996 and parameters: {'model_name': 'GAIN', 'batch_size': 18, 'hint_rate': 0.17890762440982355, 'alpha': 1, 'iterations': 8967, 'learning_rate': 0.00011957900000972786, 'p_miss': 0.20280274698403739}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:50:58,535] Trial 183 finished with value: 0.067975375340289 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:51:18,984] Trial 184 finished with value: 0.06903117396832295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:51:57,606] Trial 185 finished with value: 0.06807416506571544 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
running
[I 2024-10-23 01:56:32,034] Trial 186 finished with value: 0.06744964559162671 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 01:57:58,007] Trial 188 finished with value: 0.07006929655109882 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 01:58:10,187] Trial 187 finished with value: 0.06651602651206524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:01:22,122] Trial 189 finished with value: 0.06758339301970887 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:01:29,917] Trial 68 finished with value: 0.26388958690050873 and parameters: {'model_name': 'GAIN', 'batch_size': 18, 'hint_rate': 0.16066515026837136, 'alpha': 7, 'iterations': 9527, 'learning_rate': 0.0001315629689910795, 'p_miss': 0.18948553349556607}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:01:34,923] Trial 191 finished with value: 0.06635175450644551 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:01:54,359] Trial 192 finished with value: 0.06947750918988096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:02:18,951] Trial 54 finished with value: 0.1632770868693689 and parameters: {'model_name': 'VAE', 'batch_size': 90, 'iterations': 6246, 'learning_rate': 0.07568024981295378, 'p_miss': 0.030557983098255317}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:03:05,498] Trial 193 finished with value: 0.0698978598485398 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:03:11,113] Trial 194 finished with value: 0.0684745685982612 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:03:32,756] Trial 195 finished with value: 0.0683550562205089 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:04:05,004] Trial 196 finished with value: 0.06977903160241387 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:04:51,201] Trial 198 finished with value: 0.07134582288139169 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 77 with value: 0.06623870496410414.
[I 2024-10-23 02:04:51,632] Trial 197 finished with value: 0.06535775768068934 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 197 with value: 0.06535775768068934.
[I 2024-10-23 02:04:59,970] Trial 55 finished with value: 0.1633345372395926 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 8430, 'learning_rate': 0.047820884340653055, 'p_miss': 0.02579536396832177}. Best is trial 197 with value: 0.06535775768068934.
[I 2024-10-23 02:05:03,428] Trial 199 finished with value: 0.07064329858110098 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 197 with value: 0.06535775768068934.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.06535775768068934
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8379660069788566
Generation:   4%|▍         | 1/25 [00:17<06:56, 17.36s/it]Generation:  2
Best f1_score score: 0.8379660069788566
Generation:   8%|▊         | 2/25 [00:30<05:37, 14.68s/it]Generation:  3
Best f1_score score: 0.8379660069788566
Generation:  12%|█▏        | 3/25 [00:58<07:40, 20.95s/it]Generation:  4
Best f1_score score: 0.8379660069788566
Generation:  16%|█▌        | 4/25 [01:12<06:20, 18.10s/it]Generation:  5
Best f1_score score: 0.8379660069788566
Generation:  20%|██        | 5/25 [04:50<30:01, 90.08s/it]Generation:  6
Best f1_score score: 0.8380676627915594
Generation:  24%|██▍       | 6/25 [05:02<20:07, 63.57s/it]Generation:  7
Best f1_score score: 0.8401212666237873
Generation:  28%|██▊       | 7/25 [05:10<13:41, 45.64s/it]Generation:  8
Best f1_score score: 0.8401212666237873
Generation:  32%|███▏      | 8/25 [05:23<09:56, 35.08s/it]Generation:  9
Best f1_score score: 0.8419968366810157
Generation:  36%|███▌      | 9/25 [05:38<07:40, 28.81s/it]Generation:  10
Best f1_score score: 0.8419968366810157
Generation:  40%|████      | 10/25 [05:57<06:25, 25.73s/it]Generation:  11
Best f1_score score: 0.8419968366810157
Generation:  44%|████▍     | 11/25 [13:05<34:44, 148.92s/it]Generation:  12
Best f1_score score: 0.8419968366810157
Generation:  48%|████▊     | 12/25 [13:21<23:31, 108.61s/it]Generation:  13
Best f1_score score: 0.8419968366810157
Generation:  52%|█████▏    | 13/25 [13:46<16:38, 83.25s/it] Generation:  14
Best f1_score score: 0.8419968366810157
Generation:  56%|█████▌    | 14/25 [14:24<12:43, 69.40s/it]Generation:  15
Best f1_score score: 0.8419968366810157
Generation:  60%|██████    | 15/25 [14:38<08:48, 52.86s/it]Generation:  16
Best f1_score score: 0.8419968366810157
Generation:  64%|██████▍   | 16/25 [15:16<07:14, 48.30s/it]Generation:  17
Best f1_score score: 0.8430485151140568
Generation:  68%|██████▊   | 17/25 [15:56<06:06, 45.83s/it]Generation:  18
Best f1_score score: 0.8430485151140568
Generation:  72%|███████▏  | 18/25 [16:10<04:14, 36.37s/it]Generation:  19
Best f1_score score: 0.8430485151140568
Generation:  76%|███████▌  | 19/25 [16:25<02:59, 29.95s/it]Generation:  20
Best f1_score score: 0.8430485151140568
Generation:  80%|████████  | 20/25 [17:15<02:59, 35.93s/it]Generation:  21
Best f1_score score: 0.8430485151140568
Generation:  84%|████████▍ | 21/25 [17:30<01:57, 29.46s/it]Generation:  22
Best f1_score score: 0.8430485151140568
Generation:  88%|████████▊ | 22/25 [20:04<03:21, 67.11s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465bdb2b0> 

Generation:  23
Best f1_score score: 0.846572466553283
Generation:  92%|█████████▏| 23/25 [30:15<07:40, 230.30s/it]Generation:  24
Best f1_score score: 0.846572466553283
Generation:  96%|█████████▌| 24/25 [32:34<03:22, 202.73s/it]Generation:  25
Best f1_score score: 0.846572466553283
Generation: 100%|██████████| 25/25 [32:53<00:00, 147.63s/it]Generation: 100%|██████████| 25/25 [32:57<00:00, 79.09s/it] 
2024-10-23 02:39:43,308 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:38995' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b5f468972b7ffa9aa2eaa92c4caed8b0', 'ndarray-90f43aa64581be183e298af70b9b8e3b'} (stimulus_id='handle-worker-cleanup-1729676383.3082016')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(class_weight='balanced', max_depth=9,
                                n_estimators=80, n_jobs=1, num_leaves=225,
                                verbose=-1))])
score start
train score: {'auroc': 0.9959298576509322, 'accuracy': 0.998099709367315, 'balanced_accuracy': 0.9872941132454178, 'logloss': 0.03279305760575624, 'f1': 0.979418861131512}
original test score: {'auroc': 0.9169600422460833, 'accuracy': 0.9848010728654448, 'balanced_accuracy': 0.8326483013553951, 'logloss': 0.07421901089057031, 'f1': 0.8326483013553951}
imputed test score: {'auroc': 0.9097518042598133, 'accuracy': 0.9834599910594546, 'balanced_accuracy': 0.8225752508361204, 'logloss': 0.07694496859544084, 'f1': 0.8195751452331905}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4c70> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4d00> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.8459850247151064
Generation:   4%|▍         | 1/25 [02:55<1:10:01, 175.06s/it]Generation:  2
Best f1_score score: 0.8459850247151064
Generation:   8%|▊         | 2/25 [10:23<2:08:45, 335.91s/it]Generation:  3
Best f1_score score: 0.8593869580189442
Generation:  12%|█▏        | 3/25 [17:51<2:21:51, 386.89s/it]Generation:  4
Best f1_score score: 0.8593869580189442
Generation:  16%|█▌        | 4/25 [25:22<2:24:22, 412.49s/it]Generation:  5
Best f1_score score: 0.8593869580189442
Generation:  20%|██        | 5/25 [32:52<2:21:54, 425.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f89dff0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452998dc0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  6
Best f1_score score: 0.8593869580189442
Generation:  24%|██▍       | 6/25 [35:25<1:45:26, 332.98s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455085870> 

Generation:  7
Best f1_score score: 0.8593869580189442
Generation:  28%|██▊       | 7/25 [45:30<2:06:37, 422.06s/it]Generation:  8
Best f1_score score: 0.8593869580189442
Generation:  32%|███▏      | 8/25 [50:49<1:50:17, 389.29s/it]Generation:  9
Best f1_score score: 0.8593869580189442
Generation:  36%|███▌      | 9/25 [59:33<1:55:04, 431.53s/it]Generation:  10
Best f1_score score: 0.8593869580189442
Generation:  40%|████      | 10/25 [1:08:19<1:55:10, 460.68s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745c7070> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  11
Best f1_score score: 0.8593869580189442
Generation:  44%|████▍     | 11/25 [1:14:18<1:40:10, 429.32s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554569f8fd0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.8593869580189442
Generation:  48%|████▊     | 12/25 [1:23:45<1:42:05, 471.16s/it]Generation:  13
Best f1_score score: 0.8593869580189442
Generation:  52%|█████▏    | 13/25 [1:29:08<1:25:16, 426.41s/it]Generation:  14
Best f1_score score: 0.8593869580189442
Generation:  56%|█████▌    | 14/25 [1:32:26<1:05:31, 357.40s/it]Generation:  15
Best f1_score score: 0.8593869580189442
Generation:  60%|██████    | 15/25 [1:41:05<1:07:41, 406.16s/it]Generation:  16
Best f1_score score: 0.8593869580189442
Generation:  64%|██████▍   | 16/25 [1:48:29<1:02:37, 417.45s/it]Generation:  17
Best f1_score score: 0.8593869580189442
Generation:  68%|██████▊   | 17/25 [1:52:29<48:33, 364.21s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b97ca00> 

Generation:  18
Best f1_score score: 0.8593869580189442
Generation:  72%|███████▏  | 18/25 [2:02:35<50:57, 436.80s/it]Generation:  19
Best f1_score score: 0.8593869580189442
Generation:  76%|███████▌  | 19/25 [2:04:34<34:08, 341.37s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745b8be0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.8593869580189442
Generation:  80%|████████  | 20/25 [2:07:20<24:04, 288.82s/it]Generation:  21
Best f1_score score: 0.8593869580189442
Generation:  84%|████████▍ | 21/25 [2:14:06<21:35, 323.77s/it]Generation:  22
Best f1_score score: 0.8593869580189442
Generation:  88%|████████▊ | 22/25 [2:21:41<18:09, 363.21s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454fcd030> 

Generation:  23
Best f1_score score: 0.8593869580189442
Generation:  92%|█████████▏| 23/25 [2:31:49<14:33, 436.64s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bf6ac20> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.8593869580189442
Generation:  96%|█████████▌| 24/25 [2:40:32<07:42, 462.59s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545254bc40> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  25
Best f1_score score: 0.8598517905152964
Generation: 100%|██████████| 25/25 [2:46:32<00:00, 432.00s/it]Generation: 100%|██████████| 25/25 [2:46:32<00:00, 399.72s/it]
2024-10-23 05:26:37,401 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45609' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b5f468972b7ffa9aa2eaa92c4caed8b0', 'DataFrame-586d00ca32658eb059db6637afc73dee'} (stimulus_id='handle-worker-cleanup-1729686397.4013336')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=Ridge(), imputation_order='random',
                                  initial_strategy='median',
                                  n_nearest_features=71)),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.001319720883,
                               hidden_layer_sizes=[148, 148],
                               learning_rate_init=0.0116917729279,
                               n_iter_no_change=32))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9773139426378153, 'accuracy': 0.9877040017885088, 'balanced_accuracy': 0.8482149145201331, 'logloss': 0.037139583699738445, 'f1': 0.8600394255139397}
test score: {'auroc': 0.9519098750220031, 'accuracy': 0.9803308001788109, 'balanced_accuracy': 0.8209734201725049, 'logloss': 0.09397447731737894, 'f1': 0.7985278705705116}
original test score: {'auroc': 0.9531596549903186, 'accuracy': 0.981671881984801, 'balanced_accuracy': 0.8310464706917796, 'logloss': 0.06896986517850859, 'f1': 0.8106167134358746}
score end
310
lvl
0.01
type
MNAR
num_run
3
class_full
finished
all finished
full run takes
8.03484009709623
hours
DONE
