Run: 33
/cm/local/apps/slurm/var/spool/job1011666/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/725/725.pkl
working on 
../data/c/725/class_full_MNAR_0.01_2
2.6744956970214844
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-23 12:47:45,245] A new study created in memory with name: no-name-26bae231-2f68-4cc1-9964-7975c56e615c
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-23 12:47:45,508] Trial 1 finished with value: 0.2550132261642425 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.2550132261642425.
[I 2024-10-23 12:47:45,533] Trial 13 finished with value: 0.5117272332406773 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.2550132261642425.
running
[I 2024-10-23 12:47:45,869] Trial 2 finished with value: 0.5117272332406773 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.2550132261642425.
running
[I 2024-10-23 12:47:46,003] Trial 9 finished with value: 0.2645731467652735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.2550132261642425.
running
running
[I 2024-10-23 12:47:46,201] Trial 12 finished with value: 0.2645731467652735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.2550132261642425.
[I 2024-10-23 12:47:46,331] Trial 4 finished with value: 0.2645731467652735 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.2550132261642425.
running
running
[I 2024-10-23 12:47:46,994] Trial 17 finished with value: 0.5143249160849254 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.2550132261642425.
running
[I 2024-10-23 12:47:50,408] Trial 3 finished with value: 0.2549731125172491 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4659, 'weights': 'uniform'}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:47:51,494] Trial 10 finished with value: 0.2557440625515047 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6024, 'weights': 'distance'}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:47:57,890] Trial 21 finished with value: 0.2551712095243407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:48:00,758] Trial 19 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.21916646865759967, 'alpha': 64, 'iterations': 18, 'learning_rate': 0.000503276641004773, 'p_miss': 0.08767702019152732}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:48:05,274] Trial 22 finished with value: 0.3597542266359052 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:48:07,397] Trial 25 finished with value: 0.47739901915514144 and parameters: {'model_name': 'GAIN', 'batch_size': 210, 'hint_rate': 0.6076292996992033, 'alpha': 30, 'iterations': 2, 'learning_rate': 0.012324948803936198, 'p_miss': 0.057002485087906965}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:48:08,186] Trial 6 finished with value: 0.3351901556011354 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 3, 'learning_rate': 0.00012178967673022134, 'p_miss': 0.22711872022854018}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:48:09,191] Trial 15 finished with value: 0.31789146687933545 and parameters: {'model_name': 'VAE', 'batch_size': 121, 'iterations': 2, 'learning_rate': 0.007370882401068088, 'p_miss': 0.2021247208004927}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:48:11,203] Trial 20 finished with value: 0.28385298899191896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 3 with value: 0.2549731125172491.
running
[I 2024-10-23 12:48:13,487] Trial 28 finished with value: 0.2549507400370946 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2817, 'weights': 'uniform'}. Best is trial 28 with value: 0.2549507400370946.
running
[I 2024-10-23 12:48:14,400] Trial 29 finished with value: 0.2549462675482207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2803, 'weights': 'uniform'}. Best is trial 29 with value: 0.2549462675482207.
running
[I 2024-10-23 12:48:15,466] Trial 30 finished with value: 0.25495123754345483 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2823, 'weights': 'uniform'}. Best is trial 29 with value: 0.2549462675482207.
running
[I 2024-10-23 12:48:17,861] Trial 31 finished with value: 0.2549097643724367 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2958, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:19,647] Trial 34 finished with value: 0.25621188590947186 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 232, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
[I 2024-10-23 12:48:19,799] Trial 32 finished with value: 0.25493371826704553 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3057, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
running
[I 2024-10-23 12:48:20,228] Trial 33 finished with value: 0.2550181505294339 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1405, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:23,170] Trial 35 finished with value: 0.2553020830846406 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 722, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:25,816] Trial 36 finished with value: 0.2549677501816307 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2441, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:26,208] Trial 37 finished with value: 0.25496654152670956 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2669, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:26,672] Trial 38 finished with value: 0.2549275852526332 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3480, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:29,369] Trial 39 finished with value: 0.2549282265383418 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3581, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:33,051] Trial 40 finished with value: 0.2556953202376014 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4061, 'weights': 'distance'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:33,920] Trial 41 finished with value: 0.2556956403207633 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4089, 'weights': 'distance'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:34,587] Trial 42 finished with value: 0.2557054022448645 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4191, 'weights': 'distance'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:48:53,008] Trial 0 finished with value: 0.30150866803499854 and parameters: {'model_name': 'VAE', 'batch_size': 318, 'iterations': 9, 'learning_rate': 0.0036226754466610854, 'p_miss': 0.27405703151716765}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:50:09,534] Trial 7 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.47312177217111095, 'alpha': 3, 'iterations': 437, 'learning_rate': 0.000909796117852494, 'p_miss': 0.043472063012990496}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:53:49,686] Trial 8 finished with value: 0.5217741051187569 and parameters: {'model_name': 'GAIN', 'batch_size': 94, 'hint_rate': 0.5552379599158969, 'alpha': 8, 'iterations': 216, 'learning_rate': 0.010535680283450408, 'p_miss': 0.2711565642651021}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:54:55,093] Trial 16 finished with value: 0.2603926550655635 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 102, 'learning_rate': 0.01595447300105003, 'p_miss': 0.17883665076131408}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:55:00,505] Trial 50 finished with value: 0.2549471637535044 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3419, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:55:05,031] Trial 51 finished with value: 0.2550755660826587 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1743, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 12:55:11,224] Trial 52 finished with value: 0.25495169991908073 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3387, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:04:28,845] Trial 45 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8412933585451287, 'alpha': 99, 'iterations': 3094, 'learning_rate': 0.059254017378452324, 'p_miss': 0.2960614476144686}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:12:13,166] Trial 11 finished with value: 0.3041326262322414 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:16:32,835] Trial 5 finished with value: 0.28034211542139803 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:16:38,136] Trial 56 finished with value: 0.2549218253189081 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3533, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:16:43,717] Trial 57 finished with value: 0.2549259025292506 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3652, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:16:48,566] Trial 58 finished with value: 0.2550132261642425 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5058, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:16:54,211] Trial 59 finished with value: 0.2549541324564405 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3724, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:19:26,776] Trial 24 finished with value: 0.268928306296345 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:22:37,504] Trial 18 finished with value: 0.2656746511000403 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:28:52,291] Trial 47 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9295377536058542, 'alpha': 99, 'iterations': 7884, 'learning_rate': 0.06767638755040477, 'p_miss': 0.13390832618849696}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:37:47,084] Trial 46 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.982067753363381, 'alpha': 100, 'iterations': 9891, 'learning_rate': 0.08232038805365526, 'p_miss': 0.2949004736784002}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:38:58,239] Trial 43 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9179966536645427, 'alpha': 100, 'iterations': 9966, 'learning_rate': 0.08463574998565435, 'p_miss': 0.29511056072651454}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:58:38,038] Trial 23 finished with value: 0.3359572574575723 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1335, 'learning_rate': 0.0004678583378899888, 'p_miss': 0.22159952055486606}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:58:43,960] Trial 66 finished with value: 0.2549627537327301 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3367, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:58:49,276] Trial 67 finished with value: 0.25493023818207544 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2140, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:58:54,454] Trial 68 finished with value: 0.254940318270931 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2124, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 13:59:00,474] Trial 69 finished with value: 0.254947481156594 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3697, 'weights': 'uniform'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 14:00:23,694] Trial 70 finished with value: 0.33010337077832047 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 24, 'learning_rate': 0.00012617843458502184, 'p_miss': 0.01035681172251629}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 14:00:24,749] Trial 71 finished with value: 0.5143249160849254 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 31 with value: 0.2549097643724367.
running
[I 2024-10-23 14:00:29,681] Trial 72 finished with value: 0.25490953039151715 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2229, 'weights': 'uniform'}. Best is trial 72 with value: 0.25490953039151715.
running
[I 2024-10-23 14:00:35,485] Trial 73 finished with value: 0.25496273706834466 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4516, 'weights': 'uniform'}. Best is trial 72 with value: 0.25490953039151715.
running
[I 2024-10-23 14:00:40,797] Trial 74 finished with value: 0.25493380615446537 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3685, 'weights': 'uniform'}. Best is trial 72 with value: 0.25490953039151715.
running
[I 2024-10-23 14:26:19,743] Trial 44 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9316238999006896, 'alpha': 99, 'iterations': 9195, 'learning_rate': 0.08754282766475245, 'p_miss': 0.2974461823164637}. Best is trial 72 with value: 0.25490953039151715.
running
[I 2024-10-23 14:26:25,021] Trial 76 finished with value: 0.25493068622505033 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2200, 'weights': 'uniform'}. Best is trial 72 with value: 0.25490953039151715.
running
[I 2024-10-23 14:26:31,199] Trial 77 finished with value: 0.255064608368075 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1665, 'weights': 'uniform'}. Best is trial 72 with value: 0.25490953039151715.
running
[I 2024-10-23 14:26:37,485] Trial 78 finished with value: 0.2549072470811199 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3135, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:26:43,890] Trial 79 finished with value: 0.2549234757135402 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3227, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:43:15,297] Trial 64 finished with value: 0.28812035676850906 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 969, 'learning_rate': 0.00010064949178888311, 'p_miss': 0.018969898771010907}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:43:15,719] Trial 81 finished with value: 0.2550132261642425 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:43:22,153] Trial 82 finished with value: 0.2549087408510885 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2961, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:43:29,003] Trial 83 finished with value: 0.2549240955233529 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3082, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:43:34,773] Trial 84 finished with value: 0.2549234200282066 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3028, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:43:41,918] Trial 85 finished with value: 0.25576056181735984 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2594, 'weights': 'distance'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:43:48,055] Trial 86 finished with value: 0.25492356078256717 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3092, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:43:54,065] Trial 87 finished with value: 0.2549320781876119 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3066, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:44:00,557] Trial 88 finished with value: 0.25491299298385983 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2960, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:44:06,975] Trial 89 finished with value: 0.2549188516321715 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2853, 'weights': 'uniform'}. Best is trial 78 with value: 0.2549072470811199.
running
[I 2024-10-23 14:44:13,161] Trial 90 finished with value: 0.25490565844216134 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2881, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:44:34,799] Trial 91 finished with value: 0.25509059307186677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:44:40,340] Trial 92 finished with value: 0.2549425614658874 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2405, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:44:45,884] Trial 93 finished with value: 0.2549747194625216 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2683, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:44:57,663] Trial 94 finished with value: 0.32989201157319725 and parameters: {'model_name': 'VAE', 'batch_size': 836, 'iterations': 1, 'learning_rate': 0.0014219886161152336, 'p_miss': 0.12004868878238757}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:44:58,170] Trial 95 finished with value: 0.5117272332406773 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:04,251] Trial 96 finished with value: 0.25492328410507065 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2851, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:10,276] Trial 97 finished with value: 0.2549431922144524 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2782, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:15,835] Trial 98 finished with value: 0.2549146657253696 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2951, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:21,750] Trial 99 finished with value: 0.25497925095517376 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2497, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:27,796] Trial 100 finished with value: 0.2549147473556067 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2864, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:34,190] Trial 101 finished with value: 0.25490929819146607 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2914, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:39,968] Trial 102 finished with value: 0.2551746433624945 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:45,529] Trial 103 finished with value: 0.25496380045596856 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2423, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:51,157] Trial 104 finished with value: 0.2549139873287036 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2897, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:45:58,788] Trial 105 finished with value: 0.2557440625515047 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6410, 'weights': 'distance'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:04,473] Trial 106 finished with value: 0.25491289933126493 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2870, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:10,516] Trial 107 finished with value: 0.2549240879127904 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3204, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:16,187] Trial 108 finished with value: 0.25493043221725176 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2299, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:21,544] Trial 109 finished with value: 0.25500488416306266 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1904, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:27,429] Trial 110 finished with value: 0.2549577445396043 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2598, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:33,001] Trial 111 finished with value: 0.25490805586540466 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2967, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:38,931] Trial 112 finished with value: 0.2549255640726248 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3231, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:44,377] Trial 113 finished with value: 0.25497624862545376 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2681, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:46:49,262] Trial 114 finished with value: 0.2550354751565358 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1318, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:49:33,446] Trial 115 finished with value: 0.2571528558472123 and parameters: {'model_name': 'VAE', 'batch_size': 52, 'iterations': 43, 'learning_rate': 0.022438013709917933, 'p_miss': 0.16070469971063894}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:49:39,373] Trial 116 finished with value: 0.2549152365923281 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2935, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:49:46,228] Trial 117 finished with value: 0.25496517215078557 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3370, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:49:52,938] Trial 118 finished with value: 0.254907227204994 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3937, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:50:00,091] Trial 119 finished with value: 0.2549247287494105 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3848, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:50:08,328] Trial 120 finished with value: 0.25573349893526176 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3392, 'weights': 'distance'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:50:08,935] Trial 121 finished with value: 0.2550132261642425 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:50:15,882] Trial 122 finished with value: 0.2549488944922776 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4377, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:50:40,541] Trial 123 finished with value: 0.28253460175045736 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:50:47,037] Trial 124 finished with value: 0.25500644000451145 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4828, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:08,233] Trial 125 finished with value: 0.4723804830055255 and parameters: {'model_name': 'GAIN', 'batch_size': 743, 'hint_rate': 0.01466725976449984, 'alpha': 63, 'iterations': 8, 'learning_rate': 0.0034900584275435876, 'p_miss': 0.10199868134194381}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:14,634] Trial 126 finished with value: 0.2549139349774648 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2938, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:20,860] Trial 127 finished with value: 0.25492060063433564 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3179, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:26,499] Trial 128 finished with value: 0.2549646893115322 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2715, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:32,362] Trial 129 finished with value: 0.2549686812631966 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2544, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:38,013] Trial 130 finished with value: 0.25491116684030757 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2989, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:43,948] Trial 131 finished with value: 0.2549474577765407 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3435, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:49,762] Trial 132 finished with value: 0.25492333090825703 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3081, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:51:55,327] Trial 133 finished with value: 0.25493955608132207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3798, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:52:01,164] Trial 134 finished with value: 0.25492597884351587 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3515, 'weights': 'uniform'}. Best is trial 90 with value: 0.25490565844216134.
running
[I 2024-10-23 14:52:06,988] Trial 135 finished with value: 0.254901350129939 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3940, 'weights': 'uniform'}. Best is trial 135 with value: 0.254901350129939.
running
[I 2024-10-23 14:52:13,015] Trial 136 finished with value: 0.2549380227896719 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3252, 'weights': 'uniform'}. Best is trial 135 with value: 0.254901350129939.
running
[I 2024-10-23 14:52:19,378] Trial 137 finished with value: 0.25490126732054197 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3944, 'weights': 'uniform'}. Best is trial 137 with value: 0.25490126732054197.
running
[I 2024-10-23 14:52:25,422] Trial 138 finished with value: 0.2549273749461852 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3850, 'weights': 'uniform'}. Best is trial 137 with value: 0.25490126732054197.
running
[I 2024-10-23 14:52:31,763] Trial 139 finished with value: 0.2549038191258969 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4021, 'weights': 'uniform'}. Best is trial 137 with value: 0.25490126732054197.
running
[I 2024-10-23 14:52:37,851] Trial 140 finished with value: 0.25492018786628606 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4069, 'weights': 'uniform'}. Best is trial 137 with value: 0.25490126732054197.
running
[I 2024-10-23 14:52:43,904] Trial 141 finished with value: 0.25493544512680794 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4190, 'weights': 'uniform'}. Best is trial 137 with value: 0.25490126732054197.
running
[I 2024-10-23 15:01:04,076] Trial 142 finished with value: 0.31271593642703904 and parameters: {'model_name': 'VAE', 'batch_size': 40, 'iterations': 142, 'learning_rate': 0.0003396644506026983, 'p_miss': 0.07346959701377967}. Best is trial 137 with value: 0.25490126732054197.
running
[I 2024-10-23 15:01:13,364] Trial 143 finished with value: 0.2557296108469178 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4283, 'weights': 'distance'}. Best is trial 137 with value: 0.25490126732054197.
running
[I 2024-10-23 15:01:20,328] Trial 144 finished with value: 0.2549007972229906 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4011, 'weights': 'uniform'}. Best is trial 144 with value: 0.2549007972229906.
running
[I 2024-10-23 15:01:21,353] Trial 145 finished with value: 0.5143249160849254 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 144 with value: 0.2549007972229906.
running
[I 2024-10-23 15:01:28,333] Trial 146 finished with value: 0.25491620298538464 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4077, 'weights': 'uniform'}. Best is trial 144 with value: 0.2549007972229906.
running
[I 2024-10-23 15:01:34,974] Trial 147 finished with value: 0.2548997295301102 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3942, 'weights': 'uniform'}. Best is trial 147 with value: 0.2548997295301102.
running
[I 2024-10-23 15:01:41,490] Trial 148 finished with value: 0.254982124294978 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4738, 'weights': 'uniform'}. Best is trial 147 with value: 0.2548997295301102.
running
[I 2024-10-23 15:01:48,243] Trial 149 finished with value: 0.2549033876790167 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3887, 'weights': 'uniform'}. Best is trial 147 with value: 0.2548997295301102.
running
[I 2024-10-23 15:01:54,911] Trial 150 finished with value: 0.25492539136983516 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3843, 'weights': 'uniform'}. Best is trial 147 with value: 0.2548997295301102.
running
[I 2024-10-23 15:02:00,915] Trial 151 finished with value: 0.2548915083997315 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3992, 'weights': 'uniform'}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:02:08,134] Trial 152 finished with value: 0.2549037990950912 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3952, 'weights': 'uniform'}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:02:25,126] Trial 153 finished with value: 0.25517842297739557 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:07:08,537] Trial 75 finished with value: 0.2563092427157869 and parameters: {'model_name': 'VAE', 'batch_size': 965, 'iterations': 647, 'learning_rate': 0.0014604457106714994, 'p_miss': 0.11029175398111632}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:14:20,515] Trial 63 finished with value: 0.26426835893555306 and parameters: {'model_name': 'VAE', 'batch_size': 675, 'iterations': 1228, 'learning_rate': 0.00012134648819950857, 'p_miss': 0.012680303375734031}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:14:26,743] Trial 156 finished with value: 0.2549596358336477 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4454, 'weights': 'uniform'}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:14:32,819] Trial 157 finished with value: 0.25490614594455424 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3934, 'weights': 'uniform'}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:14:38,444] Trial 158 finished with value: 0.254901640074461 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4018, 'weights': 'uniform'}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:14:41,170] Trial 154 finished with value: 0.46042192613829885 and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.3148257750864146, 'alpha': 35, 'iterations': 417, 'learning_rate': 0.0014200134411904161, 'p_miss': 0.14239533744068766}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:14:43,921] Trial 159 finished with value: 0.25489589918590755 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3919, 'weights': 'uniform'}. Best is trial 151 with value: 0.2548915083997315.
running
[I 2024-10-23 15:14:47,284] Trial 160 finished with value: 0.2548913505854383 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3996, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:14:49,778] Trial 161 finished with value: 0.2548987159168919 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3929, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:14:52,271] Trial 65 finished with value: 0.2708755971091766 and parameters: {'model_name': 'VAE', 'batch_size': 982, 'iterations': 1104, 'learning_rate': 0.00010444480240436751, 'p_miss': 0.1347726137655714}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:14:52,780] Trial 162 finished with value: 0.25493720102610673 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4232, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:14:55,020] Trial 163 finished with value: 0.2549071152904502 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3935, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:14:57,275] Trial 164 finished with value: 0.2548913505854383 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3996, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:14:57,718] Trial 165 finished with value: 0.2548978296276701 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3962, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:00,566] Trial 166 finished with value: 0.2549076566563739 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4038, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:02,947] Trial 168 finished with value: 0.25491693898806667 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3632, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:03,103] Trial 167 finished with value: 0.25489762074529265 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3967, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:05,494] Trial 169 finished with value: 0.2549148773147566 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3614, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:08,064] Trial 171 finished with value: 0.25496156362019956 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4317, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:08,356] Trial 170 finished with value: 0.2549559720107689 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3725, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:10,576] Trial 172 finished with value: 0.2549690945042577 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4547, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:13,275] Trial 174 finished with value: 0.2549391382329833 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4161, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:13,508] Trial 173 finished with value: 0.2549693290131165 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4526, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:15,742] Trial 175 finished with value: 0.25493709007526405 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4174, 'weights': 'uniform'}. Best is trial 160 with value: 0.2548913505854383.
running
[I 2024-10-23 15:15:18,238] Trial 176 finished with value: 0.2548910767079983 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3987, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:18,476] Trial 177 finished with value: 0.2548923998374001 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3999, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:21,555] Trial 178 finished with value: 0.2548999205653347 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3960, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:24,222] Trial 179 finished with value: 0.254891977736703 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4000, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:25,110] Trial 180 finished with value: 0.2556859267704784 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3949, 'weights': 'distance'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:28,509] Trial 181 finished with value: 0.25568174510976405 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3981, 'weights': 'distance'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:30,709] Trial 183 finished with value: 0.25494238048011975 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3758, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:31,443] Trial 182 finished with value: 0.25571888648946867 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3752, 'weights': 'distance'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:33,925] Trial 184 finished with value: 0.2549556021634964 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3744, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:36,124] Trial 185 finished with value: 0.25494660647188827 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4361, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:36,917] Trial 186 finished with value: 0.2549488944922776 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4377, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:39,502] Trial 187 finished with value: 0.2549439156970296 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4339, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:41,075] Trial 188 finished with value: 0.25492490392673134 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4127, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:41,937] Trial 191 finished with value: 0.5143249160849254 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:42,460] Trial 189 finished with value: 0.2549270642694418 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4129, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:15:44,994] Trial 190 finished with value: 0.2549352885193315 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4152, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:16:18,616] Trial 194 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.7267315577323463, 'alpha': 75, 'iterations': 50, 'learning_rate': 0.03440640526260547, 'p_miss': 0.2464691400267891}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:16:45,642] Trial 195 finished with value: 0.28394133602080823 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:16:50,880] Trial 196 finished with value: 0.2549037990950912 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3952, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:16:56,016] Trial 197 finished with value: 0.25489725034656346 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3911, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:17:01,977] Trial 198 finished with value: 0.25493348030754814 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3566, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
running
[I 2024-10-23 15:17:07,519] Trial 199 finished with value: 0.254920938238277 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3866, 'weights': 'uniform'}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 15:29:35,858] Trial 193 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.7075765802358953, 'alpha': 76, 'iterations': 2694, 'learning_rate': 0.04001989605201988, 'p_miss': 0.24973036819520672}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 15:31:15,631] Trial 192 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.7488493771855991, 'alpha': 77, 'iterations': 3000, 'learning_rate': 0.03465899360026438, 'p_miss': 0.2517007368318628}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 15:48:37,570] Trial 80 finished with value: 0.2562861657437686 and parameters: {'model_name': 'VAE', 'batch_size': 946, 'iterations': 829, 'learning_rate': 0.0014413756605130554, 'p_miss': 0.12418008812718284}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 15:56:14,541] Trial 155 finished with value: 0.5000088900623938 and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.36576687870542296, 'alpha': 36, 'iterations': 2139, 'learning_rate': 0.0061482525047242085, 'p_miss': 0.25028135172281024}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 16:26:47,496] Trial 53 finished with value: 0.2563155399767773 and parameters: {'model_name': 'VAE', 'batch_size': 969, 'iterations': 3051, 'learning_rate': 0.0877884156494709, 'p_miss': 0.1228109166942826}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 16:41:38,924] Trial 48 finished with value: 0.3304502150791215 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4492, 'learning_rate': 0.06480434457469662, 'p_miss': 0.14320385407139347}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 16:56:18,988] Trial 61 finished with value: 0.25628467017898177 and parameters: {'model_name': 'VAE', 'batch_size': 872, 'iterations': 3319, 'learning_rate': 0.0981403865655274, 'p_miss': 0.12054512445564672}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 17:14:46,208] Trial 54 finished with value: 0.25629776339277455 and parameters: {'model_name': 'VAE', 'batch_size': 719, 'iterations': 4200, 'learning_rate': 0.09453457171274066, 'p_miss': 0.12009132700762118}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 17:25:02,226] Trial 26 finished with value: 0.256834510927086 and parameters: {'model_name': 'VAE', 'batch_size': 209, 'iterations': 5524, 'learning_rate': 0.08379907615914126, 'p_miss': 0.26168132444799974}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 17:25:23,525] Trial 14 finished with value: 0.2605542902077702 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 5497, 'learning_rate': 0.00404391602815905, 'p_miss': 0.1854930951165902}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 17:28:27,015] Trial 55 finished with value: 0.2659913952594901 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 5784, 'learning_rate': 0.05415474279514466, 'p_miss': 0.12731799276789574}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 17:38:30,107] Trial 60 finished with value: 0.2562180541311062 and parameters: {'model_name': 'VAE', 'batch_size': 984, 'iterations': 4894, 'learning_rate': 0.08243253156023769, 'p_miss': 0.10772446336325636}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 17:43:53,876] Trial 49 finished with value: 0.36067399669924793 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9395, 'learning_rate': 0.08082441303145256, 'p_miss': 0.13100074659429206}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 17:47:24,400] Trial 27 finished with value: 0.2564514297071604 and parameters: {'model_name': 'VAE', 'batch_size': 842, 'iterations': 6841, 'learning_rate': 0.09404181165426148, 'p_miss': 0.2874641452511918}. Best is trial 176 with value: 0.2548910767079983.
[I 2024-10-23 17:55:46,767] Trial 62 finished with value: 0.25626290433018334 and parameters: {'model_name': 'VAE', 'batch_size': 783, 'iterations': 9771, 'learning_rate': 0.09384332605662932, 'p_miss': 0.10002814747991173}. Best is trial 176 with value: 0.2548910767079983.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0.2548910767079983
{'model_name': 'KNNImputer', 'n_neighbors': 3987, 'weights': 'uniform'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9367573285544235
Generation:   4%|▍         | 1/25 [00:15<06:10, 15.45s/it]Generation:  2
Best f1_score score: 0.9367573285544235
Generation:   8%|▊         | 2/25 [00:33<06:31, 17.02s/it]Generation:  3
Best f1_score score: 0.9367573285544235
Generation:  12%|█▏        | 3/25 [05:34<53:44, 146.58s/it]Generation:  4
Best f1_score score: 0.9367573285544235
Generation:  16%|█▌        | 4/25 [05:44<32:29, 92.84s/it] Generation:  5
Best f1_score score: 0.9367573285544235
Generation:  20%|██        | 5/25 [05:59<21:30, 64.55s/it]Generation:  6
Best f1_score score: 0.9367573285544235
Generation:  24%|██▍       | 6/25 [06:17<15:27, 48.83s/it]Generation:  7
Best f1_score score: 0.936826258230232
Generation:  28%|██▊       | 7/25 [06:38<11:57, 39.84s/it]Generation:  8
Best f1_score score: 0.936826258230232
Generation:  32%|███▏      | 8/25 [07:53<14:27, 51.01s/it]Generation:  9
Best f1_score score: 0.936826258230232
Generation:  36%|███▌      | 9/25 [09:14<16:06, 60.43s/it]Generation:  10
Best f1_score score: 0.936826258230232
Generation:  40%|████      | 10/25 [10:01<14:02, 56.16s/it]Generation:  11
Best f1_score score: 0.936826258230232
Generation:  44%|████▍     | 11/25 [10:22<10:36, 45.44s/it]Generation:  12
Best f1_score score: 0.936826258230232
Generation:  48%|████▊     | 12/25 [10:45<08:20, 38.51s/it]Generation:  13
Best f1_score score: 0.936826258230232
Generation:  52%|█████▏    | 13/25 [11:03<06:29, 32.49s/it]Generation:  14
Best f1_score score: 0.9369579655461763
Generation:  56%|█████▌    | 14/25 [11:24<05:19, 29.03s/it]Generation:  15
Best f1_score score: 0.9369579655461763
Generation:  60%|██████    | 15/25 [11:40<04:09, 25.00s/it]Generation:  16
Best f1_score score: 0.9394246935165338
Generation:  64%|██████▍   | 16/25 [12:02<03:35, 23.98s/it]Generation:  17
Best f1_score score: 0.9394246935165338
Generation:  68%|██████▊   | 17/25 [12:27<03:14, 24.32s/it]Generation:  18
Best f1_score score: 0.9394246935165338
Generation:  72%|███████▏  | 18/25 [12:43<02:32, 21.80s/it]Generation:  19
Best f1_score score: 0.9394246935165338
Generation:  76%|███████▌  | 19/25 [13:07<02:15, 22.66s/it]Generation:  20
Best f1_score score: 0.9394246935165338
Generation:  80%|████████  | 20/25 [13:27<01:49, 21.86s/it]Generation:  21
Best f1_score score: 0.9394246935165338
Generation:  84%|████████▍ | 21/25 [13:47<01:24, 21.11s/it]Generation:  22
Best f1_score score: 0.9394246935165338
Generation:  88%|████████▊ | 22/25 [14:13<01:07, 22.57s/it]Generation:  23
Best f1_score score: 0.9394246935165338
Generation:  92%|█████████▏| 23/25 [14:31<00:42, 21.25s/it]Generation:  24
Best f1_score score: 0.9394246935165338
Generation:  96%|█████████▌| 24/25 [14:46<00:19, 19.26s/it]Generation:  25
Best f1_score score: 0.9394246935165338
Generation: 100%|██████████| 25/25 [15:00<00:00, 17.93s/it]Generation: 100%|██████████| 25/25 [15:04<00:00, 36.18s/it]
2024-10-23 18:11:00,576 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46581' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'ndarray-14ca253b49da66b7c84dd9ab6850d493'} (stimulus_id='handle-worker-cleanup-1729732260.5765417')
Fitted
Pipeline(steps=[('xgbclassifier',
                 XGBClassifier(base_score=None, booster=None, callbacks=None,
                               colsample_bylevel=None, colsample_bynode=None,
                               colsample_bytree=None, device=None,
                               early_stopping_rounds=None,
                               enable_categorical=False, eval_metric=None,
                               feature_types=None, gamma=0.8621409045583,
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None,
                               learning_rate=0.2134755264088, max_bin=None,
                               max_cat_threshold=None, max_cat_to_onehot=None,
                               max_delta_step=None, max_depth=4,
                               max_leaves=None, min_child_weight=8, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=100, n_jobs=1, nthread=1,
                               num_parallel_tree=None, ...))])
score start
train score: {'auroc': 0.995939597510221, 'accuracy': 0.9679536090340302, 'balanced_accuracy': 0.9664728742166231, 'logloss': 0.08549647638556235, 'f1': 0.9667009208261418}
original test score: {'auroc': 0.9908778027564498, 'accuracy': 0.949359365466748, 'balanced_accuracy': 0.9475388621063927, 'logloss': 0.12069349271205002, 'f1': 0.9474298853239815}
imputed test score: {'auroc': 0.9883003955013653, 'accuracy': 0.9444783404514948, 'balanced_accuracy': 0.9414965660338851, 'logloss': 0.13662922500776692, 'f1': 0.9422493366276407}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd56f0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4b20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4a60> 

Generation:  1
Best f1_score score: 0.9355676953188183
Generation:   4%|▍         | 1/25 [10:02<4:00:53, 602.24s/it]Generation:  2
Best f1_score score: 0.9355676953188183
Generation:   8%|▊         | 2/25 [10:30<1:41:31, 264.87s/it]Generation:  3
Best f1_score score: 0.9355676953188183
Generation:  12%|█▏        | 3/25 [10:39<54:14, 147.93s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457207fd0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.9355676953188183
Generation:  16%|█▌        | 4/25 [10:53<33:13, 94.94s/it] WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fe1e980> 

Generation:  5
Best f1_score score: 0.9355758281030425
Generation:  20%|██        | 5/25 [20:58<1:32:59, 278.96s/it]Generation:  6
Best f1_score score: 0.9355758281030425
Generation:  24%|██▍       | 6/25 [22:53<1:10:41, 223.22s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456c8e590> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474056530> 

Generation:  7
Best f1_score score: 0.9355758281030425
Generation:  28%|██▊       | 7/25 [33:01<1:44:39, 348.85s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d22ce0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bdfdb40> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  8
Best f1_score score: 0.9355758281030425
Generation:  32%|███▏      | 8/25 [33:51<1:11:52, 253.69s/it]Generation:  9
Best f1_score score: 0.9355758281030425
Generation:  36%|███▌      | 9/25 [34:02<47:28, 178.05s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454efa170> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff92620> 

Generation:  10
Best f1_score score: 0.9355758281030425
Generation:  40%|████      | 10/25 [44:08<1:17:29, 309.98s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f5224a0> 

Generation:  11
Best f1_score score: 0.935600972666939
Generation:  44%|████▍     | 11/25 [54:14<1:33:27, 400.52s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553cba60880> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554571bb910> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd6410> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745c5720> 

Generation:  12
Best f1_score score: 0.935600972666939
Generation:  48%|████▊     | 12/25 [1:04:21<1:40:25, 463.53s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554529990c0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452b8b760> 

Generation:  13
Best f1_score score: 0.935600972666939
Generation:  52%|█████▏    | 13/25 [1:14:29<1:41:25, 507.11s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745233d0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547407d030> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  14
Best f1_score score: 0.935600972666939
Generation:  56%|█████▌    | 14/25 [1:22:56<1:33:00, 507.32s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553cd8b0640> 

Generation:  15
Best f1_score score: 0.935600972666939
Generation:  60%|██████    | 15/25 [1:33:03<1:29:31, 537.12s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f6affa0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554527286d0> 

Generation:  16
Best f1_score score: 0.9367122425820422
Generation:  64%|██████▍   | 16/25 [1:43:10<1:23:45, 558.34s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b69a170> 

Generation:  17
Best f1_score score: 0.9367122425820422
Generation:  68%|██████▊   | 17/25 [1:53:15<1:16:19, 572.39s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f03970> 

Generation:  18
Best f1_score score: 0.9367122425820422
Generation:  72%|███████▏  | 18/25 [2:03:22<1:07:59, 582.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456adee30> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.9367122425820422
Generation:  76%|███████▌  | 19/25 [2:03:54<41:43, 417.26s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554530d8a00> 

Generation:  20
Best f1_score score: 0.9367122425820422
Generation:  80%|████████  | 20/25 [2:14:02<39:32, 474.58s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452b1b370> 

Generation:  21
Best f1_score score: 0.937041490411918
Generation:  84%|████████▍ | 21/25 [2:24:11<34:19, 514.79s/it]Generation:  22
Best f1_score score: 0.937041490411918
Generation:  88%|████████▊ | 22/25 [2:24:49<18:35, 371.89s/it]Generation:  23
Best f1_score score: 0.937041490411918
Generation:  92%|█████████▏| 23/25 [2:25:05<08:50, 265.05s/it]Generation:  24
Best f1_score score: 0.937041490411918
Generation:  96%|█████████▌| 24/25 [2:26:13<03:25, 205.77s/it]Generation:  25
Best f1_score score: 0.937041490411918
Generation: 100%|██████████| 25/25 [2:26:37<00:00, 151.42s/it]Generation: 100%|██████████| 25/25 [2:26:37<00:00, 351.91s/it]
2024-10-23 20:37:46,314 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42241' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'DataFrame-0eb6a9a803c580702bcd788e823422cd'} (stimulus_id='handle-worker-cleanup-1729741066.3147793')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=70, weights='distance')),
                ('xgbclassifier',
                 XGBClassifier(base_score=None, booster=None, callbacks=None,
                               colsample_bylevel=None, colsample_bynode=None,
                               colsample_bytree=None, device=None,
                               early_stopping_rounds=None,
                               enable_categorical=False, eval_metric=None,
                               feature_types=None, gamma=0.003891776268,
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None,
                               learning_rate=0.1354002887828, max_bin=None,
                               max_cat_threshold=None, max_cat_to_onehot=None,
                               max_delta_step=None, max_depth=6,
                               max_leaves=None, min_child_weight=17,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=100, n_jobs=1,
                               nthread=1, num_parallel_tree=None, ...))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9956610742735081, 'accuracy': 0.9668853960018312, 'balanced_accuracy': 0.9650274363285627, 'logloss': 0.09007339716696852, 'f1': 0.9655675532289053}
test score: {'auroc': 0.9879958068815382, 'accuracy': 0.9438682123245882, 'balanced_accuracy': 0.9412283115895197, 'logloss': 0.13660610824879635, 'f1': 0.9416581545795029}
original test score: {'auroc': 0.9911452841332521, 'accuracy': 0.9499694935936547, 'balanced_accuracy': 0.9480506328331071, 'logloss': 0.11929072866055555, 'f1': 0.9480506328331071}
score end
725
lvl
0.01
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
7.838705720040533
hours
DONE
