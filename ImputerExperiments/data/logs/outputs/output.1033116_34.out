Run: 34
/cm/local/apps/slurm/var/spool/job1033116/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/871/871.pkl
working on 
../data/c/871/class_full_MNAR_0.1_2
2.5133256912231445
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-30 16:16:20,066] A new study created in memory with name: no-name-d8f53d3f-a0e9-460e-ae2e-a816009203ce
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-30 16:16:20,178] Trial 5 finished with value: 0.1455434437151149 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.1455434437151149.
running
running
running
running
running
running
[I 2024-10-30 16:16:20,391] Trial 0 finished with value: 0.137335969393306 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.137335969393306.
running
[I 2024-10-30 16:16:20,573] Trial 15 finished with value: 0.137335969393306 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.137335969393306.
running
[I 2024-10-30 16:16:21,173] Trial 6 finished with value: 0.11375436751868617 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 125, 'weights': 'distance'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:21,284] Trial 3 finished with value: 0.11385284076307198 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 45, 'weights': 'distance'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:21,397] Trial 1 finished with value: 0.12652993659450149 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 964, 'weights': 'distance'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:21,609] Trial 19 finished with value: 0.5056122662315273 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:21,748] Trial 10 finished with value: 0.13493946216891967 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2035, 'weights': 'distance'}. Best is trial 6 with value: 0.11375436751868617.
[I 2024-10-30 16:16:21,855] Trial 14 finished with value: 0.13248742601430444 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1093, 'weights': 'uniform'}. Best is trial 6 with value: 0.11375436751868617.
running
running
[I 2024-10-30 16:16:21,975] Trial 2 finished with value: 0.1335061397231487 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1796, 'weights': 'distance'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:22,488] Trial 20 finished with value: 0.13708657347790934 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1484, 'weights': 'uniform'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:23,181] Trial 23 finished with value: 0.12578745935026697 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:23,643] Trial 7 finished with value: 0.13047568657064118 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:24,003] Trial 21 finished with value: 0.1258285466817523 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:24,792] Trial 16 finished with value: 0.1300781381328911 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:26,576] Trial 27 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.33188652789303286, 'alpha': 82, 'iterations': 1, 'learning_rate': 0.0356010615924819, 'p_miss': 0.029513733064709224}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:33,219] Trial 26 finished with value: 0.155102412838299 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 2, 'learning_rate': 0.0004350783773569706, 'p_miss': 0.048648600730833796}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:36,011] Trial 28 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.4802969907050297, 'alpha': 76, 'iterations': 26, 'learning_rate': 0.08885633983448746, 'p_miss': 0.06952789179895227}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:44,995] Trial 24 finished with value: 0.15456763139995702 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5, 'learning_rate': 0.0014662504746605384, 'p_miss': 0.27832880543376476}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:45,733] Trial 18 finished with value: 0.14802435504501482 and parameters: {'model_name': 'VAE', 'batch_size': 205, 'iterations': 4, 'learning_rate': 0.0005042920913825574, 'p_miss': 0.13238916791609126}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:46,795] Trial 34 finished with value: 0.1170020026086529 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 254, 'weights': 'distance'}. Best is trial 6 with value: 0.11375436751868617.
running
[I 2024-10-30 16:16:46,981] Trial 35 finished with value: 0.11342197632710735 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 101, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:16:48,274] Trial 37 finished with value: 0.11802420095146945 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 23, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:16:48,446] Trial 36 finished with value: 0.12750667858373305 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:16:49,795] Trial 39 finished with value: 0.13686337087015776 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2837, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:16:50,213] Trial 8 finished with value: 0.13953512550663122 and parameters: {'model_name': 'VAE', 'batch_size': 52, 'iterations': 6, 'learning_rate': 0.003284839673918017, 'p_miss': 0.2380099865531979}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:16:50,717] Trial 38 finished with value: 0.13686337087015776 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2994, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:16:51,603] Trial 40 finished with value: 0.12207592293978271 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 552, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:16:51,944] Trial 41 finished with value: 0.12303543069207157 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 624, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:16:52,248] Trial 42 finished with value: 0.12255047600125946 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 584, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:22,168] Trial 12 finished with value: 0.15958620154342373 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 18, 'learning_rate': 0.04071582848708087, 'p_miss': 0.18079292459209587}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:23,448] Trial 46 finished with value: 0.1168827124852756 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 248, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:29,345] Trial 22 finished with value: 0.33099870218853517 and parameters: {'model_name': 'GAIN', 'batch_size': 358, 'hint_rate': 0.44167055865369154, 'alpha': 43, 'iterations': 35, 'learning_rate': 0.00016393039261926936, 'p_miss': 0.15520441388806447}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:30,149] Trial 29 finished with value: 0.16446929208624847 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 15, 'learning_rate': 0.0010437070272970163, 'p_miss': 0.25380942135009565}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:31,212] Trial 48 finished with value: 0.11823390369807547 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 316, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:31,485] Trial 49 finished with value: 0.11890243420212498 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 353, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:32,612] Trial 50 finished with value: 0.11936808924945037 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 272, 'weights': 'uniform'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:32,763] Trial 51 finished with value: 0.1279575948182142 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'uniform'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:33,583] Trial 53 finished with value: 0.5056122662315273 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:34,184] Trial 52 finished with value: 0.13890366876855686 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:35,538] Trial 54 finished with value: 0.12550277978083751 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 858, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:35,986] Trial 55 finished with value: 0.12546624800431241 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 855, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:37,032] Trial 56 finished with value: 0.11878979949861775 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 347, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:37,428] Trial 57 finished with value: 0.11732528412828018 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 273, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:38,537] Trial 58 finished with value: 0.11599087537414687 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 212, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:39,209] Trial 60 finished with value: 0.5056122662315273 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:39,788] Trial 59 finished with value: 0.12181900321108315 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 532, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:17:41,556] Trial 61 finished with value: 0.1214284296871816 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 506, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:18:39,718] Trial 17 finished with value: 0.14997599436595405 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 47, 'learning_rate': 0.0009776878449464916, 'p_miss': 0.11117044858356481}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:28:44,631] Trial 25 finished with value: 0.1399731249274147 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:29:10,251] Trial 63 finished with value: 0.18347553662866375 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:29:11,257] Trial 62 finished with value: 0.16875344434706382 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:29:11,816] Trial 66 finished with value: 0.11584951463232343 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 206, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:29:12,588] Trial 67 finished with value: 0.11572801586486317 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 203, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:29:13,358] Trial 68 finished with value: 0.11521122219769712 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 177, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:29:36,708] Trial 64 finished with value: 0.1687060976601497 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:29:59,139] Trial 4 finished with value: 0.12405274809185854 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:30:10,841] Trial 13 finished with value: 0.15760436250696194 and parameters: {'model_name': 'VAE', 'batch_size': 393, 'iterations': 181, 'learning_rate': 0.0007644787355168697, 'p_miss': 0.14791672395990177}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:39:16,216] Trial 11 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.08038272847919804, 'alpha': 31, 'iterations': 4053, 'learning_rate': 0.02198237058248225, 'p_miss': 0.1894670098285405}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:50:16,965] Trial 30 finished with value: 0.15328430046470723 and parameters: {'model_name': 'VAE', 'batch_size': 292, 'iterations': 469, 'learning_rate': 0.0005271379717222603, 'p_miss': 0.23435257205952792}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:53:34,866] Trial 74 finished with value: 0.3501348415005167 and parameters: {'model_name': 'GAIN', 'batch_size': 898, 'hint_rate': 0.9197749986903307, 'alpha': 0, 'iterations': 461, 'learning_rate': 0.006896523423443258, 'p_miss': 0.0818040675527916}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:53:35,869] Trial 76 finished with value: 0.11500104212075477 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 172, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:53:36,731] Trial 77 finished with value: 0.11389441668447445 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 134, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:53:37,812] Trial 78 finished with value: 0.11375436751868617 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 125, 'weights': 'distance'}. Best is trial 35 with value: 0.11342197632710735.
running
[I 2024-10-30 16:53:38,779] Trial 79 finished with value: 0.11331787398381128 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 95, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 16:53:39,504] Trial 80 finished with value: 0.15403167296747028 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 16:53:40,612] Trial 81 finished with value: 0.11966389983422672 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 398, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 16:53:40,887] Trial 82 finished with value: 0.5056122662315273 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 16:53:41,880] Trial 83 finished with value: 0.13498413855331165 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2042, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:39,664] Trial 71 finished with value: 0.33827347558205256 and parameters: {'model_name': 'GAIN', 'batch_size': 847, 'hint_rate': 0.9499360646547185, 'alpha': 5, 'iterations': 2300, 'learning_rate': 0.007319488626134374, 'p_miss': 0.2190733854607551}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:40,670] Trial 85 finished with value: 0.12833857832633738 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 757, 'weights': 'uniform'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:41,567] Trial 86 finished with value: 0.11387479350732783 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 132, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:42,456] Trial 87 finished with value: 0.11366444228138864 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 121, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:43,597] Trial 88 finished with value: 0.12915009071684302 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1236, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:44,383] Trial 89 finished with value: 0.11368656492982002 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 123, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:45,217] Trial 90 finished with value: 0.12045966122199055 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 445, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:46,135] Trial 91 finished with value: 0.11354184646899149 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 113, 'weights': 'distance'}. Best is trial 79 with value: 0.11331787398381128.
running
[I 2024-10-30 17:35:46,998] Trial 92 finished with value: 0.11311846383230639 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 59, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:35:47,915] Trial 93 finished with value: 0.11358657871506024 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 120, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:35:48,696] Trial 94 finished with value: 0.11959233093556063 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 393, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:35:49,460] Trial 95 finished with value: 0.11312619769730288 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 90, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:35:50,290] Trial 96 finished with value: 0.11329768488297601 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 94, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:35:51,025] Trial 97 finished with value: 0.1133982755901023 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 100, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:35:51,722] Trial 98 finished with value: 0.1302752026345642 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:35:52,414] Trial 99 finished with value: 0.113970510458092 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 136, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:35:53,215] Trial 100 finished with value: 0.13686337087015776 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2368, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:55:49,884] Trial 47 finished with value: 0.340599467763001 and parameters: {'model_name': 'GAIN', 'batch_size': 897, 'hint_rate': 0.8803841332030209, 'alpha': 4, 'iterations': 3598, 'learning_rate': 0.007546364318778417, 'p_miss': 0.134698166038716}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 17:56:36,711] Trial 43 finished with value: 0.3426786425697425 and parameters: {'model_name': 'GAIN', 'batch_size': 929, 'hint_rate': 0.970405384452292, 'alpha': 0, 'iterations': 3503, 'learning_rate': 0.009746991010894516, 'p_miss': 0.18147622298106372}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 18:02:18,852] Trial 102 finished with value: 0.14756139580565852 and parameters: {'model_name': 'VAE', 'batch_size': 101, 'iterations': 147, 'learning_rate': 0.00010582398509903603, 'p_miss': 0.2865993881607847}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 18:02:19,620] Trial 104 finished with value: 0.12048864227821714 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 310, 'weights': 'uniform'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 18:02:20,661] Trial 105 finished with value: 0.12009463890523979 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 422, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 18:02:21,438] Trial 106 finished with value: 0.11331787398381128 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 95, 'weights': 'distance'}. Best is trial 92 with value: 0.11311846383230639.
running
[I 2024-10-30 18:02:22,198] Trial 107 finished with value: 0.11304033922206 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 86, 'weights': 'distance'}. Best is trial 107 with value: 0.11304033922206.
running
[I 2024-10-30 18:02:23,038] Trial 108 finished with value: 0.11283477460604825 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 76, 'weights': 'distance'}. Best is trial 108 with value: 0.11283477460604825.
running
[I 2024-10-30 18:02:23,679] Trial 109 finished with value: 0.13890366876855686 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'distance'}. Best is trial 108 with value: 0.11283477460604825.
running
[I 2024-10-30 18:02:23,925] Trial 110 finished with value: 0.1455434437151149 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 108 with value: 0.11283477460604825.
running
[I 2024-10-30 18:02:24,757] Trial 111 finished with value: 0.11804464507164165 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 307, 'weights': 'distance'}. Best is trial 108 with value: 0.11283477460604825.
running
[I 2024-10-30 18:02:25,634] Trial 112 finished with value: 0.11682307712914097 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 244, 'weights': 'distance'}. Best is trial 108 with value: 0.11283477460604825.
running
[I 2024-10-30 18:02:26,334] Trial 113 finished with value: 0.11283477460604825 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 76, 'weights': 'distance'}. Best is trial 108 with value: 0.11283477460604825.
running
[I 2024-10-30 18:02:27,397] Trial 114 finished with value: 0.12381877029937527 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 689, 'weights': 'distance'}. Best is trial 108 with value: 0.11283477460604825.
running
[I 2024-10-30 18:02:28,176] Trial 115 finished with value: 0.11275176112023147 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 71, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:02:29,077] Trial 116 finished with value: 0.11303870482159888 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:02:29,924] Trial 117 finished with value: 0.11314708718146253 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 64, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:02:30,992] Trial 118 finished with value: 0.11719674267461033 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 263, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:02:31,782] Trial 119 finished with value: 0.11302949970265204 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 60, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:06:58,824] Trial 32 finished with value: 0.3449160010552695 and parameters: {'model_name': 'GAIN', 'batch_size': 706, 'hint_rate': 0.976566938160496, 'alpha': 1, 'iterations': 4039, 'learning_rate': 0.00010205563096040721, 'p_miss': 0.29565457460908195}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:15:00,057] Trial 44 finished with value: 0.35925336887271075 and parameters: {'model_name': 'GAIN', 'batch_size': 404, 'hint_rate': 0.8866272033249867, 'alpha': 1, 'iterations': 4680, 'learning_rate': 0.00010542106701456753, 'p_miss': 0.18769535575122498}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:23:21,173] Trial 84 finished with value: 0.33810113249587614 and parameters: {'model_name': 'GAIN', 'batch_size': 111, 'hint_rate': 0.8138913918911751, 'alpha': 12, 'iterations': 3902, 'learning_rate': 0.00010668117181132865, 'p_miss': 0.28772759311623275}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:31:51,648] Trial 120 finished with value: 0.16398164468714269 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 699, 'learning_rate': 0.0023548691103984945, 'p_miss': 0.011995055866690446}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:31:52,460] Trial 124 finished with value: 0.1158570891870588 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 15, 'weights': 'uniform'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:31:53,457] Trial 125 finished with value: 0.1168827124852756 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 248, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:31:54,396] Trial 126 finished with value: 0.11279702793786232 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 73, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:31:55,196] Trial 127 finished with value: 0.11400476699194613 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 42, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:31:56,235] Trial 128 finished with value: 0.11626781692418123 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 225, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:31:57,044] Trial 129 finished with value: 0.11283477460604825 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 76, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:31:57,916] Trial 130 finished with value: 0.11592309177422803 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 211, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:10,530] Trial 131 finished with value: 0.21913582896649048 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:11,277] Trial 132 finished with value: 0.11314708718146253 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 64, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:12,265] Trial 133 finished with value: 0.1183552036120747 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 325, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:13,137] Trial 134 finished with value: 0.11571201216717639 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 200, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:13,388] Trial 135 finished with value: 0.137335969393306 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:14,289] Trial 136 finished with value: 0.11275176112023147 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 71, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:14,928] Trial 137 finished with value: 0.11311846383230639 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 59, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:15,972] Trial 138 finished with value: 0.11552490031142817 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 188, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:16,779] Trial 139 finished with value: 0.14506182876558676 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:17,873] Trial 140 finished with value: 0.12859192525622207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1172, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:18,801] Trial 141 finished with value: 0.1129556500558246 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 84, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:19,815] Trial 142 finished with value: 0.11500970700817703 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 169, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:20,986] Trial 143 finished with value: 0.1332355409264993 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1753, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:21,882] Trial 144 finished with value: 0.12090222632229075 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 469, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:22,652] Trial 145 finished with value: 0.11936806628929261 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 377, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:23,615] Trial 146 finished with value: 0.11314708718146253 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 64, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:24,367] Trial 147 finished with value: 0.1130922341518377 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 87, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:25,218] Trial 148 finished with value: 0.11494767355433981 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 166, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:26,052] Trial 149 finished with value: 0.11286380988647574 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 83, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:32:26,805] Trial 150 finished with value: 0.11973121162490134 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 288, 'weights': 'uniform'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:37:15,113] Trial 103 finished with value: 0.15847675075663542 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 940, 'learning_rate': 0.00010375290985919284, 'p_miss': 0.014086770954169298}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:37:15,978] Trial 152 finished with value: 0.11495085066957167 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 165, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:37:23,084] Trial 153 finished with value: 0.1299775018102923 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:37:23,941] Trial 154 finished with value: 0.11307021789546604 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 61, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:37:24,867] Trial 155 finished with value: 0.11500092132734592 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 168, 'weights': 'distance'}. Best is trial 115 with value: 0.11275176112023147.
running
[I 2024-10-30 18:37:25,634] Trial 156 finished with value: 0.1127476152132439 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 70, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:26,287] Trial 157 finished with value: 0.11313235563521847 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 63, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:27,211] Trial 158 finished with value: 0.1127476152132439 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 70, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:28,032] Trial 159 finished with value: 0.2069204644935488 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:28,977] Trial 160 finished with value: 0.11698548980067007 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 253, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:30,013] Trial 161 finished with value: 0.11387479350732783 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 132, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:31,129] Trial 162 finished with value: 0.1187536232619489 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 346, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:32,107] Trial 163 finished with value: 0.130524872321277 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1386, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:32,616] Trial 164 finished with value: 0.5056122662315273 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:33,368] Trial 165 finished with value: 0.11292655003402005 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 81, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:34,136] Trial 166 finished with value: 0.11352002463347707 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 115, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:35,030] Trial 167 finished with value: 0.11296367964739104 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 67, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:35,994] Trial 168 finished with value: 0.11605687840404748 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 216, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:36,744] Trial 169 finished with value: 0.11314708718146253 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 64, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:37,515] Trial 170 finished with value: 0.14506182876558676 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:37:38,383] Trial 171 finished with value: 0.11384856091760247 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 130, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:39:51,917] Trial 172 finished with value: 0.332603318975219 and parameters: {'model_name': 'GAIN', 'batch_size': 17, 'hint_rate': 0.681469920589362, 'alpha': 96, 'iterations': 104, 'learning_rate': 0.00025601025324332896, 'p_miss': 0.11089443171197261}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:39:52,708] Trial 173 finished with value: 0.11746766317291066 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 283, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:39:53,949] Trial 174 finished with value: 0.13686337087015776 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2685, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:39:58,319] Trial 175 finished with value: 0.14023282825442987 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 1, 'learning_rate': 0.015028301941358888, 'p_miss': 0.08911890611624756}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:39:59,141] Trial 176 finished with value: 0.1128961661302482 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 68, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:39:59,983] Trial 177 finished with value: 0.11490681594042189 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 162, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:40:00,759] Trial 178 finished with value: 0.11308780001463423 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:40:01,771] Trial 179 finished with value: 0.11603384176693239 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 214, 'weights': 'distance'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:40:02,541] Trial 180 finished with value: 0.11297421308786833 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 99, 'weights': 'uniform'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:40:03,327] Trial 181 finished with value: 0.11450039332159664 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 140, 'weights': 'uniform'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:40:04,149] Trial 182 finished with value: 0.1655094912627761 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'uniform'}. Best is trial 156 with value: 0.1127476152132439.
running
[I 2024-10-30 18:40:05,071] Trial 183 finished with value: 0.11263755257299686 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 95, 'weights': 'uniform'}. Best is trial 183 with value: 0.11263755257299686.
running
[I 2024-10-30 18:40:05,718] Trial 184 finished with value: 0.11691563802482974 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 194, 'weights': 'uniform'}. Best is trial 183 with value: 0.11263755257299686.
running
[I 2024-10-30 18:40:06,621] Trial 185 finished with value: 0.11333659583219768 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 113, 'weights': 'uniform'}. Best is trial 183 with value: 0.11263755257299686.
running
[I 2024-10-30 18:40:07,479] Trial 186 finished with value: 0.11190907253435134 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 84, 'weights': 'uniform'}. Best is trial 186 with value: 0.11190907253435134.
running
[I 2024-10-30 18:40:08,320] Trial 187 finished with value: 0.11129837315522413 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 65, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:09,308] Trial 188 finished with value: 0.11471398671864337 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 147, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:10,034] Trial 189 finished with value: 0.11839843853566101 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 240, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:10,811] Trial 190 finished with value: 0.2069204644935488 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:11,551] Trial 191 finished with value: 0.1122851594232829 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 88, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:12,372] Trial 192 finished with value: 0.13088294389913718 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 972, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:20,084] Trial 193 finished with value: 0.1275275680385416 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:20,976] Trial 194 finished with value: 0.11333659583219768 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 113, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:21,792] Trial 195 finished with value: 0.11691563802482974 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 194, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:22,707] Trial 196 finished with value: 0.11133259637607906 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 75, 'weights': 'uniform'}. Best is trial 187 with value: 0.11129837315522413.
running
[I 2024-10-30 18:40:23,621] Trial 197 finished with value: 0.11113454637172149 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 71, 'weights': 'uniform'}. Best is trial 197 with value: 0.11113454637172149.
running
[I 2024-10-30 18:40:24,311] Trial 198 finished with value: 0.11139700428781907 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 46, 'weights': 'uniform'}. Best is trial 197 with value: 0.11113454637172149.
running
[I 2024-10-30 18:40:25,045] Trial 199 finished with value: 0.11602646600960986 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 173, 'weights': 'uniform'}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 18:49:27,178] Trial 101 finished with value: 0.15673134223258472 and parameters: {'model_name': 'VAE', 'batch_size': 89, 'iterations': 1701, 'learning_rate': 0.00010303276571545096, 'p_miss': 0.01548661218339209}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 18:53:16,581] Trial 121 finished with value: 0.1609242310495996 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 1138, 'learning_rate': 0.002664035688908231, 'p_miss': 0.10749914587473383}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 18:53:53,947] Trial 122 finished with value: 0.16168595712249392 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 973, 'learning_rate': 0.002770945973169719, 'p_miss': 0.01816498573950326}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 18:56:04,403] Trial 72 finished with value: 0.3500135787537285 and parameters: {'model_name': 'GAIN', 'batch_size': 967, 'hint_rate': 0.9697359495253217, 'alpha': 0, 'iterations': 5587, 'learning_rate': 0.0061592511860678895, 'p_miss': 0.20095711502651484}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 18:59:16,282] Trial 73 finished with value: 0.34765576089120914 and parameters: {'model_name': 'GAIN', 'batch_size': 957, 'hint_rate': 0.9190053974528433, 'alpha': 3, 'iterations': 5817, 'learning_rate': 0.006967051467758919, 'p_miss': 0.011543545386383913}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:07:26,875] Trial 151 finished with value: 0.15778278638657356 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 1157, 'learning_rate': 0.0002838108897301692, 'p_miss': 0.10072751299400118}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:13:56,395] Trial 75 finished with value: 0.3469037007711281 and parameters: {'model_name': 'GAIN', 'batch_size': 964, 'hint_rate': 0.8973620198848331, 'alpha': 1, 'iterations': 6208, 'learning_rate': 0.008370622872642447, 'p_miss': 0.08686847923146679}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:15:46,915] Trial 123 finished with value: 0.15767727036537202 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 1245, 'learning_rate': 0.002420925567279956, 'p_miss': 0.09499898167917518}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:27:40,110] Trial 45 finished with value: 0.35534366743005263 and parameters: {'model_name': 'GAIN', 'batch_size': 987, 'hint_rate': 0.9898445912154186, 'alpha': 5, 'iterations': 8573, 'learning_rate': 0.00010448175587578101, 'p_miss': 0.17916111776323793}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:36:01,803] Trial 65 finished with value: 0.3544255974099532 and parameters: {'model_name': 'GAIN', 'batch_size': 809, 'hint_rate': 0.9695349282047151, 'alpha': 5, 'iterations': 9764, 'learning_rate': 0.008934089975803939, 'p_miss': 0.2101675278820424}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:36:28,954] Trial 70 finished with value: 0.36615998233230906 and parameters: {'model_name': 'GAIN', 'batch_size': 810, 'hint_rate': 0.9851486504001703, 'alpha': 3, 'iterations': 9804, 'learning_rate': 0.0063179712877075335, 'p_miss': 0.20575301055462333}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:37:17,017] Trial 69 finished with value: 0.3675312841429634 and parameters: {'model_name': 'GAIN', 'batch_size': 992, 'hint_rate': 0.9609325866215674, 'alpha': 3, 'iterations': 9862, 'learning_rate': 0.007653623220689893, 'p_miss': 0.20825922863365032}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:53:05,511] Trial 9 finished with value: 0.15411779892321067 and parameters: {'model_name': 'VAE', 'batch_size': 371, 'iterations': 7478, 'learning_rate': 0.05131313534818725, 'p_miss': 0.0806396748341046}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 19:55:30,147] Trial 33 finished with value: 0.15385109153282459 and parameters: {'model_name': 'VAE', 'batch_size': 864, 'iterations': 5965, 'learning_rate': 0.0003118015981795764, 'p_miss': 0.29325768668230145}. Best is trial 197 with value: 0.11113454637172149.
[I 2024-10-30 20:01:34,621] Trial 31 finished with value: 0.1535648957846435 and parameters: {'model_name': 'VAE', 'batch_size': 775, 'iterations': 8615, 'learning_rate': 0.00013217999238935275, 'p_miss': 0.24764130843822782}. Best is trial 197 with value: 0.11113454637172149.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.11113454637172149
{'model_name': 'KNNImputer', 'n_neighbors': 71, 'weights': 'uniform'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.5090228884631907
Generation:   4%|▍         | 1/25 [00:05<02:05,  5.24s/it]Generation:  2
Best f1_score score: 0.5090228884631907
Generation:   8%|▊         | 2/25 [00:41<08:54, 23.23s/it]Generation:  3
Best f1_score score: 0.509973462614649
Generation:  12%|█▏        | 3/25 [00:48<05:54, 16.13s/it]Generation:  4
Best f1_score score: 0.509973462614649
Generation:  16%|█▌        | 4/25 [00:59<04:57, 14.18s/it]Generation:  5
Best f1_score score: 0.509973462614649
Generation:  20%|██        | 5/25 [01:06<03:45, 11.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467b8d5d0> 
 l1_ratio must be specified when penalty is elasticnet. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1204, in fit
    raise ValueError("l1_ratio must be specified when penalty is elasticnet.")
ValueError: l1_ratio must be specified when penalty is elasticnet.

Generation:  6
Best f1_score score: 0.5168092790761756
Generation:  24%|██▍       | 6/25 [01:53<07:27, 23.54s/it]Generation:  7
Best f1_score score: 0.5168092790761756
Generation:  28%|██▊       | 7/25 [02:04<05:53, 19.62s/it]Generation:  8
Best f1_score score: 0.5168092790761756
Generation:  32%|███▏      | 8/25 [02:15<04:43, 16.66s/it]Generation:  9
Best f1_score score: 0.5168092790761756
Generation:  36%|███▌      | 9/25 [02:28<04:06, 15.43s/it]Generation:  10
Best f1_score score: 0.5168092790761756
Generation:  40%|████      | 10/25 [02:40<03:35, 14.40s/it]Generation:  11
Best f1_score score: 0.5168092790761756
Generation:  44%|████▍     | 11/25 [03:09<04:27, 19.08s/it]Generation:  12
Best f1_score score: 0.5168092790761756
Generation:  48%|████▊     | 12/25 [05:25<11:49, 54.56s/it]Generation:  13
Best f1_score score: 0.5168092790761756
Generation:  52%|█████▏    | 13/25 [06:19<10:51, 54.30s/it]Generation:  14
Best f1_score score: 0.5168092790761756
Generation:  56%|█████▌    | 14/25 [06:33<07:42, 42.08s/it]Generation:  15
Best f1_score score: 0.5168092790761756
Generation:  60%|██████    | 15/25 [06:47<05:38, 33.87s/it]Generation:  16
Best f1_score score: 0.5168092790761756
Generation:  64%|██████▍   | 16/25 [07:01<04:09, 27.69s/it]Generation:  17
Best f1_score score: 0.5168092790761756
Generation:  68%|██████▊   | 17/25 [07:13<03:04, 23.11s/it]Generation:  18
Best f1_score score: 0.5168092790761756
Generation:  72%|███████▏  | 18/25 [07:25<02:18, 19.79s/it]Generation:  19
Best f1_score score: 0.5168092790761756
Generation:  76%|███████▌  | 19/25 [09:17<04:44, 47.33s/it]Generation:  20
Best f1_score score: 0.5168092790761756
Generation:  80%|████████  | 20/25 [09:39<03:19, 39.81s/it]Generation:  21
Best f1_score score: 0.5172825062708495
Generation:  84%|████████▍ | 21/25 [09:55<02:10, 32.59s/it]Generation:  22
Best f1_score score: 0.5172825062708495
Generation:  88%|████████▊ | 22/25 [10:28<01:37, 32.67s/it]Generation:  23
Best f1_score score: 0.5172825062708495
Generation:  92%|█████████▏| 23/25 [11:56<01:39, 49.53s/it]Generation:  24
Best f1_score score: 0.5172825062708495
Generation:  96%|█████████▌| 24/25 [12:15<00:40, 40.28s/it]Generation:  25
Best f1_score score: 0.5172825062708495
Generation: 100%|██████████| 25/25 [12:36<00:00, 34.49s/it]Generation: 100%|██████████| 25/25 [12:39<00:00, 30.40s/it]
2024-10-30 20:14:26,799 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33213' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-86aa8685d8c9c936ccb0f184f266fb89', 'ndarray-2c00092ba1cd743626b416db9c976854'} (stimulus_id='handle-worker-cleanup-1730344466.799857')
Fitted
Pipeline(steps=[('decisiontreeclassifier',
                 DecisionTreeClassifier(class_weight='balanced', max_depth=16,
                                        max_features='sqrt', min_samples_leaf=3,
                                        min_samples_split=14))])
score start
train score: {'auroc': 0.6475384849870446, 'accuracy': 0.592267706302794, 'balanced_accuracy': 0.592267706302794, 'logloss': 0.623861137553735, 'f1': 0.5773108258890103}
original test score: {'auroc': 0.46067802327542584, 'accuracy': 0.4714285714285714, 'balanced_accuracy': 0.4714285714285714, 'logloss': 2.173845032664181, 'f1': 0.4551738405559004}
imputed test score: {'auroc': 0.4763366503626243, 'accuracy': 0.4818181818181818, 'balanced_accuracy': 0.4818181818181818, 'logloss': 1.9375222021256377, 'f1': 0.4610935995327128}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.5111852864262588
Generation:   4%|▍         | 1/25 [03:01<1:12:25, 181.05s/it]Generation:  2
Best f1_score score: 0.5111852864262588
Generation:   8%|▊         | 2/25 [03:14<31:30, 82.20s/it]   Generation:  3
Best f1_score score: 0.5167293938257239
Generation:  12%|█▏        | 3/25 [03:22<17:48, 48.57s/it]Generation:  4
Best f1_score score: 0.517897487057154
Generation:  16%|█▌        | 4/25 [03:52<14:28, 41.37s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742cba00> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  5
Best f1_score score: 0.517897487057154
Generation:  20%|██        | 5/25 [06:17<26:14, 78.71s/it]Generation:  6
Best f1_score score: 0.517897487057154
Generation:  24%|██▍       | 6/25 [09:18<35:52, 113.27s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554744db070> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.517897487057154
Generation:  28%|██▊       | 7/25 [12:18<40:34, 135.22s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455539f00> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742db460> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  8
Best f1_score score: 0.517897487057154
Generation:  32%|███▏      | 8/25 [12:54<29:18, 103.44s/it]Generation:  9
Best f1_score score: 0.517897487057154
Generation:  36%|███▌      | 9/25 [15:03<29:47, 111.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455148370> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.517897487057154
Generation:  40%|████      | 10/25 [18:05<33:18, 133.26s/it]Generation:  11
Best f1_score score: 0.517897487057154
Generation:  44%|████▍     | 11/25 [18:17<22:25, 96.10s/it] Generation:  12
Best f1_score score: 0.517897487057154
Generation:  48%|████▊     | 12/25 [19:10<17:59, 83.05s/it]Generation:  13
Best f1_score score: 0.517897487057154
Generation:  52%|█████▏    | 13/25 [19:40<13:25, 67.09s/it]Generation:  14
Best f1_score score: 0.517897487057154
Generation:  56%|█████▌    | 14/25 [20:14<10:28, 57.14s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554550a3f40> 

Generation:  15
Best f1_score score: 0.517897487057154
Generation:  60%|██████    | 15/25 [30:17<36:56, 221.61s/it]Generation:  16
Best f1_score score: 0.517897487057154
Generation:  64%|██████▍   | 16/25 [35:31<37:24, 249.36s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a141960> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.517897487057154
Generation:  68%|██████▊   | 17/25 [36:55<26:37, 199.71s/it]Generation:  18
Best f1_score score: 0.517897487057154
Generation:  72%|███████▏  | 18/25 [40:17<23:21, 200.25s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a674a00> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.517897487057154
Generation:  76%|███████▌  | 19/25 [48:48<29:22, 293.74s/it]Generation:  20
Best f1_score score: 0.5235228989220214
Generation:  80%|████████  | 20/25 [51:13<20:45, 249.09s/it]Generation:  21
Best f1_score score: 0.5235228989220214
Generation:  84%|████████▍ | 21/25 [57:39<19:20, 290.08s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a6c96c0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  22
Best f1_score score: 0.5235228989220214
Generation:  88%|████████▊ | 22/25 [1:00:45<12:56, 258.95s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452cc6020> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd5030> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.5235228989220214
Generation:  92%|█████████▏| 23/25 [1:01:30<06:29, 194.73s/it]Generation:  24
Best f1_score score: 0.5235228989220214
Generation:  96%|█████████▌| 24/25 [1:04:59<03:19, 199.07s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454c60f10> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  25
Best f1_score score: 0.5235228989220214
Generation: 100%|██████████| 25/25 [1:08:01<00:00, 193.73s/it]Generation: 100%|██████████| 25/25 [1:08:01<00:00, 163.25s/it]
2024-10-30 21:22:37,439 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45281' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-2c00092ba1cd743626b416db9c976854', 'DataFrame-40aedeed79a36176c30fc593c63db5f6'} (stimulus_id='handle-worker-cleanup-1730348557.4394307')
Fitted
Pipeline(steps=[('vaeimputer',
                 VAEImputer(batch_size=2, code_size=1,
                            decoder_hidden_sizes=[1, 2],
                            encoder_hidden_sizes=[2, 1], iterations=3,
                            learning_rate=0.0004006813683,
                            p_miss=0.1766864959154, split_size=1)),
                ('kneighborsclassifier',
                 KNeighborsClassifier(metric='euclidean', n_jobs=1,
                                      n_neighbors=13, p=1,
                                      weights='distance'))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.48836467989939714, 'accuracy': 0.4948018193632229, 'balanced_accuracy': 0.5016244314489928, 'logloss': 0.747424018308181, 'f1': 0.5071461978440286}
test score: {'auroc': 0.5298903693708888, 'accuracy': 0.4649350649350649, 'balanced_accuracy': 0.5103896103896104, 'logloss': 0.7852133197833296, 'f1': 0.4921658224410518}
failed on 
../data/c/871/class_full_MNAR_0.1_2
'numpy.ndarray' object has no attribute 'to_numpy'
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/ImputerExperiments/Locally_run_code/utils.py", line 33, in score
    this_auroc_score = sklearn.metrics.get_scorer("roc_auc_ovr")(est, X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 940, in predict_proba
    return self.fitted_pipeline_.predict_proba(X,**predict_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 720, in predict_proba
    Xt = transform.transform(Xt)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 688, in transform
    features = torch.from_numpy(X.to_numpy()) #X features
AttributeError: 'numpy.ndarray' object has no attribute 'to_numpy'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/ImputerExperiments/Locally_run_code/utils.py", line 686, in loop_through_tasks
    ori_test_score = score(tpot_space, X_test, y_test, r_or_c=r_or_c)
  File "/common/ketrong/tpotexp/tpot2/ImputerExperiments/Locally_run_code/utils.py", line 35, in score
    y_preds = est.predict(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 930, in predict
    preds = self.fitted_pipeline_.predict(X,**predict_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 600, in predict
    Xt = transform.transform(Xt)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 688, in transform
    features = torch.from_numpy(X.to_numpy()) #X features
AttributeError: 'numpy.ndarray' object has no attribute 'to_numpy'

full run takes
5.108612041870753
hours
DONE
