Run: 29
/cm/local/apps/slurm/var/spool/job1046799/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1496/1496.pkl
working on 
../data/c/1496/class_full_MAR_0.01_2
3.320375442504883
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-12 19:49:07,115] A new study created in memory with name: no-name-9871b7af-cfde-478c-b7cb-ca6b4b876017
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-12 19:49:07,542] Trial 7 finished with value: 0.11389964789434663 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 7 with value: 0.11389964789434663.
[I 2024-11-12 19:49:07,678] Trial 8 finished with value: 0.5378838003726871 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.11389964789434663.
running
running
[I 2024-11-12 19:49:07,903] Trial 13 finished with value: 0.11389964789434663 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 7 with value: 0.11389964789434663.
running
[I 2024-11-12 19:49:08,091] Trial 16 finished with value: 0.11389380276282915 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11389380276282915.
running
[I 2024-11-12 19:49:08,642] Trial 19 finished with value: 0.11389380276282915 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.11389380276282915.
running
[I 2024-11-12 19:49:12,556] Trial 5 finished with value: 0.11398326802907328 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3069, 'weights': 'distance'}. Best is trial 16 with value: 0.11389380276282915.
running
[I 2024-11-12 19:49:12,845] Trial 4 finished with value: 0.11405696328716623 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2394, 'weights': 'distance'}. Best is trial 16 with value: 0.11389380276282915.
running
[I 2024-11-12 19:49:13,329] Trial 14 finished with value: 0.1139297733536283 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3397, 'weights': 'distance'}. Best is trial 16 with value: 0.11389380276282915.
running
[I 2024-11-12 19:49:19,365] Trial 22 finished with value: 0.11385997605777787 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3881, 'weights': 'distance'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:49:23,789] Trial 10 finished with value: 0.13888997661890584 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 1, 'learning_rate': 0.005010470401082993, 'p_miss': 0.24532679833704576}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:49:25,161] Trial 12 finished with value: 0.262376534067557 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.6888027489648597, 'alpha': 40, 'iterations': 1, 'learning_rate': 0.010818205872105403, 'p_miss': 0.11962209985994335}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:49:27,354] Trial 15 finished with value: 0.1333974504016852 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 1, 'learning_rate': 0.008775643073050574, 'p_miss': 0.04295785208776202}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:49:27,759] Trial 1 finished with value: 0.271226711134127 and parameters: {'model_name': 'GAIN', 'batch_size': 26, 'hint_rate': 0.5952305927326592, 'alpha': 96, 'iterations': 2, 'learning_rate': 0.00010598421210371727, 'p_miss': 0.2201632595373865}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:49:29,860] Trial 18 finished with value: 0.11409524045116497 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:49:50,799] Trial 0 finished with value: 0.11444383871540291 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:49:57,627] Trial 30 finished with value: 0.11389964789434663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5523, 'weights': 'uniform'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:49:58,724] Trial 31 finished with value: 0.11389380276282915 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:04,457] Trial 32 finished with value: 0.11419447501371256 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 498, 'weights': 'uniform'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:08,471] Trial 29 finished with value: 0.11408044233298882 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 20, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:10,499] Trial 27 finished with value: 0.1568548076582429 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:10,965] Trial 21 finished with value: 0.11445465557921701 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 17, 'imputation_order': 'ascending'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:11,734] Trial 36 finished with value: 0.11389380276282915 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:13,062] Trial 17 finished with value: 0.12151010559359243 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'roman'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:14,075] Trial 37 finished with value: 0.3541227176894651 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:14,951] Trial 39 finished with value: 0.11389380276282915 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:15,309] Trial 38 finished with value: 0.3541227176894651 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:16,047] Trial 40 finished with value: 0.11389380276282915 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:23,428] Trial 25 finished with value: 0.11455505503318546 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:27,201] Trial 26 finished with value: 0.11426405068371996 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:41,624] Trial 9 finished with value: 0.12233446318999042 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:46,426] Trial 23 finished with value: 0.12141878982233105 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 18, 'imputation_order': 'roman'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:47,226] Trial 46 finished with value: 0.11389380276282915 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:50:48,822] Trial 11 finished with value: 0.11408956902652345 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 17, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:51:00,673] Trial 28 finished with value: 0.12148447382246359 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 19, 'imputation_order': 'arabic'}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:52:55,326] Trial 3 finished with value: 0.11762097419974545 and parameters: {'model_name': 'VAE', 'batch_size': 113, 'iterations': 61, 'learning_rate': 0.008550396198589659, 'p_miss': 0.07742135628259812}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:53:31,904] Trial 24 finished with value: 0.13753630519050822 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 81, 'learning_rate': 0.025488820242391276, 'p_miss': 0.17085937828352143}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 19:56:54,669] Trial 20 finished with value: 0.13079088869236513 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 142, 'learning_rate': 0.00486198939315897, 'p_miss': 0.16675145372330372}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 20:16:50,139] Trial 6 finished with value: 0.2539682507875728 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.7353116761748594, 'alpha': 79, 'iterations': 1092, 'learning_rate': 0.044895284171626505, 'p_miss': 0.2643971190953299}. Best is trial 22 with value: 0.11385997605777787.
running
[I 2024-11-12 20:16:56,323] Trial 53 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5501, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:02,415] Trial 54 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5517, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:08,664] Trial 55 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5810, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:15,286] Trial 56 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5681, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:21,523] Trial 57 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5845, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:27,994] Trial 58 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5920, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:34,290] Trial 59 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5209, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:40,565] Trial 60 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4949, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:46,920] Trial 61 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5799, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:53,391] Trial 62 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4652, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:17:59,440] Trial 63 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4733, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:24:28,545] Trial 50 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.08432763394542642, 'alpha': 1, 'iterations': 6520, 'learning_rate': 0.09432704233643534, 'p_miss': 0.19016034836062545}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:24:35,014] Trial 65 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5751, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:24:41,489] Trial 66 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5915, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:24:47,768] Trial 67 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5853, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:24:54,423] Trial 68 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5137, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:25:00,646] Trial 69 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5357, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:25:07,505] Trial 70 finished with value: 0.11383676296446543 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4346, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:25:13,871] Trial 71 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5324, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:25:18,167] Trial 72 finished with value: 0.11389964789434663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5912, 'weights': 'uniform'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:25:46,231] Trial 73 finished with value: 0.26736835530239905 and parameters: {'model_name': 'GAIN', 'batch_size': 583, 'hint_rate': 0.1936414243761312, 'alpha': 4, 'iterations': 11, 'learning_rate': 0.0007257165434204654, 'p_miss': 0.2985466298670753}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:25:52,311] Trial 74 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5217, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:25:57,925] Trial 75 finished with value: 0.11411901623166483 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2106, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:26:04,494] Trial 76 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5352, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:26:10,747] Trial 77 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5423, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:26:16,755] Trial 78 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4947, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 20:26:23,067] Trial 79 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5571, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:20:03,121] Trial 34 finished with value: 0.2659832001752414 and parameters: {'model_name': 'GAIN', 'batch_size': 757, 'hint_rate': 0.012579618807476767, 'alpha': 11, 'iterations': 3398, 'learning_rate': 0.09981697653753735, 'p_miss': 0.02324187460595109}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:20:09,663] Trial 81 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5880, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:35:05,642] Trial 2 finished with value: 0.11754617333454209 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:50:23,005] Trial 82 finished with value: 0.11664905728842342 and parameters: {'model_name': 'VAE', 'batch_size': 141, 'iterations': 506, 'learning_rate': 0.0009780382440511062, 'p_miss': 0.11702783070499943}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:50:31,052] Trial 84 finished with value: 0.11382891955108088 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4454, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:50:37,987] Trial 85 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5463, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:50:44,990] Trial 86 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4921, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:50:51,580] Trial 87 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5056, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:50:58,380] Trial 88 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5535, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:51:04,728] Trial 89 finished with value: 0.11413309993349144 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1955, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:51:11,450] Trial 90 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5048, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:52:14,986] Trial 91 finished with value: 0.1422357207853468 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 13, 'learning_rate': 0.00010212721858196323, 'p_miss': 0.11023768506382164}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:52:21,567] Trial 92 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5586, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:52:27,177] Trial 93 finished with value: 0.11392169740223808 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3727, 'weights': 'uniform'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:52:33,798] Trial 94 finished with value: 0.11400743878708339 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2826, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:52:54,406] Trial 95 finished with value: 0.26679700396780814 and parameters: {'model_name': 'GAIN', 'batch_size': 122, 'hint_rate': 0.9687048102027237, 'alpha': 54, 'iterations': 8, 'learning_rate': 0.001062809735097607, 'p_miss': 0.07635361280641063}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:53:01,628] Trial 96 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5643, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:53:08,558] Trial 97 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5648, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:53:15,340] Trial 98 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5835, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:53:22,254] Trial 99 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5256, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:53:27,523] Trial 100 finished with value: 0.11389964789434663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5655, 'weights': 'uniform'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:53:34,714] Trial 101 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4827, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:53:41,362] Trial 102 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5891, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:53:47,137] Trial 103 finished with value: 0.11417153565902867 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 964, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 22:55:46,191] Trial 43 finished with value: 0.3366850884718247 and parameters: {'model_name': 'GAIN', 'batch_size': 926, 'hint_rate': 0.01571923010917492, 'alpha': 2, 'iterations': 4006, 'learning_rate': 0.0002130980927040055, 'p_miss': 0.29794050304138486}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:01:46,963] Trial 49 finished with value: 0.3016581979371146 and parameters: {'model_name': 'GAIN', 'batch_size': 818, 'hint_rate': 0.10635050429519771, 'alpha': 0, 'iterations': 4191, 'learning_rate': 0.08993304289733962, 'p_miss': 0.29792618659673437}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:01:54,074] Trial 106 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4566, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:02:01,125] Trial 107 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5230, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:02:08,166] Trial 108 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4707, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:02:15,645] Trial 109 finished with value: 0.11384158692942672 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4192, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:11:37,662] Trial 33 finished with value: 0.1173598997583446 and parameters: {'model_name': 'VAE', 'batch_size': 637, 'iterations': 2695, 'learning_rate': 0.08415691168030642, 'p_miss': 0.016101537914189307}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:11:44,851] Trial 111 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5647, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:11:52,057] Trial 112 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5380, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:11:59,365] Trial 113 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5147, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:12:04,027] Trial 114 finished with value: 0.11389964789434663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5759, 'weights': 'uniform'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:12:11,004] Trial 115 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5417, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:12:18,531] Trial 116 finished with value: 0.11384134035105191 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4186, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:12:25,499] Trial 117 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4755, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:12:32,683] Trial 118 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5917, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:12:39,738] Trial 119 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5417, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:16:17,323] Trial 83 finished with value: 0.11718639907452247 and parameters: {'model_name': 'VAE', 'batch_size': 104, 'iterations': 648, 'learning_rate': 0.001280239716844049, 'p_miss': 0.11176530120054681}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:16:24,473] Trial 121 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5046, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:25:58,046] Trial 104 finished with value: 0.11760262772411142 and parameters: {'model_name': 'VAE', 'batch_size': 227, 'iterations': 467, 'learning_rate': 0.0002962303892311481, 'p_miss': 0.29842943393198373}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:29:44,789] Trial 110 finished with value: 0.11715470552813334 and parameters: {'model_name': 'VAE', 'batch_size': 300, 'iterations': 392, 'learning_rate': 0.001929037005812346, 'p_miss': 0.19901387555101582}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:34:26,231] Trial 120 finished with value: 0.11780803155743402 and parameters: {'model_name': 'VAE', 'batch_size': 57, 'iterations': 380, 'learning_rate': 0.002265048600373766, 'p_miss': 0.21033149143153188}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:34:29,527] Trial 105 finished with value: 0.11720448680550662 and parameters: {'model_name': 'VAE', 'batch_size': 308, 'iterations': 570, 'learning_rate': 0.0018746641247786707, 'p_miss': 0.2158689612308604}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:34:36,802] Trial 126 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5731, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:34:43,546] Trial 127 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5546, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:34:49,648] Trial 128 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5262, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-12 23:39:18,932] Trial 47 finished with value: 0.26804946406457075 and parameters: {'model_name': 'GAIN', 'batch_size': 713, 'hint_rate': 0.05851118096315894, 'alpha': 5, 'iterations': 5278, 'learning_rate': 0.00024999016344389927, 'p_miss': 0.015030053691649031}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:00:26,601] Trial 122 finished with value: 0.11802361703311437 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:00:33,541] Trial 131 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5915, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:00:39,834] Trial 132 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5667, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:00:46,429] Trial 133 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5448, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:00:52,905] Trial 134 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4963, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:00:59,458] Trial 135 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5728, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:06,251] Trial 136 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5752, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:12,956] Trial 137 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5447, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:20,017] Trial 138 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5187, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:26,773] Trial 139 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5780, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:33,691] Trial 140 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5533, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:38,934] Trial 141 finished with value: 0.11389964789434663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4651, 'weights': 'uniform'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:45,167] Trial 142 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5891, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:52,138] Trial 143 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5605, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:52,653] Trial 144 finished with value: 0.5378838003726871 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:01:59,537] Trial 145 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5312, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:02:06,308] Trial 146 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5768, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:02:13,532] Trial 147 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5920, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:02:20,251] Trial 148 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5653, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:02:27,300] Trial 149 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4906, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:10:10,917] Trial 123 finished with value: 0.11795551429959153 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:10:18,125] Trial 151 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5490, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:10:25,252] Trial 152 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5078, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:04,586] Trial 153 finished with value: 0.2565279312342703 and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.35608680010885835, 'alpha': 31, 'iterations': 26, 'learning_rate': 0.01715872973742122, 'p_miss': 0.2603535451622383}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:11,021] Trial 154 finished with value: 0.11398454317225168 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3028, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:18,258] Trial 155 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5574, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:25,190] Trial 156 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5272, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:32,298] Trial 157 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5774, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:33,433] Trial 51 finished with value: 0.3317597393030196 and parameters: {'model_name': 'GAIN', 'batch_size': 440, 'hint_rate': 0.040449746980942336, 'alpha': 7, 'iterations': 9168, 'learning_rate': 0.0003947050211549185, 'p_miss': 0.2942812651120126}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:39,854] Trial 158 finished with value: 0.11382708157845242 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4478, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:40,679] Trial 159 finished with value: 0.11394234149634459 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3274, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:45,662] Trial 161 finished with value: 0.11389964789434663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5374, 'weights': 'uniform'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:46,925] Trial 160 finished with value: 0.11402041893688793 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2765, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:52,466] Trial 162 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5123, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:53,958] Trial 163 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4832, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:11:59,323] Trial 164 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4868, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:12:01,037] Trial 165 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5794, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:12:06,361] Trial 166 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5596, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:12:08,247] Trial 167 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5587, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:12:13,643] Trial 168 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5338, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:12:15,739] Trial 169 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5273, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:12:19,907] Trial 170 finished with value: 0.11415988791955363 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1725, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:12:22,815] Trial 171 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5796, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:14:29,613] Trial 124 finished with value: 0.11727367790623233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:14:29,998] Trial 174 finished with value: 0.5378838003726871 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:14:37,471] Trial 175 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5475, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:14:44,520] Trial 176 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5028, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:14:51,315] Trial 177 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5188, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:14:57,616] Trial 178 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5685, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:04,968] Trial 179 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5831, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:12,339] Trial 180 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5488, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:17,570] Trial 181 finished with value: 0.11389964789434663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5370, 'weights': 'uniform'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:25,244] Trial 182 finished with value: 0.11388719913467069 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3714, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:32,114] Trial 183 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5717, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:38,964] Trial 184 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4647, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:46,589] Trial 185 finished with value: 0.11383632754670325 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4303, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:53,071] Trial 186 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4998, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:15:59,914] Trial 187 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5166, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:16:06,655] Trial 188 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5901, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:16:13,523] Trial 189 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5645, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:16:23,453] Trial 190 finished with value: 0.2624001828337651 and parameters: {'model_name': 'GAIN', 'batch_size': 54, 'hint_rate': 0.9732951936899131, 'alpha': 64, 'iterations': 4, 'learning_rate': 0.02824671107144695, 'p_miss': 0.14249620216718623}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:16:30,663] Trial 191 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5523, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:16:37,645] Trial 192 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5389, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:16:44,420] Trial 193 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4770, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:18:08,337] Trial 194 finished with value: 0.16270812912432375 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:18:15,458] Trial 195 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5720, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:18:22,677] Trial 196 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5249, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:18:29,348] Trial 197 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5810, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:18:36,446] Trial 198 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5917, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
running
[I 2024-11-13 01:18:43,694] Trial 199 finished with value: 0.11382466233286644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5099, 'weights': 'distance'}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 01:19:10,645] Trial 125 finished with value: 0.11801827549027126 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 01:19:38,913] Trial 129 finished with value: 0.11847567905787212 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 01:23:57,846] Trial 130 finished with value: 0.11858153273973537 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:26:27,988] Trial 150 finished with value: 0.11778410307705242 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:32:10,095] Trial 52 finished with value: 0.30964543243818005 and parameters: {'model_name': 'GAIN', 'batch_size': 917, 'hint_rate': 0.017442808110510855, 'alpha': 10, 'iterations': 9121, 'learning_rate': 0.0004595152354118248, 'p_miss': 0.29598710513304266}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:34:29,231] Trial 172 finished with value: 0.11800274835065716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:34:50,647] Trial 173 finished with value: 0.11791614031049749 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:38:58,248] Trial 35 finished with value: 0.2667526179893 and parameters: {'model_name': 'GAIN', 'batch_size': 889, 'hint_rate': 0.04742327326902601, 'alpha': 1, 'iterations': 9301, 'learning_rate': 0.07817480933837843, 'p_miss': 0.017151420515083143}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:39:05,928] Trial 48 finished with value: 0.26811610194679875 and parameters: {'model_name': 'GAIN', 'batch_size': 965, 'hint_rate': 0.018593848860719797, 'alpha': 3, 'iterations': 9270, 'learning_rate': 0.09537836871622966, 'p_miss': 0.012365540830303862}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:49:55,033] Trial 45 finished with value: 0.2679135031607533 and parameters: {'model_name': 'GAIN', 'batch_size': 964, 'hint_rate': 0.1339834379028182, 'alpha': 4, 'iterations': 9920, 'learning_rate': 0.07139252139447108, 'p_miss': 0.011510499123332407}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:53:01,367] Trial 64 finished with value: 0.32380331221319925 and parameters: {'model_name': 'GAIN', 'batch_size': 895, 'hint_rate': 0.08655580229519894, 'alpha': 18, 'iterations': 9949, 'learning_rate': 0.00060796067819109, 'p_miss': 0.29325023618095325}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 02:59:02,483] Trial 44 finished with value: 0.11761261837634554 and parameters: {'model_name': 'VAE', 'batch_size': 507, 'iterations': 7781, 'learning_rate': 0.0945704113381155, 'p_miss': 0.29905619219581314}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 03:06:24,373] Trial 41 finished with value: 0.11725639975338642 and parameters: {'model_name': 'VAE', 'batch_size': 734, 'iterations': 8326, 'learning_rate': 0.00024827401992155295, 'p_miss': 0.011618140034504537}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 03:09:58,216] Trial 80 finished with value: 0.11731720256291137 and parameters: {'model_name': 'VAE', 'batch_size': 893, 'iterations': 8543, 'learning_rate': 0.001191041738206799, 'p_miss': 0.018256399825237496}. Best is trial 53 with value: 0.11382466233286644.
[I 2024-11-13 03:14:28,662] Trial 42 finished with value: 0.11800256703321699 and parameters: {'model_name': 'VAE', 'batch_size': 892, 'iterations': 8735, 'learning_rate': 0.09032555355136099, 'p_miss': 0.29725423679338264}. Best is trial 53 with value: 0.11382466233286644.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
dtype: int64
0.11382466233286644
{'model_name': 'KNNImputer', 'n_neighbors': 5501, 'weights': 'distance'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9641773172820012
Generation:   4%|▍         | 1/25 [00:41<16:33, 41.38s/it]Generation:  2
Best f1_score score: 0.9716136726672305
Generation:   8%|▊         | 2/25 [01:53<22:52, 59.66s/it]Generation:  3
Best f1_score score: 0.9780328683697977
Generation:  12%|█▏        | 3/25 [11:23<1:47:12, 292.39s/it]Generation:  4
Best f1_score score: 0.9780328683697977
Generation:  16%|█▌        | 4/25 [12:35<1:11:57, 205.62s/it]Generation:  5
Best f1_score score: 0.9780328683697977
Generation:  20%|██        | 5/25 [15:54<1:07:45, 203.26s/it]Generation:  6
Best f1_score score: 0.9780328683697977
Generation:  24%|██▍       | 6/25 [16:19<45:07, 142.51s/it]  Generation:  7
Best f1_score score: 0.9780328683697977
Generation:  28%|██▊       | 7/25 [17:12<34:01, 113.43s/it]Generation:  8
Best f1_score score: 0.9780328683697977
Generation:  32%|███▏      | 8/25 [18:54<31:02, 109.58s/it]Generation:  9
Best f1_score score: 0.9780328683697977
Generation:  36%|███▌      | 9/25 [19:18<22:07, 82.98s/it] Generation:  10
Best f1_score score: 0.9780328683697977
Generation:  40%|████      | 10/25 [20:42<20:46, 83.07s/it]Generation:  11
Best f1_score score: 0.9780328683697977
Generation:  44%|████▍     | 11/25 [21:16<15:52, 68.02s/it]Generation:  12
Best f1_score score: 0.9780328683697977
Generation:  48%|████▊     | 12/25 [21:52<12:39, 58.41s/it]Generation:  13
Best f1_score score: 0.9780328683697977
Generation:  52%|█████▏    | 13/25 [25:43<22:07, 110.61s/it]Generation:  14
Best f1_score score: 0.9780328683697977
Generation:  56%|█████▌    | 14/25 [26:12<15:47, 86.16s/it] Generation:  15
Best f1_score score: 0.9780328683697977
Generation:  60%|██████    | 15/25 [26:42<11:31, 69.12s/it]Generation:  16
Best f1_score score: 0.9780328683697977
Generation:  64%|██████▍   | 16/25 [28:30<12:06, 80.77s/it]Generation:  17
Best f1_score score: 0.9780336027928357
Generation:  68%|██████▊   | 17/25 [29:08<09:04, 68.06s/it]Generation:  18
Best f1_score score: 0.9780336027928357
Generation:  72%|███████▏  | 18/25 [29:55<07:10, 61.51s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547473b640> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  19
Best f1_score score: 0.9780336027928357
Generation:  76%|███████▌  | 19/25 [30:33<05:28, 54.68s/it]Generation:  20
Best f1_score score: 0.9780336027928357
Generation:  80%|████████  | 20/25 [31:01<03:53, 46.62s/it]Generation:  21
Best f1_score score: 0.9780336027928357
Generation:  84%|████████▍ | 21/25 [31:40<02:56, 44.21s/it]Generation:  22
Best f1_score score: 0.9780336027928357
Generation:  88%|████████▊ | 22/25 [32:02<01:53, 37.77s/it]Generation:  23
Best f1_score score: 0.9780336027928357
Generation:  92%|█████████▏| 23/25 [32:57<01:25, 42.76s/it]Generation:  24
Best f1_score score: 0.9780336027928357
Generation:  96%|█████████▌| 24/25 [33:37<00:42, 42.01s/it]Generation:  25
Best f1_score score: 0.9780336027928357
Generation: 100%|██████████| 25/25 [34:59<00:00, 54.10s/it]Generation: 100%|██████████| 25/25 [35:03<00:00, 84.14s/it]
2024-11-13 03:49:44,042 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:41499' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-c98b9dab6baf8a17ba7179a5c959e14d', 'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8'} (stimulus_id='handle-worker-cleanup-1731498584.0426826')
Fitted
Pipeline(steps=[('svc',
                 SVC(C=7.1189906692517, class_weight='balanced',
                     gamma=1.0975623065649, max_iter=3000, probability=True))])
score start
train score: {'auroc': 0.9983734286036174, 'accuracy': 0.9846283783783784, 'balanced_accuracy': 0.9845623535586357, 'logloss': 0.044831353138172166, 'f1': 0.9846242504100879}
original test score: {'auroc': 0.9973262764564397, 'accuracy': 0.9783783783783784, 'balanced_accuracy': 0.9783125224864899, 'logloss': 0.059106256520136735, 'f1': 0.9783726911386486}
imputed test score: {'auroc': 0.9972988817480015, 'accuracy': 0.9777027027027027, 'balanced_accuracy': 0.9776303942463807, 'logloss': 0.05989943362783119, 'f1': 0.9776963386649313}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd47f0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.9322141069299942
Generation:   4%|▍         | 1/25 [02:20<56:07, 140.29s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1c220> 

Generation:  2
Best f1_score score: 0.9570836009719376
Generation:   8%|▊         | 2/25 [12:24<2:38:23, 413.21s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554570ddfc0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474664700> 

Generation:  3
Best f1_score score: 0.959278199455218
Generation:  12%|█▏        | 3/25 [22:30<3:03:42, 501.04s/it]Generation:  4
Best f1_score score: 0.9651723524240939
Generation:  16%|█▌        | 4/25 [23:17<1:52:44, 322.12s/it]Generation:  5
Best f1_score score: 0.9780328683697977
Generation:  20%|██        | 5/25 [23:25<1:09:35, 208.80s/it]Generation:  6
Best f1_score score: 0.9780328683697977
Generation:  24%|██▍       | 6/25 [25:24<56:24, 178.14s/it]  Generation:  7
Best f1_score score: 0.9780328683697977
Generation:  28%|██▊       | 7/25 [25:46<38:06, 127.01s/it]Generation:  8
Best f1_score score: 0.9780328683697977
Generation:  32%|███▏      | 8/25 [29:20<43:53, 154.91s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1c820> 

Generation:  9
Best f1_score score: 0.9780328683697977
Generation:  36%|███▌      | 9/25 [39:27<1:18:58, 296.16s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a8960b0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.9780328683697977
Generation:  40%|████      | 10/25 [39:51<53:00, 212.02s/it] Generation:  11
Best f1_score score: 0.9780328683697977
Generation:  44%|████▍     | 11/25 [40:30<37:06, 159.04s/it]Generation:  12
Best f1_score score: 0.9780328683697977
Generation:  48%|████▊     | 12/25 [41:20<27:19, 126.12s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554550a99c0> 

Generation:  13
Best f1_score score: 0.9780328683697977
Generation:  52%|█████▏    | 13/25 [51:27<54:20, 271.70s/it]Generation:  14
Best f1_score score: 0.978370501359884
Generation:  56%|█████▌    | 14/25 [52:23<37:50, 206.42s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457036410> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745c9ea0> 

Generation:  15
Best f1_score score: 0.978370501359884
Generation:  60%|██████    | 15/25 [1:02:30<54:31, 327.18s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15544fc34160> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456b63010> 

Generation:  16
Best f1_score score: 0.978370501359884
Generation:  64%|██████▍   | 16/25 [1:12:37<1:01:42, 411.37s/it]Generation:  17
Best f1_score score: 0.978370501359884
Generation:  68%|██████▊   | 17/25 [1:17:13<49:27, 370.93s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459fe4a90> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454a801f0> 

Generation:  18
Best f1_score score: 0.978370501359884
Generation:  72%|███████▏  | 18/25 [1:27:21<51:34, 442.04s/it]Generation:  19
Best f1_score score: 0.978370501359884
Generation:  76%|███████▌  | 19/25 [1:28:20<32:41, 326.86s/it]Generation:  20
Best f1_score score: 0.9785403137921007
Generation:  80%|████████  | 20/25 [1:28:30<19:19, 231.87s/it]Generation:  21
Best f1_score score: 0.9785403137921007
Generation:  84%|████████▍ | 21/25 [1:29:13<11:41, 175.29s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474143700> 

Generation:  22
Best f1_score score: 0.9785403137921007
Generation:  88%|████████▊ | 22/25 [1:39:22<15:16, 305.36s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b7ea7d0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d399c0> 
 LinearModel.predict() got an unexpected keyword argument 'return_std' 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/impute/_iterative.py", line 789, in fit_transform
    Xt, estimator = self._impute_one_feature(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/impute/_iterative.py", line 431, in _impute_one_feature
    mus, sigmas = estimator.predict(X_test, return_std=True)
TypeError: LinearModel.predict() got an unexpected keyword argument 'return_std'

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d39630> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456a89de0> 

Generation:  23
Best f1_score score: 0.9785403137921007
Generation:  92%|█████████▏| 23/25 [1:49:27<13:10, 395.27s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545285cb80> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459e84f70> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fe52aa0> 

Generation:  24
Best f1_score score: 0.9785403137921007
Generation:  96%|█████████▌| 24/25 [1:59:36<07:39, 459.39s/it]Generation:  25
Best f1_score score: 0.9785403137921007
Generation: 100%|██████████| 25/25 [2:00:15<00:00, 333.16s/it]Generation: 100%|██████████| 25/25 [2:00:15<00:00, 288.61s/it]
2024-11-13 05:50:09,557 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42011' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-4cb56bbbe4ce60b80e8b59051bc5b8d8', 'DataFrame-f96ce8e81fdfb48eaaec20a36e2c8c06'} (stimulus_id='handle-worker-cleanup-1731505809.557317')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=BayesianRidge(),
                                  n_nearest_features=30,
                                  sample_posterior=True)),
                ('gaussiannb', GaussianNB())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9975087774929091, 'accuracy': 0.9787162162162162, 'balanced_accuracy': 0.9786380380969275, 'logloss': 0.05936312042078175, 'f1': 0.9790470805888191}
test score: {'auroc': 0.9970231083497245, 'accuracy': 0.9824324324324324, 'balanced_accuracy': 0.9816720268979511, 'logloss': 0.05467656638701253, 'f1': 0.9817497496071126}
original test score: {'auroc': 0.997466902626422, 'accuracy': 0.9824324324324324, 'balanced_accuracy': 0.9823413709407891, 'logloss': 0.053073166304518464, 'f1': 0.9824261423007504}
score end
1496
lvl
0.01
type
MAR
num_run
2
class_full
finished
all finished
full run takes
10.022170728842417
hours
DONE
