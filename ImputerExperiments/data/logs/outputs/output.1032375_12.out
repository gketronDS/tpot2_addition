Run: 12
/cm/local/apps/slurm/var/spool/job1032375/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/871/871.pkl
working on 
../data/c/871/class_full_MNAR_0.5_1
3.48954701423645
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-30 07:54:06,505] A new study created in memory with name: no-name-1de5ffe0-1f21-4bad-bbb0-431b82e81abe
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-30 07:54:06,778] Trial 15 finished with value: 0.2954977592622293 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 15 with value: 0.2954977592622293.
running
[I 2024-10-30 07:54:07,064] Trial 6 finished with value: 0.3362504633783579 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 15 with value: 0.2954977592622293.
running
[I 2024-10-30 07:54:07,723] Trial 8 finished with value: 0.18465265029638586 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2746, 'weights': 'uniform'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:07,905] Trial 0 finished with value: 0.18580634663772572 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1797, 'weights': 'uniform'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:08,108] Trial 4 finished with value: 0.1863489762498924 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 858, 'weights': 'uniform'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:08,567] Trial 17 finished with value: 0.18489847586248742 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2315, 'weights': 'uniform'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:08,904] Trial 21 finished with value: 0.2954977592622293 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:09,455] Trial 20 finished with value: 0.1884117820397448 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1469, 'weights': 'distance'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:09,846] Trial 3 finished with value: 0.19133849120173332 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:10,331] Trial 22 finished with value: 0.18584113944594555 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1765, 'weights': 'uniform'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:11,891] Trial 11 finished with value: 0.1907887674413089 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:14,486] Trial 18 finished with value: 0.19156634508649048 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:15,237] Trial 13 finished with value: 0.18919614387133862 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:15,970] Trial 16 finished with value: 0.1995115595408842 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:16,779] Trial 19 finished with value: 0.33274947827438506 and parameters: {'model_name': 'GAIN', 'batch_size': 184, 'hint_rate': 0.8753385856210586, 'alpha': 17, 'iterations': 1, 'learning_rate': 0.00010216551492611684, 'p_miss': 0.05756658974605265}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:18,103] Trial 12 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.0432166941099766, 'alpha': 56, 'iterations': 12, 'learning_rate': 0.0002078983572564618, 'p_miss': 0.11850834829808718}. Best is trial 8 with value: 0.18465265029638586.
running
[I 2024-10-30 07:54:20,184] Trial 28 finished with value: 0.10176796332988387 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 1, 'learning_rate': 0.0022399129994842876, 'p_miss': 0.19696045766028447}. Best is trial 28 with value: 0.10176796332988387.
running
[I 2024-10-30 07:54:25,427] Trial 5 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.640731991923779, 'alpha': 67, 'iterations': 37, 'learning_rate': 0.005519175034120581, 'p_miss': 0.1529191216870084}. Best is trial 28 with value: 0.10176796332988387.
running
[I 2024-10-30 07:54:32,773] Trial 25 finished with value: 0.10335908340504776 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.003894457840460079, 'p_miss': 0.2343946153988849}. Best is trial 28 with value: 0.10176796332988387.
running
[I 2024-10-30 07:54:33,691] Trial 29 finished with value: 0.10062975218202153 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 5, 'learning_rate': 0.0005320088622453955, 'p_miss': 0.19572453326778172}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 07:54:36,468] Trial 34 finished with value: 0.11022520630297854 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 1, 'learning_rate': 0.08691197536303616, 'p_miss': 0.2899173509475054}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 07:54:54,017] Trial 10 finished with value: 0.21215009588382197 and parameters: {'model_name': 'VAE', 'batch_size': 58, 'iterations': 7, 'learning_rate': 0.033335274977550164, 'p_miss': 0.20755540910026155}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 07:54:57,362] Trial 36 finished with value: 0.10378615475399318 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 4, 'learning_rate': 0.0022154202620937613, 'p_miss': 0.24007170108563702}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 07:59:45,293] Trial 23 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.020541615832903655, 'alpha': 43, 'iterations': 971, 'learning_rate': 0.04515350810773621, 'p_miss': 0.2334590978937282}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:02:30,841] Trial 7 finished with value: 0.20226277036069976 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:02:36,635] Trial 40 finished with value: 0.10766391630182393 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1, 'learning_rate': 0.0011982344954294326, 'p_miss': 0.1938189706066125}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:02:51,480] Trial 24 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.4541447867833628, 'alpha': 53, 'iterations': 1508, 'learning_rate': 0.0028803573565997507, 'p_miss': 0.19049913310118247}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:08:23,744] Trial 42 finished with value: 0.10271408403189504 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 89, 'learning_rate': 0.0006623791764569545, 'p_miss': 0.28187981957171054}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:12:41,701] Trial 41 finished with value: 0.12042741819929703 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 181, 'learning_rate': 0.0007083128977316114, 'p_miss': 0.17492582616615296}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:13:18,096] Trial 14 finished with value: 0.1959304058743206 and parameters: {'model_name': 'VAE', 'batch_size': 117, 'iterations': 337, 'learning_rate': 0.045500207225751675, 'p_miss': 0.22154046522971624}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:14:59,349] Trial 45 finished with value: 0.10896740370359467 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 30, 'learning_rate': 0.0003889096599539361, 'p_miss': 0.2972220363470034}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:15:10,518] Trial 46 finished with value: 0.10385801191364241 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.007297212309919047, 'p_miss': 0.26238879429196843}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:16:47,201] Trial 39 finished with value: 0.17808377487045252 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 265, 'learning_rate': 0.0011814403331976777, 'p_miss': 0.19065275702783802}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:17:43,196] Trial 48 finished with value: 0.11911214434549518 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 15, 'learning_rate': 0.009550640417500686, 'p_miss': 0.26101652491613936}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:19:00,276] Trial 43 finished with value: 0.1278243279291043 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 168, 'learning_rate': 0.0005803788443465048, 'p_miss': 0.29171375362223356}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:19:17,036] Trial 50 finished with value: 0.10130259083146212 and parameters: {'model_name': 'VAE', 'batch_size': 718, 'iterations': 3, 'learning_rate': 0.0018266989711863317, 'p_miss': 0.1459337152372867}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:19:29,005] Trial 51 finished with value: 0.10605281005013449 and parameters: {'model_name': 'VAE', 'batch_size': 958, 'iterations': 2, 'learning_rate': 0.0016405139041368716, 'p_miss': 0.1261134607727168}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:19:48,100] Trial 44 finished with value: 0.10851290107518963 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 126, 'learning_rate': 0.0005380017134274294, 'p_miss': 0.2867692241000319}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:23:56,555] Trial 53 finished with value: 0.10441755082884026 and parameters: {'model_name': 'VAE', 'batch_size': 587, 'iterations': 52, 'learning_rate': 0.0002788221978151186, 'p_miss': 0.14073214273067455}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:23:56,899] Trial 54 finished with value: 0.18465265029638586 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:24:05,531] Trial 55 finished with value: 0.12063975811228489 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 2, 'learning_rate': 0.0010242098116194037, 'p_miss': 0.09354454500466053}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:24:24,985] Trial 56 finished with value: 0.10516444076477358 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.004201281209201928, 'p_miss': 0.1695559668983717}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:25:08,702] Trial 57 finished with value: 0.13202908004897057 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 12, 'learning_rate': 0.012401587232392118, 'p_miss': 0.2521881687636672}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:25:11,365] Trial 52 finished with value: 0.11414136820315277 and parameters: {'model_name': 'VAE', 'batch_size': 706, 'iterations': 61, 'learning_rate': 0.0005203628756371288, 'p_miss': 0.14866660857557595}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:25:15,779] Trial 58 finished with value: 0.10493948583880888 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.002382782721435312, 'p_miss': 0.21735316959443476}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:25:36,735] Trial 60 finished with value: 0.10450690460562928 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 7, 'learning_rate': 0.003610501807642347, 'p_miss': 0.17256717780456346}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:25:39,575] Trial 59 finished with value: 0.10843264526035994 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 7, 'learning_rate': 0.0019483813294214575, 'p_miss': 0.21638227433954874}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:25:39,882] Trial 62 finished with value: 0.3362504633783579 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:27:14,394] Trial 61 finished with value: 0.10465835656301023 and parameters: {'model_name': 'VAE', 'batch_size': 301, 'iterations': 20, 'learning_rate': 0.0017961929491630997, 'p_miss': 0.013834310278202921}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:27:22,874] Trial 64 finished with value: 0.19681430711733078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:27:23,881] Trial 65 finished with value: 0.18560093509525039 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 37, 'weights': 'distance'}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:27:36,894] Trial 66 finished with value: 0.10863791314100713 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4, 'learning_rate': 0.005088719105090921, 'p_miss': 0.24382105047921998}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:27:47,071] Trial 67 finished with value: 0.10736238409007799 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 3, 'learning_rate': 0.0009356340055129607, 'p_miss': 0.2382842252059089}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:27:52,623] Trial 68 finished with value: 0.11112869139380244 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1, 'learning_rate': 0.0029485382105008456, 'p_miss': 0.2716571762544429}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:28:19,774] Trial 69 finished with value: 0.11846214652104699 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8, 'learning_rate': 0.00152866392170398, 'p_miss': 0.20322256476189945}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:29:14,230] Trial 70 finished with value: 0.3156719472634796 and parameters: {'model_name': 'GAIN', 'batch_size': 77, 'hint_rate': 0.3573288997911306, 'alpha': 98, 'iterations': 30, 'learning_rate': 0.014550215715168045, 'p_miss': 0.2341765480276602}. Best is trial 29 with value: 0.10062975218202153.
running
[I 2024-10-30 08:29:23,813] Trial 71 finished with value: 0.09999255487898992 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 2, 'learning_rate': 0.006094376936227237, 'p_miss': 0.16339365398346484}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:29:34,328] Trial 72 finished with value: 0.25434648195596077 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:29:43,603] Trial 73 finished with value: 0.10822033002865392 and parameters: {'model_name': 'VAE', 'batch_size': 45, 'iterations': 2, 'learning_rate': 0.0002064465301282235, 'p_miss': 0.16992453728714763}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:29:45,453] Trial 74 finished with value: 0.18821109327434915 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3045, 'weights': 'distance'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:29:45,695] Trial 75 finished with value: 0.18465265029638586 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:30:02,296] Trial 76 finished with value: 0.1060524873404544 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 4, 'learning_rate': 0.007111658154432718, 'p_miss': 0.12425486509202467}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:30:09,629] Trial 77 finished with value: 0.10850455370591654 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 2, 'learning_rate': 0.00418878591310867, 'p_miss': 0.1607477285373775}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:30:14,019] Trial 78 finished with value: 0.10687658137831144 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 1, 'learning_rate': 0.002938737792669633, 'p_miss': 0.20406667402904943}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:30:42,221] Trial 79 finished with value: 0.1038463152860383 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 9, 'learning_rate': 0.006008848452834632, 'p_miss': 0.18196421755779596}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:50:59,898] Trial 38 finished with value: 0.19659627556873613 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 938, 'learning_rate': 0.0013471202828556012, 'p_miss': 0.19997981811154736}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:51:19,140] Trial 81 finished with value: 0.10415243841514413 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5, 'learning_rate': 0.002232389108179, 'p_miss': 0.2237196461668516}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:51:25,267] Trial 82 finished with value: 0.30715773475535946 and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.9202927894581681, 'alpha': 0, 'iterations': 3, 'learning_rate': 0.000838692172573372, 'p_miss': 0.27393941216023027}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:57:40,187] Trial 83 finished with value: 0.19484745858468006 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 93, 'learning_rate': 0.01725661112168835, 'p_miss': 0.10337910395566913}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 08:57:43,910] Trial 84 finished with value: 0.1015265216021168 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 1, 'learning_rate': 0.0003873223739711452, 'p_miss': 0.1521048241287389}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:01:24,446] Trial 9 finished with value: 0.13857027151887613 and parameters: {'model_name': 'VAE', 'batch_size': 762, 'iterations': 834, 'learning_rate': 0.00015655557316435323, 'p_miss': 0.021372024804220485}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:02:33,050] Trial 2 finished with value: 0.19277894640933843 and parameters: {'model_name': 'VAE', 'batch_size': 255, 'iterations': 1192, 'learning_rate': 0.0007974731272598815, 'p_miss': 0.10126517756271168}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:02:36,994] Trial 87 finished with value: 0.11271833690373556 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 1, 'learning_rate': 0.0003731887716590698, 'p_miss': 0.14162124940324983}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:02:50,559] Trial 88 finished with value: 0.10693363386436974 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 3, 'learning_rate': 0.0002917196381938782, 'p_miss': 0.15700502721258128}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:06:33,184] Trial 80 finished with value: 0.17432255530579743 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 519, 'learning_rate': 0.0007907889206128748, 'p_miss': 0.22430568977934076}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:08:23,413] Trial 85 finished with value: 0.19809404845616824 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:25:32,494] Trial 89 finished with value: 0.17624696876782892 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 408, 'learning_rate': 0.0006643081424062036, 'p_miss': 0.1857998681547397}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:25:37,152] Trial 92 finished with value: 0.10618636844879736 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 1, 'learning_rate': 0.0004588995381423025, 'p_miss': 0.15921595382918907}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:49:35,949] Trial 27 finished with value: 0.19680630702023916 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 2229, 'learning_rate': 0.0011712247985478448, 'p_miss': 0.23928529264200293}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:49:44,769] Trial 94 finished with value: 0.11158543909280624 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 2, 'learning_rate': 0.0024780047004977265, 'p_miss': 0.1364837944858368}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 09:49:45,775] Trial 95 finished with value: 0.18632091918352492 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 83, 'weights': 'distance'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 10:02:15,918] Trial 35 finished with value: 0.20138630151131848 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 2067, 'learning_rate': 0.0007776296351652436, 'p_miss': 0.2452727448906423}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 10:02:49,837] Trial 97 finished with value: 0.10123156193683466 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 9, 'learning_rate': 0.004936885777813415, 'p_miss': 0.18308976859152107}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 10:03:04,846] Trial 98 finished with value: 0.11195705830083136 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 4, 'learning_rate': 0.004536572181011948, 'p_miss': 0.19568351846150023}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 10:04:04,235] Trial 99 finished with value: 0.13333312441207054 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 21, 'learning_rate': 0.008807296686439224, 'p_miss': 0.1820745527131219}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 10:04:15,833] Trial 100 finished with value: 0.1069750601963794 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 3, 'learning_rate': 0.00016279361908513553, 'p_miss': 0.21102057062564628}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 10:04:34,823] Trial 101 finished with value: 0.11116575571364687 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 5, 'learning_rate': 0.006169586788459777, 'p_miss': 0.16264070834760194}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 10:04:35,323] Trial 102 finished with value: 0.3362504633783579 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 11:04:34,456] Trial 90 finished with value: 0.17854002356374454 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2412, 'learning_rate': 0.00013915210458225052, 'p_miss': 0.18582558162809643}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:14:58,039] Trial 26 finished with value: 0.2106760583208918 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4403, 'learning_rate': 0.0007610396407775814, 'p_miss': 0.20975416254605622}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:15:17,725] Trial 105 finished with value: 0.31778267088425094 and parameters: {'model_name': 'GAIN', 'batch_size': 36, 'hint_rate': 0.2508246057495815, 'alpha': 93, 'iterations': 11, 'learning_rate': 0.001311067894941109, 'p_miss': 0.1478939980177016}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:15:57,625] Trial 106 finished with value: 0.10378827178192915 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 12, 'learning_rate': 0.003483139765593746, 'p_miss': 0.18325027868068913}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:16:26,854] Trial 107 finished with value: 0.10201759207042489 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 7, 'learning_rate': 0.0028138749837994122, 'p_miss': 0.17673783750029012}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:16:51,031] Trial 108 finished with value: 0.10304325424980543 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 6, 'learning_rate': 0.002084726887178033, 'p_miss': 0.13353046308747846}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:17:16,350] Trial 109 finished with value: 0.1079241479772401 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 6, 'learning_rate': 0.00372184490432932, 'p_miss': 0.1351020565885936}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:20:48,847] Trial 110 finished with value: 0.1544760153033911 and parameters: {'model_name': 'VAE', 'batch_size': 204, 'iterations': 49, 'learning_rate': 0.002610697773133134, 'p_miss': 0.11746797926704289}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:21:23,748] Trial 111 finished with value: 0.11168350553997526 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 9, 'learning_rate': 0.0019197666134321396, 'p_miss': 0.1497181388036304}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:22:40,718] Trial 112 finished with value: 0.12460863728570841 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 18, 'learning_rate': 0.00526052766614645, 'p_miss': 0.17434624359207043}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:28:11,224] Trial 91 finished with value: 0.18714212330953414 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 3643, 'learning_rate': 0.0004205762067729913, 'p_miss': 0.1883245858411668}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:28:40,988] Trial 113 finished with value: 0.11186636124939334 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 99, 'learning_rate': 0.00040856763833575446, 'p_miss': 0.16580635152604706}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:28:48,280] Trial 115 finished with value: 0.18772231345395432 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:29:10,978] Trial 116 finished with value: 0.10382512919160243 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6, 'learning_rate': 0.0016711395109363268, 'p_miss': 0.25473050718022483}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:29:25,141] Trial 117 finished with value: 0.12045923499547662 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 4, 'learning_rate': 0.0020692726913947206, 'p_miss': 0.27721626918699316}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:29:32,700] Trial 118 finished with value: 0.10604208871669318 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 2, 'learning_rate': 0.0003051849339525043, 'p_miss': 0.19766956180945627}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:29:54,643] Trial 119 finished with value: 0.10496316948831812 and parameters: {'model_name': 'VAE', 'batch_size': 437, 'iterations': 4, 'learning_rate': 0.0030735403286985073, 'p_miss': 0.15099122513471358}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:30:07,635] Trial 120 finished with value: 0.10268557805049099 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 3, 'learning_rate': 0.001432725175441635, 'p_miss': 0.22904459005407918}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:30:09,155] Trial 121 finished with value: 0.18792705870748574 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 813, 'weights': 'distance'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:30:19,973] Trial 122 finished with value: 0.10269610593145229 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 3, 'learning_rate': 0.001406511316145833, 'p_miss': 0.23036174663919085}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:34:29,277] Trial 114 finished with value: 0.13447306643689982 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 115, 'learning_rate': 0.0015326315571475592, 'p_miss': 0.03725798568611016}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:34:29,569] Trial 124 finished with value: 0.3362504633783579 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:34:44,037] Trial 125 finished with value: 0.10673681356497393 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 3, 'learning_rate': 0.001047606439782752, 'p_miss': 0.13052836482203223}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:34:52,889] Trial 126 finished with value: 0.10344529197160808 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 2, 'learning_rate': 0.000598516308094709, 'p_miss': 0.23177904893787624}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:35:11,561] Trial 127 finished with value: 0.10630591862511166 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 6, 'learning_rate': 0.00139387456283383, 'p_miss': 0.22905240621670167}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:35:28,690] Trial 128 finished with value: 0.10941221709448386 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 5, 'learning_rate': 0.0012091287727586959, 'p_miss': 0.21396453322973902}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:36:05,407] Trial 129 finished with value: 0.10171792573795843 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 10, 'learning_rate': 0.002499210673171832, 'p_miss': 0.20769594044292722}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:36:57,436] Trial 130 finished with value: 0.10544786415616525 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 15, 'learning_rate': 0.0025815240603017124, 'p_miss': 0.20391195849197294}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:37:25,354] Trial 131 finished with value: 0.1137814051798935 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 9, 'learning_rate': 0.0019945422672585215, 'p_miss': 0.17762620748693617}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:38:44,919] Trial 123 finished with value: 0.161736448520423 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 154, 'learning_rate': 0.0013985638760728506, 'p_miss': 0.2101294031503356}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:38:57,890] Trial 133 finished with value: 0.3183453634198729 and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.6663620642967413, 'alpha': 26, 'iterations': 7, 'learning_rate': 0.0008894158829254113, 'p_miss': 0.19145873308352146}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:39:12,071] Trial 134 finished with value: 0.11162822717231939 and parameters: {'model_name': 'VAE', 'batch_size': 95, 'iterations': 3, 'learning_rate': 0.0031981530202029665, 'p_miss': 0.14374173448370287}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:41:37,855] Trial 132 finished with value: 0.32207773220047764 and parameters: {'model_name': 'GAIN', 'batch_size': 16, 'hint_rate': 0.6805497395687361, 'alpha': 30, 'iterations': 161, 'learning_rate': 0.000956244893944432, 'p_miss': 0.11259789278286603}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:42:12,945] Trial 136 finished with value: 0.10630328694239218 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 11, 'learning_rate': 0.004379897492689232, 'p_miss': 0.21841672791813768}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:42:27,570] Trial 137 finished with value: 0.11344104843099376 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4, 'learning_rate': 0.002313457785250479, 'p_miss': 0.2536355938575319}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:42:49,714] Trial 138 finished with value: 0.10081819131238712 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 5, 'learning_rate': 0.003808584625887855, 'p_miss': 0.19782132883464124}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:43:04,189] Trial 135 finished with value: 0.10693411092369276 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 79, 'learning_rate': 0.001009632404928381, 'p_miss': 0.11755369446285285}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:43:33,902] Trial 140 finished with value: 0.10379168589440904 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 7, 'learning_rate': 0.0017705525563393569, 'p_miss': 0.1677752290899072}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:43:36,551] Trial 93 finished with value: 0.19617348163751439 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 3617, 'learning_rate': 0.00012922696348260866, 'p_miss': 0.13278748008548313}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:43:56,109] Trial 142 finished with value: 0.1010683121329969 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 5, 'learning_rate': 0.0027249402732403886, 'p_miss': 0.1967527271756828}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:45:23,199] Trial 143 finished with value: 0.144908593032309 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 27, 'learning_rate': 0.004922593139867298, 'p_miss': 0.1965684420739819}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:46:02,259] Trial 141 finished with value: 0.14028255400056866 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 37, 'learning_rate': 0.0027618464125788323, 'p_miss': 0.17419074472209026}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:48:54,485] Trial 33 finished with value: 0.1955097890357862 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 4426, 'learning_rate': 0.09482859630278608, 'p_miss': 0.28975980104478305}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:49:15,032] Trial 146 finished with value: 0.10456709049542331 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 5, 'learning_rate': 0.006902464538725178, 'p_miss': 0.20213981368231812}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:49:30,576] Trial 147 finished with value: 0.10275534958796002 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 4, 'learning_rate': 0.0003449853207657564, 'p_miss': 0.1910858462382618}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:49:39,865] Trial 148 finished with value: 0.10674456396473755 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 3, 'learning_rate': 0.00034586517463401384, 'p_miss': 0.19226901788323633}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:55:58,938] Trial 145 finished with value: 0.20555903772942083 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:56:31,735] Trial 150 finished with value: 0.10814501329078105 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 8, 'learning_rate': 0.0004978246049359765, 'p_miss': 0.1770410847682127}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:56:49,349] Trial 151 finished with value: 0.10997486277747903 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 5, 'learning_rate': 0.0002273917175838113, 'p_miss': 0.21006349229399332}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:59:47,170] Trial 149 finished with value: 0.19989341032194585 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:59:48,000] Trial 153 finished with value: 0.18607351964332403 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1120, 'weights': 'uniform'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 12:59:57,130] Trial 154 finished with value: 0.10780225152118002 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 3, 'learning_rate': 0.0006447304934491764, 'p_miss': 0.15664190312238352}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:00:04,304] Trial 155 finished with value: 0.10689747805519859 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 2, 'learning_rate': 0.00022420025635820436, 'p_miss': 0.18832336853757076}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:00:40,530] Trial 144 finished with value: 0.1451635074241408 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 232, 'learning_rate': 0.0004961256230086447, 'p_miss': 0.2029017804902036}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:01:03,053] Trial 157 finished with value: 0.10411899523596305 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 6, 'learning_rate': 0.0036773866996712384, 'p_miss': 0.22147193803781057}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:01:42,404] Trial 158 finished with value: 0.12096409285777854 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 10, 'learning_rate': 0.0083197178728292, 'p_miss': 0.179591034914809}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:02:42,653] Trial 159 finished with value: 0.10862008540215569 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 15, 'learning_rate': 0.0021994245679524444, 'p_miss': 0.2063633339051521}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:02:57,155] Trial 160 finished with value: 0.10559746659348934 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 4, 'learning_rate': 0.0032832757596300576, 'p_miss': 0.19447888961726809}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:02:57,663] Trial 161 finished with value: 0.2954977592622293 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:03:27,833] Trial 162 finished with value: 0.10317601784230017 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 8, 'learning_rate': 0.00033723677517354486, 'p_miss': 0.16183656855018475}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:03:42,032] Trial 163 finished with value: 0.10161011297779499 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 4, 'learning_rate': 0.005824313843424017, 'p_miss': 0.16883172357053072}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:03:55,763] Trial 164 finished with value: 0.10481512774858948 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 4, 'learning_rate': 0.004019779703148755, 'p_miss': 0.16926860876393968}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:04:00,847] Trial 165 finished with value: 0.1044794973843576 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 1, 'learning_rate': 0.005550445030055477, 'p_miss': 0.15427941031336506}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:04:26,040] Trial 166 finished with value: 0.10575624867104187 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 6, 'learning_rate': 0.00268527622265211, 'p_miss': 0.1822633323622663}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:04:42,312] Trial 167 finished with value: 0.10164874988629233 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 5, 'learning_rate': 0.0017319834758522763, 'p_miss': 0.19881519627884303}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:11:06,912] Trial 152 finished with value: 0.15192806710559933 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 246, 'learning_rate': 0.0006640400912307908, 'p_miss': 0.15688042314772127}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:11:24,018] Trial 169 finished with value: 0.11205314255347538 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4, 'learning_rate': 0.0017555698449123957, 'p_miss': 0.19934258410086983}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:11:43,794] Trial 170 finished with value: 0.10812916818629595 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 5, 'learning_rate': 0.006688417460280667, 'p_miss': 0.19086145693301582}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:11:57,638] Trial 171 finished with value: 0.1115898938690002 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 3, 'learning_rate': 0.0015172656169289212, 'p_miss': 0.1849224345740103}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:12:15,962] Trial 172 finished with value: 0.10448395635035493 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 5, 'learning_rate': 0.004809533368620818, 'p_miss': 0.24273822141553475}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:12:43,185] Trial 173 finished with value: 0.10101384690082327 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 7, 'learning_rate': 0.0011570277191098267, 'p_miss': 0.26483962715734705}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:13:18,607] Trial 174 finished with value: 0.10815470674804942 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 8, 'learning_rate': 0.00116774780985749, 'p_miss': 0.2967678947876765}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:16:01,383] Trial 175 finished with value: 0.10186250048504437 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 60, 'learning_rate': 0.0007666654558622847, 'p_miss': 0.2808708425013367}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:16:25,365] Trial 176 finished with value: 0.11138884487381387 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6, 'learning_rate': 0.0007939687685689807, 'p_miss': 0.27975898537982274}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:27:46,369] Trial 37 finished with value: 0.18830556843613966 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 4972, 'learning_rate': 0.0014398287340684343, 'p_miss': 0.22835210030814393}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:31:09,332] Trial 178 finished with value: 0.11592362645237846 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 65, 'learning_rate': 0.0012302236652615478, 'p_miss': 0.2866217602479793}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:31:17,661] Trial 179 finished with value: 0.10176664952147423 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.010861744061237424, 'p_miss': 0.27070508799095194}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:31:28,475] Trial 180 finished with value: 0.10097989245465755 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 2, 'learning_rate': 0.010847494413701999, 'p_miss': 0.2681941845960094}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:31:36,299] Trial 181 finished with value: 0.10092413493758527 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 2, 'learning_rate': 0.011573124197454616, 'p_miss': 0.26690427826815566}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:31:44,693] Trial 182 finished with value: 0.10348118068515896 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 2, 'learning_rate': 0.01287086762248855, 'p_miss': 0.26465602481934997}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:32:30,705] Trial 183 finished with value: 0.14805145332614839 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 12, 'learning_rate': 0.01558992059199823, 'p_miss': 0.26449686387865307}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:32:32,591] Trial 184 finished with value: 0.18821109327434915 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2387, 'weights': 'distance'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:32:37,743] Trial 185 finished with value: 0.10540504981602353 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 1, 'learning_rate': 0.010007315240309378, 'p_miss': 0.2690711889359329}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:32:47,552] Trial 186 finished with value: 0.10129631219164252 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.010800374017519156, 'p_miss': 0.24871513636270492}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:32:56,415] Trial 187 finished with value: 0.10122276958325434 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.010585662320129727, 'p_miss': 0.2710980809858662}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:33:02,664] Trial 188 finished with value: 0.1009045906337331 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.010278700205630037, 'p_miss': 0.271385196114908}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:33:11,111] Trial 189 finished with value: 0.10427297215202067 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.02032895196102444, 'p_miss': 0.2716770962597696}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:33:19,778] Trial 190 finished with value: 0.10889075252200717 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.010792087250200082, 'p_miss': 0.25834566084266825}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:33:24,254] Trial 191 finished with value: 0.10392425409725455 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 1, 'learning_rate': 0.011296223391801271, 'p_miss': 0.26801865570525557}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:48:20,808] Trial 96 finished with value: 0.18812381918199453 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4159, 'learning_rate': 0.0053598020974054165, 'p_miss': 0.18066965054051234}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:48:25,682] Trial 193 finished with value: 0.30601449368703537 and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.18962644526730205, 'alpha': 78, 'iterations': 2, 'learning_rate': 0.007833593826201099, 'p_miss': 0.24719287145992683}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:48:36,732] Trial 194 finished with value: 0.1100192013294291 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 3, 'learning_rate': 0.020526017465085596, 'p_miss': 0.2602887143072354}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 13:48:36,984] Trial 195 finished with value: 0.3362504633783579 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 14:40:22,476] Trial 86 finished with value: 0.18127863796525281 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 5503, 'learning_rate': 0.00033648214812119167, 'p_miss': 0.13929913986358178}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 14:40:28,237] Trial 197 finished with value: 0.11760022696023817 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.013740045542599121, 'p_miss': 0.2822926723766745}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 14:40:38,363] Trial 198 finished with value: 0.10682618502204458 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 3, 'learning_rate': 0.009692186632442208, 'p_miss': 0.27643538484913677}. Best is trial 71 with value: 0.09999255487898992.
running
[I 2024-10-30 14:40:51,296] Trial 199 finished with value: 0.10418513996295857 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 4, 'learning_rate': 0.011241707367461447, 'p_miss': 0.2859980723048649}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 14:42:29,452] Trial 1 finished with value: 0.198639393021457 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 5623, 'learning_rate': 0.0008406608167678993, 'p_miss': 0.1853619217128981}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 14:53:16,504] Trial 32 finished with value: 0.18715703614943593 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 6587, 'learning_rate': 0.02940277457410767, 'p_miss': 0.27912461958541573}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 14:58:56,241] Trial 31 finished with value: 0.2073446552995979 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 7406, 'learning_rate': 0.07947266264178499, 'p_miss': 0.27772846177397353}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 15:02:04,835] Trial 63 finished with value: 0.23396573689088304 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6213, 'learning_rate': 0.0009278901591001006, 'p_miss': 0.274346026956509}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 15:02:15,062] Trial 49 finished with value: 0.1903195308969261 and parameters: {'model_name': 'VAE', 'batch_size': 596, 'iterations': 6176, 'learning_rate': 0.0005319482981854938, 'p_miss': 0.14091523045918453}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 15:06:38,269] Trial 196 finished with value: 0.19157185295919682 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1332, 'learning_rate': 0.012726950465306027, 'p_miss': 0.28447676191568744}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 15:29:43,665] Trial 30 finished with value: 0.23866183648296518 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7193, 'learning_rate': 0.09112356876239834, 'p_miss': 0.2982326235002182}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 15:42:59,013] Trial 47 finished with value: 0.19327428798237575 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 8114, 'learning_rate': 0.0008200904105295197, 'p_miss': 0.2597895131980001}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 15:43:48,042] Trial 103 finished with value: 0.19440895488423293 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7317, 'learning_rate': 0.0032342159854292767, 'p_miss': 0.1495414205990716}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 16:06:35,152] Trial 104 finished with value: 0.18640608841137746 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6914, 'learning_rate': 0.0034028389519701052, 'p_miss': 0.14958950549320085}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 16:10:58,662] Trial 139 finished with value: 0.1999188528720621 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 7606, 'learning_rate': 0.007425398213340976, 'p_miss': 0.1961246313932653}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 16:11:15,391] Trial 192 finished with value: 0.1956505899044825 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 8110, 'learning_rate': 0.021134617172151163, 'p_miss': 0.25077360805487264}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 16:11:22,953] Trial 168 finished with value: 0.20126418631146853 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 7791, 'learning_rate': 0.0017691252237328806, 'p_miss': 0.19863561789999679}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 16:13:22,627] Trial 177 finished with value: 0.18951966713314836 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 8658, 'learning_rate': 0.0005575966195604901, 'p_miss': 0.2828917476874019}. Best is trial 71 with value: 0.09999255487898992.
[I 2024-10-30 16:14:00,729] Trial 156 finished with value: 0.19217132182320532 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 9732, 'learning_rate': 0.0033543969956683862, 'p_miss': 0.18029563041914545}. Best is trial 71 with value: 0.09999255487898992.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.09999255487898992
{'model_name': 'VAE', 'batch_size': 17, 'iterations': 2, 'learning_rate': 0.006094376936227237, 'p_miss': 0.16339365398346484}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f92d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.5101521370313573
Generation:   4%|▍         | 1/25 [00:06<02:46,  6.93s/it]Generation:  2
Best f1_score score: 0.5264896078006103
Generation:   8%|▊         | 2/25 [00:13<02:37,  6.83s/it]Generation:  3
Best f1_score score: 0.5264896078006103
Generation:  12%|█▏        | 3/25 [00:22<02:49,  7.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467fec610> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  4
Best f1_score score: 0.5264896078006103
Generation:  16%|█▌        | 4/25 [00:53<05:59, 17.10s/it]Generation:  5
Best f1_score score: 0.5264896078006103
Generation:  20%|██        | 5/25 [01:04<04:51, 14.59s/it]Generation:  6
Best f1_score score: 0.5264896078006103
Generation:  24%|██▍       | 6/25 [01:11<03:50, 12.11s/it]Generation:  7
Best f1_score score: 0.5264896078006103
Generation:  28%|██▊       | 7/25 [01:44<05:44, 19.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f16650> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.5264896078006103
Generation:  32%|███▏      | 8/25 [02:01<05:12, 18.37s/it]Generation:  9
Best f1_score score: 0.5264896078006103
Generation:  36%|███▌      | 9/25 [02:14<04:27, 16.74s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554676d9930> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  10
Best f1_score score: 0.5264896078006103
Generation:  40%|████      | 10/25 [02:26<03:45, 15.06s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474741c60> 
 Out of bag estimation only available if bootstrap=True 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 66, in inner_f
    return f(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_bagging.py", line 402, in fit
    return self._fit(X, y, max_samples=self.max_samples, **fit_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_bagging.py", line 502, in _fit
    raise ValueError("Out of bag estimation only available if bootstrap=True")
ValueError: Out of bag estimation only available if bootstrap=True

Generation:  11
Best f1_score score: 0.5264896078006103
Generation:  44%|████▍     | 11/25 [02:37<03:14, 13.91s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554679a7880> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ff2050> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  12
Best f1_score score: 0.5264896078006103
Generation:  48%|████▊     | 12/25 [02:49<02:52, 13.25s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465bf0c10> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  13
Best f1_score score: 0.5264896078006103
Generation:  52%|█████▏    | 13/25 [03:07<02:57, 14.76s/it]Generation:  14
Best f1_score score: 0.5264896078006103
Generation:  56%|█████▌    | 14/25 [03:22<02:43, 14.87s/it]Generation:  15
Best f1_score score: 0.5264896078006103
Generation:  60%|██████    | 15/25 [03:48<03:00, 18.07s/it]Generation:  16
Best f1_score score: 0.5264896078006103
Generation:  64%|██████▍   | 16/25 [04:10<02:54, 19.43s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a67010> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465962650> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.5264896078006103
Generation:  68%|██████▊   | 17/25 [04:22<02:16, 17.11s/it]Generation:  18
Best f1_score score: 0.5264896078006103
Generation:  72%|███████▏  | 18/25 [05:53<04:35, 39.39s/it]Generation:  19
Best f1_score score: 0.5264896078006103
Generation:  76%|███████▌  | 19/25 [06:18<03:29, 34.91s/it]Generation:  20
Best f1_score score: 0.5264896078006103
Generation:  80%|████████  | 20/25 [06:39<02:34, 30.83s/it]Generation:  21
Best f1_score score: 0.5264896078006103
Generation:  84%|████████▍ | 21/25 [07:02<01:53, 28.45s/it]Generation:  22
Best f1_score score: 0.5264896078006103
Generation:  88%|████████▊ | 22/25 [07:24<01:19, 26.52s/it]Generation:  23
Best f1_score score: 0.5264896078006103
Generation:  92%|█████████▏| 23/25 [07:40<00:47, 23.56s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467fe3070> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.5264896078006103
Generation:  96%|█████████▌| 24/25 [08:06<00:24, 24.07s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a245e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  25
Best f1_score score: 0.5264896078006103
Generation: 100%|██████████| 25/25 [08:50<00:00, 30.29s/it]Generation: 100%|██████████| 25/25 [08:54<00:00, 21.38s/it]
2024-10-30 16:23:07,088 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37337' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-2c00092ba1cd743626b416db9c976854', 'ndarray-30b97e61a22ee8dad82f40400270ebf2'} (stimulus_id='handle-worker-cleanup-1730330587.08852')
Fitted
Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(bootstrap=False,
                                   max_features=0.3259244092021,
                                   max_samples=0.2598937768475, n_estimators=63,
                                   n_jobs=1))])
score start
train score: {'auroc': 0.9640737827530346, 'accuracy': 0.8979857050032488, 'balanced_accuracy': 0.8979857050032489, 'logloss': 0.4778428702244272, 'f1': 0.897978425504317}
original test score: {'auroc': 0.5028402766065103, 'accuracy': 0.4935064935064935, 'balanced_accuracy': 0.4935064935064935, 'logloss': 0.7179652413927643, 'f1': 0.4902012711864407}
imputed test score: {'auroc': 0.4958003035925114, 'accuracy': 0.4909090909090909, 'balanced_accuracy': 0.49090909090909085, 'logloss': 0.7312877124732918, 'f1': 0.4905654008438819}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d480d0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 274, in predict
    neigh_dist, neigh_ind = self.kneighbors(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 825, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd48e0> 
 Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 1020, in predict
    d = self._decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 966, in _decision_function
    X = self._validate_data(X, reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.5105298500834475
Generation:   4%|▍         | 1/25 [03:26<1:22:47, 206.98s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547429cfd0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 101, in predict
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 269, in _check_X
    return self._validate_data(X, reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.5105298500834475
Generation:   8%|▊         | 2/25 [03:37<34:58, 91.25s/it]   Generation:  3
Best f1_score score: 0.5155150474518153
Generation:  12%|█▏        | 3/25 [04:24<26:05, 71.16s/it]Generation:  4
Best f1_score score: 0.5181749242304736
Generation:  16%|█▌        | 4/25 [08:08<45:59, 131.40s/it]Generation:  5
Best f1_score score: 0.5208577303395572
Generation:  20%|██        | 5/25 [08:14<28:45, 86.26s/it] Generation:  6
Best f1_score score: 0.5222173791364025
Generation:  24%|██▍       | 6/25 [09:57<29:05, 91.86s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e6d6e30> 

Generation:  7
Best f1_score score: 0.5244774616958574
Generation:  28%|██▊       | 7/25 [20:02<1:17:53, 259.64s/it]Generation:  8
Best f1_score score: 0.5244774616958574
Generation:  32%|███▏      | 8/25 [20:11<50:57, 179.88s/it]  Generation:  9
Best f1_score score: 0.5244774616958574
Generation:  36%|███▌      | 9/25 [20:20<33:43, 126.44s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd63e0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 382, in predict
    scores = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 760, in decision_function
    return super().decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 363, in decision_function
    X = self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.5244774616958574
Generation:  40%|████      | 10/25 [20:27<22:24, 89.61s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545526c160> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e3f5ab0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 825, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.5244774616958574
Generation:  44%|████▍     | 11/25 [22:10<21:51, 93.64s/it]Generation:  12
Best f1_score score: 0.5244774616958574
Generation:  48%|████▊     | 12/25 [22:58<17:17, 79.83s/it]Generation:  13
Best f1_score score: 0.5244774616958574
Generation:  52%|█████▏    | 13/25 [24:55<18:13, 91.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dddf4f0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 825, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  14
Best f1_score score: 0.5262424091172235
Generation:  56%|█████▌    | 14/25 [31:03<32:01, 174.66s/it]Generation:  15
Best f1_score score: 0.5263493170754703
Generation:  60%|██████    | 15/25 [32:51<25:45, 154.58s/it]Generation:  16
Best f1_score score: 0.5263493170754703
Generation:  64%|██████▍   | 16/25 [34:34<20:51, 139.10s/it]Generation:  17
Best f1_score score: 0.5263493170754703
Generation:  68%|██████▊   | 17/25 [36:18<17:08, 128.55s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d816440> 

Generation:  18
Best f1_score score: 0.5263493170754703
Generation:  72%|███████▏  | 18/25 [46:23<31:41, 271.71s/it]Generation:  19
Best f1_score score: 0.5263493170754703
Generation:  76%|███████▌  | 19/25 [47:12<20:29, 204.92s/it]Generation:  20
Best f1_score score: 0.5263493170754703
Generation:  80%|████████  | 20/25 [47:19<12:07, 145.49s/it]Generation:  21
Best f1_score score: 0.5263493170754703
Generation:  84%|████████▍ | 21/25 [47:29<06:58, 104.65s/it]Generation:  22
Best f1_score score: 0.5263493170754703
Generation:  88%|████████▊ | 22/25 [47:40<03:49, 76.62s/it] Generation:  23
Best f1_score score: 0.5263493170754703
Generation:  92%|█████████▏| 23/25 [47:48<01:51, 55.90s/it]Generation:  24
Best f1_score score: 0.5263493170754703
Generation:  96%|█████████▌| 24/25 [49:33<01:10, 70.68s/it]Generation:  25
Best f1_score score: 0.5263493170754703
Generation: 100%|██████████| 25/25 [49:47<00:00, 53.79s/it]Generation: 100%|██████████| 25/25 [49:47<00:00, 119.50s/it]
2024-10-30 17:13:06,698 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:44669' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-2c00092ba1cd743626b416db9c976854', 'DataFrame-fb16b11e2460ce7f9a7feac058af041e'} (stimulus_id='handle-worker-cleanup-1730333586.6983078')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='constant')),
                ('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=False,
                                                l2_regularization=1.4143e-09,
                                                learning_rate=0.0974466907533,
                                                max_features=0.6845348353264,
                                                max_leaf_nodes=1019,
                                                min_samples_leaf=112,
                                                tol=0.0001,
                                                validation_fraction=None))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.7656856325107525, 'accuracy': 0.700454840805718, 'balanced_accuracy': 0.7004548408057181, 'logloss': 0.6111236441190202, 'f1': 0.7002998357619833}
test score: {'auroc': 0.5359386068476978, 'accuracy': 0.5324675324675324, 'balanced_accuracy': 0.5324675324675324, 'logloss': 0.7068298784901256, 'f1': 0.5319338628627006}
original test score: {'auroc': 0.5225771630966436, 'accuracy': 0.5207792207792208, 'balanced_accuracy': 0.5207792207792208, 'logloss': 0.7163705004816202, 'f1': 0.5206814006569058}
score end
871
lvl
0.5
type
MNAR
num_run
1
class_full
finished
all finished
full run takes
9.321808689634006
hours
DONE
