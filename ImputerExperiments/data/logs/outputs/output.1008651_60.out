Run: 60
/cm/local/apps/slurm/var/spool/job1008651/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/184/184.pkl
working on 
../data/c/184/class_full_MNAR_0.5_3
3.1604177951812744
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-19 19:16:19,598] A new study created in memory with name: no-name-553baf77-c609-48b2-b037-544514ffb808
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-19 19:16:19,971] Trial 13 finished with value: 0.43685543317944553 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 13 with value: 0.43685543317944553.
running
[I 2024-10-19 19:16:20,292] Trial 4 finished with value: 0.43685543317944553 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 13 with value: 0.43685543317944553.
running
[I 2024-10-19 19:16:20,494] Trial 15 finished with value: 0.43685543317944553 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 13 with value: 0.43685543317944553.
running
[I 2024-10-19 19:16:20,672] Trial 6 finished with value: 0.43685543317944553 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 13 with value: 0.43685543317944553.
running
[I 2024-10-19 19:16:23,352] Trial 16 finished with value: 0.2881932513168001 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 16 with value: 0.2881932513168001.
running
[I 2024-10-19 19:16:25,008] Trial 2 finished with value: 0.28823541592123114 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 16 with value: 0.2881932513168001.
running
[I 2024-10-19 19:16:27,444] Trial 12 finished with value: 0.436121252700212 and parameters: {'model_name': 'GAIN', 'batch_size': 59, 'hint_rate': 0.4442331366336003, 'alpha': 55, 'iterations': 1, 'learning_rate': 0.0012060357780234688, 'p_miss': 0.1785689513829136}. Best is trial 16 with value: 0.2881932513168001.
running
[I 2024-10-19 19:16:27,641] Trial 22 finished with value: 0.2946208855881885 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 16 with value: 0.2881932513168001.
running
[I 2024-10-19 19:16:29,189] Trial 8 finished with value: 0.2946208855881885 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 20157, 'weights': 'uniform'}. Best is trial 16 with value: 0.2881932513168001.
running
[I 2024-10-19 19:16:30,006] Trial 17 finished with value: 0.43678568810221663 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.44366391186614546, 'alpha': 17, 'iterations': 7, 'learning_rate': 0.03050173879635426, 'p_miss': 0.09925001731395112}. Best is trial 16 with value: 0.2881932513168001.
running
[I 2024-10-19 19:16:30,156] Trial 7 finished with value: 0.3082783396365413 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3805, 'weights': 'distance'}. Best is trial 16 with value: 0.2881932513168001.
running
[I 2024-10-19 19:16:30,888] Trial 5 finished with value: 0.2771686934844252 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 7, 'learning_rate': 0.03474647974854777, 'p_miss': 0.17570772291011433}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:16:32,477] Trial 10 finished with value: 0.30826634584164386 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21144, 'weights': 'distance'}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:16:36,364] Trial 1 finished with value: 0.3082675867226396 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11795, 'weights': 'distance'}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:16:41,731] Trial 25 finished with value: 0.2897876339828348 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:16:42,119] Trial 26 finished with value: 0.28823541592123114 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:19:41,395] Trial 0 finished with value: 0.2888207813003274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:21:12,501] Trial 24 finished with value: 0.2916472090908665 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:21:14,814] Trial 3 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 27, 'hint_rate': 0.7492047384800393, 'alpha': 75, 'iterations': 5998, 'learning_rate': 0.002380729770813955, 'p_miss': 0.03894739122450993}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:21:36,525] Trial 23 finished with value: 0.4379154645906492 and parameters: {'model_name': 'GAIN', 'batch_size': 39, 'hint_rate': 0.6715195038413367, 'alpha': 29, 'iterations': 1269, 'learning_rate': 0.00046161074771926237, 'p_miss': 0.1909082889224573}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:22:00,217] Trial 35 finished with value: 0.337613511531934 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 56, 'learning_rate': 0.09054268143827132, 'p_miss': 0.28622564836810316}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:22:25,716] Trial 34 finished with value: 0.35812771067733473 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 163, 'learning_rate': 0.09206278161294278, 'p_miss': 0.2775985309547203}. Best is trial 5 with value: 0.2771686934844252.
running
[I 2024-10-19 19:22:45,997] Trial 37 finished with value: 0.251439310806841 and parameters: {'model_name': 'VAE', 'batch_size': 996, 'iterations': 1, 'learning_rate': 0.012680568486001107, 'p_miss': 0.10630593293416309}. Best is trial 37 with value: 0.251439310806841.
running
[I 2024-10-19 19:23:12,164] Trial 38 finished with value: 0.2650575087830675 and parameters: {'model_name': 'VAE', 'batch_size': 686, 'iterations': 1, 'learning_rate': 0.01173043234139505, 'p_miss': 0.12253284426519874}. Best is trial 37 with value: 0.251439310806841.
running
[I 2024-10-19 19:23:37,939] Trial 39 finished with value: 0.2490713932709105 and parameters: {'model_name': 'VAE', 'batch_size': 858, 'iterations': 1, 'learning_rate': 0.01080389950112438, 'p_miss': 0.11317167046858206}. Best is trial 39 with value: 0.2490713932709105.
running
[I 2024-10-19 19:23:58,136] Trial 40 finished with value: 0.2492932873223918 and parameters: {'model_name': 'VAE', 'batch_size': 982, 'iterations': 1, 'learning_rate': 0.007601202475906915, 'p_miss': 0.1040984546266651}. Best is trial 39 with value: 0.2490713932709105.
running
[I 2024-10-19 19:24:07,430] Trial 9 finished with value: 0.4350566895299145 and parameters: {'model_name': 'GAIN', 'batch_size': 19, 'hint_rate': 0.3541088615804504, 'alpha': 3, 'iterations': 2053, 'learning_rate': 0.02834005519240188, 'p_miss': 0.09011744063332987}. Best is trial 39 with value: 0.2490713932709105.
running
[I 2024-10-19 19:24:09,218] Trial 41 finished with value: 0.24898795844178764 and parameters: {'model_name': 'VAE', 'batch_size': 854, 'iterations': 1, 'learning_rate': 0.0068193749143779375, 'p_miss': 0.07519851337576286}. Best is trial 41 with value: 0.24898795844178764.
running
[I 2024-10-19 19:24:24,482] Trial 43 finished with value: 0.24847759503912442 and parameters: {'model_name': 'VAE', 'batch_size': 242, 'iterations': 6, 'learning_rate': 0.005547949356888726, 'p_miss': 0.038078564119575914}. Best is trial 43 with value: 0.24847759503912442.
running
[I 2024-10-19 19:24:34,395] Trial 44 finished with value: 0.24730910468298856 and parameters: {'model_name': 'VAE', 'batch_size': 244, 'iterations': 5, 'learning_rate': 0.004322898996308562, 'p_miss': 0.02300738539889499}. Best is trial 44 with value: 0.24730910468298856.
running
[I 2024-10-19 19:24:49,842] Trial 45 finished with value: 0.24735971498956966 and parameters: {'model_name': 'VAE', 'batch_size': 177, 'iterations': 9, 'learning_rate': 0.0031375650002857447, 'p_miss': 0.01343492492866303}. Best is trial 44 with value: 0.24730910468298856.
running
[I 2024-10-19 19:24:57,334] Trial 14 finished with value: 0.2975825634589329 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 44 with value: 0.24730910468298856.
running
[I 2024-10-19 19:25:06,507] Trial 46 finished with value: 0.24800967857324316 and parameters: {'model_name': 'VAE', 'batch_size': 190, 'iterations': 9, 'learning_rate': 0.0034450558786531965, 'p_miss': 0.010176158384895601}. Best is trial 44 with value: 0.24730910468298856.
running
[I 2024-10-19 19:25:12,221] Trial 47 finished with value: 0.2490590293217912 and parameters: {'model_name': 'VAE', 'batch_size': 173, 'iterations': 8, 'learning_rate': 0.0035433992893870157, 'p_miss': 0.012431631706088932}. Best is trial 44 with value: 0.24730910468298856.
running
[I 2024-10-19 19:25:18,694] Trial 42 finished with value: 0.26729154699641655 and parameters: {'model_name': 'VAE', 'batch_size': 957, 'iterations': 4, 'learning_rate': 0.007179856303308577, 'p_miss': 0.05177639453162701}. Best is trial 44 with value: 0.24730910468298856.
running
[I 2024-10-19 19:25:25,854] Trial 48 finished with value: 0.2462358029057158 and parameters: {'model_name': 'VAE', 'batch_size': 175, 'iterations': 11, 'learning_rate': 0.0021494209500789517, 'p_miss': 0.017090677276012104}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:25:29,990] Trial 21 finished with value: 0.2998302992552556 and parameters: {'model_name': 'VAE', 'batch_size': 552, 'iterations': 186, 'learning_rate': 0.0022518003082444196, 'p_miss': 0.2302063895208374}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:25:59,587] Trial 51 finished with value: 0.24812270384238158 and parameters: {'model_name': 'VAE', 'batch_size': 173, 'iterations': 26, 'learning_rate': 0.0014885283178037866, 'p_miss': 0.010311132279308138}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:02,154] Trial 49 finished with value: 0.2556470132169627 and parameters: {'model_name': 'VAE', 'batch_size': 205, 'iterations': 25, 'learning_rate': 0.0017675794856792028, 'p_miss': 0.013685693094725147}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:10,364] Trial 52 finished with value: 0.25005990135724426 and parameters: {'model_name': 'VAE', 'batch_size': 115, 'iterations': 29, 'learning_rate': 0.001053669304602281, 'p_miss': 0.0164133995003646}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:13,304] Trial 53 finished with value: 0.2557359686579864 and parameters: {'model_name': 'VAE', 'batch_size': 103, 'iterations': 18, 'learning_rate': 0.0005714886676413185, 'p_miss': 0.06074841939133217}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:14,035] Trial 55 finished with value: 0.24670306066995845 and parameters: {'model_name': 'VAE', 'batch_size': 81, 'iterations': 3, 'learning_rate': 0.00012998821501038988, 'p_miss': 0.057681834526724075}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:16,625] Trial 54 finished with value: 0.24703236649223168 and parameters: {'model_name': 'VAE', 'batch_size': 77, 'iterations': 18, 'learning_rate': 0.0009477542337229023, 'p_miss': 0.05565549014848872}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:19,219] Trial 57 finished with value: 0.2486354316293787 and parameters: {'model_name': 'VAE', 'batch_size': 275, 'iterations': 3, 'learning_rate': 0.00018089683121938176, 'p_miss': 0.03910297409579762}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:19,997] Trial 36 finished with value: 0.2999223128172517 and parameters: {'model_name': 'VAE', 'batch_size': 896, 'iterations': 46, 'learning_rate': 0.014171943352776615, 'p_miss': 0.26420338181011627}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:22,076] Trial 56 finished with value: 0.24705035340175957 and parameters: {'model_name': 'VAE', 'batch_size': 341, 'iterations': 3, 'learning_rate': 0.0030406787382031256, 'p_miss': 0.03531047200583481}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:22,370] Trial 58 finished with value: 0.28740277861349184 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1594, 'weights': 'uniform'}. Best is trial 48 with value: 0.2462358029057158.
running
[I 2024-10-19 19:26:23,655] Trial 60 finished with value: 0.24394622179844322 and parameters: {'model_name': 'VAE', 'batch_size': 72, 'iterations': 3, 'learning_rate': 0.00011370499040479578, 'p_miss': 0.06691177698172203}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:25,030] Trial 59 finished with value: 0.28724015043627676 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 585, 'weights': 'uniform'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:25,268] Trial 64 finished with value: 0.43685543317944553 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:26,944] Trial 65 finished with value: 0.24703343533351307 and parameters: {'model_name': 'VAE', 'batch_size': 69, 'iterations': 2, 'learning_rate': 0.0001432454992127438, 'p_miss': 0.07819537006344851}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:27,573] Trial 61 finished with value: 0.2913391207825339 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 103, 'weights': 'uniform'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:29,332] Trial 66 finished with value: 0.24535825622580204 and parameters: {'model_name': 'VAE', 'batch_size': 63, 'iterations': 2, 'learning_rate': 0.00010288053284046024, 'p_miss': 0.07797384431561875}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:29,506] Trial 67 finished with value: 0.24887000460166891 and parameters: {'model_name': 'VAE', 'batch_size': 63, 'iterations': 2, 'learning_rate': 0.0001303948135387359, 'p_miss': 0.07136994606066752}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:30,796] Trial 63 finished with value: 0.2910459806705241 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11411, 'weights': 'uniform'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:30,906] Trial 69 finished with value: 0.4382114950249013 and parameters: {'model_name': 'GAIN', 'batch_size': 80, 'hint_rate': 0.04835847375063662, 'alpha': 99, 'iterations': 2, 'learning_rate': 0.00010205168154324354, 'p_miss': 0.14060350815759015}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:31,542] Trial 62 finished with value: 0.24525663962374775 and parameters: {'model_name': 'VAE', 'batch_size': 400, 'iterations': 3, 'learning_rate': 0.0001289787860703878, 'p_miss': 0.06897940738964435}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:31,683] Trial 68 finished with value: 0.2483183325431589 and parameters: {'model_name': 'VAE', 'batch_size': 67, 'iterations': 2, 'learning_rate': 0.00010160937827698548, 'p_miss': 0.0681854618673737}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:31,855] Trial 73 finished with value: 0.2946208855881885 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:32,346] Trial 70 finished with value: 0.4377030157486478 and parameters: {'model_name': 'GAIN', 'batch_size': 69, 'hint_rate': 0.08882348852870647, 'alpha': 97, 'iterations': 2, 'learning_rate': 0.00010295883520996457, 'p_miss': 0.07582050082685819}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:33,018] Trial 71 finished with value: 0.24867352699172424 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 2, 'learning_rate': 0.0002419246840002808, 'p_miss': 0.08163707647220375}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:33,576] Trial 72 finished with value: 0.24857587398101813 and parameters: {'model_name': 'VAE', 'batch_size': 40, 'iterations': 2, 'learning_rate': 0.0002452751315691657, 'p_miss': 0.056034906309221796}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:40,513] Trial 75 finished with value: 0.248691455243745 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 14, 'learning_rate': 0.0002610878027927757, 'p_miss': 0.052311987531988714}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:40,706] Trial 77 finished with value: 0.24860915582128967 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 15, 'learning_rate': 0.00017627870904143771, 'p_miss': 0.08796275667527165}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:40,903] Trial 74 finished with value: 0.24805809078049618 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 13, 'learning_rate': 0.0002523806883861151, 'p_miss': 0.04995759022729799}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:42,932] Trial 78 finished with value: 0.24819866154806633 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 4, 'learning_rate': 0.0001519121892696753, 'p_miss': 0.08276791212280035}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:43,070] Trial 50 finished with value: 0.2746531321274776 and parameters: {'model_name': 'VAE', 'batch_size': 193, 'iterations': 46, 'learning_rate': 0.002019240042654122, 'p_miss': 0.014830033392957048}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:43,651] Trial 76 finished with value: 0.2454965082154093 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 17, 'learning_rate': 0.0002805907448138378, 'p_miss': 0.04869598893571049}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:44,024] Trial 79 finished with value: 0.24396561942094355 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 5, 'learning_rate': 0.00038460092002790116, 'p_miss': 0.09015309609749639}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:46,768] Trial 80 finished with value: 0.2457918161789344 and parameters: {'model_name': 'VAE', 'batch_size': 110, 'iterations': 4, 'learning_rate': 0.00057336246245194, 'p_miss': 0.09401542343287296}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:47,017] Trial 85 finished with value: 0.43685543317944553 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:57,884] Trial 81 finished with value: 0.32497835592840313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:58,048] Trial 82 finished with value: 0.32497835592840313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:58,596] Trial 83 finished with value: 0.32497835592840313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:26:59,070] Trial 84 finished with value: 0.32497835592840313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:00,544] Trial 88 finished with value: 0.24741913106870544 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4, 'learning_rate': 0.000413219068425682, 'p_miss': 0.09944021304925256}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:01,465] Trial 90 finished with value: 0.24661947460044545 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 4, 'learning_rate': 0.0004354109453934384, 'p_miss': 0.09816520846496898}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:02,030] Trial 86 finished with value: 0.32497835592840313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:02,331] Trial 89 finished with value: 0.24659398139184519 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 4, 'learning_rate': 0.0004355799294072648, 'p_miss': 0.09137856446855924}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:03,998] Trial 27 finished with value: 0.3416802226221481 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1301, 'learning_rate': 0.09742516027269359, 'p_miss': 0.29535558511550675}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:05,407] Trial 92 finished with value: 0.24829498860142518 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 6, 'learning_rate': 0.0003802736608393446, 'p_miss': 0.09277375900996335}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:10,345] Trial 96 finished with value: 0.24632612407878457 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 9, 'learning_rate': 0.0006473607408271149, 'p_miss': 0.12694232492356128}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:48,804] Trial 94 finished with value: 0.24981663952492061 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 89, 'learning_rate': 0.0007942394000758841, 'p_miss': 0.1258238623149372}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:51,959] Trial 93 finished with value: 0.24764293051709457 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 109, 'learning_rate': 0.0004001125262412806, 'p_miss': 0.12281373079003781}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:53,978] Trial 98 finished with value: 0.24563571318944716 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 11, 'learning_rate': 0.0006566899665387134, 'p_miss': 0.16037152106577846}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:56,162] Trial 91 finished with value: 0.2470645502936631 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 87, 'learning_rate': 0.0003796138220387255, 'p_miss': 0.1302216078375788}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:27:59,560] Trial 100 finished with value: 0.24566074156064746 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 10, 'learning_rate': 0.0005695863517612881, 'p_miss': 0.15785142211058698}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:28:00,287] Trial 102 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.9768672331028736, 'alpha': 47, 'iterations': 11, 'learning_rate': 0.0005899568199101044, 'p_miss': 0.16724409407930615}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:28:05,893] Trial 87 finished with value: 0.24823745276120626 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 139, 'learning_rate': 0.00038974171562969437, 'p_miss': 0.09424217053952874}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:28:06,098] Trial 11 finished with value: 0.30526930402411284 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1236, 'learning_rate': 0.046959626311572106, 'p_miss': 0.12954254741792431}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:28:11,150] Trial 105 finished with value: 0.2464015834100754 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7, 'learning_rate': 0.0003232955281266287, 'p_miss': 0.1874591961332927}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:28:14,489] Trial 95 finished with value: 0.2551165645443526 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 127, 'learning_rate': 0.0007028632874009344, 'p_miss': 0.13940669355253416}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:28:33,165] Trial 107 finished with value: 0.24876838715313604 and parameters: {'model_name': 'VAE', 'batch_size': 463, 'iterations': 8, 'learning_rate': 0.00019559145795199876, 'p_miss': 0.15563151799118696}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:28:42,987] Trial 97 finished with value: 0.25628257595071663 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 180, 'learning_rate': 0.0006229748985538948, 'p_miss': 0.13022459281433427}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:28:52,900] Trial 109 finished with value: 0.2487360261861534 and parameters: {'model_name': 'VAE', 'batch_size': 129, 'iterations': 10, 'learning_rate': 0.0013993317589468654, 'p_miss': 0.20798599042035454}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:29:06,922] Trial 30 finished with value: 0.324456892902236 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1564, 'learning_rate': 0.08319759020778322, 'p_miss': 0.2995822245854852}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:31:17,002] Trial 29 finished with value: 0.332259787868629 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2011, 'learning_rate': 0.07920562771298718, 'p_miss': 0.2776290196641533}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:31:41,523] Trial 111 finished with value: 0.27578899155450165 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 296, 'learning_rate': 0.0008750519968902376, 'p_miss': 0.10982058568082696}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:31:45,160] Trial 113 finished with value: 0.24850822008761647 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6, 'learning_rate': 0.0005256973908294835, 'p_miss': 0.1609609006515628}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:31:54,843] Trial 114 finished with value: 0.2486543982212223 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 19, 'learning_rate': 0.0003321826659461361, 'p_miss': 0.028824924510500456}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:10,301] Trial 31 finished with value: 0.33151183547836804 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2061, 'learning_rate': 0.07513117489461543, 'p_miss': 0.28280967806377943}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:14,486] Trial 115 finished with value: 0.2474681202349335 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 35, 'learning_rate': 0.0011778789683286241, 'p_miss': 0.14529201941985728}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:15,913] Trial 116 finished with value: 0.2440447048334819 and parameters: {'model_name': 'VAE', 'batch_size': 47, 'iterations': 6, 'learning_rate': 0.00028449819787388134, 'p_miss': 0.18943180370134735}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:18,524] Trial 117 finished with value: 0.24903547985914193 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7, 'learning_rate': 0.0007314761306847647, 'p_miss': 0.17542934188551676}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:19,517] Trial 118 finished with value: 0.24881646820713713 and parameters: {'model_name': 'VAE', 'batch_size': 45, 'iterations': 5, 'learning_rate': 0.00020433892836592364, 'p_miss': 0.1781518444678669}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:22,015] Trial 120 finished with value: 0.24830534070697974 and parameters: {'model_name': 'VAE', 'batch_size': 53, 'iterations': 3, 'learning_rate': 0.0005062984109962448, 'p_miss': 0.20350086354099062}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:22,356] Trial 119 finished with value: 0.25036198771917906 and parameters: {'model_name': 'VAE', 'batch_size': 45, 'iterations': 5, 'learning_rate': 0.0003052925539395524, 'p_miss': 0.06671758482252295}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:22,595] Trial 122 finished with value: 0.43685543317944553 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:30,413] Trial 121 finished with value: 0.30826594931281975 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16801, 'weights': 'distance'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:30,870] Trial 123 finished with value: 0.3082668518040376 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16240, 'weights': 'distance'}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:40,390] Trial 125 finished with value: 0.2473828336439387 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 12, 'learning_rate': 0.00014166520655959066, 'p_miss': 0.2445641712738281}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:43,254] Trial 124 finished with value: 0.24919779131860453 and parameters: {'model_name': 'VAE', 'batch_size': 136, 'iterations': 10, 'learning_rate': 0.0001222118793996891, 'p_miss': 0.042800823164041324}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:48,819] Trial 127 finished with value: 0.24706803122009652 and parameters: {'model_name': 'VAE', 'batch_size': 97, 'iterations': 7, 'learning_rate': 0.00027389279869797676, 'p_miss': 0.1929925910320994}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:32:50,749] Trial 128 finished with value: 0.24672623143998393 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.019371386140869935, 'p_miss': 0.19588775055676078}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:33:05,784] Trial 103 finished with value: 0.2641767771540622 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 570, 'learning_rate': 0.00031086282195545717, 'p_miss': 0.1861191220154909}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:33:06,014] Trial 129 finished with value: 0.246386243101023 and parameters: {'model_name': 'VAE', 'batch_size': 406, 'iterations': 5, 'learning_rate': 0.00031968463153078365, 'p_miss': 0.18721673097945388}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:33:07,593] Trial 130 finished with value: 0.44242168021489253 and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.9784420221747514, 'alpha': 70, 'iterations': 5, 'learning_rate': 0.0002189493709687232, 'p_miss': 0.22102286259518117}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:33:26,792] Trial 110 finished with value: 0.2848143829405081 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 535, 'learning_rate': 0.000824816141095364, 'p_miss': 0.1124262790235305}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:33:58,328] Trial 132 finished with value: 0.2448536584613487 and parameters: {'model_name': 'VAE', 'batch_size': 313, 'iterations': 20, 'learning_rate': 0.0001673262228587685, 'p_miss': 0.1674226833886329}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:34:03,529] Trial 112 finished with value: 0.25897411328961806 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 298, 'learning_rate': 0.0005413061662570207, 'p_miss': 0.11206784017167809}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:34:10,333] Trial 133 finished with value: 0.2453356079033512 and parameters: {'model_name': 'VAE', 'batch_size': 354, 'iterations': 20, 'learning_rate': 0.00017308089402716923, 'p_miss': 0.17312833358481736}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:35:28,641] Trial 135 finished with value: 0.2472269528674762 and parameters: {'model_name': 'VAE', 'batch_size': 681, 'iterations': 22, 'learning_rate': 0.000172834308723135, 'p_miss': 0.06515239464955423}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:36:02,241] Trial 137 finished with value: 0.24621874573220967 and parameters: {'model_name': 'VAE', 'batch_size': 349, 'iterations': 16, 'learning_rate': 0.00012902290917254938, 'p_miss': 0.16761529663967112}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:36:08,696] Trial 18 finished with value: 0.43806299014461647 and parameters: {'model_name': 'GAIN', 'batch_size': 33, 'hint_rate': 0.5411076406350018, 'alpha': 72, 'iterations': 5365, 'learning_rate': 0.00014372711136893536, 'p_miss': 0.2039196700235638}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:37:12,234] Trial 139 finished with value: 0.2472025636194765 and parameters: {'model_name': 'VAE', 'batch_size': 314, 'iterations': 33, 'learning_rate': 0.00016681368390399396, 'p_miss': 0.16974949401716102}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:37:41,486] Trial 140 finished with value: 0.24745466642399191 and parameters: {'model_name': 'VAE', 'batch_size': 235, 'iterations': 16, 'learning_rate': 0.00011512169287315151, 'p_miss': 0.15433395572476608}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:38:07,005] Trial 20 finished with value: 0.3270204866489047 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3063, 'learning_rate': 0.0843675514485472, 'p_miss': 0.19721518654385606}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:38:20,453] Trial 33 finished with value: 0.33284203585160804 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2442, 'learning_rate': 0.0990772717772161, 'p_miss': 0.27690731518618816}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:38:45,061] Trial 143 finished with value: 0.2503153892232189 and parameters: {'model_name': 'VAE', 'batch_size': 147, 'iterations': 23, 'learning_rate': 0.00015156131952129577, 'p_miss': 0.15847852973928603}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:39:24,144] Trial 142 finished with value: 0.25093045978179807 and parameters: {'model_name': 'VAE', 'batch_size': 368, 'iterations': 22, 'learning_rate': 0.00015195056303056752, 'p_miss': 0.15911782027388513}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:39:39,926] Trial 141 finished with value: 0.24492215595105563 and parameters: {'model_name': 'VAE', 'batch_size': 451, 'iterations': 44, 'learning_rate': 0.00014467550832374977, 'p_miss': 0.15041740468892872}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:39:53,783] Trial 32 finished with value: 0.331785271935517 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2678, 'learning_rate': 0.07907913047519069, 'p_miss': 0.2873595048895268}. Best is trial 60 with value: 0.24394622179844322.
running
[I 2024-10-19 19:40:00,092] Trial 145 finished with value: 0.24390785403974496 and parameters: {'model_name': 'VAE', 'batch_size': 473, 'iterations': 13, 'learning_rate': 0.00011623758608570257, 'p_miss': 0.1471741819477479}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:40:24,385] Trial 144 finished with value: 0.2490833853740912 and parameters: {'model_name': 'VAE', 'batch_size': 404, 'iterations': 45, 'learning_rate': 0.0001169149449844767, 'p_miss': 0.14687738980647863}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:40:46,050] Trial 149 finished with value: 0.25226508044640655 and parameters: {'model_name': 'VAE', 'batch_size': 289, 'iterations': 15, 'learning_rate': 0.00020749938289936083, 'p_miss': 0.16796470426182256}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:41:50,222] Trial 147 finished with value: 0.2474621264735153 and parameters: {'model_name': 'VAE', 'batch_size': 522, 'iterations': 41, 'learning_rate': 0.00011768431910388642, 'p_miss': 0.15007686635040138}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:42:04,510] Trial 148 finished with value: 0.24558359560269377 and parameters: {'model_name': 'VAE', 'batch_size': 495, 'iterations': 47, 'learning_rate': 0.00011361523967180058, 'p_miss': 0.1473164712511013}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:42:35,095] Trial 151 finished with value: 0.2446031376458687 and parameters: {'model_name': 'VAE', 'batch_size': 612, 'iterations': 13, 'learning_rate': 0.00013343154273169394, 'p_miss': 0.16423402665562153}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:42:35,274] Trial 153 finished with value: 0.43685543317944553 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:42:47,210] Trial 150 finished with value: 0.24592182305989865 and parameters: {'model_name': 'VAE', 'batch_size': 537, 'iterations': 37, 'learning_rate': 0.00012904785984298986, 'p_miss': 0.18219935785051675}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:42:55,553] Trial 146 finished with value: 0.24867519332621185 and parameters: {'model_name': 'VAE', 'batch_size': 544, 'iterations': 53, 'learning_rate': 0.00012106407957532596, 'p_miss': 0.1683302765807242}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:43:15,627] Trial 154 finished with value: 0.24653545359792428 and parameters: {'model_name': 'VAE', 'batch_size': 599, 'iterations': 13, 'learning_rate': 0.0001097472946942306, 'p_miss': 0.17415069277008619}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:43:44,515] Trial 152 finished with value: 0.2516575398238108 and parameters: {'model_name': 'VAE', 'batch_size': 654, 'iterations': 30, 'learning_rate': 0.00010858122934075777, 'p_miss': 0.13816045895670376}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:45:04,941] Trial 28 finished with value: 0.33781820752052194 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3925, 'learning_rate': 0.08426900539152438, 'p_miss': 0.2869702910943226}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:46:34,758] Trial 155 finished with value: 0.2470544859903654 and parameters: {'model_name': 'VAE', 'batch_size': 701, 'iterations': 60, 'learning_rate': 0.0001014166970461441, 'p_miss': 0.13983015314066047}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:47:16,701] Trial 157 finished with value: 0.24855170814189612 and parameters: {'model_name': 'VAE', 'batch_size': 770, 'iterations': 64, 'learning_rate': 0.00010076820946023717, 'p_miss': 0.1410104563018101}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:47:31,402] Trial 160 finished with value: 0.24993765213787883 and parameters: {'model_name': 'VAE', 'batch_size': 442, 'iterations': 18, 'learning_rate': 0.0001613137412429254, 'p_miss': 0.046121532665663274}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:47:38,531] Trial 162 finished with value: 0.2466935114549022 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 12, 'learning_rate': 0.0001441757867700925, 'p_miss': 0.16298040886383786}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:47:57,680] Trial 163 finished with value: 0.2487299066693069 and parameters: {'model_name': 'VAE', 'batch_size': 482, 'iterations': 8, 'learning_rate': 0.00019069349330360418, 'p_miss': 0.0816926961186264}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:47:58,850] Trial 161 finished with value: 0.2474658267512579 and parameters: {'model_name': 'VAE', 'batch_size': 452, 'iterations': 19, 'learning_rate': 0.00017024020444712752, 'p_miss': 0.08379637503226228}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:48:00,158] Trial 164 finished with value: 0.4376114959523304 and parameters: {'model_name': 'GAIN', 'batch_size': 295, 'hint_rate': 0.2601470883835968, 'alpha': 35, 'iterations': 10, 'learning_rate': 0.00022810725288181785, 'p_miss': 0.15019431368612232}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:48:08,762] Trial 131 finished with value: 0.4371875333290463 and parameters: {'model_name': 'GAIN', 'batch_size': 454, 'hint_rate': 0.23112515540318762, 'alpha': 72, 'iterations': 4652, 'learning_rate': 0.0002197571246940798, 'p_miss': 0.21915154203638731}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:48:19,195] Trial 165 finished with value: 0.247499999071609 and parameters: {'model_name': 'VAE', 'batch_size': 59, 'iterations': 26, 'learning_rate': 0.00023966659252018762, 'p_miss': 0.07461508851952517}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:48:24,399] Trial 166 finished with value: 0.24885548619229744 and parameters: {'model_name': 'VAE', 'batch_size': 53, 'iterations': 39, 'learning_rate': 0.00014175591279855246, 'p_miss': 0.1839169554997164}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:48:32,308] Trial 167 finished with value: 0.24729618841084605 and parameters: {'model_name': 'VAE', 'batch_size': 99, 'iterations': 26, 'learning_rate': 0.0001368298707360976, 'p_miss': 0.1822768636930516}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:48:46,182] Trial 170 finished with value: 0.25038886849983266 and parameters: {'model_name': 'VAE', 'batch_size': 544, 'iterations': 4, 'learning_rate': 0.0002781666064109892, 'p_miss': 0.06232632375675899}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:48:47,954] Trial 169 finished with value: 0.24624442239013639 and parameters: {'model_name': 'VAE', 'batch_size': 546, 'iterations': 6, 'learning_rate': 0.00012759182300265743, 'p_miss': 0.16256442226226922}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:49:07,331] Trial 171 finished with value: 0.246861328536533 and parameters: {'model_name': 'VAE', 'batch_size': 806, 'iterations': 6, 'learning_rate': 0.0001809524566813177, 'p_miss': 0.15386782811021404}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:49:31,719] Trial 173 finished with value: 0.2466557712292885 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 53, 'learning_rate': 0.00046543632899978565, 'p_miss': 0.17314195774783311}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:50:40,239] Trial 168 finished with value: 0.24799535021570293 and parameters: {'model_name': 'VAE', 'batch_size': 616, 'iterations': 40, 'learning_rate': 0.00013658545575393301, 'p_miss': 0.18359889762879214}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:50:48,893] Trial 175 finished with value: 0.2476217101378786 and parameters: {'model_name': 'VAE', 'batch_size': 386, 'iterations': 3, 'learning_rate': 0.0003539575982166646, 'p_miss': 0.06988161380304675}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:50:53,317] Trial 174 finished with value: 0.24629915613779058 and parameters: {'model_name': 'VAE', 'batch_size': 87, 'iterations': 74, 'learning_rate': 0.0001614085429049476, 'p_miss': 0.1796658948506659}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:51:18,975] Trial 177 finished with value: 0.24806196049884374 and parameters: {'model_name': 'VAE', 'batch_size': 323, 'iterations': 14, 'learning_rate': 0.000126672885381552, 'p_miss': 0.16579209630707173}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:51:46,701] Trial 178 finished with value: 0.24644809274857557 and parameters: {'model_name': 'VAE', 'batch_size': 245, 'iterations': 16, 'learning_rate': 0.00019141999073762336, 'p_miss': 0.20167811227913493}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:51:55,547] Trial 179 finished with value: 0.24826507648865012 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 21, 'learning_rate': 0.00012815741368036291, 'p_miss': 0.17234634045154593}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:52:12,947] Trial 180 finished with value: 0.2505083025112948 and parameters: {'model_name': 'VAE', 'batch_size': 359, 'iterations': 8, 'learning_rate': 0.00014743893521385873, 'p_miss': 0.15720513605959574}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:52:16,296] Trial 172 finished with value: 0.2451338232399533 and parameters: {'model_name': 'VAE', 'batch_size': 829, 'iterations': 53, 'learning_rate': 0.00018501493330364333, 'p_miss': 0.1765320988097345}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:52:21,743] Trial 182 finished with value: 0.28928745193433053 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5899, 'weights': 'uniform'}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:52:37,678] Trial 183 finished with value: 0.24708546536749373 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 29, 'learning_rate': 0.00027478004540499207, 'p_miss': 0.19067185017310803}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:52:48,206] Trial 176 finished with value: 0.24743985629791201 and parameters: {'model_name': 'VAE', 'batch_size': 268, 'iterations': 75, 'learning_rate': 0.00012891402560431106, 'p_miss': 0.16228733124050607}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:52:48,823] Trial 184 finished with value: 0.2886800150189569 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:53:05,407] Trial 181 finished with value: 0.24576285477418805 and parameters: {'model_name': 'VAE', 'batch_size': 220, 'iterations': 32, 'learning_rate': 0.00011286812561207419, 'p_miss': 0.10137376668653375}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:53:36,883] Trial 186 finished with value: 0.24733088045614737 and parameters: {'model_name': 'VAE', 'batch_size': 730, 'iterations': 12, 'learning_rate': 0.00016703257944906212, 'p_miss': 0.0873120200921938}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:56:04,035] Trial 185 finished with value: 0.30044497977442913 and parameters: {'model_name': 'VAE', 'batch_size': 977, 'iterations': 31, 'learning_rate': 0.054082315269435265, 'p_miss': 0.17742195123612722}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:56:07,500] Trial 188 finished with value: 0.25044231142901985 and parameters: {'model_name': 'VAE', 'batch_size': 922, 'iterations': 33, 'learning_rate': 0.00011175735504573783, 'p_miss': 0.09754439247497874}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:57:00,514] Trial 108 finished with value: 0.30669779087398663 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 3837, 'learning_rate': 0.0005855060461193962, 'p_miss': 0.16433711087270308}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:57:00,677] Trial 191 finished with value: 0.2946208855881885 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:57:06,838] Trial 189 finished with value: 0.24904479113077552 and parameters: {'model_name': 'VAE', 'batch_size': 200, 'iterations': 50, 'learning_rate': 0.00011196029915374795, 'p_miss': 0.10193156438675795}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:57:09,226] Trial 193 finished with value: 0.24604942772030292 and parameters: {'model_name': 'VAE', 'batch_size': 73, 'iterations': 3, 'learning_rate': 0.0001972127887673413, 'p_miss': 0.1344807608129705}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:57:09,559] Trial 190 finished with value: 0.24690372621424123 and parameters: {'model_name': 'VAE', 'batch_size': 217, 'iterations': 49, 'learning_rate': 0.00020296281660248393, 'p_miss': 0.1009585583656141}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:57:35,364] Trial 187 finished with value: 0.24708642801249248 and parameters: {'model_name': 'VAE', 'batch_size': 998, 'iterations': 53, 'learning_rate': 0.00010040585719609588, 'p_miss': 0.13339445800402083}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:57:38,163] Trial 196 finished with value: 0.2471160086105948 and parameters: {'model_name': 'VAE', 'batch_size': 75, 'iterations': 3, 'learning_rate': 0.00015487241410383636, 'p_miss': 0.1442684055465615}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:57:39,879] Trial 197 finished with value: 0.24547533383840553 and parameters: {'model_name': 'VAE', 'batch_size': 55, 'iterations': 2, 'learning_rate': 0.00017578397495626675, 'p_miss': 0.15030240417726862}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:58:19,893] Trial 194 finished with value: 0.24820805823687492 and parameters: {'model_name': 'VAE', 'batch_size': 409, 'iterations': 37, 'learning_rate': 0.0001551736126705653, 'p_miss': 0.14717827754459215}. Best is trial 145 with value: 0.24390785403974496.
running
[I 2024-10-19 19:58:44,306] Trial 199 finished with value: 0.24524589481857725 and parameters: {'model_name': 'VAE', 'batch_size': 116, 'iterations': 24, 'learning_rate': 0.00018548311743091058, 'p_miss': 0.07683966688265234}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 19:59:19,803] Trial 195 finished with value: 0.24897750504104543 and parameters: {'model_name': 'VAE', 'batch_size': 476, 'iterations': 38, 'learning_rate': 0.00010054682075798127, 'p_miss': 0.07505728813176632}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 19:59:23,983] Trial 192 finished with value: 0.2508258762719836 and parameters: {'model_name': 'VAE', 'batch_size': 499, 'iterations': 49, 'learning_rate': 0.00020653295932121445, 'p_miss': 0.058623896255932964}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 20:10:21,544] Trial 101 finished with value: 0.29632225388388367 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 6430, 'learning_rate': 0.0006398832333843308, 'p_miss': 0.16758870164649728}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 20:12:55,674] Trial 104 finished with value: 0.3118423547030544 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7457, 'learning_rate': 0.0003101906405973962, 'p_miss': 0.19034787164261516}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 20:17:37,762] Trial 99 finished with value: 0.29892671056139175 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 8456, 'learning_rate': 0.0008113315409791597, 'p_miss': 0.16754066829053205}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 20:43:42,329] Trial 126 finished with value: 0.3012184011011746 and parameters: {'model_name': 'VAE', 'batch_size': 104, 'iterations': 5562, 'learning_rate': 0.00011883416346734881, 'p_miss': 0.1887799029384632}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 20:43:57,968] Trial 198 finished with value: 0.29876228567023017 and parameters: {'model_name': 'VAE', 'batch_size': 48, 'iterations': 7433, 'learning_rate': 0.00018231513620413513, 'p_miss': 0.153893390705652}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 21:10:11,409] Trial 19 finished with value: 0.2998170964168204 and parameters: {'model_name': 'VAE', 'batch_size': 468, 'iterations': 4674, 'learning_rate': 0.0009629758329583187, 'p_miss': 0.012928073058673148}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 21:11:31,742] Trial 138 finished with value: 0.29991260834916006 and parameters: {'model_name': 'VAE', 'batch_size': 326, 'iterations': 5024, 'learning_rate': 0.00011508202921051, 'p_miss': 0.16923570254547518}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 21:39:28,949] Trial 136 finished with value: 0.2992379401922807 and parameters: {'model_name': 'VAE', 'batch_size': 359, 'iterations': 6827, 'learning_rate': 0.0001558290783609602, 'p_miss': 0.16960888680637246}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 22:00:13,521] Trial 106 finished with value: 0.2995179669900801 and parameters: {'model_name': 'VAE', 'batch_size': 455, 'iterations': 8381, 'learning_rate': 0.0005773893891927973, 'p_miss': 0.15247617092537952}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 22:01:03,680] Trial 134 finished with value: 0.3006342998695843 and parameters: {'model_name': 'VAE', 'batch_size': 638, 'iterations': 7124, 'learning_rate': 0.00011752025206469495, 'p_miss': 0.1636661865330987}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 22:11:30,989] Trial 159 finished with value: 0.30035792028760233 and parameters: {'model_name': 'VAE', 'batch_size': 799, 'iterations': 6740, 'learning_rate': 0.000168034456129185, 'p_miss': 0.08290029179687548}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 22:13:13,476] Trial 156 finished with value: 0.30045036658120133 and parameters: {'model_name': 'VAE', 'batch_size': 682, 'iterations': 9149, 'learning_rate': 0.00010237203994692932, 'p_miss': 0.1726343830812049}. Best is trial 145 with value: 0.24390785403974496.
[I 2024-10-19 22:18:59,614] Trial 158 finished with value: 0.30037079741906464 and parameters: {'model_name': 'VAE', 'batch_size': 804, 'iterations': 9939, 'learning_rate': 0.0001638372848326384, 'p_miss': 0.16195015638492002}. Best is trial 145 with value: 0.24390785403974496.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.24390785403974496
{'model_name': 'VAE', 'batch_size': 473, 'iterations': 13, 'learning_rate': 0.00011623758608570257, 'p_miss': 0.1471741819477479}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.05416774649581455
Generation:   4%|▍         | 1/25 [06:26<2:34:36, 386.53s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547417b160> 

Generation:  2
Best f1_score score: 0.05816680986695216
Generation:   8%|▊         | 2/25 [16:30<3:17:08, 514.28s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474194670> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  3
Best f1_score score: 0.05816680986695216
Generation:  12%|█▏        | 3/25 [24:31<3:02:59, 499.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741b2680> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  4
Best f1_score score: 0.05816680986695216
Generation:  16%|█▌        | 4/25 [25:07<1:50:43, 316.35s/it]Generation:  5
Best f1_score score: 0.05816680986695216
Generation:  20%|██        | 5/25 [27:00<1:21:01, 243.09s/it]Generation:  6
Best f1_score score: 0.05816680986695216
Generation:  24%|██▍       | 6/25 [32:45<1:27:54, 277.60s/it]Generation:  7
Best f1_score score: 0.05816680986695216
Generation:  28%|██▊       | 7/25 [32:53<56:49, 189.42s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741d4b50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.05816680986695216
Generation:  32%|███▏      | 8/25 [33:18<38:53, 137.27s/it]Generation:  9
Best f1_score score: 0.05816680986695216
Generation:  36%|███▌      | 9/25 [33:54<28:10, 105.66s/it]Generation:  10
Best f1_score score: 0.059154202770138796
Generation:  40%|████      | 10/25 [38:28<39:22, 157.50s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546faa4700> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.059154202770138796
Generation:  44%|████▍     | 11/25 [44:21<50:43, 217.41s/it]Generation:  12
Best f1_score score: 0.059154202770138796
Generation:  48%|████▊     | 12/25 [45:26<37:04, 171.12s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546eb06140> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  13
Best f1_score score: 0.059154202770138796
Generation:  52%|█████▏    | 13/25 [47:08<30:02, 150.19s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546cd3f790> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.059154202770138796
Generation:  56%|█████▌    | 14/25 [54:33<43:51, 239.22s/it]Generation:  15
Best f1_score score: 0.059154202770138796
Generation:  60%|██████    | 15/25 [1:01:08<47:40, 286.09s/it]Generation:  16
Best f1_score score: 0.059154202770138796
Generation:  64%|██████▍   | 16/25 [1:04:03<37:52, 252.49s/it]Generation:  17
Best f1_score score: 0.059154202770138796
Generation:  68%|██████▊   | 17/25 [1:08:00<33:04, 248.10s/it]Generation:  18
Best f1_score score: 0.059154202770138796
Generation:  72%|███████▏  | 18/25 [1:09:46<23:57, 205.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546f89eef0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  19
Best f1_score score: 0.059154202770138796
Generation:  76%|███████▌  | 19/25 [1:14:40<23:11, 231.91s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155554484640> 

Generation:  20
Best f1_score score: 0.059154202770138796
Generation:  80%|████████  | 20/25 [1:24:51<28:48, 345.65s/it]Generation:  21
Best f1_score score: 0.059154202770138796
Generation:  84%|████████▍ | 21/25 [1:30:22<22:45, 341.46s/it]Generation:  22
Best f1_score score: 0.059154202770138796
Generation:  88%|████████▊ | 22/25 [1:31:23<12:51, 257.18s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546f4ec700> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  23
Best f1_score score: 0.059154202770138796
Generation:  92%|█████████▏| 23/25 [1:37:59<09:57, 298.92s/it]Generation:  24
Best f1_score score: 0.059154202770138796
Generation:  96%|█████████▌| 24/25 [1:40:07<04:07, 247.38s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546c705fc0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  25
Best f1_score score: 0.059154202770138796
Generation: 100%|██████████| 25/25 [1:48:29<00:00, 323.80s/it]Generation: 100%|██████████| 25/25 [1:48:32<00:00, 260.49s/it]
2024-10-20 00:07:40,427 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45447' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-f16aa2437753d377cba71e8e221d5312', 'ndarray-e6a0bf6ab5eddd1f3b7bbf1cee526317'} (stimulus_id='handle-worker-cleanup-1729408060.4278126')
Fitted
Pipeline(steps=[('kneighborsclassifier',
                 KNeighborsClassifier(n_jobs=1, n_neighbors=1, p=1,
                                      weights='distance'))])
score start
train score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 2.2204460492503136e-16, 'f1': 1.0}
original test score: {'auroc': 0.49751693544109293, 'accuracy': 0.10103349964362081, 'balanced_accuracy': 0.050784981042994524, 'logloss': 32.40203694727298, 'f1': 0.051201872371629154}
imputed test score: {'auroc': 0.5008623469521681, 'accuracy': 0.10602280826799715, 'balanced_accuracy': 0.057207413797269076, 'logloss': 32.222204036564634, 'f1': 0.057107983629471705}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155434ce8520>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474125000> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474124d90> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.18261780816633796
Generation:   4%|▍         | 1/25 [04:18<1:43:28, 258.69s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547417c130> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 274, in predict
    neigh_dist, neigh_ind = self.kneighbors(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 825, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474125810> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 382, in predict
    scores = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 363, in decision_function
    X = self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.18261780816633796
Generation:   8%|▊         | 2/25 [10:33<2:05:16, 326.78s/it]Generation:  3
Best f1_score score: 0.18492250871498953
Generation:  12%|█▏        | 3/25 [19:19<2:33:10, 417.75s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546cbd9ff0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.18824311817116485
Generation:  16%|█▌        | 4/25 [27:35<2:37:05, 448.83s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546faad6f0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546cb4c7c0> 

Generation:  5
Best f1_score score: 0.18824311817116485
Generation:  20%|██        | 5/25 [37:39<2:48:12, 504.65s/it]Generation:  6
Best f1_score score: 0.1883094769951196
Generation:  24%|██▍       | 6/25 [46:02<2:39:41, 504.28s/it]Generation:  7
Best f1_score score: 0.20012242308799766
Generation:  28%|██▊       | 7/25 [53:48<2:27:29, 491.64s/it]Generation:  8
Best f1_score score: 0.20012242308799766
Generation:  32%|███▏      | 8/25 [1:02:09<2:20:10, 494.72s/it]Generation:  9
Best f1_score score: 0.20012242308799766
Generation:  36%|███▌      | 9/25 [1:10:26<2:12:05, 495.35s/it]Generation:  10
Best f1_score score: 0.20012242308799766
Generation:  40%|████      | 10/25 [1:18:52<2:04:42, 498.80s/it]Generation:  11
Best f1_score score: 0.20012242308799766
Generation:  44%|████▍     | 11/25 [1:26:57<1:55:21, 494.42s/it]Generation:  12
Best f1_score score: 0.20012242308799766
Generation:  48%|████▊     | 12/25 [1:35:06<1:46:45, 492.71s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554057b61d0> 

Generation:  13
Best f1_score score: 0.20012242308799766
Generation:  52%|█████▏    | 13/25 [1:45:11<1:45:23, 526.92s/it]Generation:  14
Best f1_score score: 0.20012242308799766
Generation:  56%|█████▌    | 14/25 [1:53:13<1:34:05, 513.20s/it]Generation:  15
Best f1_score score: 0.20650543426180298
Generation:  60%|██████    | 15/25 [2:02:00<1:26:12, 517.27s/it]Generation:  16
Best f1_score score: 0.20650543426180298
Generation:  64%|██████▍   | 16/25 [2:07:40<1:09:36, 464.10s/it]Generation:  17
Best f1_score score: 0.20650543426180298
Generation:  68%|██████▊   | 17/25 [2:15:36<1:02:21, 467.70s/it]Generation:  18
Best f1_score score: 0.20650543426180298
Generation:  72%|███████▏  | 18/25 [2:18:07<43:27, 372.53s/it]  Generation:  19
Best f1_score score: 0.21068249718266566
Generation:  76%|███████▌  | 19/25 [2:26:06<40:26, 404.44s/it]Generation:  20
Best f1_score score: 0.21068249718266566
Generation:  80%|████████  | 20/25 [2:28:07<26:35, 319.17s/it]Generation:  21
Best f1_score score: 0.21068249718266566
Generation:  84%|████████▍ | 21/25 [2:35:58<24:20, 365.00s/it]Generation:  22
Best f1_score score: 0.21068249718266566
Generation:  88%|████████▊ | 22/25 [2:44:17<20:15, 405.02s/it]Generation:  23
Best f1_score score: 0.21068249718266566
Generation:  92%|█████████▏| 23/25 [2:46:19<10:40, 320.24s/it]Generation:  24
Best f1_score score: 0.21068249718266566
Generation:  96%|█████████▌| 24/25 [2:53:36<05:55, 355.07s/it]Generation:  25
Best f1_score score: 0.21068249718266566
Generation: 100%|██████████| 25/25 [2:54:42<00:00, 268.35s/it]Generation: 100%|██████████| 25/25 [2:54:42<00:00, 419.28s/it]
2024-10-20 03:02:39,631 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37949' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-c68854e1532f46bf9c7afea2da9c2df6', 'ndarray-e6a0bf6ab5eddd1f3b7bbf1cee526317'} (stimulus_id='handle-worker-cleanup-1729418559.6313503')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer()),
                ('lgbmclassifier',
                 LGBMClassifier(boosting_type='dart', max_depth=9,
                                n_estimators=67, n_jobs=1, num_leaves=223,
                                verbose=-1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9129621795527362, 'accuracy': 0.4233648191053288, 'balanced_accuracy': 0.4359691373901755, 'logloss': 1.6563201941890942, 'f1': 0.4756219542289556}
test score: {'auroc': 0.8010457599924324, 'accuracy': 0.2794012829650748, 'balanced_accuracy': 0.19508272855428327, 'logloss': 2.019822574580631, 'f1': 0.20062752269302958}
original test score: {'auroc': 0.9388794820980666, 'accuracy': 0.5286885245901639, 'balanced_accuracy': 0.5273840101063265, 'logloss': 1.3278981783356962, 'f1': 0.4902027969331846}
score end
184
lvl
0.5
type
MNAR
num_run
3
class_full
finished
all finished
full run takes
7.783832597997454
hours
DONE
