Run: 8
/cm/local/apps/slurm/var/spool/job1051917/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/4135/4135.pkl
working on 
../data/c/4135/class_full_MAR_0.5_1
3.35546875
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-15 19:45:07,738] A new study created in memory with name: no-name-5a0faa04-601a-41c1-a7e0-4e2de8ed18a1
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-15 19:45:08,117] Trial 6 finished with value: 0.3387233671559797 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 6 with value: 0.3387233671559797.
running
[I 2024-11-15 19:45:08,364] Trial 8 finished with value: 0.5359951142657151 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 6 with value: 0.3387233671559797.
running
[I 2024-11-15 19:45:08,664] Trial 7 finished with value: 0.3387233671559797 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 6 with value: 0.3387233671559797.
running
[I 2024-11-15 19:45:22,187] Trial 5 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.37080105445347517, 'alpha': 27, 'iterations': 1, 'learning_rate': 0.00040969165487972326, 'p_miss': 0.05750429258089483}. Best is trial 6 with value: 0.3387233671559797.
running
[I 2024-11-15 19:45:24,738] Trial 14 finished with value: 0.48586669435597596 and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.27176314897156084, 'alpha': 57, 'iterations': 2, 'learning_rate': 0.02618725774687562, 'p_miss': 0.29684426918332435}. Best is trial 6 with value: 0.3387233671559797.
running
[I 2024-11-15 19:45:26,601] Trial 1 finished with value: 0.3387233671559797 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 20694, 'weights': 'uniform'}. Best is trial 6 with value: 0.3387233671559797.
running
[I 2024-11-15 19:45:28,472] Trial 17 finished with value: 0.3475117277202045 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6, 'learning_rate': 0.01979271555553615, 'p_miss': 0.22286163231848555}. Best is trial 6 with value: 0.3387233671559797.
running
[I 2024-11-15 19:45:32,014] Trial 18 finished with value: 0.33053882309550564 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17899, 'weights': 'uniform'}. Best is trial 18 with value: 0.33053882309550564.
running
[I 2024-11-15 19:45:32,379] Trial 16 finished with value: 0.28881973581754516 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12894, 'weights': 'distance'}. Best is trial 16 with value: 0.28881973581754516.
running
[I 2024-11-15 19:45:33,895] Trial 4 finished with value: 0.3265096216538574 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 10, 'learning_rate': 0.004055546242526932, 'p_miss': 0.25363803226069953}. Best is trial 16 with value: 0.28881973581754516.
running
[I 2024-11-15 19:45:35,074] Trial 22 finished with value: 0.32905321859794595 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 2, 'learning_rate': 0.0004347967513605079, 'p_miss': 0.03923575453880711}. Best is trial 16 with value: 0.28881973581754516.
running
[I 2024-11-15 19:45:38,043] Trial 12 finished with value: 0.29586594137606315 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 19402, 'weights': 'distance'}. Best is trial 16 with value: 0.28881973581754516.
running
[I 2024-11-15 19:45:42,599] Trial 3 finished with value: 0.5091980517827236 and parameters: {'model_name': 'GAIN', 'batch_size': 339, 'hint_rate': 0.0214318424567733, 'alpha': 1, 'iterations': 13, 'learning_rate': 0.0016553733867748336, 'p_miss': 0.16055016017606488}. Best is trial 16 with value: 0.28881973581754516.
running
[I 2024-11-15 19:45:55,096] Trial 21 finished with value: 0.2926337224653758 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16641, 'weights': 'distance'}. Best is trial 16 with value: 0.28881973581754516.
running
[I 2024-11-15 19:45:58,319] Trial 23 finished with value: 0.29668555398171603 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 26048, 'weights': 'distance'}. Best is trial 16 with value: 0.28881973581754516.
running
[I 2024-11-15 19:46:01,482] Trial 27 finished with value: 0.2836849390433427 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7866, 'weights': 'distance'}. Best is trial 27 with value: 0.2836849390433427.
running
[I 2024-11-15 19:46:05,451] Trial 28 finished with value: 0.2814270628943728 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5828, 'weights': 'distance'}. Best is trial 28 with value: 0.2814270628943728.
running
[I 2024-11-15 19:46:16,715] Trial 2 finished with value: 0.2565906352816979 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 2 with value: 0.2565906352816979.
running
[I 2024-11-15 19:46:20,415] Trial 24 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.7183211820022328, 'alpha': 60, 'iterations': 310, 'learning_rate': 0.00027653580026053504, 'p_miss': 0.1679739960841308}. Best is trial 2 with value: 0.2565906352816979.
running
[I 2024-11-15 19:46:23,247] Trial 20 finished with value: 0.2343722193004491 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 20 with value: 0.2343722193004491.
running
[I 2024-11-15 19:46:25,942] Trial 0 finished with value: 0.37105476663127007 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 20 with value: 0.2343722193004491.
running
[I 2024-11-15 19:46:26,725] Trial 29 finished with value: 0.24764850722012594 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 20 with value: 0.2343722193004491.
running
[I 2024-11-15 19:46:34,225] Trial 15 finished with value: 0.24902151854927537 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 20 with value: 0.2343722193004491.
running
[I 2024-11-15 19:46:39,054] Trial 9 finished with value: 0.3440416243952375 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 20 with value: 0.2343722193004491.
running
[I 2024-11-15 19:47:06,913] Trial 32 finished with value: 0.3031887565940965 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 20 with value: 0.2343722193004491.
running
[I 2024-11-15 19:47:26,300] Trial 30 finished with value: 0.34989525513524267 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 20 with value: 0.2343722193004491.
running
[I 2024-11-15 19:47:27,276] Trial 36 finished with value: 0.2432457884153742 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 20 with value: 0.2343722193004491.
running
[I 2024-11-15 19:47:32,210] Trial 37 finished with value: 0.2323443797660445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:47:44,446] Trial 35 finished with value: 0.2550043878876845 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:47:45,128] Trial 33 finished with value: 0.2565906352816979 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:47:47,741] Trial 34 finished with value: 0.2565906352816979 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:04,431] Trial 38 finished with value: 0.24700068079843512 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:10,832] Trial 39 finished with value: 0.24700068079843512 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:11,338] Trial 42 finished with value: 0.27212235688137354 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:31,634] Trial 40 finished with value: 0.24700068079843512 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:33,981] Trial 43 finished with value: 0.24676047065377454 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:42,006] Trial 41 finished with value: 0.24700068079843512 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:42,163] Trial 45 finished with value: 0.2661772806287569 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:45,366] Trial 44 finished with value: 0.24676047065377454 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:46,339] Trial 46 finished with value: 0.2661772806287569 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:47,356] Trial 47 finished with value: 0.2808593781996801 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:47,614] Trial 55 finished with value: 0.497862442762222 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:49,092] Trial 56 finished with value: 0.5084863061275384 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:56,293] Trial 49 finished with value: 0.2661772806287569 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:48:57,430] Trial 48 finished with value: 0.2661772806287569 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 19:49:11,585] Trial 50 finished with value: 0.2661772806287569 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 20:07:41,181] Trial 13 finished with value: 0.2761182843769817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 37 with value: 0.2323443797660445.
running
[I 2024-11-15 20:13:17,626] Trial 53 finished with value: 0.22818953598721334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 53 with value: 0.22818953598721334.
running
[I 2024-11-15 20:13:44,014] Trial 52 finished with value: 0.24240823289503738 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 53 with value: 0.22818953598721334.
running
[I 2024-11-15 20:15:21,599] Trial 51 finished with value: 0.2431099165854667 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 53 with value: 0.22818953598721334.
running
[I 2024-11-15 20:16:41,883] Trial 58 finished with value: 0.23261504083841955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 53 with value: 0.22818953598721334.
running
[I 2024-11-15 20:19:49,226] Trial 57 finished with value: 0.23327571075217488 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 53 with value: 0.22818953598721334.
running
[I 2024-11-15 20:23:12,506] Trial 25 finished with value: 0.22564845893031987 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 25 with value: 0.22564845893031987.
running
[I 2024-11-15 20:24:49,513] Trial 31 finished with value: 0.22467144817513646 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-15 20:38:23,793] Trial 26 finished with value: 0.22508345391453127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-15 21:22:24,020] Trial 11 finished with value: 0.3810755537532898 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 1607, 'learning_rate': 0.05506565028998871, 'p_miss': 0.20612861658432566}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-15 21:59:13,550] Trial 19 finished with value: 0.5292555750029173 and parameters: {'model_name': 'GAIN', 'batch_size': 914, 'hint_rate': 0.22230386981860906, 'alpha': 1, 'iterations': 3546, 'learning_rate': 0.0003179794791311991, 'p_miss': 0.13653065293288155}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-15 22:06:32,263] Trial 72 finished with value: 0.3437714213348905 and parameters: {'model_name': 'VAE', 'batch_size': 88, 'iterations': 111, 'learning_rate': 0.004660224103873251, 'p_miss': 0.09710804194096331}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-15 23:02:56,855] Trial 73 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 36, 'hint_rate': 0.9799127921505393, 'alpha': 99, 'iterations': 8808, 'learning_rate': 0.00012844961247607332, 'p_miss': 0.02278297678759117}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-15 23:02:57,983] Trial 74 finished with value: 0.5359951142657151 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-15 23:27:46,803] Trial 64 finished with value: 0.3466300190575712 and parameters: {'model_name': 'VAE', 'batch_size': 721, 'iterations': 2342, 'learning_rate': 0.00010540263222322522, 'p_miss': 0.10216325011908037}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-15 23:36:03,701] Trial 75 finished with value: 0.34437927016894965 and parameters: {'model_name': 'VAE', 'batch_size': 131, 'iterations': 399, 'learning_rate': 0.001437265442920929, 'p_miss': 0.08749617659878081}. Best is trial 31 with value: 0.22467144817513646.
running
[I 2024-11-16 00:11:33,488] Trial 76 finished with value: 0.22279700579062056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 76 with value: 0.22279700579062056.
running
[I 2024-11-16 00:20:49,734] Trial 77 finished with value: 0.22304070559224085 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 76 with value: 0.22279700579062056.
running
[I 2024-11-16 00:54:29,441] Trial 78 finished with value: 0.22266105567973749 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.22266105567973749.
running
[I 2024-11-16 00:55:59,126] Trial 80 finished with value: 0.48539037470682195 and parameters: {'model_name': 'GAIN', 'batch_size': 14, 'hint_rate': 0.6141910189991768, 'alpha': 93, 'iterations': 43, 'learning_rate': 0.012125834989010532, 'p_miss': 0.2737890434656346}. Best is trial 78 with value: 0.22266105567973749.
running
[I 2024-11-16 01:08:27,384] Trial 79 finished with value: 0.22272826956043756 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.22266105567973749.
running
[I 2024-11-16 01:40:41,829] Trial 81 finished with value: 0.2226864069411544 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.22266105567973749.
running
[I 2024-11-16 01:54:21,320] Trial 82 finished with value: 0.22295745758739804 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.22266105567973749.
running
[I 2024-11-16 02:25:07,656] Trial 83 finished with value: 0.22398627822225423 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 78 with value: 0.22266105567973749.
running
[I 2024-11-16 02:38:39,791] Trial 84 finished with value: 0.22214042363612205 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 03:09:16,231] Trial 85 finished with value: 0.22243963714212284 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 03:23:02,560] Trial 86 finished with value: 0.2226738119406913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 03:24:12,455] Trial 71 finished with value: 0.536459573082762 and parameters: {'model_name': 'GAIN', 'batch_size': 641, 'hint_rate': 0.8511920619041975, 'alpha': 95, 'iterations': 9634, 'learning_rate': 0.0001211439858094576, 'p_miss': 0.08944411103529197}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 03:43:43,777] Trial 67 finished with value: 0.3448812043791651 and parameters: {'model_name': 'VAE', 'batch_size': 618, 'iterations': 4570, 'learning_rate': 0.08086317885270652, 'p_miss': 0.09437271201467648}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 03:54:46,529] Trial 87 finished with value: 0.22316828510821493 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 04:10:00,853] Trial 88 finished with value: 0.2232328864943111 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 04:10:51,130] Trial 89 finished with value: 0.22327625429894757 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 04:11:02,825] Trial 93 finished with value: 0.2797067685126311 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2441, 'weights': 'uniform'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 04:29:20,631] Trial 90 finished with value: 0.2229783722317351 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 04:42:25,803] Trial 91 finished with value: 0.2245183435274464 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 04:57:43,133] Trial 92 finished with value: 0.22570698019862556 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 04:58:31,089] Trial 94 finished with value: 0.22509919464784495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 05:18:28,637] Trial 95 finished with value: 0.22486182637074958 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 05:29:21,843] Trial 96 finished with value: 0.2242584378239582 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 05:38:02,075] Trial 10 finished with value: 0.34720557394415935 and parameters: {'model_name': 'VAE', 'batch_size': 81, 'iterations': 9991, 'learning_rate': 0.0002848576235172756, 'p_miss': 0.21783872776405244}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 05:38:59,413] Trial 98 finished with value: 0.22320418333278855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 05:46:12,623] Trial 97 finished with value: 0.22486571244573977 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 05:59:21,857] Trial 99 finished with value: 0.22347204158889306 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 05:59:23,747] Trial 104 finished with value: 0.5084863061275384 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 06:10:18,100] Trial 100 finished with value: 0.2236854667312247 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 06:18:49,972] Trial 102 finished with value: 0.22354893411507656 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 06:19:11,788] Trial 101 finished with value: 0.22313875992568852 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 06:19:22,022] Trial 107 finished with value: 0.2482825029339389 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 06:19:45,485] Trial 108 finished with value: 0.2482825029339389 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 06:26:59,613] Trial 103 finished with value: 0.22409036247958736 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 06:27:51,566] Trial 66 finished with value: 0.34558574053695745 and parameters: {'model_name': 'VAE', 'batch_size': 882, 'iterations': 6043, 'learning_rate': 0.07372937145533824, 'p_miss': 0.09911408863586371}. Best is trial 84 with value: 0.22214042363612205.
running
[I 2024-11-16 06:43:34,291] Trial 105 finished with value: 0.22161508119507137 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 06:43:46,622] Trial 113 finished with value: 0.3116291284977732 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11381, 'weights': 'uniform'}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 06:53:21,774] Trial 106 finished with value: 0.22183710487994004 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 06:57:19,182] Trial 60 finished with value: 0.3454738074110911 and parameters: {'model_name': 'VAE', 'batch_size': 338, 'iterations': 9651, 'learning_rate': 0.06481444825727159, 'p_miss': 0.12213264477813165}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 07:03:26,451] Trial 110 finished with value: 0.22291437342059614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 07:05:08,849] Trial 109 finished with value: 0.2236818185595292 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 07:09:17,038] Trial 111 finished with value: 0.2241981346481327 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 07:11:37,255] Trial 112 finished with value: 0.2235469679960414 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 07:24:15,162] Trial 65 finished with value: 0.3446318422096469 and parameters: {'model_name': 'VAE', 'batch_size': 599, 'iterations': 7020, 'learning_rate': 0.004122026526770891, 'p_miss': 0.10547149154713813}. Best is trial 105 with value: 0.22161508119507137.
running
[I 2024-11-16 07:25:42,318] Trial 114 finished with value: 0.22120375720255786 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:34:49,073] Trial 115 finished with value: 0.22161773875664256 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:36:36,838] Trial 123 finished with value: 0.34146941336921044 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:40:39,384] Trial 116 finished with value: 0.22188003420638944 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:45:57,053] Trial 117 finished with value: 0.22159903272366605 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:47:42,883] Trial 63 finished with value: 0.34497945773129696 and parameters: {'model_name': 'VAE', 'batch_size': 882, 'iterations': 7223, 'learning_rate': 0.0794764155239109, 'p_miss': 0.0925003839271072}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:49:19,759] Trial 118 finished with value: 0.22228070378279857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:49:59,738] Trial 119 finished with value: 0.22173129164225763 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:55:22,673] Trial 120 finished with value: 0.22298637830351523 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 07:59:51,691] Trial 69 finished with value: 0.3447063902340245 and parameters: {'model_name': 'VAE', 'batch_size': 881, 'iterations': 6970, 'learning_rate': 0.07715332879033376, 'p_miss': 0.09118398224079005}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:06:51,219] Trial 122 finished with value: 0.22249289619539514 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:07:24,784] Trial 121 finished with value: 0.2219795872562902 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:14:18,352] Trial 124 finished with value: 0.22353236921246622 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:20:11,697] Trial 133 finished with value: 0.5023678172409844 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.48854785966464714, 'alpha': 28, 'iterations': 534, 'learning_rate': 0.0008589179716112013, 'p_miss': 0.1842122335854509}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:20:12,908] Trial 135 finished with value: 0.497862442762222 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:21:07,729] Trial 54 finished with value: 0.3447452642950667 and parameters: {'model_name': 'VAE', 'batch_size': 781, 'iterations': 8738, 'learning_rate': 0.0001005393181347893, 'p_miss': 0.09630910944018514}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:22:10,827] Trial 125 finished with value: 0.22209195162911005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:27:26,839] Trial 126 finished with value: 0.22143991394669876 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:29:21,779] Trial 127 finished with value: 0.22191519965396872 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:30:36,448] Trial 132 finished with value: 0.5010946878724175 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.03189610878492061, 'alpha': 33, 'iterations': 1039, 'learning_rate': 0.001159666595606062, 'p_miss': 0.1821237257953958}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:30:54,032] Trial 128 finished with value: 0.2212227441588123 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:34:44,618] Trial 129 finished with value: 0.22650767755758308 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:35:22,474] Trial 134 finished with value: 0.5127039048599189 and parameters: {'model_name': 'GAIN', 'batch_size': 29, 'hint_rate': 0.02942100317225671, 'alpha': 30, 'iterations': 919, 'learning_rate': 0.0008417702035688322, 'p_miss': 0.17351969972725212}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:40:03,473] Trial 130 finished with value: 0.22645282798012767 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:41:46,099] Trial 145 finished with value: 0.34911677367286054 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:44:55,755] Trial 131 finished with value: 0.2264559332267499 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 08:56:26,246] Trial 59 finished with value: 0.3451938781813466 and parameters: {'model_name': 'VAE', 'batch_size': 510, 'iterations': 9643, 'learning_rate': 0.06906911555394667, 'p_miss': 0.10862629104543053}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:02:43,116] Trial 70 finished with value: 0.3442649554866143 and parameters: {'model_name': 'VAE', 'batch_size': 698, 'iterations': 9313, 'learning_rate': 0.05685349181883431, 'p_miss': 0.11098389025116386}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:04:17,806] Trial 136 finished with value: 0.22208211535890574 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:05:35,776] Trial 137 finished with value: 0.22221711822796938 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:06:15,283] Trial 138 finished with value: 0.22652925329282886 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:11:27,929] Trial 139 finished with value: 0.2259781441735827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:12:52,360] Trial 140 finished with value: 0.2261788349120403 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:13:03,364] Trial 154 finished with value: 0.3387233671559797 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 25887, 'weights': 'uniform'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:13:53,618] Trial 141 finished with value: 0.2258483490700054 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:13:56,614] Trial 142 finished with value: 0.22659016019427006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:17:28,315] Trial 143 finished with value: 0.22643379424822765 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:17:48,643] Trial 144 finished with value: 0.22717872166473155 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:19:00,707] Trial 146 finished with value: 0.2225639018232139 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:22:11,950] Trial 147 finished with value: 0.22293973432043127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:28:28,011] Trial 61 finished with value: 0.3445025443006993 and parameters: {'model_name': 'VAE', 'batch_size': 893, 'iterations': 9555, 'learning_rate': 0.0904784957220432, 'p_miss': 0.09273657516068899}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:32:50,498] Trial 148 finished with value: 0.22254779203386604 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:33:33,423] Trial 163 finished with value: 0.24819576571537674 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:35:42,700] Trial 68 finished with value: 0.3447752508623029 and parameters: {'model_name': 'VAE', 'batch_size': 885, 'iterations': 8931, 'learning_rate': 0.0961686228068038, 'p_miss': 0.09322436001697701}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:38:26,238] Trial 149 finished with value: 0.22514041623306674 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:46:26,848] Trial 150 finished with value: 0.2232674600423104 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:47:29,116] Trial 155 finished with value: 0.22385694577335666 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:47:47,857] Trial 151 finished with value: 0.2228614491485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:48:01,125] Trial 157 finished with value: 0.2248045504160326 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:48:06,915] Trial 152 finished with value: 0.22381026927216485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:48:11,513] Trial 156 finished with value: 0.22451589535933048 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:51:15,451] Trial 159 finished with value: 0.2238678086514369 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:52:26,746] Trial 62 finished with value: 0.3467360650158348 and parameters: {'model_name': 'VAE', 'batch_size': 796, 'iterations': 9528, 'learning_rate': 0.0935455004145646, 'p_miss': 0.10265361508470158}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:52:48,219] Trial 153 finished with value: 0.22386883753810646 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:52:48,618] Trial 175 finished with value: 0.3387233671559797 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:57:07,896] Trial 158 finished with value: 0.22343883739475262 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 09:58:16,015] Trial 160 finished with value: 0.2220269194187074 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 10:01:03,220] Trial 161 finished with value: 0.22232722647686445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 114 with value: 0.22120375720255786.
running
[I 2024-11-16 10:03:39,828] Trial 164 finished with value: 0.22054194142985847 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:05:29,421] Trial 165 finished with value: 0.22115622632359405 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:06:22,153] Trial 162 finished with value: 0.2222234525887657 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:15:06,034] Trial 167 finished with value: 0.2229305345125371 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:15:17,041] Trial 166 finished with value: 0.22387984755688245 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:16:39,647] Trial 170 finished with value: 0.2214882246072297 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:16:46,768] Trial 169 finished with value: 0.22249120723978005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:17:06,068] Trial 171 finished with value: 0.22206656853096857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:17:26,161] Trial 172 finished with value: 0.22141556779140514 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:18:03,772] Trial 185 finished with value: 0.2479079960991663 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:20:20,752] Trial 173 finished with value: 0.2221909812543728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:21:22,838] Trial 174 finished with value: 0.22310101612020555 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:22:18,805] Trial 176 finished with value: 0.222580014188161 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:22:26,890] Trial 192 finished with value: 0.24724904669240258 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 145, 'weights': 'uniform'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:24:29,049] Trial 168 finished with value: 0.22256080146701285 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:25:09,011] Trial 194 finished with value: 0.2523913130849155 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:27:14,969] Trial 177 finished with value: 0.2215424944990997 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:28:20,143] Trial 178 finished with value: 0.22226518800977182 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:31:06,492] Trial 179 finished with value: 0.2219278233683692 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:34:44,555] Trial 180 finished with value: 0.22237838820657788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
running
[I 2024-11-16 10:36:12,346] Trial 181 finished with value: 0.22153908369870087 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:37:13,328] Trial 182 finished with value: 0.22250684077217042 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:44:30,883] Trial 183 finished with value: 0.22193024808733025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:44:52,391] Trial 184 finished with value: 0.22149879848151982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:45:55,912] Trial 186 finished with value: 0.2223487091985957 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:46:01,494] Trial 189 finished with value: 0.2209069817691179 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:46:02,898] Trial 187 finished with value: 0.22169316039396528 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:46:06,151] Trial 188 finished with value: 0.22090774417330322 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:47:28,543] Trial 190 finished with value: 0.22278498545502803 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:48:05,552] Trial 191 finished with value: 0.2230097769769989 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:48:53,472] Trial 193 finished with value: 0.2223562530175936 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:50:19,195] Trial 195 finished with value: 0.22168131316849493 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:51:16,647] Trial 196 finished with value: 0.22161881756840957 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:52:00,407] Trial 197 finished with value: 0.22148097132873854 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:53:26,211] Trial 198 finished with value: 0.22175596765759079 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
[I 2024-11-16 10:55:34,920] Trial 199 finished with value: 0.22189356875278937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 164 with value: 0.22054194142985847.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
dtype: int64
0.22054194142985847
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f9870> 

Generation:  1
Best f1_score score: 0.527464274082341
Generation:   4%|▍         | 1/25 [10:03<4:01:16, 603.17s/it]Generation:  2
Best f1_score score: 0.5959011605765664
Generation:   8%|▊         | 2/25 [10:55<1:47:00, 279.16s/it]Generation:  3
Best f1_score score: 0.6071501715766335
Generation:  12%|█▏        | 3/25 [12:02<1:06:48, 182.21s/it]Generation:  4
Best f1_score score: 0.6071501715766335
Generation:  16%|█▌        | 4/25 [12:57<46:10, 131.92s/it]  Generation:  5
Best f1_score score: 0.6071501715766335
Generation:  20%|██        | 5/25 [14:11<37:06, 111.32s/it]Generation:  6
Best f1_score score: 0.6071501715766335
Generation:  24%|██▍       | 6/25 [15:01<28:35, 90.29s/it] Generation:  7
Best f1_score score: 0.6087434351952798
Generation:  28%|██▊       | 7/25 [15:33<21:24, 71.35s/it]Generation:  8
Best f1_score score: 0.6087434351952798
Generation:  32%|███▏      | 8/25 [16:01<16:17, 57.51s/it]Generation:  9
Best f1_score score: 0.6109134230213098
Generation:  36%|███▌      | 9/25 [17:46<19:15, 72.21s/it]Generation:  10
Best f1_score score: 0.6109134230213098
Generation:  40%|████      | 10/25 [18:41<16:44, 66.98s/it]Generation:  11
Best f1_score score: 0.6109134230213098
Generation:  44%|████▍     | 11/25 [20:27<18:24, 78.90s/it]Generation:  12
Best f1_score score: 0.6109134230213098
Generation:  48%|████▊     | 12/25 [21:41<16:46, 77.40s/it]Generation:  13
Best f1_score score: 0.6109134230213098
Generation:  52%|█████▏    | 13/25 [22:26<13:29, 67.48s/it]Generation:  14
Best f1_score score: 0.6111903921453881
Generation:  56%|█████▌    | 14/25 [23:40<12:45, 69.55s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554651e8ee0> 

Generation:  15
Best f1_score score: 0.6111903921453881
Generation:  60%|██████    | 15/25 [33:49<38:42, 232.22s/it]Generation:  16
Best f1_score score: 0.6111903921453881
Generation:  64%|██████▍   | 16/25 [34:33<26:18, 175.40s/it]Generation:  17
Best f1_score score: 0.6111903921453881
Generation:  68%|██████▊   | 17/25 [35:09<17:47, 133.48s/it]Generation:  18
Best f1_score score: 0.6111903921453881
Generation:  72%|███████▏  | 18/25 [38:39<18:17, 156.74s/it]Generation:  19
Best f1_score score: 0.6111903921453881
Generation:  76%|███████▌  | 19/25 [39:32<12:32, 125.35s/it]Generation:  20
Best f1_score score: 0.6111903921453881
Generation:  80%|████████  | 20/25 [40:21<08:33, 102.67s/it]Generation:  21
Best f1_score score: 0.6111903921453881
Generation:  84%|████████▍ | 21/25 [41:02<05:35, 83.92s/it] Generation:  22
Best f1_score score: 0.6123114907618838
Generation:  88%|████████▊ | 22/25 [41:42<03:32, 70.72s/it]Generation:  23
Best f1_score score: 0.6123114907618838
Generation:  92%|█████████▏| 23/25 [43:47<02:54, 87.05s/it]Generation:  24
Best f1_score score: 0.6123114907618838
Generation:  96%|█████████▌| 24/25 [44:40<01:16, 76.90s/it]Generation:  25
Best f1_score score: 0.6124633764912257
Generation: 100%|██████████| 25/25 [45:26<00:00, 67.79s/it]Generation: 100%|██████████| 25/25 [45:30<00:00, 109.21s/it]
2024-11-16 11:45:47,358 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:43697' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-2cb1784084353cbc09f8fa90a9bf1556', 'ndarray-b7e4639ccb3c3412fc3ae1fd38edaaae'} (stimulus_id='handle-worker-cleanup-1731786347.358802')
Fitted
Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features=0.5639245855603,
                                        min_samples_leaf=9, min_samples_split=8,
                                        n_estimators=128))])
score start
train score: {'auroc': 0.9595691213609073, 'accuracy': 0.9110432958230021, 'balanced_accuracy': 0.8915789807246435, 'logloss': 0.2434256475217051, 'f1': 0.7409176329923022}
original test score: {'auroc': 0.8028169164539113, 'accuracy': 0.9086054317973756, 'balanced_accuracy': 0.6790742738722186, 'logloss': 0.29495117256198156, 'f1': 0.6488241902535139}
imputed test score: {'auroc': 0.7640438827940564, 'accuracy': 0.9131827891364053, 'balanced_accuracy': 0.6369249997329431, 'logloss': 0.28733191952890474, 'f1': 0.6277769931413908}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4c70> 

Generation:  1
Best f1_score score: 0.6160466012339041
Generation:   4%|▍         | 1/25 [10:02<4:01:03, 602.63s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474656bf0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d22380> 

Generation:  2
Best f1_score score: 0.6160466012339041
Generation:   8%|▊         | 2/25 [20:08<3:51:39, 604.34s/it]Generation:  3
Best f1_score score: 0.6163741534756575
Generation:  12%|█▏        | 3/25 [28:53<3:28:20, 568.19s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff9fe50> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e8e28f0> 

Generation:  4
Best f1_score score: 0.6198079348231177
Generation:  16%|█▌        | 4/25 [38:58<3:24:01, 582.91s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e8710c0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  5
Best f1_score score: 0.6198079348231177
Generation:  20%|██        | 5/25 [42:18<2:28:14, 444.72s/it]Generation:  6
Best f1_score score: 0.6198079348231177
Generation:  24%|██▍       | 6/25 [44:51<1:49:25, 345.54s/it]Generation:  7
Best f1_score score: 0.6198079348231177
Generation:  28%|██▊       | 7/25 [47:29<1:25:13, 284.09s/it]Generation:  8
Best f1_score score: 0.6198079348231177
Generation:  32%|███▏      | 8/25 [50:25<1:10:47, 249.88s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ffeba30> 

Generation:  9
Best f1_score score: 0.6198079348231177
Generation:  36%|███▌      | 9/25 [1:00:31<1:36:16, 361.03s/it]Generation:  10
Best f1_score score: 0.6205164740511685
Generation:  40%|████      | 10/25 [1:07:21<1:34:01, 376.13s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f1f71c0> 

Generation:  11
Best f1_score score: 0.6205164740511685
Generation:  44%|████▍     | 11/25 [1:17:27<1:44:14, 446.74s/it]Generation:  12
Best f1_score score: 0.6205164740511685
Generation:  48%|████▊     | 12/25 [1:22:16<1:26:21, 398.54s/it]Generation:  13
Best f1_score score: 0.6205164740511685
Generation:  52%|█████▏    | 13/25 [1:24:40<1:04:19, 321.64s/it]Generation:  14
Best f1_score score: 0.6205164740511685
Generation:  56%|█████▌    | 14/25 [1:26:23<46:50, 255.52s/it]  Generation:  15
Best f1_score score: 0.6205164740511685
Generation:  60%|██████    | 15/25 [1:28:59<37:34, 225.48s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd7610> 

Generation:  16
Best f1_score score: 0.6205164740511685
Generation:  64%|██████▍   | 16/25 [1:39:03<50:56, 339.56s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dc12470> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.6205164740511685
Generation:  68%|██████▊   | 17/25 [1:41:21<37:10, 278.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d015f90> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff510c0> 

Generation:  18
Best f1_score score: 0.6205164740511685
Generation:  72%|███████▏  | 18/25 [1:51:29<44:04, 377.74s/it]Generation:  19
Best f1_score score: 0.6205164740511685
Generation:  76%|███████▌  | 19/25 [1:53:46<30:33, 305.53s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fa905b0> 

Generation:  20
Best f1_score score: 0.6211116288590444
Generation:  80%|████████  | 20/25 [2:03:56<33:03, 396.76s/it]Generation:  21
Best f1_score score: 0.6220804382600165
Generation:  84%|████████▍ | 21/25 [2:05:02<19:49, 297.44s/it]Generation:  22
Best f1_score score: 0.6220804382600165
Generation:  88%|████████▊ | 22/25 [2:06:09<11:25, 228.34s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d002da0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454560a30> 

Generation:  23
Best f1_score score: 0.6220804382600165
Generation:  92%|█████████▏| 23/25 [2:16:18<11:24, 342.47s/it]Generation:  24
Best f1_score score: 0.6220804382600165
Generation:  96%|█████████▌| 24/25 [2:16:58<04:11, 251.87s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dbc4880> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff3f760> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  25
Best f1_score score: 0.6220804382600165
Generation: 100%|██████████| 25/25 [2:19:33<00:00, 222.83s/it]Generation: 100%|██████████| 25/25 [2:19:33<00:00, 334.94s/it]
2024-11-16 14:05:31,979 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:44759' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b7e4639ccb3c3412fc3ae1fd38edaaae', 'DataFrame-4a2af0002546373eef1150454d9e9f37'} (stimulus_id='handle-worker-cleanup-1731794731.9791582')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='most_frequent')),
                ('kneighborsclassifier',
                 KNeighborsClassifier(n_jobs=1, n_neighbors=4, p=1,
                                      weights='distance'))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9221592312796842, 'accuracy': 0.9623879458325386, 'balanced_accuracy': 0.8066131073832239, 'logloss': 0.31503757193813625, 'f1': 0.8200464365031295}
test score: {'auroc': 0.6046343990685055, 'accuracy': 0.9247787610619469, 'balanced_accuracy': 0.5687814726587119, 'logloss': 1.4741424383799762, 'f1': 0.5820396908892103}
original test score: {'auroc': 0.6520506767222501, 'accuracy': 0.9267622825755264, 'balanced_accuracy': 0.598314763975089, 'logloss': 1.485287362169257, 'f1': 0.6126340177547667}
score end
4135
lvl
0.5
type
MAR
num_run
1
class_full
finished
all finished
full run takes
18.34729853702916
hours
DONE
