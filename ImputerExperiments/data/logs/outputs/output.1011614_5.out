Run: 5
/cm/local/apps/slurm/var/spool/job1011614/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/725/725.pkl
working on 
../data/c/725/class_full_MAR_0.01_1
1.9407272338867188
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-23 11:58:01,580] A new study created in memory with name: no-name-ee345972-8d53-4a5b-ad35-d684005614ba
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-23 11:58:01,973] Trial 3 finished with value: 0.5155438582733436 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.5155438582733436.
[I 2024-10-23 11:58:02,069] Trial 10 finished with value: 0.5155438582733436 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.5155438582733436.
running
running
[I 2024-10-23 11:58:02,552] Trial 12 finished with value: 0.4979937643414531 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 12 with value: 0.4979937643414531.
running
[I 2024-10-23 11:58:04,384] Trial 11 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5336, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:04,549] Trial 14 finished with value: 0.2846202011869524 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2854, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:04,801] Trial 18 finished with value: 0.2848318508291003 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 251, 'weights': 'distance'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:04,906] Trial 19 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:05,341] Trial 8 finished with value: 0.2846057197093355 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3267, 'weights': 'distance'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:05,794] Trial 23 finished with value: 0.2975575812821569 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:06,766] Trial 20 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6304, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:08,006] Trial 24 finished with value: 0.28472554551680435 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2417, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:09,281] Trial 4 finished with value: 0.2848111843393507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:09,483] Trial 1 finished with value: 0.28546773852132434 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:14,796] Trial 0 finished with value: 0.3193905073995685 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:15,696] Trial 13 finished with value: 0.2848390260751494 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:16,266] Trial 16 finished with value: 0.40836803399872135 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:17,040] Trial 25 finished with value: 0.40097721204429054 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:17,381] Trial 6 finished with value: 0.31207246235603925 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:20,905] Trial 2 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.685372690516548, 'alpha': 35, 'iterations': 1, 'learning_rate': 0.0006352893602686598, 'p_miss': 0.16426926320101734}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:21,466] Trial 17 finished with value: 0.4722182285488093 and parameters: {'model_name': 'GAIN', 'batch_size': 22, 'hint_rate': 0.6687241374526885, 'alpha': 40, 'iterations': 1, 'learning_rate': 0.0002366310546597805, 'p_miss': 0.23391904198959892}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:27,893] Trial 29 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.9246128950347599, 'alpha': 78, 'iterations': 34, 'learning_rate': 0.0034703607243667784, 'p_miss': 0.019499550007685856}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:30,825] Trial 32 finished with value: 0.47878614138278464 and parameters: {'model_name': 'GAIN', 'batch_size': 162, 'hint_rate': 0.29222760448118346, 'alpha': 13, 'iterations': 7, 'learning_rate': 0.0002467427765846809, 'p_miss': 0.2923173488891297}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:42,203] Trial 33 finished with value: 0.3333612425567506 and parameters: {'model_name': 'VAE', 'batch_size': 110, 'iterations': 5, 'learning_rate': 0.0030972672648509093, 'p_miss': 0.0622265037057992}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:44,239] Trial 38 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6138, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:58:54,074] Trial 22 finished with value: 0.4819308023445187 and parameters: {'model_name': 'GAIN', 'batch_size': 824, 'hint_rate': 0.9171482806752407, 'alpha': 26, 'iterations': 21, 'learning_rate': 0.0003822662757566191, 'p_miss': 0.17685941934727634}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:59:23,462] Trial 31 finished with value: 0.298086766371369 and parameters: {'model_name': 'VAE', 'batch_size': 285, 'iterations': 14, 'learning_rate': 0.0069136947698307475, 'p_miss': 0.1340764967017431}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:59:25,345] Trial 41 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6485, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:59:27,482] Trial 42 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5157, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:59:27,874] Trial 43 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 11:59:30,115] Trial 44 finished with value: 0.2845819630240022 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4928, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:06,619] Trial 26 finished with value: 0.5203120519899678 and parameters: {'model_name': 'GAIN', 'batch_size': 396, 'hint_rate': 0.8675006928927409, 'alpha': 3, 'iterations': 66, 'learning_rate': 0.022529779350892825, 'p_miss': 0.16835337523581004}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:08,824] Trial 46 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6423, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:10,888] Trial 47 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5216, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:12,858] Trial 48 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5631, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:15,065] Trial 27 finished with value: 0.30991643440885597 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 39, 'learning_rate': 0.004342012025876944, 'p_miss': 0.18640837174182787}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:15,445] Trial 50 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:17,611] Trial 51 finished with value: 0.284623924554739 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4183, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:20,331] Trial 52 finished with value: 0.28460320407535566 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6417, 'weights': 'distance'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:20,774] Trial 53 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:23,105] Trial 54 finished with value: 0.2846167671253345 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4361, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:23,588] Trial 55 finished with value: 0.2975575812821569 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:25,598] Trial 56 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6495, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:27,629] Trial 57 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5820, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:29,793] Trial 58 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5932, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:32,030] Trial 59 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5848, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:33,813] Trial 60 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6524, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:36,213] Trial 61 finished with value: 0.28460993690311126 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4448, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:00:37,057] Trial 62 finished with value: 0.4979937643414531 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:37:25,816] Trial 15 finished with value: 0.2904340439032348 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:39:55,979] Trial 63 finished with value: 0.29065584402280475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:51:46,906] Trial 30 finished with value: 0.2965139922504446 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1015, 'learning_rate': 0.011667062215802404, 'p_miss': 0.19391830093513893}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:51:48,454] Trial 66 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5187, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:51:50,603] Trial 67 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5630, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:51:53,144] Trial 68 finished with value: 0.2845819910967036 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4924, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:51:55,246] Trial 69 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5981, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:51:57,404] Trial 70 finished with value: 0.2847793281785259 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1604, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:51:57,783] Trial 71 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:52:00,515] Trial 72 finished with value: 0.28460320407535566 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5353, 'weights': 'distance'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:52:03,248] Trial 73 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6042, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 12:52:13,030] Trial 74 finished with value: 0.3120060840862907 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:00:39,734] Trial 9 finished with value: 0.28487487644839266 and parameters: {'model_name': 'VAE', 'batch_size': 566, 'iterations': 1063, 'learning_rate': 0.004219333628480785, 'p_miss': 0.22443213010169413}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:00:40,125] Trial 76 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:00:40,496] Trial 77 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:00:40,834] Trial 78 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:00:41,353] Trial 79 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:14:08,532] Trial 28 finished with value: 0.49758061845863305 and parameters: {'model_name': 'GAIN', 'batch_size': 694, 'hint_rate': 0.4580695341995808, 'alpha': 58, 'iterations': 2666, 'learning_rate': 0.04872734526988351, 'p_miss': 0.12421795464294898}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:14:08,978] Trial 81 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:30:59,217] Trial 82 finished with value: 0.28519212780946634 and parameters: {'model_name': 'VAE', 'batch_size': 42, 'iterations': 296, 'learning_rate': 0.001103420366263041, 'p_miss': 0.09057055872035262}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:31:01,659] Trial 83 finished with value: 0.2845941895965386 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3845, 'weights': 'uniform'}. Best is trial 11 with value: 0.28458054612920936.
running
[I 2024-10-23 13:31:03,796] Trial 84 finished with value: 0.284565161792807 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4794, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:31:05,916] Trial 85 finished with value: 0.284569577381149 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4672, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:31:08,304] Trial 86 finished with value: 0.2845831827700781 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4657, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:31:10,528] Trial 87 finished with value: 0.28460346878704734 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3744, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:31:12,376] Trial 88 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5377, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:31:14,715] Trial 89 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6122, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:31:17,283] Trial 90 finished with value: 0.2846029789512575 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4983, 'weights': 'distance'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:31:19,312] Trial 91 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5532, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:36:30,804] Trial 92 finished with value: 0.4842719081628683 and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.048580291208952076, 'alpha': 90, 'iterations': 176, 'learning_rate': 0.00010615087252960348, 'p_miss': 0.29018426199768044}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:36:33,924] Trial 93 finished with value: 0.2845995350018831 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4741, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:36:36,363] Trial 94 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6207, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:36:40,446] Trial 95 finished with value: 0.2846132410093016 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3347, 'weights': 'distance'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 13:36:41,741] Trial 96 finished with value: 0.4979937643414531 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 14:25:40,833] Trial 5 finished with value: 0.5092479504337997 and parameters: {'model_name': 'GAIN', 'batch_size': 160, 'hint_rate': 0.779373565447925, 'alpha': 67, 'iterations': 5504, 'learning_rate': 0.0009518520368027077, 'p_miss': 0.155932724021384}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:09,284] Trial 21 finished with value: 0.28490327236593227 and parameters: {'model_name': 'VAE', 'batch_size': 75, 'iterations': 3653, 'learning_rate': 0.0006334075647109397, 'p_miss': 0.09512163160924908}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:11,149] Trial 99 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5604, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:20,950] Trial 100 finished with value: 0.2850461561661642 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:22,706] Trial 101 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5126, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:23,456] Trial 102 finished with value: 0.2975575812821569 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:32,444] Trial 103 finished with value: 0.29141089435442824 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 2, 'learning_rate': 0.09319142069300922, 'p_miss': 0.01819258600533183}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:34,496] Trial 104 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6165, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:36,503] Trial 105 finished with value: 0.2846098621130297 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4138, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:38,542] Trial 106 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6517, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:40,948] Trial 107 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6222, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:42,933] Trial 108 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5737, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:12:44,525] Trial 109 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6294, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:25,097] Trial 110 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.21499934407809163, 'alpha': 89, 'iterations': 138, 'learning_rate': 0.02349679335438897, 'p_miss': 0.26143039813836155}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:26,756] Trial 111 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6547, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:27,053] Trial 112 finished with value: 0.5155438582733436 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:29,368] Trial 113 finished with value: 0.28466476907863497 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2784, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:32,569] Trial 114 finished with value: 0.28460533737395377 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4635, 'weights': 'distance'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:34,274] Trial 115 finished with value: 0.2847616634358295 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1616, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:35,999] Trial 116 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5319, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:37,728] Trial 117 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5848, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:40,155] Trial 118 finished with value: 0.2845819108183497 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4954, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:40,632] Trial 119 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:13:42,384] Trial 120 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5511, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:32:18,348] Trial 121 finished with value: 0.33816038022617956 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:32:20,489] Trial 122 finished with value: 0.28463399285935026 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4303, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:32:21,994] Trial 123 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5961, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:23,844] Trial 124 finished with value: 0.3260851959438727 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 464, 'learning_rate': 0.0001199534122558248, 'p_miss': 0.04615047447146434}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:24,254] Trial 125 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:26,367] Trial 126 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5234, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:28,452] Trial 127 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5729, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:30,186] Trial 128 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6310, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:31,892] Trial 129 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5913, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:33,987] Trial 130 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5034, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:36,569] Trial 131 finished with value: 0.2845684927307567 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4814, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:45,766] Trial 132 finished with value: 0.48501829551507375 and parameters: {'model_name': 'GAIN', 'batch_size': 43, 'hint_rate': 0.49034157781571047, 'alpha': 100, 'iterations': 4, 'learning_rate': 0.001765483753031538, 'p_miss': 0.21526900571828675}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:47,780] Trial 133 finished with value: 0.28458438386185353 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4748, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:48,673] Trial 134 finished with value: 0.4979937643414531 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:50,848] Trial 135 finished with value: 0.284589887594842 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4507, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:52,514] Trial 136 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5506, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:54,234] Trial 137 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5271, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:56,270] Trial 138 finished with value: 0.28459402574108644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4906, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:56:57,952] Trial 139 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6346, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:57:00,377] Trial 140 finished with value: 0.28460320407535566 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6024, 'weights': 'distance'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 15:57:02,152] Trial 141 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5754, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:36,062] Trial 142 finished with value: 0.2898863706443753 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:37,462] Trial 143 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5408, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:38,119] Trial 144 finished with value: 0.5155438582733436 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:41,281] Trial 145 finished with value: 0.2845999207543516 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4062, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:41,818] Trial 146 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:42,284] Trial 147 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:42,808] Trial 148 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:43,353] Trial 149 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:45,482] Trial 150 finished with value: 0.2849358840619878 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 185, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:37:46,012] Trial 151 finished with value: 0.28458054612920936 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:46:59,035] Trial 7 finished with value: 0.30331514473389665 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 5163, 'learning_rate': 0.0001807080942061981, 'p_miss': 0.1774827782717907}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:47:01,933] Trial 153 finished with value: 0.2845784343181504 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4761, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:47:05,701] Trial 154 finished with value: 0.28457193529571695 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4822, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:47:08,273] Trial 155 finished with value: 0.2845683968930337 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4815, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:47:10,993] Trial 156 finished with value: 0.28458851094905957 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4506, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:47:14,031] Trial 157 finished with value: 0.28456908572343725 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4811, 'weights': 'uniform'}. Best is trial 84 with value: 0.284565161792807.
running
[I 2024-10-23 16:47:16,298] Trial 158 finished with value: 0.28456509156551424 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4806, 'weights': 'uniform'}. Best is trial 158 with value: 0.28456509156551424.
running
[I 2024-10-23 16:47:19,864] Trial 159 finished with value: 0.28456908572343725 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4811, 'weights': 'uniform'}. Best is trial 158 with value: 0.28456509156551424.
running
[I 2024-10-23 16:47:22,513] Trial 160 finished with value: 0.28457401782050373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4789, 'weights': 'uniform'}. Best is trial 158 with value: 0.28456509156551424.
running
[I 2024-10-23 16:47:25,359] Trial 161 finished with value: 0.2845576431936139 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4802, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:28,481] Trial 162 finished with value: 0.2845739960253416 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4791, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:31,479] Trial 163 finished with value: 0.2845824225279009 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4647, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:33,863] Trial 164 finished with value: 0.2845747717652357 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4829, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:37,022] Trial 165 finished with value: 0.28456047312138166 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4798, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:39,866] Trial 166 finished with value: 0.28458313945294816 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4773, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:42,557] Trial 167 finished with value: 0.2845734329948376 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4848, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:45,704] Trial 168 finished with value: 0.28457594316280554 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4845, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:49,078] Trial 169 finished with value: 0.28457508095101963 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4840, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:52,175] Trial 170 finished with value: 0.28459533138475324 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4908, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:54,851] Trial 171 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5078, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:57,838] Trial 172 finished with value: 0.28461824063277624 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4356, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:47:59,989] Trial 80 finished with value: 0.48420056205535367 and parameters: {'model_name': 'GAIN', 'batch_size': 39, 'hint_rate': 0.04027700855424465, 'alpha': 93, 'iterations': 8747, 'learning_rate': 0.09150816061966838, 'p_miss': 0.11059658151325752}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:00,269] Trial 173 finished with value: 0.28457440946564205 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4584, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:02,790] Trial 175 finished with value: 0.2845917923960005 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4602, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:03,304] Trial 174 finished with value: 0.28457578894057145 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4565, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:06,000] Trial 176 finished with value: 0.2845750613329604 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4832, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:06,259] Trial 177 finished with value: 0.2845944669754269 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4511, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:08,427] Trial 178 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5092, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:08,790] Trial 179 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5060, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:11,426] Trial 180 finished with value: 0.2845780218324706 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4835, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:12,426] Trial 181 finished with value: 0.2845727379253292 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4861, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:14,739] Trial 182 finished with value: 0.28458416377222745 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4702, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:15,342] Trial 183 finished with value: 0.28463544561601434 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4278, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:17,547] Trial 184 finished with value: 0.2846294975114272 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4337, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:17,702] Trial 185 finished with value: 0.284577293791214 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4967, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:20,226] Trial 186 finished with value: 0.2845876875794472 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4882, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:20,751] Trial 187 finished with value: 0.2845762466664271 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4839, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:23,109] Trial 189 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5160, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:23,523] Trial 188 finished with value: 0.2845829027213364 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4686, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:25,968] Trial 190 finished with value: 0.28458055308623514 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4684, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 16:48:26,406] Trial 191 finished with value: 0.28460291518792713 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4421, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 17:40:43,455] Trial 193 finished with value: 0.2892240614182219 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 925, 'learning_rate': 0.012391894060676038, 'p_miss': 0.06621019474183279}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 17:40:45,676] Trial 194 finished with value: 0.2846032561851973 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4997, 'weights': 'distance'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 17:40:47,384] Trial 195 finished with value: 0.2845747427773117 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4581, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 17:40:49,364] Trial 196 finished with value: 0.2845805317910073 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4772, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 17:40:51,084] Trial 197 finished with value: 0.2845751417422551 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4587, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 17:40:52,663] Trial 198 finished with value: 0.28458722986098495 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4933, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
running
[I 2024-10-23 17:40:54,080] Trial 199 finished with value: 0.28458054612920936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5190, 'weights': 'uniform'}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 17:48:35,010] Trial 152 finished with value: 0.32353109420606685 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 1148, 'learning_rate': 0.09300202104141683, 'p_miss': 0.2495841055369667}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 17:49:10,452] Trial 49 finished with value: 0.3420806134640376 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7012, 'learning_rate': 0.09916999226723536, 'p_miss': 0.07875823922686558}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 17:59:45,142] Trial 192 finished with value: 0.32469871417885404 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 1299, 'learning_rate': 0.012897987903934129, 'p_miss': 0.26660876859253013}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 18:17:25,678] Trial 64 finished with value: 0.2960191646182699 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 5856, 'learning_rate': 0.08847531724741992, 'p_miss': 0.07738050545718088}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 18:37:27,258] Trial 45 finished with value: 0.372017106844987 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7456, 'learning_rate': 0.07857369091737253, 'p_miss': 0.09556632249013003}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 18:40:40,220] Trial 40 finished with value: 0.3337103362862329 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6871, 'learning_rate': 0.09103971733374099, 'p_miss': 0.09750020601413778}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 18:46:08,629] Trial 65 finished with value: 0.29891905011539655 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 6661, 'learning_rate': 0.09973263676410087, 'p_miss': 0.09304056424552415}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 18:54:01,217] Trial 36 finished with value: 0.28474692552064074 and parameters: {'model_name': 'VAE', 'batch_size': 565, 'iterations': 7289, 'learning_rate': 0.04666548639392671, 'p_miss': 0.017347914291580807}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 19:20:09,137] Trial 35 finished with value: 0.28555131942879275 and parameters: {'model_name': 'VAE', 'batch_size': 959, 'iterations': 6668, 'learning_rate': 0.097283581751642, 'p_miss': 0.010210985377637344}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 19:23:58,762] Trial 75 finished with value: 0.2850080622103536 and parameters: {'model_name': 'VAE', 'batch_size': 50, 'iterations': 8441, 'learning_rate': 0.06880035593423398, 'p_miss': 0.10053512301724658}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 19:32:10,921] Trial 97 finished with value: 0.28473325219672885 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 7913, 'learning_rate': 0.08129631601372979, 'p_miss': 0.046406210769298226}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 19:40:01,210] Trial 34 finished with value: 0.28498787321245744 and parameters: {'model_name': 'VAE', 'batch_size': 984, 'iterations': 8384, 'learning_rate': 0.09513503574172882, 'p_miss': 0.013318293851664581}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 19:40:32,667] Trial 39 finished with value: 0.28485145397174716 and parameters: {'model_name': 'VAE', 'batch_size': 578, 'iterations': 9853, 'learning_rate': 0.08777719720538739, 'p_miss': 0.10566902259591279}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 19:42:22,737] Trial 98 finished with value: 0.28643033928958783 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 8918, 'learning_rate': 0.051991791116085664, 'p_miss': 0.016930901789092512}. Best is trial 161 with value: 0.2845576431936139.
[I 2024-10-23 19:42:29,886] Trial 37 finished with value: 0.285052548158861 and parameters: {'model_name': 'VAE', 'batch_size': 949, 'iterations': 8491, 'learning_rate': 0.09448529874399147, 'p_miss': 0.02054119920126235}. Best is trial 161 with value: 0.2845576431936139.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0.2845576431936139
{'model_name': 'KNNImputer', 'n_neighbors': 4802, 'weights': 'uniform'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9363785252375637
Generation:   4%|▍         | 1/25 [00:16<06:37, 16.55s/it]Generation:  2
Best f1_score score: 0.9363785252375637
Generation:   8%|▊         | 2/25 [00:34<06:37, 17.29s/it]Generation:  3
Best f1_score score: 0.9363785252375637
Generation:  12%|█▏        | 3/25 [00:53<06:35, 17.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f8280> 
 Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 317, in fit
    self.coef_, self.intercept_, n_iter_ = _fit_liblinear(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1214, in _fit_liblinear
    solver_type = _get_liblinear_solver_type(multi_class, penalty, loss, dual)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1046, in _get_liblinear_solver_type
    raise ValueError(
ValueError: Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True

Generation:  4
Best f1_score score: 0.9363785252375637
Generation:  16%|█▌        | 4/25 [00:59<04:43, 13.49s/it]Generation:  5
Best f1_score score: 0.936483313984492
Generation:  20%|██        | 5/25 [02:47<15:50, 47.50s/it]Generation:  6
Best f1_score score: 0.9369829239377363
Generation:  24%|██▍       | 6/25 [03:03<11:35, 36.61s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465bdb1f0> 
 Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 317, in fit
    self.coef_, self.intercept_, n_iter_ = _fit_liblinear(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1214, in _fit_liblinear
    solver_type = _get_liblinear_solver_type(multi_class, penalty, loss, dual)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1046, in _get_liblinear_solver_type
    raise ValueError(
ValueError: Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True

Generation:  7
Best f1_score score: 0.9369829239377363
Generation:  28%|██▊       | 7/25 [03:56<12:35, 41.99s/it]Generation:  8
Best f1_score score: 0.9369829239377363
Generation:  32%|███▏      | 8/25 [04:23<10:37, 37.48s/it]Generation:  9
Best f1_score score: 0.9369829239377363
Generation:  36%|███▌      | 9/25 [04:40<08:13, 30.82s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467fc4730> 
 Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 317, in fit
    self.coef_, self.intercept_, n_iter_ = _fit_liblinear(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1214, in _fit_liblinear
    solver_type = _get_liblinear_solver_type(multi_class, penalty, loss, dual)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1046, in _get_liblinear_solver_type
    raise ValueError(
ValueError: Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True

Generation:  10
Best f1_score score: 0.9369829239377363
Generation:  40%|████      | 10/25 [04:59<06:48, 27.25s/it]Generation:  11
Best f1_score score: 0.9369829239377363
Generation:  44%|████▍     | 11/25 [05:20<05:57, 25.54s/it]Generation:  12
Best f1_score score: 0.9369829239377363
Generation:  48%|████▊     | 12/25 [05:35<04:48, 22.18s/it]Generation:  13
Best f1_score score: 0.9369829239377363
Generation:  52%|█████▏    | 13/25 [05:54<04:15, 21.29s/it]Generation:  14
Best f1_score score: 0.9369829239377363
Generation:  56%|█████▌    | 14/25 [06:14<03:48, 20.79s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f9720> 
 Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 317, in fit
    self.coef_, self.intercept_, n_iter_ = _fit_liblinear(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1214, in _fit_liblinear
    solver_type = _get_liblinear_solver_type(multi_class, penalty, loss, dual)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1046, in _get_liblinear_solver_type
    raise ValueError(
ValueError: Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True

Generation:  15
Best f1_score score: 0.9369829239377363
Generation:  60%|██████    | 15/25 [06:25<02:57, 17.78s/it]Generation:  16
Best f1_score score: 0.9369829239377363
Generation:  64%|██████▍   | 16/25 [08:07<06:28, 43.15s/it]Generation:  17
Best f1_score score: 0.9369829239377363
Generation:  68%|██████▊   | 17/25 [16:05<23:12, 174.08s/it]Generation:  18
Best f1_score score: 0.9369829239377363
Generation:  72%|███████▏  | 18/25 [17:17<16:43, 143.41s/it]Generation:  19
Best f1_score score: 0.9369829239377363
Generation:  76%|███████▌  | 19/25 [17:43<10:48, 108.11s/it]Generation:  20
Best f1_score score: 0.9369829239377363
Generation:  80%|████████  | 20/25 [18:39<07:42, 92.44s/it] Generation:  21
Best f1_score score: 0.9384478730347168
Generation:  84%|████████▍ | 21/25 [21:10<07:19, 109.87s/it]Generation:  22
Best f1_score score: 0.9384478730347168
Generation:  88%|████████▊ | 22/25 [23:23<05:51, 117.02s/it]Generation:  23
Best f1_score score: 0.9384478730347168
Generation:  92%|█████████▏| 23/25 [24:53<03:37, 108.94s/it]Generation:  24
Best f1_score score: 0.9384478730347168
Generation:  96%|█████████▌| 24/25 [26:22<01:42, 102.76s/it]Generation:  25
Best f1_score score: 0.9384478730347168
Generation: 100%|██████████| 25/25 [29:37<00:00, 130.53s/it]Generation: 100%|██████████| 25/25 [29:40<00:00, 71.23s/it] 
2024-10-23 20:13:13,911 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:44897' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'ndarray-c963191dabb9b381683874a694f329fa'} (stimulus_id='handle-worker-cleanup-1729739593.9116337')
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.0121878205789,
                               hidden_layer_sizes=[292, 292],
                               learning_rate='adaptive',
                               learning_rate_init=0.0008356567847,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9933268579986185, 'accuracy': 0.9555928582328704, 'balanced_accuracy': 0.9518329905404648, 'logloss': 0.10401003454990795, 'f1': 0.9536850068087246}
original test score: {'auroc': 0.9912055834031671, 'accuracy': 0.9499694935936547, 'balanced_accuracy': 0.945858986291966, 'logloss': 0.12024810076819367, 'f1': 0.9478153568022762}
imputed test score: {'auroc': 0.989798600438484, 'accuracy': 0.947528981086028, 'balanced_accuracy': 0.9438119033851082, 'logloss': 0.1293276520485029, 'f1': 0.945325979023149}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd47f0> 

Generation:  1
Best f1_score score: 0.929780849251806
Generation:   4%|▍         | 1/25 [10:03<4:01:30, 603.75s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745829e0> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d40a00> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4dc0> 
 Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 911, in fit
    X, y = self._validate_data(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.932330843721686
Generation:   8%|▊         | 2/25 [10:42<1:43:58, 271.26s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474410b80> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547463b130> 

Generation:  3
Best f1_score score: 0.9371187867900014
Generation:  12%|█▏        | 3/25 [20:47<2:35:22, 423.75s/it]Generation:  4
Best f1_score score: 0.9371187867900014
Generation:  16%|█▌        | 4/25 [22:18<1:42:22, 292.49s/it]Generation:  5
Best f1_score score: 0.9371187867900014
Generation:  20%|██        | 5/25 [22:43<1:05:18, 195.93s/it]Generation:  6
Best f1_score score: 0.9403874013171436
Generation:  24%|██▍       | 6/25 [23:04<43:10, 136.36s/it]  Generation:  7
Best f1_score score: 0.9403874013171436
Generation:  28%|██▊       | 7/25 [26:27<47:27, 158.19s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fcd19f0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745d4c70> 

Generation:  8
Best f1_score score: 0.9403874013171436
Generation:  32%|███▏      | 8/25 [36:32<1:25:08, 300.53s/it]Generation:  9
Best f1_score score: 0.9403874013171436
Generation:  36%|███▌      | 9/25 [41:28<1:19:43, 298.99s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454dc7dc0> 

Generation:  10
Best f1_score score: 0.9403874013171436
Generation:  40%|████      | 10/25 [51:33<1:38:21, 393.43s/it]Generation:  11
Best f1_score score: 0.9403874013171436
Generation:  44%|████▍     | 11/25 [53:22<1:11:31, 306.52s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452c42a40> 

Generation:  12
Best f1_score score: 0.9403874013171436
Generation:  48%|████▊     | 12/25 [1:03:28<1:26:07, 397.52s/it]Generation:  13
Best f1_score score: 0.9403874013171436
Generation:  52%|█████▏    | 13/25 [1:06:16<1:05:37, 328.15s/it]Generation:  14
Best f1_score score: 0.9406687786643232
Generation:  56%|█████▌    | 14/25 [1:07:37<46:26, 253.28s/it]  Generation:  15
Best f1_score score: 0.9406687786643232
Generation:  60%|██████    | 15/25 [1:10:55<39:27, 236.71s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545345e4d0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.9406687786643232
Generation:  64%|██████▍   | 16/25 [1:13:46<32:32, 216.93s/it]Generation:  17
Best f1_score score: 0.9406687786643232
Generation:  68%|██████▊   | 17/25 [1:19:02<32:54, 246.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fc36020> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  18
Best f1_score score: 0.9406687786643232
Generation:  72%|███████▏  | 18/25 [1:20:34<23:21, 200.26s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554571f4880> 

Generation:  19
Best f1_score score: 0.9406687786643232
Generation:  76%|███████▌  | 19/25 [1:30:39<32:10, 321.74s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554572bf250> 

Generation:  20
Best f1_score score: 0.9406687786643232
Generation:  80%|████████  | 20/25 [1:40:45<33:56, 407.23s/it]Generation:  21
Best f1_score score: 0.9411836243282485
Generation:  84%|████████▍ | 21/25 [1:43:09<21:52, 328.00s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff78af0> 

Generation:  22
Best f1_score score: 0.9411937904054621
Generation:  88%|████████▊ | 22/25 [1:53:15<20:34, 411.48s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456f79390> 

Generation:  23
Best f1_score score: 0.9411937904054621
Generation:  92%|█████████▏| 23/25 [2:03:20<15:39, 469.53s/it]Generation:  24
Best f1_score score: 0.9411937904054621
Generation:  96%|█████████▌| 24/25 [2:08:23<06:59, 419.56s/it]Generation:  25
Best f1_score score: 0.9411937904054621
Generation: 100%|██████████| 25/25 [2:13:51<00:00, 392.15s/it]Generation: 100%|██████████| 25/25 [2:13:51<00:00, 321.26s/it]
2024-10-23 22:27:20,131 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:41823' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'DataFrame-0bccd3cc4616e53a149f135f994325b6'} (stimulus_id='handle-worker-cleanup-1729747640.1315138')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.0081466890249, early_stopping=True,
                               hidden_layer_sizes=[167, 167],
                               learning_rate='invscaling',
                               learning_rate_init=0.0015159537261,
                               n_iter_no_change=32))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.991828308176916, 'accuracy': 0.9504043949336182, 'balanced_accuracy': 0.9480938717148479, 'logloss': 0.11359643245076559, 'f1': 0.9484498252671218}
test score: {'auroc': 0.9905592989204883, 'accuracy': 0.9487492373398414, 'balanced_accuracy': 0.9467835750973292, 'logloss': 0.12275780112512126, 'f1': 0.9467835750973292}
original test score: {'auroc': 0.9918101222374431, 'accuracy': 0.951189749847468, 'balanced_accuracy': 0.948830658004187, 'logloss': 0.11469031021954369, 'f1': 0.9492679605039156}
score end
725
lvl
0.01
type
MAR
num_run
1
class_full
finished
all finished
full run takes
10.490470184153981
hours
DONE
