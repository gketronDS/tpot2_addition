Run: 36
/cm/local/apps/slurm/var/spool/job1011692/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/725/725.pkl
working on 
../data/c/725/class_full_MNAR_0.5_2
1.839606523513794
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-23 13:03:31,083] A new study created in memory with name: no-name-519826de-5786-4967-95ec-ac1c7849ccf5
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-23 13:03:31,267] Trial 1 finished with value: 0.37339001153488927 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.37339001153488927.
running
running
running
running
[I 2024-10-23 13:03:31,535] Trial 0 finished with value: 0.24825540719527509 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.24825540719527509.
[I 2024-10-23 13:03:31,690] Trial 5 finished with value: 0.37339001153488927 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.24825540719527509.
running
running
[I 2024-10-23 13:03:31,964] Trial 9 finished with value: 0.3647608162415521 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.24825540719527509.
running
[I 2024-10-23 13:03:32,172] Trial 3 finished with value: 0.3647608162415521 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.24825540719527509.
running
[I 2024-10-23 13:03:34,506] Trial 12 finished with value: 0.24825540719527509 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6517, 'weights': 'uniform'}. Best is trial 0 with value: 0.24825540719527509.
running
[I 2024-10-23 13:03:34,942] Trial 13 finished with value: 0.24523765134213735 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 597, 'weights': 'uniform'}. Best is trial 13 with value: 0.24523765134213735.
running
[I 2024-10-23 13:03:35,065] Trial 21 finished with value: 0.37339001153488927 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 13 with value: 0.24523765134213735.
running
[I 2024-10-23 13:03:35,504] Trial 8 finished with value: 0.25688016438667133 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2154, 'weights': 'distance'}. Best is trial 13 with value: 0.24523765134213735.
running
[I 2024-10-23 13:03:35,720] Trial 2 finished with value: 0.24837875522273115 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3516, 'weights': 'uniform'}. Best is trial 13 with value: 0.24523765134213735.
running
[I 2024-10-23 13:03:37,042] Trial 16 finished with value: 0.242254016693 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 16 with value: 0.242254016693.
running
[I 2024-10-23 13:03:39,126] Trial 25 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.9224875927085607, 'alpha': 37, 'iterations': 2, 'learning_rate': 0.014961382971385285, 'p_miss': 0.10993672786218422}. Best is trial 16 with value: 0.242254016693.
running
[I 2024-10-23 13:03:41,246] Trial 11 finished with value: 0.23425939489774333 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 2, 'learning_rate': 0.0047935897845760595, 'p_miss': 0.2537708920371964}. Best is trial 11 with value: 0.23425939489774333.
running
[I 2024-10-23 13:03:41,717] Trial 17 finished with value: 0.2393471406046439 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 1, 'learning_rate': 0.029500722809765106, 'p_miss': 0.11150432196152828}. Best is trial 11 with value: 0.23425939489774333.
running
[I 2024-10-23 13:03:42,985] Trial 22 finished with value: 0.3475901837928146 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.8446686047130373, 'alpha': 30, 'iterations': 6, 'learning_rate': 0.006101438363379747, 'p_miss': 0.2754937813157265}. Best is trial 11 with value: 0.23425939489774333.
running
[I 2024-10-23 13:03:44,430] Trial 29 finished with value: 0.24086804267843193 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 1, 'learning_rate': 0.0118475577253646, 'p_miss': 0.22334701564383552}. Best is trial 11 with value: 0.23425939489774333.
running
[I 2024-10-23 13:03:45,026] Trial 30 finished with value: 0.22775663146790107 and parameters: {'model_name': 'VAE', 'batch_size': 122, 'iterations': 1, 'learning_rate': 0.0834140020659481, 'p_miss': 0.20857705603341484}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:03:48,793] Trial 4 finished with value: 0.24907026025986062 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:03:51,198] Trial 26 finished with value: 0.242254016693 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:03:56,781] Trial 10 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.61826995866601, 'alpha': 55, 'iterations': 160, 'learning_rate': 0.07283443746148964, 'p_miss': 0.04801456157262471}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:03:58,727] Trial 27 finished with value: 0.242254016693 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:04:00,289] Trial 28 finished with value: 0.242254016693 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:04:03,944] Trial 36 finished with value: 0.24393017956631055 and parameters: {'model_name': 'VAE', 'batch_size': 735, 'iterations': 1, 'learning_rate': 0.09444989206212746, 'p_miss': 0.19097576702761493}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:04:04,324] Trial 37 finished with value: 0.23854714485285874 and parameters: {'model_name': 'VAE', 'batch_size': 291, 'iterations': 1, 'learning_rate': 0.00032831554764689493, 'p_miss': 0.19858681459492009}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:04:24,744] Trial 24 finished with value: 0.3232266568627601 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:04:44,601] Trial 23 finished with value: 0.25045286746792306 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 55, 'learning_rate': 0.01343379361611867, 'p_miss': 0.17140709217596498}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:05:45,106] Trial 41 finished with value: 0.23711593558851515 and parameters: {'model_name': 'VAE', 'batch_size': 283, 'iterations': 15, 'learning_rate': 0.00029155824529200505, 'p_miss': 0.2542571922552016}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:06:21,991] Trial 40 finished with value: 0.23753918691891185 and parameters: {'model_name': 'VAE', 'batch_size': 348, 'iterations': 24, 'learning_rate': 0.00037761393235670975, 'p_miss': 0.24579149131887937}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:06:45,290] Trial 43 finished with value: 0.234630924725648 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 8, 'learning_rate': 0.001972605606796881, 'p_miss': 0.2929861780328735}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:06:48,432] Trial 42 finished with value: 0.23242275772340326 and parameters: {'model_name': 'VAE', 'batch_size': 125, 'iterations': 16, 'learning_rate': 0.0009578650046684658, 'p_miss': 0.2756151370712738}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:07:20,546] Trial 45 finished with value: 0.23673630690005956 and parameters: {'model_name': 'VAE', 'batch_size': 80, 'iterations': 7, 'learning_rate': 0.0015826713357401721, 'p_miss': 0.2319782214783424}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:07:44,820] Trial 20 finished with value: 0.37108081759680445 and parameters: {'model_name': 'GAIN', 'batch_size': 233, 'hint_rate': 0.10998036615026568, 'alpha': 29, 'iterations': 201, 'learning_rate': 0.09842607473379274, 'p_miss': 0.023420452461598233}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:10:18,352] Trial 14 finished with value: 0.25773454926340206 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 117, 'learning_rate': 0.07740881925255796, 'p_miss': 0.08655300985128413}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:10:53,586] Trial 6 finished with value: 0.37009368976641493 and parameters: {'model_name': 'GAIN', 'batch_size': 277, 'hint_rate': 0.9062220094864655, 'alpha': 98, 'iterations': 294, 'learning_rate': 0.0005996650461157056, 'p_miss': 0.018067051655492168}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:13:19,057] Trial 15 finished with value: 0.34810207473648797 and parameters: {'model_name': 'GAIN', 'batch_size': 80, 'hint_rate': 0.577350809311289, 'alpha': 59, 'iterations': 421, 'learning_rate': 0.0006084635914301951, 'p_miss': 0.2842390323717673}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:13:40,696] Trial 50 finished with value: 0.2352040943557511 and parameters: {'model_name': 'VAE', 'batch_size': 73, 'iterations': 4, 'learning_rate': 0.0019908272385089332, 'p_miss': 0.2932621099747993}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:14:36,216] Trial 51 finished with value: 0.23918468557254396 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 17, 'learning_rate': 0.00012143624744127883, 'p_miss': 0.26064442604485705}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:14:49,223] Trial 52 finished with value: 0.23725128258355754 and parameters: {'model_name': 'VAE', 'batch_size': 53, 'iterations': 3, 'learning_rate': 0.0031656679409120146, 'p_miss': 0.2966935805738967}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:16:43,536] Trial 18 finished with value: 0.2571208833084072 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 282, 'learning_rate': 0.024696627822226733, 'p_miss': 0.04352691893247129}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:31:09,987] Trial 19 finished with value: 0.24214837521750937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:50:10,356] Trial 34 finished with value: 0.25567679596583703 and parameters: {'model_name': 'VAE', 'batch_size': 485, 'iterations': 764, 'learning_rate': 0.0004054473244698605, 'p_miss': 0.21729154682459614}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:56:44,300] Trial 32 finished with value: 0.25365945195936035 and parameters: {'model_name': 'VAE', 'batch_size': 712, 'iterations': 818, 'learning_rate': 0.0002854270717681705, 'p_miss': 0.21077581419889913}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:57:04,879] Trial 57 finished with value: 0.23711950205540916 and parameters: {'model_name': 'VAE', 'batch_size': 119, 'iterations': 5, 'learning_rate': 0.0015167027881190184, 'p_miss': 0.2965425923203915}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:57:18,974] Trial 58 finished with value: 0.2379994462590962 and parameters: {'model_name': 'VAE', 'batch_size': 137, 'iterations': 3, 'learning_rate': 0.0016773901572850534, 'p_miss': 0.26814143132526347}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:57:55,866] Trial 59 finished with value: 0.2306897085906489 and parameters: {'model_name': 'VAE', 'batch_size': 44, 'iterations': 10, 'learning_rate': 0.0031061052184916667, 'p_miss': 0.24219559457215936}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:58:02,796] Trial 60 finished with value: 0.25779057555733875 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6473, 'weights': 'distance'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:58:03,924] Trial 61 finished with value: 0.37339001153488927 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 13:59:50,697] Trial 44 finished with value: 0.2594524638857227 and parameters: {'model_name': 'VAE', 'batch_size': 73, 'iterations': 924, 'learning_rate': 0.001578389701335305, 'p_miss': 0.28298016291238165}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:01:55,845] Trial 63 finished with value: 0.25052858384525534 and parameters: {'model_name': 'VAE', 'batch_size': 37, 'iterations': 38, 'learning_rate': 0.004407220654758863, 'p_miss': 0.25393109893387494}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:02:02,906] Trial 64 finished with value: 0.25774954829857977 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4090, 'weights': 'distance'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:14:42,106] Trial 33 finished with value: 0.24926303080653303 and parameters: {'model_name': 'VAE', 'batch_size': 709, 'iterations': 932, 'learning_rate': 0.00016128499353367355, 'p_miss': 0.2091655211028399}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:15:27,779] Trial 66 finished with value: 0.23610139741653285 and parameters: {'model_name': 'VAE', 'batch_size': 152, 'iterations': 10, 'learning_rate': 0.0008388382068481248, 'p_miss': 0.23898988024639267}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:27:44,440] Trial 49 finished with value: 0.25546546334178794 and parameters: {'model_name': 'VAE', 'batch_size': 65, 'iterations': 1344, 'learning_rate': 0.0017273071090689622, 'p_miss': 0.2941683118484575}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:27:51,329] Trial 68 finished with value: 0.24077579774218033 and parameters: {'model_name': 'VAE', 'batch_size': 42, 'iterations': 2, 'learning_rate': 0.0009300853262813341, 'p_miss': 0.27052792737876596}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:28:11,030] Trial 69 finished with value: 0.23489450044109525 and parameters: {'model_name': 'VAE', 'batch_size': 168, 'iterations': 4, 'learning_rate': 0.002729016438753175, 'p_miss': 0.24238105571337681}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:28:32,794] Trial 70 finished with value: 0.23200948115280343 and parameters: {'model_name': 'VAE', 'batch_size': 190, 'iterations': 2, 'learning_rate': 0.0067688662536975475, 'p_miss': 0.2432293899438928}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:28:33,268] Trial 71 finished with value: 0.24825540719527509 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:28:36,097] Trial 47 finished with value: 0.2554672853180578 and parameters: {'model_name': 'VAE', 'batch_size': 75, 'iterations': 1453, 'learning_rate': 0.0012220654446348047, 'p_miss': 0.29361664750735084}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:28:41,759] Trial 72 finished with value: 0.234532700476832 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2, 'learning_rate': 0.00652570901723917, 'p_miss': 0.16655481166330532}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:28:43,591] Trial 73 finished with value: 0.24126826889361058 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2, 'learning_rate': 0.007561753676371612, 'p_miss': 0.17076030804293307}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:28:44,582] Trial 74 finished with value: 0.2611850924725697 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 23, 'weights': 'distance'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:28:47,083] Trial 75 finished with value: 0.24513394367045796 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 482, 'weights': 'uniform'}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:29:10,911] Trial 76 finished with value: 0.23388981775611906 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 9, 'learning_rate': 0.003962808240039526, 'p_miss': 0.1375403612765637}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:29:18,566] Trial 78 finished with value: 0.23709150338036578 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 2, 'learning_rate': 0.006214673534644109, 'p_miss': 0.1539607268025771}. Best is trial 30 with value: 0.22775663146790107.
running
[I 2024-10-23 14:29:19,241] Trial 77 finished with value: 0.22727595075336798 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 9, 'learning_rate': 0.00407231075193415, 'p_miss': 0.15259408417133058}. Best is trial 77 with value: 0.22727595075336798.
running
[I 2024-10-23 14:29:22,653] Trial 79 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.01724692934844252, 'alpha': 2, 'iterations': 12, 'learning_rate': 0.033868509626588376, 'p_miss': 0.12732114508366268}. Best is trial 77 with value: 0.22727595075336798.
running
[I 2024-10-23 14:29:23,215] Trial 80 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.1581095259369279, 'alpha': 0, 'iterations': 11, 'learning_rate': 0.0038604351662173096, 'p_miss': 0.13533416474284948}. Best is trial 77 with value: 0.22727595075336798.
running
[I 2024-10-23 14:30:40,560] Trial 81 finished with value: 0.22372134838560812 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 25, 'learning_rate': 0.003639262507205108, 'p_miss': 0.13271889396993036}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 14:35:12,463] Trial 83 finished with value: 0.2554139563499279 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 95, 'learning_rate': 0.008787608610812058, 'p_miss': 0.08798582804029571}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 14:35:13,472] Trial 84 finished with value: 0.37339001153488927 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 14:36:44,061] Trial 85 finished with value: 0.22965721147413093 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 34, 'learning_rate': 0.0028070996333814696, 'p_miss': 0.14908205846391043}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 14:51:47,112] Trial 31 finished with value: 0.25490368052359363 and parameters: {'model_name': 'VAE', 'batch_size': 498, 'iterations': 1349, 'learning_rate': 0.00021171595023256718, 'p_miss': 0.019770143427805725}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 14:53:35,145] Trial 87 finished with value: 0.228222498487502 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 34, 'learning_rate': 0.00273365794872704, 'p_miss': 0.13886053618548247}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 14:55:08,880] Trial 88 finished with value: 0.2286956117313111 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 33, 'learning_rate': 0.0022556024810207677, 'p_miss': 0.1493544373424935}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 14:57:04,957] Trial 89 finished with value: 0.22738118124446993 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 41, 'learning_rate': 0.0024702339988126464, 'p_miss': 0.15189941270441584}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 14:59:56,959] Trial 90 finished with value: 0.2398498183828041 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 45, 'learning_rate': 0.0027856566716761835, 'p_miss': 0.15312581997143218}. Best is trial 81 with value: 0.22372134838560812.
running
[I 2024-10-23 15:01:45,269] Trial 91 finished with value: 0.22331024764560184 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 34, 'learning_rate': 0.002358234604516585, 'p_miss': 0.10971008459165416}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:02:02,811] Trial 48 finished with value: 0.25516334187015405 and parameters: {'model_name': 'VAE', 'batch_size': 83, 'iterations': 2306, 'learning_rate': 0.0014741482904660692, 'p_miss': 0.29448126071659697}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:02:14,879] Trial 92 finished with value: 0.2456018698873844 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:02:21,700] Trial 93 finished with value: 0.2578353751955591 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:04:04,909] Trial 94 finished with value: 0.23040686213356115 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 34, 'learning_rate': 0.00232154601876525, 'p_miss': 0.120318656985602}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:04:06,858] Trial 95 finished with value: 0.25095819634400474 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 32, 'learning_rate': 0.04847500279251988, 'p_miss': 0.100429185610106}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:05:46,082] Trial 96 finished with value: 0.22359226904207014 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 28, 'learning_rate': 0.0025224518756973794, 'p_miss': 0.10739148408664781}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:07:45,855] Trial 97 finished with value: 0.2394723929070141 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 65, 'learning_rate': 0.0024972137672609833, 'p_miss': 0.12193320940053032}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:09:11,603] Trial 99 finished with value: 0.23110424914892608 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 27, 'learning_rate': 0.003542395621758008, 'p_miss': 0.14473795152535035}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:09:34,512] Trial 98 finished with value: 0.25504761592743924 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 67, 'learning_rate': 0.004433563107270153, 'p_miss': 0.1436274692579676}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:16:50,846] Trial 101 finished with value: 0.25414036668883405 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 137, 'learning_rate': 0.005153027976156041, 'p_miss': 0.10842357832838988}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:17:55,863] Trial 102 finished with value: 0.25267949175417403 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 21, 'learning_rate': 0.019861109400873836, 'p_miss': 0.18100130380932505}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:22:01,051] Trial 100 finished with value: 0.25648777969770586 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 192, 'learning_rate': 0.004987236436472703, 'p_miss': 0.18420594679501268}. Best is trial 91 with value: 0.22331024764560184.
[I 2024-10-23 15:22:01,198] Trial 103 finished with value: 0.2283657576809238 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 85, 'learning_rate': 0.0011704450320655505, 'p_miss': 0.07198762988271917}. Best is trial 91 with value: 0.22331024764560184.
running
running
[I 2024-10-23 15:26:37,341] Trial 105 finished with value: 0.22756416291823056 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 96, 'learning_rate': 0.0006237470044750427, 'p_miss': 0.07771407810706066}. Best is trial 91 with value: 0.22331024764560184.
running
[I 2024-10-23 15:27:08,144] Trial 104 finished with value: 0.22197078227362796 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 90, 'learning_rate': 0.0011723834446949219, 'p_miss': 0.07559086685842793}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:32:24,612] Trial 107 finished with value: 0.22754370576774785 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 100, 'learning_rate': 0.0009535544433873886, 'p_miss': 0.06873443441096871}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:32:29,395] Trial 106 finished with value: 0.22638934950916742 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 99, 'learning_rate': 0.0005514838627967899, 'p_miss': 0.057999302971770555}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:47:39,649] Trial 109 finished with value: 0.23919013299911426 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 301, 'learning_rate': 0.0006352483084900646, 'p_miss': 0.06150680712247002}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:49:04,289] Trial 39 finished with value: 0.25458772124113377 and parameters: {'model_name': 'VAE', 'batch_size': 346, 'iterations': 2600, 'learning_rate': 0.0003547834233797052, 'p_miss': 0.24878532493380387}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:49:16,282] Trial 108 finished with value: 0.22824889822781805 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 325, 'learning_rate': 0.0004202738320968903, 'p_miss': 0.06116981361019859}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:49:16,756] Trial 112 finished with value: 0.24825540719527509 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:51:45,588] Trial 111 finished with value: 0.23655511554540345 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 52, 'learning_rate': 0.0004582588550443509, 'p_miss': 0.04511127941219273}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:52:18,322] Trial 114 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.3581988458115562, 'alpha': 98, 'iterations': 110, 'learning_rate': 0.0005163342105944448, 'p_miss': 0.03466477550049876}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:52:40,325] Trial 110 finished with value: 0.22696301442911332 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 100, 'learning_rate': 0.0005534001050208365, 'p_miss': 0.037283560451790834}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 15:55:25,064] Trial 113 finished with value: 0.22433009522293265 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 109, 'learning_rate': 0.0007015098623920523, 'p_miss': 0.08495055486744371}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:00:14,407] Trial 116 finished with value: 0.22687259374012153 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 149, 'learning_rate': 0.0007086441914445958, 'p_miss': 0.09311730941404672}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:01:43,055] Trial 117 finished with value: 0.2244187336227906 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 134, 'learning_rate': 0.0006972232838403277, 'p_miss': 0.08483413200833159}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:02:00,128] Trial 115 finished with value: 0.22834177636105712 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 171, 'learning_rate': 0.0007532262475886784, 'p_miss': 0.09052272205864216}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:02:32,619] Trial 53 finished with value: 0.25621697880899 and parameters: {'model_name': 'VAE', 'batch_size': 147, 'iterations': 2574, 'learning_rate': 0.0011161071231851384, 'p_miss': 0.20586336900220958}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:04:57,181] Trial 120 finished with value: 0.22738391871396058 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 72, 'learning_rate': 0.0007612258647889992, 'p_miss': 0.09783129094947214}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:07:06,244] Trial 118 finished with value: 0.2227864679991073 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 167, 'learning_rate': 0.0006323331229006273, 'p_miss': 0.09765924828797548}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:09:55,838] Trial 121 finished with value: 0.23143092420649522 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 138, 'learning_rate': 0.0007560771798263353, 'p_miss': 0.09825801003000598}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:09:57,507] Trial 119 finished with value: 0.22638015475529988 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 157, 'learning_rate': 0.0007620901387108558, 'p_miss': 0.09519204907710681}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:10:04,103] Trial 125 finished with value: 0.257817545270197 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4900, 'weights': 'distance'}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:10:27,227] Trial 38 finished with value: 0.2560267235111913 and parameters: {'model_name': 'VAE', 'batch_size': 40, 'iterations': 3405, 'learning_rate': 0.0003735584548648272, 'p_miss': 0.2561762642600339}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:19:06,159] Trial 123 finished with value: 0.2332782346618986 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 246, 'learning_rate': 0.000521953586708586, 'p_miss': 0.012727855927075982}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:19:40,046] Trial 124 finished with value: 0.22603055914187936 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 219, 'learning_rate': 0.00024108914760004454, 'p_miss': 0.1104309795833125}. Best is trial 104 with value: 0.22197078227362796.
running
[I 2024-10-23 16:20:56,714] Trial 126 finished with value: 0.22135153963039672 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 201, 'learning_rate': 0.0005368327112691409, 'p_miss': 0.011439464818407921}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 16:23:02,941] Trial 127 finished with value: 0.22881994162001237 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 244, 'learning_rate': 0.0005458009532623608, 'p_miss': 0.10956289299218389}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 16:39:32,202] Trial 128 finished with value: 0.24569932868918376 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 430, 'learning_rate': 0.0005718703789764786, 'p_miss': 0.0810397920238806}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 16:40:49,485] Trial 131 finished with value: 0.224336494247322 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 408, 'learning_rate': 0.00022389284513833993, 'p_miss': 0.08176904939843098}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 16:41:02,327] Trial 129 finished with value: 0.22227832338657105 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 431, 'learning_rate': 0.00023042198063611495, 'p_miss': 0.10897156882664284}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 16:45:05,571] Trial 130 finished with value: 0.22292330956580284 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 490, 'learning_rate': 0.0002060730242142452, 'p_miss': 0.08046208776246476}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 16:48:40,291] Trial 132 finished with value: 0.2322126853600201 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 158, 'learning_rate': 0.000236698405691626, 'p_miss': 0.10380744014161664}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 16:59:49,025] Trial 55 finished with value: 0.25650699199983673 and parameters: {'model_name': 'VAE', 'batch_size': 136, 'iterations': 3651, 'learning_rate': 0.001072406773891909, 'p_miss': 0.2145905540280566}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 17:08:05,837] Trial 134 finished with value: 0.24083843783152797 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 17:08:32,759] Trial 133 finished with value: 0.2418769803962813 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 17:12:57,337] Trial 135 finished with value: 0.24119417891702039 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 126 with value: 0.22135153963039672.
running
[I 2024-10-23 17:16:46,513] Trial 136 finished with value: 0.2200299742149297 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 514, 'learning_rate': 0.00017565339842149592, 'p_miss': 0.08099841156899656}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:20:47,339] Trial 46 finished with value: 0.25464784731083306 and parameters: {'model_name': 'VAE', 'batch_size': 84, 'iterations': 5539, 'learning_rate': 0.0015234306380078001, 'p_miss': 0.2995061706706355}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:24:17,059] Trial 137 finished with value: 0.22943353165061753 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 508, 'learning_rate': 0.00016233055979175765, 'p_miss': 0.08126989743930733}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:33:45,658] Trial 138 finished with value: 0.23678378093595773 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 526, 'learning_rate': 0.00017696039378431607, 'p_miss': 0.11607215953151495}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:33:46,341] Trial 139 finished with value: 0.22173778941636985 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 545, 'learning_rate': 0.00017193240724256047, 'p_miss': 0.08434100435351202}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:33:46,931] Trial 145 finished with value: 0.3647608162415521 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:34:47,300] Trial 144 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.35197094696605935, 'alpha': 76, 'iterations': 223, 'learning_rate': 0.0002139799453415985, 'p_miss': 0.08542678996756475}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:37:01,721] Trial 140 finished with value: 0.2261098793676954 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 485, 'learning_rate': 0.00018435865214187338, 'p_miss': 0.08102251474858822}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:42:19,880] Trial 35 finished with value: 0.2555286861231719 and parameters: {'model_name': 'VAE', 'batch_size': 581, 'iterations': 4485, 'learning_rate': 0.000533613966699117, 'p_miss': 0.21739539117276277}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:46:37,197] Trial 141 finished with value: 0.22466237916277407 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 581, 'learning_rate': 0.00018307689538992348, 'p_miss': 0.1171118855308021}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:48:59,997] Trial 142 finished with value: 0.22837026526147045 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 505, 'learning_rate': 0.00015163530597216753, 'p_miss': 0.08249882449492121}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 17:55:19,376] Trial 143 finished with value: 0.22594513201715055 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 474, 'learning_rate': 0.0001835117693549263, 'p_miss': 0.12028191422602119}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:04:54,424] Trial 146 finished with value: 0.22155786508369107 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 647, 'learning_rate': 0.00013276573521604586, 'p_miss': 0.08730048442835656}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:06:40,947] Trial 148 finished with value: 0.23205820977971497 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 632, 'learning_rate': 0.00010706945677237611, 'p_miss': 0.07332860234657222}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:07:17,369] Trial 147 finished with value: 0.22400929357057517 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 670, 'learning_rate': 0.00010995567916994889, 'p_miss': 0.07344257709494989}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:13:36,093] Trial 149 finished with value: 0.22854261603098855 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 658, 'learning_rate': 0.00010754949164797424, 'p_miss': 0.10682521708456066}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:16:48,091] Trial 150 finished with value: 0.22609361353258467 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 651, 'learning_rate': 0.00012460739657779862, 'p_miss': 0.07096322260653776}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:28:27,161] Trial 151 finished with value: 0.22813451733051018 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 671, 'learning_rate': 0.00010070747609046837, 'p_miss': 0.1275953738856341}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:32:54,497] Trial 156 finished with value: 0.23104319008895818 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 351, 'learning_rate': 0.000142269966022997, 'p_miss': 0.09036689584900842}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:33:53,458] Trial 152 finished with value: 0.22340442996851162 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 692, 'learning_rate': 0.00012125919098673764, 'p_miss': 0.12893854427028442}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:39:39,172] Trial 153 finished with value: 0.22361217873067973 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 665, 'learning_rate': 0.00010662747024787305, 'p_miss': 0.07435625947941726}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:48:32,379] Trial 158 finished with value: 0.2266551458514814 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 384, 'learning_rate': 0.0002754119278054187, 'p_miss': 0.06645635916421222}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:48:35,941] Trial 162 finished with value: 0.24742346824247297 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2079, 'weights': 'uniform'}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 18:58:25,271] Trial 154 finished with value: 0.2503901954515927 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 1021, 'learning_rate': 0.00031094165069103254, 'p_miss': 0.0663386538326405}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 19:06:13,857] Trial 155 finished with value: 0.23942245748548663 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 1097, 'learning_rate': 0.00013279437562866884, 'p_miss': 0.10309547614342113}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 19:07:28,282] Trial 157 finished with value: 0.25024971167950516 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1074, 'learning_rate': 0.0003457112873294966, 'p_miss': 0.054396979008446734}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 19:25:10,912] Trial 159 finished with value: 0.25126893801435257 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 984, 'learning_rate': 0.0003185704797772295, 'p_miss': 0.06613039551956097}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 19:36:15,851] Trial 7 finished with value: 0.2557284741450263 and parameters: {'model_name': 'VAE', 'batch_size': 162, 'iterations': 8024, 'learning_rate': 0.0007307531922100351, 'p_miss': 0.1455135965403791}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 19:36:17,100] Trial 160 finished with value: 0.2459199720449344 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 1031, 'learning_rate': 0.0003126711352222807, 'p_miss': 0.05425313396479603}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 19:47:15,206] Trial 161 finished with value: 0.2376369178551993 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 1176, 'learning_rate': 0.00012917168911265035, 'p_miss': 0.1285080027422331}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 19:50:03,387] Trial 163 finished with value: 0.22866035106650157 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1071, 'learning_rate': 0.00013354757874266938, 'p_miss': 0.10288537397299062}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 19:51:08,541] Trial 82 finished with value: 0.26022204912331803 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 6370, 'learning_rate': 0.053780903574542495, 'p_miss': 0.14537654411774403}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:00:57,099] Trial 166 finished with value: 0.2281019694402374 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 788, 'learning_rate': 0.0001185238125357861, 'p_miss': 0.07462746831495216}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:08:07,203] Trial 165 finished with value: 0.25173957570669764 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1108, 'learning_rate': 0.0013068788023693884, 'p_miss': 0.05327775229351311}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:09:05,948] Trial 167 finished with value: 0.22939605288493586 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 747, 'learning_rate': 0.00012432552775722025, 'p_miss': 0.1291771339780032}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:09:07,759] Trial 174 finished with value: 0.23904592164783986 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 20, 'learning_rate': 0.00022356593083597222, 'p_miss': 0.1604074938247059}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:09:26,189] Trial 62 finished with value: 0.25362742215480055 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 6075, 'learning_rate': 0.004539070662847366, 'p_miss': 0.24713953795244317}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:13:34,278] Trial 164 finished with value: 0.24252687384288324 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 1247, 'learning_rate': 0.00012949036837009399, 'p_miss': 0.05299678544644154}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:17:23,283] Trial 168 finished with value: 0.23249727628190037 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 814, 'learning_rate': 0.0001394182404998777, 'p_miss': 0.07496720535709431}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:18:37,059] Trial 86 finished with value: 0.26304621934406625 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6884, 'learning_rate': 0.0026598185321547265, 'p_miss': 0.14278849823750772}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:22:32,432] Trial 169 finished with value: 0.22229262504750094 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 806, 'learning_rate': 0.00011748596174932245, 'p_miss': 0.07450610776436829}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:27:54,208] Trial 171 finished with value: 0.24240774669499854 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 778, 'learning_rate': 0.00022101429180258983, 'p_miss': 0.0738745749568841}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:27:55,077] Trial 182 finished with value: 0.37339001153488927 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:27:55,896] Trial 178 finished with value: 0.2498576283990391 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 277, 'learning_rate': 0.0019102978631863109, 'p_miss': 0.09158925970480224}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:29:21,419] Trial 179 finished with value: 0.2308666763088249 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 292, 'learning_rate': 0.00025955406889113396, 'p_miss': 0.08545984803544855}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:30:41,731] Trial 176 finished with value: 0.23215131423524907 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 390, 'learning_rate': 0.00015865485692338822, 'p_miss': 0.08755706113154241}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:34:41,202] Trial 54 finished with value: 0.25688740621502226 and parameters: {'model_name': 'VAE', 'batch_size': 132, 'iterations': 8715, 'learning_rate': 0.0012908857594471953, 'p_miss': 0.2227410554117956}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:36:38,568] Trial 183 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.7193485393367505, 'alpha': 78, 'iterations': 1705, 'learning_rate': 0.00015943448689866805, 'p_miss': 0.09285074651808291}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:36:47,298] Trial 185 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.7539002032430828, 'alpha': 77, 'iterations': 1526, 'learning_rate': 0.00016214838990796934, 'p_miss': 0.09580649967095288}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:40:46,827] Trial 189 finished with value: 0.2356041379512976 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 79, 'learning_rate': 0.00019676780195468976, 'p_miss': 0.07839805185414671}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:41:07,357] Trial 181 finished with value: 0.22333510661299366 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 402, 'learning_rate': 0.0002610954341630419, 'p_miss': 0.09298858426888028}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:42:03,298] Trial 188 finished with value: 0.2360856779778593 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 125, 'learning_rate': 0.0001119878005928562, 'p_miss': 0.07886414859244355}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:42:33,113] Trial 173 finished with value: 0.24511078277659717 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 817, 'learning_rate': 0.0013332846734177867, 'p_miss': 0.09391422992581375}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:43:18,944] Trial 65 finished with value: 0.2560006836976553 and parameters: {'model_name': 'VAE', 'batch_size': 33, 'iterations': 6491, 'learning_rate': 0.0009730796662447976, 'p_miss': 0.23512146531024297}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:43:51,680] Trial 192 finished with value: 0.22954281883123673 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 26, 'learning_rate': 0.003288188587120584, 'p_miss': 0.024232418340444553}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:45:00,021] Trial 194 finished with value: 0.23538811211980654 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 26, 'learning_rate': 0.0002081634571126995, 'p_miss': 0.09947357291551062}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:46:43,361] Trial 190 finished with value: 0.2527373134959906 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 124, 'learning_rate': 0.0033347069292025792, 'p_miss': 0.11446713290757629}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 20:59:29,457] Trial 191 finished with value: 0.2476268908879704 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 397, 'learning_rate': 0.003472814706684371, 'p_miss': 0.09642183427434628}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 21:02:27,984] Trial 196 finished with value: 0.2434014003900276 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 371, 'learning_rate': 0.0008563944786264579, 'p_miss': 0.11444975897649794}. Best is trial 136 with value: 0.2200299742149297.
running
[I 2024-10-23 21:02:51,615] Trial 198 finished with value: 0.235543917479956 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 57, 'learning_rate': 0.0004101706012712673, 'p_miss': 0.08267834287489619}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:04:41,791] Trial 195 finished with value: 0.2329404959739673 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 359, 'learning_rate': 0.00010175451999039294, 'p_miss': 0.11406459166969068}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:06:21,887] Trial 197 finished with value: 0.2268267631974167 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 412, 'learning_rate': 0.0003883363968980226, 'p_miss': 0.08419014840345271}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:06:41,829] Trial 193 finished with value: 0.24982773186480722 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 483, 'learning_rate': 0.003326203544307122, 'p_miss': 0.1152663728275827}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:14:29,101] Trial 177 finished with value: 0.24961226594007285 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 1516, 'learning_rate': 0.00026442185091535704, 'p_miss': 0.09393828220587211}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:17:23,221] Trial 170 finished with value: 0.25046325117210977 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 1919, 'learning_rate': 0.00021410875730163797, 'p_miss': 0.07752692169722965}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:18:30,482] Trial 199 finished with value: 0.24808312620691705 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 573, 'learning_rate': 0.0004742330340094357, 'p_miss': 0.08516876115157206}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:25:45,407] Trial 175 finished with value: 0.25110245018830174 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 1691, 'learning_rate': 0.0002270407206220591, 'p_miss': 0.0926237870160404}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:26:19,940] Trial 67 finished with value: 0.2563665870269941 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 8055, 'learning_rate': 0.002552462993766262, 'p_miss': 0.26852747214605055}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:26:25,053] Trial 172 finished with value: 0.25500571519751436 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 1777, 'learning_rate': 0.00021673248523429962, 'p_miss': 0.07401865742026598}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:27:11,999] Trial 180 finished with value: 0.2500449448076898 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 1824, 'learning_rate': 0.00016015914261743655, 'p_miss': 0.08727486968702548}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:28:18,128] Trial 186 finished with value: 0.24380108334904743 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 1626, 'learning_rate': 0.00019933381899557435, 'p_miss': 0.0949687774449383}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:28:30,754] Trial 122 finished with value: 0.2552143237556894 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 7533, 'learning_rate': 0.0005222052341944866, 'p_miss': 0.02692764036235812}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:28:37,996] Trial 187 finished with value: 0.24528201845514036 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 1795, 'learning_rate': 0.0001661609469474614, 'p_miss': 0.09455255595911202}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:28:50,698] Trial 184 finished with value: 0.24667454938053668 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 1770, 'learning_rate': 0.0002648522970100211, 'p_miss': 0.08682876841521797}. Best is trial 136 with value: 0.2200299742149297.
[I 2024-10-23 21:28:57,281] Trial 56 finished with value: 0.2567105936816465 and parameters: {'model_name': 'VAE', 'batch_size': 120, 'iterations': 9378, 'learning_rate': 0.001812163483878709, 'p_miss': 0.29749540217249154}. Best is trial 136 with value: 0.2200299742149297.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0.2200299742149297
{'model_name': 'VAE', 'batch_size': 7, 'iterations': 514, 'learning_rate': 0.00017565339842149592, 'p_miss': 0.08099841156899656}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4bb0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747185b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.4905032142970202
Generation:   4%|▍         | 1/25 [02:15<54:04, 135.21s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467fbf700> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  2
Best f1_score score: 0.5120602357149371
Generation:   8%|▊         | 2/25 [04:47<55:34, 144.99s/it]Generation:  3
Best f1_score score: 0.5120602357149371
Generation:  12%|█▏        | 3/25 [05:06<32:04, 87.46s/it] Generation:  4
Best f1_score score: 0.5120602357149371
Generation:  16%|█▌        | 4/25 [05:38<22:58, 65.65s/it]Generation:  5
Best f1_score score: 0.5154318094941518
Generation:  20%|██        | 5/25 [07:08<24:49, 74.49s/it]Generation:  6
Best f1_score score: 0.5198194211026845
Generation:  24%|██▍       | 6/25 [07:17<16:33, 52.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474734430> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.5198194211026845
Generation:  28%|██▊       | 7/25 [07:26<11:27, 38.20s/it]Generation:  8
Best f1_score score: 0.5198194211026845
Generation:  32%|███▏      | 8/25 [07:35<08:10, 28.87s/it]Generation:  9
Best f1_score score: 0.5198194211026845
Generation:  36%|███▌      | 9/25 [08:29<09:48, 36.76s/it]Generation:  10
Best f1_score score: 0.5198194211026845
Generation:  40%|████      | 10/25 [08:48<07:46, 31.10s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465646cb0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.5198194211026845
Generation:  44%|████▍     | 11/25 [09:04<06:12, 26.60s/it]Generation:  12
Best f1_score score: 0.5198194211026845
Generation:  48%|████▊     | 12/25 [09:41<06:26, 29.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465062fb0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  13
Best f1_score score: 0.5198194211026845
Generation:  52%|█████▏    | 13/25 [09:51<04:44, 23.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465b0e260> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.5198194211026845
Generation:  56%|█████▌    | 14/25 [10:18<04:31, 24.64s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554651f9a80> 

Generation:  15
Best f1_score score: 0.5198194211026845
Generation:  60%|██████    | 15/25 [20:29<33:35, 201.50s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546553f250> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  16
Best f1_score score: 0.5198194211026845
Generation:  64%|██████▍   | 16/25 [20:49<22:01, 146.79s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474716c20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.5198194211026845
Generation:  68%|██████▊   | 17/25 [21:18<14:50, 111.31s/it]Generation:  18
Best f1_score score: 0.5198194211026845
Generation:  72%|███████▏  | 18/25 [21:41<09:55, 85.01s/it] Generation:  19
Best f1_score score: 0.5198194211026845
Generation:  76%|███████▌  | 19/25 [21:58<06:27, 64.58s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554655e7700> 

Generation:  20
Best f1_score score: 0.5198194211026845
Generation:  80%|████████  | 20/25 [32:12<19:06, 229.31s/it]Generation:  21
Best f1_score score: 0.5198194211026845
Generation:  84%|████████▍ | 21/25 [32:33<11:07, 166.86s/it]Generation:  22
Best f1_score score: 0.5198194211026845
Generation:  88%|████████▊ | 22/25 [32:55<06:10, 123.42s/it]Generation:  23
Best f1_score score: 0.5198194211026845
Generation:  92%|█████████▏| 23/25 [33:15<03:04, 92.38s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465707310> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  24
Best f1_score score: 0.5198194211026845
Generation:  96%|█████████▌| 24/25 [33:30<01:09, 69.08s/it]Generation:  25
Best f1_score score: 0.5198194211026845
Generation: 100%|██████████| 25/25 [33:48<00:00, 53.99s/it]Generation: 100%|██████████| 25/25 [33:52<00:00, 81.32s/it]
2024-10-23 22:03:05,143 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33351' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b4156db9ce191823decf6a779a0b8ff6', 'ndarray-422b2c53f5e51e71a00dd009dc06b86a'} (stimulus_id='handle-worker-cleanup-1729746185.143113')
Fitted
Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=183.2842660111041,
                                    class_weight='balanced', max_iter=1000,
                                    n_jobs=1, solver='saga'))])
score start
train score: {'auroc': 0.5347790775743808, 'accuracy': 0.5257134137036472, 'balanced_accuracy': 0.5279425849355595, 'logloss': 0.691211641721616, 'f1': 0.5218240157052899}
original test score: {'auroc': 0.6276798387071836, 'accuracy': 0.6150091519219036, 'balanced_accuracy': 0.5830753864564747, 'logloss': 0.6895930433152374, 'f1': 0.5827084976708623}
imputed test score: {'auroc': 0.513722722311039, 'accuracy': 0.5106772422208664, 'balanced_accuracy': 0.5140698296468318, 'logloss': 0.6938090763296064, 'f1': 0.5074337713105441}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745844f0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.7365565240887385
Generation:   4%|▍         | 1/25 [09:05<3:38:17, 545.72s/it]Generation:  2
Best f1_score score: 0.737839287913481
Generation:   8%|▊         | 2/25 [18:28<3:33:04, 555.83s/it]Generation:  3
Best f1_score score: 0.7401957892867019
Generation:  12%|█▏        | 3/25 [20:52<2:14:52, 367.86s/it]Generation:  4
Best f1_score score: 0.7401957892867019
Generation:  16%|█▌        | 4/25 [22:16<1:29:26, 255.53s/it]Generation:  5
Best f1_score score: 0.7401957892867019
Generation:  20%|██        | 5/25 [24:10<1:08:13, 204.66s/it]Generation:  6
Best f1_score score: 0.7401957892867019
Generation:  24%|██▍       | 6/25 [24:54<47:30, 150.04s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d61e40> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.7403616716572928
Generation:  28%|██▊       | 7/25 [25:30<33:48, 112.71s/it]Generation:  8
Best f1_score score: 0.7403616716572928
Generation:  32%|███▏      | 8/25 [27:34<32:58, 116.37s/it]Generation:  9
Best f1_score score: 0.7403616716572928
Generation:  36%|███▌      | 9/25 [28:11<24:25, 91.58s/it] Generation:  10
Best f1_score score: 0.7403616716572928
Generation:  40%|████      | 10/25 [28:53<19:03, 76.23s/it]Generation:  11
Best f1_score score: 0.7403616716572928
Generation:  44%|████▍     | 11/25 [37:57<51:12, 219.50s/it]Generation:  12
Best f1_score score: 0.7403616716572928
Generation:  48%|████▊     | 12/25 [40:17<42:18, 195.27s/it]Generation:  13
Best f1_score score: 0.7403616716572928
Generation:  52%|█████▏    | 13/25 [45:15<45:16, 226.39s/it]Generation:  14
Best f1_score score: 0.7403616716572928
Generation:  56%|█████▌    | 14/25 [47:13<35:27, 193.44s/it]Generation:  15
Best f1_score score: 0.7403616716572928
Generation:  60%|██████    | 15/25 [47:51<24:27, 146.73s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454de50f0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.7403616716572928
Generation:  64%|██████▍   | 16/25 [49:50<20:46, 138.46s/it]Generation:  17
Best f1_score score: 0.7403765168700125
Generation:  68%|██████▊   | 17/25 [51:01<15:44, 118.08s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d5dde0> 

Generation:  18
Best f1_score score: 0.7405686077712602
Generation:  72%|███████▏  | 18/25 [1:01:08<30:53, 264.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456746470> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.7405686077712602
Generation:  76%|███████▌  | 19/25 [1:01:48<19:44, 197.40s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554549726e0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.7405686077712602
Generation:  80%|████████  | 20/25 [1:02:26<12:28, 149.74s/it]Generation:  21
Best f1_score score: 0.7405686077712602
Generation:  84%|████████▍ | 21/25 [1:11:30<17:51, 267.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d49d50> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.7405686077712602
Generation:  88%|████████▊ | 22/25 [1:12:07<09:56, 198.68s/it]Generation:  23
Best f1_score score: 0.7405686077712602
Generation:  92%|█████████▏| 23/25 [1:17:24<07:48, 234.12s/it]Generation:  24
Best f1_score score: 0.7405686077712602
Generation:  96%|█████████▌| 24/25 [1:18:04<02:55, 175.89s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454f6d930> 

Generation:  25
Best f1_score score: 0.7405686077712602
Generation: 100%|██████████| 25/25 [1:28:09<00:00, 304.72s/it]Generation: 100%|██████████| 25/25 [1:28:09<00:00, 211.59s/it]
2024-10-23 23:31:24,577 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:40625' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-ae20a5c165f0dfb055c55dc03503e4ce', 'ndarray-422b2c53f5e51e71a00dd009dc06b86a'} (stimulus_id='handle-worker-cleanup-1729751484.577321')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='median')),
                ('logisticregression',
                 LogisticRegression(C=0.2242770496244, max_iter=1000, n_jobs=1,
                                    penalty='l1', solver='saga'))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.8166797108543766, 'accuracy': 0.7678925682893332, 'balanced_accuracy': 0.7323927651678589, 'logloss': 0.476834826098966, 'f1': 0.7404153281617527}
test score: {'auroc': 0.811483609421529, 'accuracy': 0.7748627211714461, 'balanced_accuracy': 0.738588749702369, 'logloss': 0.48152117112537585, 'f1': 0.7472198154526726}
original test score: {'auroc': 0.9872984999397006, 'accuracy': 0.9267846247712019, 'balanced_accuracy': 0.9334736708649389, 'logloss': 0.2643609079042903, 'f1': 0.9252210518631623}
score end
725
lvl
0.5
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
10.470474955770705
hours
DONE
