Run: 7
/cm/local/apps/slurm/var/spool/job997216/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/32/32.pkl
working on 
../data/c/32/class_full_MAR_0.3_1
0.7800474166870117
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-12 09:43:58,167] A new study created in memory with name: no-name-5b6d0f02-f74c-4119-a4aa-798c7788cb94
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-12 09:43:58,651] Trial 13 finished with value: 0.3044097135839045 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 13 with value: 0.3044097135839045.
running
[I 2024-10-12 09:43:58,884] Trial 9 finished with value: 0.3191849923870601 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 13 with value: 0.3044097135839045.
running
[I 2024-10-12 09:43:59,169] Trial 10 finished with value: 0.5332893428696843 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 13 with value: 0.3044097135839045.
running
[I 2024-10-12 09:43:59,390] Trial 5 finished with value: 0.3191849923870601 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 13 with value: 0.3044097135839045.
running
[I 2024-10-12 09:43:59,613] Trial 1 finished with value: 0.5332893428696843 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 13 with value: 0.3044097135839045.
running
[I 2024-10-12 09:43:59,888] Trial 16 finished with value: 0.3191849923870601 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 13 with value: 0.3044097135839045.
running
[I 2024-10-12 09:44:06,859] Trial 11 finished with value: 0.2807938209476865 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4377, 'weights': 'uniform'}. Best is trial 11 with value: 0.2807938209476865.
running
[I 2024-10-12 09:44:07,570] Trial 3 finished with value: 0.2903828013022735 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8580, 'weights': 'distance'}. Best is trial 11 with value: 0.2807938209476865.
running
[I 2024-10-12 09:44:07,744] Trial 22 finished with value: 0.3191849923870601 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 11 with value: 0.2807938209476865.
running
[I 2024-10-12 09:44:08,048] Trial 23 finished with value: 0.3044097135839045 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.2807938209476865.
running
[I 2024-10-12 09:44:11,657] Trial 19 finished with value: 0.29379887882959005 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 11 with value: 0.2807938209476865.
running
[I 2024-10-12 09:44:15,387] Trial 24 finished with value: 0.29409265139256136 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5693, 'weights': 'uniform'}. Best is trial 11 with value: 0.2807938209476865.
running
[I 2024-10-12 09:44:21,846] Trial 26 finished with value: 0.27730166565947423 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5184, 'weights': 'distance'}. Best is trial 26 with value: 0.27730166565947423.
running
[I 2024-10-12 09:44:28,017] Trial 27 finished with value: 0.2903828013022735 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8738, 'weights': 'distance'}. Best is trial 26 with value: 0.27730166565947423.
running
[I 2024-10-12 09:44:30,433] Trial 2 finished with value: 0.22966321613027674 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 2 with value: 0.22966321613027674.
running
[I 2024-10-12 09:44:31,566] Trial 28 finished with value: 0.2703641408498706 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3405, 'weights': 'uniform'}. Best is trial 2 with value: 0.22966321613027674.
running
[I 2024-10-12 09:44:34,858] Trial 20 finished with value: 0.22120003992787937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random'}. Best is trial 20 with value: 0.22120003992787937.
running
[I 2024-10-12 09:44:45,072] Trial 25 finished with value: 0.26299209933685014 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 20 with value: 0.22120003992787937.
running
[I 2024-10-12 09:44:52,553] Trial 7 finished with value: 0.3221928476435447 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 38, 'learning_rate': 0.0011618953990432815, 'p_miss': 0.17405195953013222}. Best is trial 20 with value: 0.22120003992787937.
running
[I 2024-10-12 09:45:07,791] Trial 33 finished with value: 0.5062249303130623 and parameters: {'model_name': 'GAIN', 'batch_size': 47, 'hint_rate': 0.5028065427489886, 'alpha': 63, 'iterations': 32, 'learning_rate': 0.0035487760579249387, 'p_miss': 0.13986160823194776}. Best is trial 20 with value: 0.22120003992787937.
running
[I 2024-10-12 09:45:10,521] Trial 17 finished with value: 0.17736886060255402 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'random'}. Best is trial 17 with value: 0.17736886060255402.
running
[I 2024-10-12 09:45:13,836] Trial 31 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.04909614226329351, 'alpha': 48, 'iterations': 78, 'learning_rate': 0.007482385738624617, 'p_miss': 0.2544005085872201}. Best is trial 17 with value: 0.17736886060255402.
running
[I 2024-10-12 09:45:16,919] Trial 32 finished with value: 0.21675587807705124 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 17 with value: 0.17736886060255402.
running
[I 2024-10-12 09:45:17,414] Trial 4 finished with value: 0.17433630331128686 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 4 with value: 0.17433630331128686.
running
[I 2024-10-12 09:45:18,319] Trial 30 finished with value: 0.30935561501910325 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 36, 'learning_rate': 0.012002816323811274, 'p_miss': 0.11403252164254449}. Best is trial 4 with value: 0.17433630331128686.
running
[I 2024-10-12 09:45:35,013] Trial 18 finished with value: 0.2733336319950409 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 4 with value: 0.17433630331128686.
running
[I 2024-10-12 09:45:41,846] Trial 21 finished with value: 0.3133672914662095 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 84, 'learning_rate': 0.0017306748473621802, 'p_miss': 0.20340071952184177}. Best is trial 4 with value: 0.17433630331128686.
running
[I 2024-10-12 09:45:57,643] Trial 12 finished with value: 0.1688710688358186 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 12 with value: 0.1688710688358186.
running
[I 2024-10-12 09:46:18,334] Trial 29 finished with value: 0.3081809879437526 and parameters: {'model_name': 'VAE', 'batch_size': 917, 'iterations': 14, 'learning_rate': 0.08010937307526535, 'p_miss': 0.1839777081223482}. Best is trial 12 with value: 0.1688710688358186.
running
[I 2024-10-12 09:46:56,888] Trial 36 finished with value: 0.16481239642115006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:47:06,186] Trial 37 finished with value: 0.16481239642115006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:47:16,653] Trial 38 finished with value: 0.16682518229934015 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:47:30,784] Trial 40 finished with value: 0.16683361549350367 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:47:31,636] Trial 39 finished with value: 0.16683361549350367 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:47:52,955] Trial 41 finished with value: 0.1685987337422256 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:48:00,448] Trial 42 finished with value: 0.1685987337422256 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:48:09,254] Trial 34 finished with value: 0.20639171604982925 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:48:28,280] Trial 43 finished with value: 0.17209480651322062 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:48:44,665] Trial 35 finished with value: 0.307026795438163 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:48:45,196] Trial 44 finished with value: 0.17209480651322062 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:49:02,464] Trial 45 finished with value: 0.16908912225621503 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:49:05,032] Trial 46 finished with value: 0.17135173576445636 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'ascending'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:49:10,743] Trial 47 finished with value: 0.17198027899310656 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'roman'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:49:13,781] Trial 49 finished with value: 0.17484393028594628 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'roman'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:49:15,162] Trial 48 finished with value: 0.173056167536101 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:54:00,057] Trial 15 finished with value: 0.4935682096134378 and parameters: {'model_name': 'GAIN', 'batch_size': 995, 'hint_rate': 0.7049059205667384, 'alpha': 18, 'iterations': 223, 'learning_rate': 0.00014188017927835677, 'p_miss': 0.24831872816933956}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 09:57:16,400] Trial 14 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.6000839021613872, 'alpha': 2, 'iterations': 3693, 'learning_rate': 0.03815544437289927, 'p_miss': 0.26402893443242964}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 10:43:01,045] Trial 6 finished with value: 0.167427507862532 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 36 with value: 0.16481239642115006.
running
[I 2024-10-12 10:58:48,781] Trial 50 finished with value: 0.1513066655495928 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'roman'}. Best is trial 50 with value: 0.1513066655495928.
running
[I 2024-10-12 10:59:08,563] Trial 52 finished with value: 0.15157250536784078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'roman'}. Best is trial 50 with value: 0.1513066655495928.
running
[I 2024-10-12 10:59:11,322] Trial 51 finished with value: 0.151311421731462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'roman'}. Best is trial 50 with value: 0.1513066655495928.
running
[I 2024-10-12 11:00:01,521] Trial 56 finished with value: 0.15558413521303086 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'roman'}. Best is trial 50 with value: 0.1513066655495928.
running
[I 2024-10-12 11:01:24,907] Trial 61 finished with value: 0.15689147078816262 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 50 with value: 0.1513066655495928.
running
[I 2024-10-12 11:04:13,109] Trial 62 finished with value: 0.15631219381721206 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 50 with value: 0.1513066655495928.
running
[I 2024-10-12 11:07:00,318] Trial 8 finished with value: 0.1501304873720004 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 11:51:48,887] Trial 63 finished with value: 0.1574980380850969 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 11:51:54,129] Trial 71 finished with value: 0.3331902198501831 and parameters: {'model_name': 'VAE', 'batch_size': 165, 'iterations': 1, 'learning_rate': 0.00012129093503795395, 'p_miss': 0.025366251339394102}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:07:36,432] Trial 64 finished with value: 0.15307136279745834 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:08:01,084] Trial 65 finished with value: 0.15503903085067178 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:08:01,870] Trial 74 finished with value: 0.528196081445236 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:08:03,502] Trial 66 finished with value: 0.1549045780488271 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:09:43,955] Trial 67 finished with value: 0.1557531625324362 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:10:05,723] Trial 68 finished with value: 0.1544565755753197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:12:54,353] Trial 69 finished with value: 0.15636111673148606 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:18:57,168] Trial 70 finished with value: 0.1545688169390707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:24:15,397] Trial 72 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.9863663402934105, 'alpha': 100, 'iterations': 7217, 'learning_rate': 0.000615612027260897, 'p_miss': 0.015623614656823825}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:24:21,553] Trial 81 finished with value: 0.20793232913423942 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 565, 'weights': 'distance'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:29:22,643] Trial 77 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.9881889999786146, 'alpha': 96, 'iterations': 4072, 'learning_rate': 0.0006113073434991079, 'p_miss': 0.018061293861394573}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:31:38,342] Trial 75 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.9811493257812494, 'alpha': 100, 'iterations': 5166, 'learning_rate': 0.0005305515749051583, 'p_miss': 0.011994400793198107}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:31:47,934] Trial 84 finished with value: 0.3185087676779879 and parameters: {'model_name': 'VAE', 'batch_size': 180, 'iterations': 1, 'learning_rate': 0.022135969101464162, 'p_miss': 0.07881885314808997}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:42:04,020] Trial 0 finished with value: 0.3107929082868784 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 4624, 'learning_rate': 0.0004284307416737761, 'p_miss': 0.06640809436159563}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:50:10,982] Trial 78 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.9440126286092054, 'alpha': 89, 'iterations': 8610, 'learning_rate': 0.000488951579769583, 'p_miss': 0.01774864235003462}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:50:55,215] Trial 73 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.9723620218517979, 'alpha': 100, 'iterations': 9332, 'learning_rate': 0.0004338685818054344, 'p_miss': 0.018596125096248944}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:54:26,742] Trial 80 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.96577437042983, 'alpha': 92, 'iterations': 7910, 'learning_rate': 0.0005233506429220442, 'p_miss': 0.020050773616609507}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 12:58:01,210] Trial 58 finished with value: 0.5291183346765242 and parameters: {'model_name': 'GAIN', 'batch_size': 771, 'hint_rate': 0.9345186080284553, 'alpha': 1, 'iterations': 5298, 'learning_rate': 0.0002990111244234823, 'p_miss': 0.020295229532032694}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:06:24,819] Trial 60 finished with value: 0.5283548466173802 and parameters: {'model_name': 'GAIN', 'batch_size': 612, 'hint_rate': 0.957326156259825, 'alpha': 1, 'iterations': 5912, 'learning_rate': 0.0001308185012422982, 'p_miss': 0.013551565672802551}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:07:14,137] Trial 79 finished with value: 0.1772165588230489 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:13:34,067] Trial 76 finished with value: 0.15988249766058804 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'roman'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:39:54,185] Trial 82 finished with value: 0.1515838639878821 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:45:11,005] Trial 83 finished with value: 0.15280410875681735 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:46:52,193] Trial 86 finished with value: 0.15921983190621627 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:47:33,354] Trial 85 finished with value: 0.15229778540364491 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:55:00,973] Trial 87 finished with value: 0.15887636434656127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:55:48,889] Trial 88 finished with value: 0.1587930895765096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 13:59:04,258] Trial 89 finished with value: 0.16002582582766997 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:02:00,271] Trial 90 finished with value: 0.15870033957842386 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:02:00,658] Trial 101 finished with value: 0.528196081445236 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:09:45,744] Trial 91 finished with value: 0.15846290249304953 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:11:19,804] Trial 92 finished with value: 0.1579826272645261 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:16:04,098] Trial 59 finished with value: 0.5317570533733743 and parameters: {'model_name': 'GAIN', 'batch_size': 554, 'hint_rate': 0.9330284969060355, 'alpha': 2, 'iterations': 9116, 'learning_rate': 0.00013010782579976144, 'p_miss': 0.03181766320531308}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:17:21,228] Trial 53 finished with value: 0.5278987897670661 and parameters: {'model_name': 'GAIN', 'batch_size': 592, 'hint_rate': 0.9265324739406837, 'alpha': 5, 'iterations': 8386, 'learning_rate': 0.00010696046419131327, 'p_miss': 0.012015845976009937}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:18:24,031] Trial 55 finished with value: 0.528255454720337 and parameters: {'model_name': 'GAIN', 'batch_size': 844, 'hint_rate': 0.9594053412675672, 'alpha': 1, 'iterations': 7567, 'learning_rate': 0.00012485751053093301, 'p_miss': 0.02036491974719898}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:26:05,175] Trial 93 finished with value: 0.151198160756877 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:48:54,852] Trial 94 finished with value: 0.15058539765674128 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:49:19,360] Trial 54 finished with value: 0.5298718571856171 and parameters: {'model_name': 'GAIN', 'batch_size': 851, 'hint_rate': 0.9843679300061918, 'alpha': 6, 'iterations': 8942, 'learning_rate': 0.00029305236631864813, 'p_miss': 0.031844284886374155}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:53:25,067] Trial 95 finished with value: 0.15129008880123923 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:54:26,816] Trial 96 finished with value: 0.1507243950952822 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:56:06,807] Trial 97 finished with value: 0.15194965288913748 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:56:12,674] Trial 113 finished with value: 0.19649085389326262 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 230, 'weights': 'uniform'}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:56:41,027] Trial 112 finished with value: 0.308802374727641 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 14:58:20,577] Trial 114 finished with value: 0.308802374727641 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 15:02:45,898] Trial 57 finished with value: 0.5333552806448809 and parameters: {'model_name': 'GAIN', 'batch_size': 825, 'hint_rate': 0.9639167307688865, 'alpha': 7, 'iterations': 9474, 'learning_rate': 0.00012327132240696315, 'p_miss': 0.06680823473433338}. Best is trial 8 with value: 0.1501304873720004.
running
[I 2024-10-12 15:03:38,863] Trial 98 finished with value: 0.15012319041040376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:04:04,637] Trial 99 finished with value: 0.15037870311002535 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:04:23,080] Trial 118 finished with value: 0.20265258043408713 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:04:46,832] Trial 119 finished with value: 0.2060692316278249 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:06:57,674] Trial 100 finished with value: 0.15242739255742774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:08:49,113] Trial 102 finished with value: 0.1538299626422267 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:14:29,021] Trial 103 finished with value: 0.1530368855519974 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:15:53,070] Trial 104 finished with value: 0.1533193246450888 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:19:21,090] Trial 105 finished with value: 0.15335554979423302 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:20:33,279] Trial 125 finished with value: 0.3069165883053406 and parameters: {'model_name': 'VAE', 'batch_size': 104, 'iterations': 815, 'learning_rate': 0.004833532413608747, 'p_miss': 0.2286626492494221}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:20:43,195] Trial 106 finished with value: 0.15393350850022328 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:21:22,660] Trial 107 finished with value: 0.1524028903560343 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:24:46,596] Trial 108 finished with value: 0.15623806458906925 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:46:18,140] Trial 109 finished with value: 0.15046038356911984 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:46:53,098] Trial 110 finished with value: 0.15266000696345636 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:46:53,395] Trial 132 finished with value: 0.528196081445236 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:50:55,007] Trial 111 finished with value: 0.15193992463717082 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:52:43,729] Trial 115 finished with value: 0.15486893964578158 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:53:03,712] Trial 116 finished with value: 0.1538909386513408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:54:26,232] Trial 120 finished with value: 0.15642130193559461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 15:57:05,638] Trial 117 finished with value: 0.15375292349884012 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 98 with value: 0.15012319041040376.
running
[I 2024-10-12 16:01:48,544] Trial 121 finished with value: 0.14943936597080767 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 121 with value: 0.14943936597080767.
running
[I 2024-10-12 16:04:07,860] Trial 122 finished with value: 0.149237584419654 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 122 with value: 0.149237584419654.
running
[I 2024-10-12 16:04:10,862] Trial 140 finished with value: 0.2556749635032468 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2233, 'weights': 'uniform'}. Best is trial 122 with value: 0.149237584419654.
running
[I 2024-10-12 16:06:16,827] Trial 123 finished with value: 0.14897222718042363 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 123 with value: 0.14897222718042363.
running
[I 2024-10-12 16:15:58,949] Trial 126 finished with value: 0.15112150248766115 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 123 with value: 0.14897222718042363.
running
[I 2024-10-12 16:17:27,387] Trial 127 finished with value: 0.1513573672126749 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 123 with value: 0.14897222718042363.
running
[I 2024-10-12 16:18:17,976] Trial 129 finished with value: 0.15056798503622237 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 123 with value: 0.14897222718042363.
running
[I 2024-10-12 16:18:56,124] Trial 124 finished with value: 0.14971032712922716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 123 with value: 0.14897222718042363.
running
[I 2024-10-12 16:21:31,894] Trial 130 finished with value: 0.15007667147975415 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 123 with value: 0.14897222718042363.
running
[I 2024-10-12 16:23:52,213] Trial 128 finished with value: 0.14920600004854806 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 123 with value: 0.14897222718042363.
running
[I 2024-10-12 16:48:29,602] Trial 135 finished with value: 0.14984387419041215 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 123 with value: 0.14897222718042363.
running
[I 2024-10-12 16:49:23,705] Trial 131 finished with value: 0.14836077345256898 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 16:50:00,289] Trial 133 finished with value: 0.1498587995877317 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 16:50:14,487] Trial 137 finished with value: 0.14964444591701082 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 16:52:27,571] Trial 152 finished with value: 0.19756622847797606 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 16:52:30,108] Trial 153 finished with value: 0.30852625678397577 and parameters: {'model_name': 'VAE', 'batch_size': 251, 'iterations': 3, 'learning_rate': 0.06420366784512618, 'p_miss': 0.2951760249633405}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 16:54:16,421] Trial 138 finished with value: 0.1511433483054761 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 16:55:30,267] Trial 134 finished with value: 0.14844496322299777 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 16:57:17,848] Trial 136 finished with value: 0.15016274370731816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 16:59:09,391] Trial 139 finished with value: 0.1500471606982062 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:01:33,466] Trial 141 finished with value: 0.1506257098856605 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:03:51,421] Trial 142 finished with value: 0.14907175219232777 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:13:15,740] Trial 143 finished with value: 0.14982863718685896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:14:45,978] Trial 144 finished with value: 0.149586578537233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:15:28,239] Trial 145 finished with value: 0.15086654095980975 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:15:57,627] Trial 163 finished with value: 0.1975110007100953 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:16:24,486] Trial 146 finished with value: 0.1513544248700322 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:16:24,957] Trial 165 finished with value: 0.5332893428696843 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:19:13,551] Trial 147 finished with value: 0.15038887183992417 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:29:25,091] Trial 148 finished with value: 0.1500759615441364 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 131 with value: 0.14836077345256898.
running
[I 2024-10-12 17:54:06,705] Trial 149 finished with value: 0.1479564286482799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 17:54:22,901] Trial 150 finished with value: 0.14908401542501176 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 17:54:59,603] Trial 151 finished with value: 0.1489765464229768 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 17:56:14,655] Trial 154 finished with value: 0.1495101868488488 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 17:57:51,637] Trial 155 finished with value: 0.15022392072393662 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 17:59:30,958] Trial 156 finished with value: 0.14944536712228867 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:00:41,615] Trial 157 finished with value: 0.14929251825010295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:00:45,309] Trial 175 finished with value: 0.2903828013022735 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6897, 'weights': 'distance'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:02:49,229] Trial 158 finished with value: 0.1484764646919078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:04:55,621] Trial 159 finished with value: 0.14916711380936534 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:07:34,924] Trial 160 finished with value: 0.14978781195806498 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:16:22,797] Trial 166 finished with value: 0.14983402419988975 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:16:30,797] Trial 161 finished with value: 0.1506889225900543 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:17:59,673] Trial 162 finished with value: 0.14925659004264186 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:18:41,200] Trial 167 finished with value: 0.1497190717891546 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:19:05,529] Trial 164 finished with value: 0.14954589022056253 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:32:38,276] Trial 168 finished with value: 0.1487675746233109 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:56:23,892] Trial 169 finished with value: 0.14940679113356184 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:56:26,878] Trial 171 finished with value: 0.15041753408983202 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:56:31,170] Trial 170 finished with value: 0.1499114836329985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:58:05,408] Trial 172 finished with value: 0.1501563241104942 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 18:59:47,270] Trial 173 finished with value: 0.14911664413151238 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:01:12,094] Trial 174 finished with value: 0.1499715642901876 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:02:22,867] Trial 176 finished with value: 0.14963455190950245 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:02:54,399] Trial 191 finished with value: 0.31233629406932806 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 684, 'learning_rate': 0.0016709683148607305, 'p_miss': 0.10214307471811232}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:04:37,141] Trial 177 finished with value: 0.14992997930375018 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:06:45,757] Trial 192 finished with value: 0.3132680795367627 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 1235, 'learning_rate': 0.0020451814855698344, 'p_miss': 0.099930257732292}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:06:52,760] Trial 194 finished with value: 0.19756622815415517 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:08:36,334] Trial 195 finished with value: 0.19756622815415517 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:09:29,962] Trial 178 finished with value: 0.1490432208280283 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:12:28,335] Trial 179 finished with value: 0.14966583273756257 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
running
[I 2024-10-12 19:20:10,279] Trial 181 finished with value: 0.1494508166120408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:20:52,977] Trial 180 finished with value: 0.15029724601975983 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:21:26,921] Trial 182 finished with value: 0.14970415104990914 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:21:43,883] Trial 183 finished with value: 0.1491304920389329 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:22:28,313] Trial 184 finished with value: 0.14931928798496313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:34:41,490] Trial 185 finished with value: 0.150092224183117 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:55:05,367] Trial 186 finished with value: 0.14931890833257605 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:55:09,672] Trial 187 finished with value: 0.14913022715423024 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:55:13,430] Trial 188 finished with value: 0.14906184564632172 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:56:34,977] Trial 189 finished with value: 0.14980167927634214 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 19:58:05,962] Trial 190 finished with value: 0.14860330049260334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 20:00:53,443] Trial 193 finished with value: 0.14926584788173516 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 20:02:55,521] Trial 196 finished with value: 0.14934225401358886 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 20:03:14,582] Trial 197 finished with value: 0.1491392952105088 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 20:03:59,380] Trial 198 finished with value: 0.1488079011555572 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
[I 2024-10-12 20:06:50,502] Trial 199 finished with value: 0.14863634475373988 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 149 with value: 0.1479564286482799.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0.1479564286482799
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'arabic'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.981905656865894
Generation:   4%|▍         | 1/25 [02:46<1:06:29, 166.23s/it]Generation:  2
Best f1_score score: 0.9852059721321638
Generation:   8%|▊         | 2/25 [03:59<42:50, 111.78s/it]  Generation:  3
Best f1_score score: 0.9857966404450217
Generation:  12%|█▏        | 3/25 [04:17<25:08, 68.59s/it] Generation:  4
Best f1_score score: 0.9857966404450217
Generation:  16%|█▌        | 4/25 [05:16<22:45, 65.00s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ed50c0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  5
Best f1_score score: 0.9857966404450217
Generation:  20%|██        | 5/25 [06:41<24:04, 72.23s/it]Generation:  6
Best f1_score score: 0.9857966404450217
Generation:  24%|██▍       | 6/25 [07:43<21:43, 68.60s/it]Generation:  7
Best f1_score score: 0.9857966404450217
Generation:  28%|██▊       | 7/25 [09:18<23:09, 77.18s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554656dd240> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  8
Best f1_score score: 0.9857966404450217
Generation:  32%|███▏      | 8/25 [10:53<23:29, 82.92s/it]Generation:  9
Best f1_score score: 0.9857966404450217
Generation:  36%|███▌      | 9/25 [13:51<30:02, 112.63s/it]Generation:  10
Best f1_score score: 0.9857966404450217
Generation:  40%|████      | 10/25 [14:29<22:25, 89.71s/it]Generation:  11
Best f1_score score: 0.9862388193548532
Generation:  44%|████▍     | 11/25 [14:54<16:18, 69.92s/it]Generation:  12
Best f1_score score: 0.9862388193548532
Generation:  48%|████▊     | 12/25 [15:34<13:11, 60.85s/it]Generation:  13
Best f1_score score: 0.9862388193548532
Generation:  52%|█████▏    | 13/25 [15:57<09:50, 49.21s/it]Generation:  14
Best f1_score score: 0.9862388193548532
Generation:  56%|█████▌    | 14/25 [19:56<19:32, 106.58s/it]Generation:  15
Best f1_score score: 0.9862388193548532
Generation:  60%|██████    | 15/25 [23:23<22:48, 136.82s/it]Generation:  16
Best f1_score score: 0.9862388193548532
Generation:  64%|██████▍   | 16/25 [25:54<21:09, 141.08s/it]Generation:  17
Best f1_score score: 0.9862388193548532
Generation:  68%|██████▊   | 17/25 [28:10<18:35, 139.49s/it]Generation:  18
Best f1_score score: 0.9862388193548532
Generation:  72%|███████▏  | 18/25 [30:57<17:16, 148.03s/it]Generation:  19
Best f1_score score: 0.9864062877678762
Generation:  76%|███████▌  | 19/25 [31:36<11:30, 115.02s/it]Generation:  20
Best f1_score score: 0.9864062877678762
Generation:  80%|████████  | 20/25 [32:26<07:58, 95.60s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546509cf70> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  21
Best f1_score score: 0.9864062877678762
Generation:  84%|████████▍ | 21/25 [34:26<06:51, 103.00s/it]Generation:  22
Best f1_score score: 0.9864062877678762
Generation:  88%|████████▊ | 22/25 [40:39<09:12, 184.03s/it]Generation:  23
Best f1_score score: 0.9871794193411425
Generation:  92%|█████████▏| 23/25 [41:55<05:03, 151.69s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546527c910> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  24
Best f1_score score: 0.9871794193411425
Generation:  96%|█████████▌| 24/25 [43:37<02:16, 136.71s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546534b520> 

Generation:  25
Best f1_score score: 0.9871794193411425
Generation: 100%|██████████| 25/25 [53:50<00:00, 279.69s/it]Generation: 100%|██████████| 25/25 [53:54<00:00, 129.38s/it]
2024-10-12 21:13:34,192 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:38073' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-fcea509357f7ff92f60f2d3a05ef07c1', 'ndarray-43b3f1f1519cef9204d9df3fe7f7335b'} (stimulus_id='handle-worker-cleanup-1728792814.1921241')
Fitted
Pipeline(steps=[('svc',
                 SVC(C=111.5090408176624, gamma=2.0331664565114, max_iter=3000,
                     probability=True, shrinking=False))])
score start
train score: {'auroc': 0.9999981666298007, 'accuracy': 0.9995450926873649, 'balanced_accuracy': 0.9995442147946114, 'logloss': 0.007908940711036632, 'f1': 0.9995488061577371}
original test score: {'auroc': 0.9999848126302583, 'accuracy': 0.9954524783992724, 'balanced_accuracy': 0.9953705055183333, 'logloss': 0.024305696437273074, 'f1': 0.9953878152884101}
imputed test score: {'auroc': 0.9988852618766572, 'accuracy': 0.9895407003183265, 'balanced_accuracy': 0.9895073874902284, 'logloss': 0.04877254265965792, 'f1': 0.9894843233798891}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9786323446381076
Generation:   4%|▍         | 1/25 [01:51<44:35, 111.47s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745925c0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f8aa3b0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d18310> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.9796848861348891
Generation:   8%|▊         | 2/25 [03:03<33:48, 88.21s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a446f20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d7a4a0> 

Generation:  3
Best f1_score score: 0.9817041030409233
Generation:  12%|█▏        | 3/25 [13:09<1:58:59, 324.52s/it]Generation:  4
Best f1_score score: 0.9842348526521307
Generation:  16%|█▌        | 4/25 [14:19<1:18:24, 224.02s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474086830> 

Generation:  5
Best f1_score score: 0.9842348526521307
Generation:  20%|██        | 5/25 [24:24<2:00:27, 361.39s/it]Generation:  6
Best f1_score score: 0.985592518058682
Generation:  24%|██▍       | 6/25 [25:53<1:25:10, 268.99s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452443700> 

Generation:  7
Best f1_score score: 0.987224559141706
Generation:  28%|██▊       | 7/25 [36:00<1:53:47, 379.30s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452dfcaf0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554570b32e0> 

Generation:  8
Best f1_score score: 0.9873160611188124
Generation:  32%|███▏      | 8/25 [46:05<2:07:51, 451.26s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d816290> 

Generation:  9
Best f1_score score: 0.9877975229844569
Generation:  36%|███▌      | 9/25 [56:11<2:13:16, 499.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474505b40> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.9877975229844569
Generation:  40%|████      | 10/25 [58:09<1:35:27, 381.85s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd1840> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.9879212688227448
Generation:  44%|████▍     | 11/25 [1:00:08<1:10:19, 301.37s/it]Generation:  12
Best f1_score score: 0.9879212688227448
Generation:  48%|████▊     | 12/25 [1:01:20<50:12, 231.73s/it]  Generation:  13
Best f1_score score: 0.9879212688227448
Generation:  52%|█████▏    | 13/25 [1:04:12<42:42, 213.53s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452fc4e50> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459f92020> 

Generation:  14
Best f1_score score: 0.9879212688227448
Generation:  56%|█████▌    | 14/25 [1:14:22<1:01:04, 333.09s/it]Generation:  15
Best f1_score score: 0.9879212688227448
Generation:  60%|██████    | 15/25 [1:16:33<45:22, 272.26s/it]  Generation:  16
Best f1_score score: 0.9879226955592285
Generation:  64%|██████▍   | 16/25 [1:18:29<33:47, 225.31s/it]Generation:  17
Best f1_score score: 0.9879226955592285
Generation:  68%|██████▊   | 17/25 [1:19:45<24:01, 180.24s/it]Generation:  18
Best f1_score score: 0.988263000000831
Generation:  72%|███████▏  | 18/25 [1:21:50<19:07, 163.86s/it]Generation:  19
Best f1_score score: 0.9898360847927157
Generation:  76%|███████▌  | 19/25 [1:28:57<24:16, 242.74s/it]Generation:  20
Best f1_score score: 0.9898360847927157
Generation:  80%|████████  | 20/25 [1:30:03<15:49, 189.90s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452f7dd80> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  21
Best f1_score score: 0.9898360847927157
Generation:  84%|████████▍ | 21/25 [1:33:40<13:11, 197.92s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd2bf0> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.9898360847927157
Generation:  88%|████████▊ | 22/25 [1:36:23<09:22, 187.35s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1552f672a590> 

Generation:  23
Best f1_score score: 0.9898360847927157
Generation:  92%|█████████▏| 23/25 [1:46:30<10:26, 313.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547423dd50> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.9899628748580687
Generation:  96%|█████████▌| 24/25 [1:47:36<03:59, 239.08s/it]Generation:  25
Best f1_score score: 0.9899628748580687
Generation: 100%|██████████| 25/25 [1:54:20<00:00, 288.60s/it]Generation: 100%|██████████| 25/25 [1:54:20<00:00, 274.42s/it]
2024-10-12 23:08:13,991 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42365' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-0fd2cee2ac8e2f4f4cf96d76c1aa27e3', 'ndarray-43b3f1f1519cef9204d9df3fe7f7335b'} (stimulus_id='handle-worker-cleanup-1728799693.9916961')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=10, weights='distance')),
                ('svc',
                 SVC(C=13.1385842862474, gamma=1.0016663783862, max_iter=3000,
                     probability=True, shrinking=False))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9999631905751413, 'accuracy': 0.9972705561241897, 'balanced_accuracy': 0.9972654289847247, 'logloss': 0.015375159038822828, 'f1': 0.9972839479325547}
test score: {'auroc': 0.9993230967124618, 'accuracy': 0.9899954524783993, 'balanced_accuracy': 0.9899402381758946, 'logloss': 0.04157382798063303, 'f1': 0.9899615755480093}
original test score: {'auroc': 0.9999841953922006, 'accuracy': 0.9954524783992724, 'balanced_accuracy': 0.9954803475295577, 'logloss': 0.023352674580151205, 'f1': 0.995481218139577}
score end
32
lvl
0.3
type
MAR
num_run
1
class_full
finished
all finished
full run takes
13.416565748122004
hours
DONE
