Run: 32
/cm/local/apps/slurm/var/spool/job928813/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
starting loops
../data/c/32/32.pkl
working on 
../data/c/32/class_full_MAR_0.5_2
2.6408531665802
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-08-21 00:08:17,800] A new study created in memory with name: no-name-547fc2c0-c32c-47e5-9769-f40fae070775
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-08-21 00:08:18,454] Trial 15 finished with value: 0.23731384581332549 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 15 with value: 0.23731384581332549.
running
[I 2024-08-21 00:08:18,873] Trial 11 finished with value: 0.12383965372034197 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.12383965372034197.
running
[I 2024-08-21 00:08:19,014] Trial 13 finished with value: 0.23731384581332549 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 11 with value: 0.12383965372034197.
running
[I 2024-08-21 00:08:19,301] Trial 5 finished with value: 0.1678757337502152 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 11 with value: 0.12383965372034197.
running
[I 2024-08-21 00:08:19,535] Trial 3 finished with value: 0.1678757337502152 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 11 with value: 0.12383965372034197.
running
[I 2024-08-21 00:08:20,018] Trial 19 finished with value: 0.12383965372034197 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 11 with value: 0.12383965372034197.
running
[I 2024-08-21 00:08:28,577] Trial 10 finished with value: 0.0863319517213662 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 926, 'weights': 'distance'}. Best is trial 10 with value: 0.0863319517213662.
running
[I 2024-08-21 00:08:29,867] Trial 1 finished with value: 0.09750976585579016 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2604, 'weights': 'distance'}. Best is trial 10 with value: 0.0863319517213662.
running
[I 2024-08-21 00:08:30,297] Trial 0 finished with value: 0.09391517437152129 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1952, 'weights': 'distance'}. Best is trial 10 with value: 0.0863319517213662.
running
[I 2024-08-21 00:08:30,843] Trial 16 finished with value: 0.09200380098345227 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1649, 'weights': 'distance'}. Best is trial 10 with value: 0.0863319517213662.
running
[I 2024-08-21 00:08:31,450] Trial 23 finished with value: 0.1678757337502152 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0863319517213662.
running
[I 2024-08-21 00:08:31,781] Trial 17 finished with value: 0.11621496405831666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6167, 'weights': 'uniform'}. Best is trial 10 with value: 0.0863319517213662.
running
[I 2024-08-21 00:08:41,291] Trial 21 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8115754395529454, 'alpha': 44, 'iterations': 23, 'learning_rate': 0.0007000831465856648, 'p_miss': 0.013909725646709472}. Best is trial 10 with value: 0.0863319517213662.
running
[I 2024-08-21 00:08:41,759] Trial 26 finished with value: 0.07816327460148886 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 325, 'weights': 'distance'}. Best is trial 26 with value: 0.07816327460148886.
running
[I 2024-08-21 00:08:45,442] Trial 2 finished with value: 0.22771685260668165 and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.47896644794265403, 'alpha': 41, 'iterations': 1, 'learning_rate': 0.046919468671095185, 'p_miss': 0.2744384939281067}. Best is trial 26 with value: 0.07816327460148886.
running
[I 2024-08-21 00:09:17,418] Trial 12 finished with value: 0.11750246230604318 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 26 with value: 0.07816327460148886.
running
[I 2024-08-21 00:09:28,537] Trial 31 finished with value: 0.06755286634800531 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 18, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:10:18,060] Trial 14 finished with value: 0.07813297596019217 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:10:27,935] Trial 4 finished with value: 0.07902933693273936 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:10:48,355] Trial 22 finished with value: 0.07913895299262783 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:10:51,285] Trial 18 finished with value: 0.0859070432987832 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:10:57,993] Trial 9 finished with value: 0.22842426894718254 and parameters: {'model_name': 'GAIN', 'batch_size': 33, 'hint_rate': 0.16991296438729941, 'alpha': 64, 'iterations': 55, 'learning_rate': 0.03582406536164902, 'p_miss': 0.14294406274575835}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:02,820] Trial 25 finished with value: 0.08460765076830773 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:09,428] Trial 36 finished with value: 0.11741256027852613 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9457, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:12,667] Trial 37 finished with value: 0.07193202280830678 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 96, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:17,223] Trial 38 finished with value: 0.06975787189565343 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 56, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:23,259] Trial 39 finished with value: 0.08416021611475258 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 557, 'weights': 'uniform'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:28,264] Trial 40 finished with value: 0.10791095384771554 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4023, 'weights': 'uniform'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:30,633] Trial 41 finished with value: 0.07253407620991706 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 81, 'weights': 'uniform'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:41,394] Trial 42 finished with value: 0.10286038041755956 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3811, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:42,365] Trial 43 finished with value: 0.06866952022171488 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 38, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:49,582] Trial 44 finished with value: 0.10039035002492928 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3217, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:11:57,447] Trial 46 finished with value: 0.07072647263195252 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 72, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:01,277] Trial 45 finished with value: 0.11319549453573548 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6877, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:03,791] Trial 47 finished with value: 0.07412833909081255 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 154, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:13,459] Trial 48 finished with value: 0.09071536104614834 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1460, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:17,060] Trial 49 finished with value: 0.09082450130335443 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1475, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:20,666] Trial 50 finished with value: 0.09162075070562906 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1592, 'weights': 'distance'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:29,688] Trial 33 finished with value: 0.07813284180117816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:38,895] Trial 34 finished with value: 0.07813284180117816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:39,452] Trial 29 finished with value: 0.07037767400607982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:12:43,469] Trial 7 finished with value: 0.07167852455173068 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:13:33,825] Trial 32 finished with value: 0.07137101478143161 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:15:07,145] Trial 30 finished with value: 0.07893498905181294 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:19:48,404] Trial 8 finished with value: 0.26113592189230606 and parameters: {'model_name': 'GAIN', 'batch_size': 65, 'hint_rate': 0.8975440399959839, 'alpha': 80, 'iterations': 391, 'learning_rate': 0.01974654918689162, 'p_miss': 0.23349175267130481}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 00:27:30,220] Trial 6 finished with value: 0.23698498243673663 and parameters: {'model_name': 'GAIN', 'batch_size': 61, 'hint_rate': 0.14259835900074513, 'alpha': 55, 'iterations': 600, 'learning_rate': 0.013446467239542414, 'p_miss': 0.01096330671575194}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 02:26:01,015] Trial 20 finished with value: 0.08726310646663761 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 03:11:59,628] Trial 28 finished with value: 0.07234942630613224 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 03:28:43,601] Trial 35 finished with value: 0.07055704508647181 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'random'}. Best is trial 31 with value: 0.06755286634800531.
running
[I 2024-08-21 04:27:38,843] Trial 27 finished with value: 0.06407814022468751 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 27 with value: 0.06407814022468751.
running
[I 2024-08-21 05:11:35,141] Trial 24 finished with value: 0.06262511119809594 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 05:16:27,253] Trial 57 finished with value: 0.30432539054737995 and parameters: {'model_name': 'GAIN', 'batch_size': 354, 'hint_rate': 0.9804717893167587, 'alpha': 0, 'iterations': 5982, 'learning_rate': 0.0001600491503865033, 'p_miss': 0.28192564117099345}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 05:40:07,435] Trial 51 finished with value: 0.29971859312822485 and parameters: {'model_name': 'GAIN', 'batch_size': 916, 'hint_rate': 0.974049801753244, 'alpha': 96, 'iterations': 4722, 'learning_rate': 0.00013995396732348987, 'p_miss': 0.2995712389967059}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 05:42:16,898] Trial 59 finished with value: 0.2967044465001803 and parameters: {'model_name': 'GAIN', 'batch_size': 353, 'hint_rate': 0.9275115793305693, 'alpha': 100, 'iterations': 6398, 'learning_rate': 0.0001363849877992294, 'p_miss': 0.2933733175273855}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 05:50:51,655] Trial 56 finished with value: 0.3052119492857115 and parameters: {'model_name': 'GAIN', 'batch_size': 690, 'hint_rate': 0.03825983346467571, 'alpha': 2, 'iterations': 5019, 'learning_rate': 0.00010280205419170658, 'p_miss': 0.29771648371703807}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 07:33:38,843] Trial 55 finished with value: 0.29092890452130343 and parameters: {'model_name': 'GAIN', 'batch_size': 663, 'hint_rate': 0.9833330817102881, 'alpha': 5, 'iterations': 6729, 'learning_rate': 0.00012575797464573263, 'p_miss': 0.27571152218215067}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 07:42:55,587] Trial 63 finished with value: 0.25338053904721897 and parameters: {'model_name': 'GAIN', 'batch_size': 923, 'hint_rate': 0.5328591662896198, 'alpha': 1, 'iterations': 3827, 'learning_rate': 0.00014052555427642954, 'p_miss': 0.13653408134177272}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 07:56:39,032] Trial 52 finished with value: 0.28074822778871883 and parameters: {'model_name': 'GAIN', 'batch_size': 579, 'hint_rate': 0.9759313186788525, 'alpha': 2, 'iterations': 7127, 'learning_rate': 0.0001006344513538121, 'p_miss': 0.2767089645136998}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 07:58:34,131] Trial 53 finished with value: 0.28174711231519367 and parameters: {'model_name': 'GAIN', 'batch_size': 1000, 'hint_rate': 0.9693708084683029, 'alpha': 1, 'iterations': 6609, 'learning_rate': 0.00023050613315208433, 'p_miss': 0.2735863139507977}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 09:08:22,086] Trial 54 finished with value: 0.27093791131613587 and parameters: {'model_name': 'GAIN', 'batch_size': 520, 'hint_rate': 0.0321531072524191, 'alpha': 99, 'iterations': 9025, 'learning_rate': 0.00019814246441139048, 'p_miss': 0.2752001475101897}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 09:11:52,240] Trial 64 finished with value: 0.2593357545638935 and parameters: {'model_name': 'GAIN', 'batch_size': 364, 'hint_rate': 0.5159152404179381, 'alpha': 1, 'iterations': 7842, 'learning_rate': 0.0001695365241781278, 'p_miss': 0.13737685274667774}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 09:14:11,910] Trial 67 finished with value: 0.06484066996737944 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 09:23:44,669] Trial 58 finished with value: 0.28424295841330505 and parameters: {'model_name': 'GAIN', 'batch_size': 879, 'hint_rate': 0.976990932650439, 'alpha': 100, 'iterations': 8248, 'learning_rate': 0.00013859647791265942, 'p_miss': 0.2998606808820864}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 09:34:54,113] Trial 68 finished with value: 0.06483759748189231 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 09:37:42,334] Trial 69 finished with value: 0.06455523443825852 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 09:44:46,153] Trial 70 finished with value: 0.0641756001985255 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 10:00:46,096] Trial 60 finished with value: 0.23889716223264523 and parameters: {'model_name': 'GAIN', 'batch_size': 749, 'hint_rate': 0.04460717714233248, 'alpha': 16, 'iterations': 9153, 'learning_rate': 0.0001427139817987912, 'p_miss': 0.03173289354716008}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 10:07:23,858] Trial 61 finished with value: 0.25339263357742536 and parameters: {'model_name': 'GAIN', 'batch_size': 827, 'hint_rate': 0.5227194710235575, 'alpha': 0, 'iterations': 9234, 'learning_rate': 0.00011334937116645269, 'p_miss': 0.1233475375242792}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 11:02:12,297] Trial 71 finished with value: 0.06512772105625238 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 11:17:25,062] Trial 62 finished with value: 0.26036583782877804 and parameters: {'model_name': 'GAIN', 'batch_size': 751, 'hint_rate': 0.5002120569234964, 'alpha': 6, 'iterations': 9728, 'learning_rate': 0.00010181364042871867, 'p_miss': 0.13400292409289957}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 11:19:29,817] Trial 65 finished with value: 0.2603023502382805 and parameters: {'model_name': 'GAIN', 'batch_size': 872, 'hint_rate': 0.5419502204630661, 'alpha': 5, 'iterations': 7643, 'learning_rate': 0.0001499260810934463, 'p_miss': 0.12758437835565747}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 11:22:52,921] Trial 66 finished with value: 0.26733439005931625 and parameters: {'model_name': 'GAIN', 'batch_size': 641, 'hint_rate': 0.5860659250629492, 'alpha': 1, 'iterations': 8756, 'learning_rate': 0.00011006333137548287, 'p_miss': 0.16278176707146888}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 11:24:20,310] Trial 72 finished with value: 0.06416104933021194 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 11:35:30,471] Trial 73 finished with value: 0.06455613008299041 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 11:37:26,193] Trial 74 finished with value: 0.06475582847446663 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 12:32:32,151] Trial 75 finished with value: 0.06455228818273492 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 12:34:20,039] Trial 76 finished with value: 0.0636355208154414 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 12:37:11,441] Trial 77 finished with value: 0.06474618088948761 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 12:44:27,726] Trial 78 finished with value: 0.06470655677396675 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 12:53:11,381] Trial 79 finished with value: 0.06426082875828379 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 12:56:11,874] Trial 80 finished with value: 0.06450093145716321 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 13:01:11,943] Trial 81 finished with value: 0.06457106387097397 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 13:14:44,823] Trial 82 finished with value: 0.0643572715147552 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 13:20:21,218] Trial 83 finished with value: 0.06437360589683302 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 14:08:14,288] Trial 84 finished with value: 0.06441394008081952 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 14:21:30,107] Trial 85 finished with value: 0.06461851921454344 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 14:23:16,432] Trial 86 finished with value: 0.0643891931375292 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 14:26:38,925] Trial 87 finished with value: 0.0642312846401356 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 14:28:00,372] Trial 88 finished with value: 0.06417019117331489 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 14:28:00,761] Trial 104 finished with value: 0.23731384581332549 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 14:39:50,143] Trial 89 finished with value: 0.06459337196478829 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 14:56:02,050] Trial 90 finished with value: 0.06368872865552991 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 15:17:06,123] Trial 94 finished with value: 0.06681027835498214 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 15:21:16,050] Trial 91 finished with value: 0.06494264408036778 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 15:28:50,853] Trial 96 finished with value: 0.066679351644917 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 15:30:39,056] Trial 110 finished with value: 0.11890693260619653 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 15:48:35,958] Trial 98 finished with value: 0.06701608890608576 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 15:53:59,710] Trial 99 finished with value: 0.06658947179155071 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 15:54:07,649] Trial 92 finished with value: 0.06403665438955254 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 15:57:32,539] Trial 93 finished with value: 0.06389179994057342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 16:27:44,710] Trial 95 finished with value: 0.06359440437694844 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 16:35:52,669] Trial 97 finished with value: 0.06342570633273495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 17:42:41,813] Trial 100 finished with value: 0.0632903570344983 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 17:56:24,267] Trial 101 finished with value: 0.06311035638979695 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 17:56:24,690] Trial 119 finished with value: 0.23731384581332549 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 17:57:59,677] Trial 102 finished with value: 0.06338506807562681 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 17:58:36,104] Trial 121 finished with value: 0.07091576528157684 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 18:00:32,611] Trial 122 finished with value: 0.11669474937690287 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 18:01:00,665] Trial 123 finished with value: 0.0793609027105031 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 18:02:45,044] Trial 103 finished with value: 0.06321947224391992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 18:03:59,808] Trial 105 finished with value: 0.06307991659661016 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 18:15:47,729] Trial 106 finished with value: 0.063356414214679 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 18:32:00,268] Trial 107 finished with value: 0.06335030187641333 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 18:52:41,509] Trial 108 finished with value: 0.06318558886987644 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 18:57:30,405] Trial 109 finished with value: 0.06368848625124619 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 19:06:09,354] Trial 111 finished with value: 0.06380091852900614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 19:14:08,552] Trial 114 finished with value: 0.06440661128912413 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'roman'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 19:23:41,368] Trial 112 finished with value: 0.06414847430133865 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 19:28:49,558] Trial 113 finished with value: 0.0630692591874578 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 19:28:49,781] Trial 134 finished with value: 0.23731384581332549 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 19:29:34,280] Trial 135 finished with value: 0.07153405328277337 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 19:32:52,768] Trial 115 finished with value: 0.06345280231635185 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 20:03:12,829] Trial 116 finished with value: 0.06370992751456736 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 20:11:05,569] Trial 117 finished with value: 0.06353014893665672 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 21:18:03,269] Trial 118 finished with value: 0.06349625241052761 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 21:31:09,544] Trial 120 finished with value: 0.06430576297483839 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 21:31:35,218] Trial 141 finished with value: 0.07890064342708505 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 21:35:05,612] Trial 124 finished with value: 0.06315416114126501 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 21:51:25,902] Trial 125 finished with value: 0.06282446360374384 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 21:53:14,691] Trial 126 finished with value: 0.06284487246461999 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 22:04:39,953] Trial 127 finished with value: 0.06328301495089621 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 22:20:58,522] Trial 128 finished with value: 0.06279996502314512 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 22:47:15,965] Trial 130 finished with value: 0.06292438925330501 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 22:56:18,953] Trial 131 finished with value: 0.06345288576776427 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 22:56:57,058] Trial 129 finished with value: 0.0628955792490629 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 23:18:12,040] Trial 132 finished with value: 0.06312689229757473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 23:20:40,316] Trial 136 finished with value: 0.06290410801252797 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 23:20:44,032] Trial 151 finished with value: 0.11673013968166086 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 23:23:02,894] Trial 152 finished with value: 0.11673013968166086 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 23:24:53,989] Trial 137 finished with value: 0.06278305110745916 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 23:30:19,720] Trial 133 finished with value: 0.0630123806019658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-21 23:56:01,371] Trial 138 finished with value: 0.06300967423833898 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 00:03:50,900] Trial 139 finished with value: 0.06314966100284772 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 01:11:14,345] Trial 140 finished with value: 0.06338233200235682 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 01:23:51,834] Trial 142 finished with value: 0.06317224994500432 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 01:27:29,607] Trial 143 finished with value: 0.0628829150593195 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 01:42:46,732] Trial 144 finished with value: 0.06296084949154952 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 01:59:43,082] Trial 145 finished with value: 0.0627900094494251 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 02:11:39,672] Trial 146 finished with value: 0.06316652677152913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 02:11:39,965] Trial 164 finished with value: 0.12383965372034197 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 02:26:42,809] Trial 147 finished with value: 0.06324417955179226 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'descending'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 02:54:06,999] Trial 148 finished with value: 0.06321869934996723 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:02:11,533] Trial 149 finished with value: 0.06288032422599148 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:02:37,435] Trial 150 finished with value: 0.06270672198417167 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:11:05,452] Trial 154 finished with value: 0.0635466838855534 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:25:34,355] Trial 153 finished with value: 0.06301023149297261 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:27:30,683] Trial 155 finished with value: 0.06293443567629124 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:32:37,643] Trial 156 finished with value: 0.06314344347498882 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:33:20,020] Trial 173 finished with value: 0.07143925424858556 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:58:37,047] Trial 157 finished with value: 0.06269769198658783 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 03:58:57,213] Trial 175 finished with value: 0.07813289579072644 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 24 with value: 0.06262511119809594.
running
[I 2024-08-22 04:07:03,596] Trial 158 finished with value: 0.06262293923998037 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 158 with value: 0.06262293923998037.
running
[I 2024-08-22 05:14:15,184] Trial 159 finished with value: 0.06260308331486021 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 05:26:10,082] Trial 160 finished with value: 0.06297274770924735 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 05:29:55,177] Trial 161 finished with value: 0.06302833485286793 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 05:44:59,885] Trial 162 finished with value: 0.06298385474405435 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 06:02:06,296] Trial 163 finished with value: 0.06280459614607711 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'descending'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 06:14:17,516] Trial 165 finished with value: 0.06270684023710343 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 06:28:13,223] Trial 166 finished with value: 0.06307841647736895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 06:42:50,497] Trial 167 finished with value: 0.06310481489481466 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 07:03:44,725] Trial 168 finished with value: 0.06275601762221328 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 07:04:52,094] Trial 169 finished with value: 0.06275721445140298 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 07:12:38,785] Trial 170 finished with value: 0.06302253262283425 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 07:27:21,170] Trial 171 finished with value: 0.0631558057305906 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 07:29:26,496] Trial 172 finished with value: 0.06272386542798727 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 07:34:32,155] Trial 174 finished with value: 0.0630859356808573 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 07:59:36,149] Trial 176 finished with value: 0.06275714316600692 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 08:07:58,135] Trial 177 finished with value: 0.06309868239103116 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 08:24:49,547] Trial 189 finished with value: 0.09776835762443929 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 08:25:44,086] Trial 192 finished with value: 0.12897898749907988 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 09:13:53,113] Trial 178 finished with value: 0.0630222266068924 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 09:24:30,700] Trial 179 finished with value: 0.06343946033329981 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 09:28:11,367] Trial 180 finished with value: 0.06296812556667494 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 09:42:42,705] Trial 181 finished with value: 0.06307503096110888 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
running
[I 2024-08-22 09:59:52,089] Trial 182 finished with value: 0.06301058572937411 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
[I 2024-08-22 10:12:06,660] Trial 183 finished with value: 0.06305588469305219 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
[I 2024-08-22 10:24:58,011] Trial 184 finished with value: 0.06354439820601696 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 159 with value: 0.06260308331486021.
[I 2024-08-22 10:39:23,169] Trial 185 finished with value: 0.06323031962492745 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 159 with value: 0.06260308331486021.
[I 2024-08-22 10:58:58,198] Trial 186 finished with value: 0.06252092217347857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 11:00:35,788] Trial 187 finished with value: 0.06288113628384091 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 11:07:37,243] Trial 188 finished with value: 0.06311148060657387 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 11:23:10,371] Trial 190 finished with value: 0.06329442697885937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 11:27:41,434] Trial 191 finished with value: 0.06301119287044207 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 11:58:56,971] Trial 193 finished with value: 0.06266704615856268 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 12:14:56,777] Trial 194 finished with value: 0.06308205479561702 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 12:15:42,179] Trial 195 finished with value: 0.06288215383110955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 13:02:19,979] Trial 196 finished with value: 0.06324895215724693 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 13:11:56,894] Trial 197 finished with value: 0.0630864057685196 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 13:15:53,888] Trial 198 finished with value: 0.06302884739783134 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
[I 2024-08-22 13:30:52,064] Trial 199 finished with value: 0.06330579917170402 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 186 with value: 0.06252092217347857.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0.06252092217347857
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'random'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9698918674764242
Generation:   4%|▍         | 1/25 [01:56<46:35, 116.50s/it]Generation:  2
Best f1_score score: 0.9825213277369885
Generation:   8%|▊         | 2/25 [05:46<1:10:11, 183.10s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bd0b80> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  3
Best f1_score score: 0.982826418210767
Generation:  12%|█▏        | 3/25 [07:34<54:38, 149.01s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b430a0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  4
Best f1_score score: 0.982826418210767
Generation:  16%|█▌        | 4/25 [09:18<45:53, 131.13s/it]Generation:  5
Best f1_score score: 0.9837196510016175
Generation:  20%|██        | 5/25 [13:15<56:30, 169.53s/it]Generation:  6
Best f1_score score: 0.9842395412501388
Generation:  24%|██▍       | 6/25 [14:46<45:09, 142.61s/it]Generation:  7
Best f1_score score: 0.9842395412501388
Generation:  28%|██▊       | 7/25 [16:16<37:39, 125.52s/it]Generation:  8
Best f1_score score: 0.9842395412501388
Generation:  32%|███▏      | 8/25 [17:18<29:48, 105.22s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b42500> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  9
Best f1_score score: 0.9842395412501388
Generation:  36%|███▌      | 9/25 [20:40<36:09, 135.60s/it]Generation:  10
Best f1_score score: 0.9842395412501388
Generation:  40%|████      | 10/25 [21:24<26:50, 107.37s/it]Generation:  11
Best f1_score score: 0.9842395412501388
Generation:  44%|████▍     | 11/25 [24:38<31:10, 133.63s/it]Generation:  12
Best f1_score score: 0.9842395412501388
Generation:  48%|████▊     | 12/25 [27:15<30:29, 140.75s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547476bd60> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  13
Best f1_score score: 0.984650396378132
Generation:  52%|█████▏    | 13/25 [36:19<52:35, 262.92s/it]Generation:  14
Best f1_score score: 0.9847386819932777
Generation:  56%|█████▌    | 14/25 [43:18<56:52, 310.23s/it]Generation:  15
Best f1_score score: 0.9847386819932777
Generation:  60%|██████    | 15/25 [44:27<39:33, 237.39s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547433d900> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  16
Best f1_score score: 0.9847386819932777
Generation:  64%|██████▍   | 16/25 [50:45<41:59, 279.89s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474106260> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  17
Best f1_score score: 0.9847386819932777
Generation:  68%|██████▊   | 17/25 [56:02<38:46, 290.87s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f4b20> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  18
Best f1_score score: 0.9848390630252414
Generation:  72%|███████▏  | 18/25 [1:05:33<43:45, 375.07s/it]Generation:  19
Best f1_score score: 0.9857512898468872
Generation:  76%|███████▌  | 19/25 [1:08:26<31:26, 314.36s/it]Generation:  20
Best f1_score score: 0.9857512898468872
Generation:  80%|████████  | 20/25 [1:13:33<26:01, 312.33s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bfd1e0> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474728640> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  21
Best f1_score score: 0.9857512898468872
Generation:  84%|████████▍ | 21/25 [1:14:45<15:59, 239.97s/it]Generation:  22
Best f1_score score: 0.9857512898468872
Generation:  88%|████████▊ | 22/25 [1:22:14<15:08, 302.83s/it]Generation:  23
Best f1_score score: 0.9857512898468872
Generation:  92%|█████████▏| 23/25 [1:26:05<09:22, 281.20s/it]Generation:  24
Best f1_score score: 0.9857512898468872
Generation:  96%|█████████▌| 24/25 [1:32:39<05:15, 315.07s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474f449d0> 

Generation:  25
Best f1_score score: 0.9857512898468872
Generation: 100%|██████████| 25/25 [1:42:50<00:00, 404.02s/it]Generation: 100%|██████████| 25/25 [1:42:54<00:00, 246.97s/it]
2024-08-22 15:37:10,673 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46301' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-1f9122a3dadacefe51c68266ddae4833', 'ndarray-6bf50b39d8cc79b81d5b23c1e8eba97d'} (stimulus_id='handle-worker-cleanup-1724366230.6737478')
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.005384773087,
                               hidden_layer_sizes=[204, 204],
                               learning_rate='adaptive',
                               learning_rate_init=0.0119995305411,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9999941052607214, 'accuracy': 0.9971694298422968, 'balanced_accuracy': 0.9970990736956027, 'logloss': 0.009778311876428024, 'f1': 0.9971686006989996}
original test score: {'auroc': 0.9999891458951898, 'accuracy': 0.9945454545454545, 'balanced_accuracy': 0.9946044356173452, 'logloss': 0.017716773632558774, 'f1': 0.9945371425526194}
imputed test score: {'auroc': 0.9999269854313916, 'accuracy': 0.9863636363636363, 'balanced_accuracy': 0.9863124793114864, 'logloss': 0.037169548852690165, 'f1': 0.9863774463305837}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155436506200>
Start tpot fit
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9806077292037341
Generation:   4%|▍         | 1/25 [02:06<50:24, 126.01s/it]Generation:  2
Best f1_score score: 0.9808675496956477
Generation:   8%|▊         | 2/25 [04:14<48:46, 127.24s/it]Generation:  3
Best f1_score score: 0.9834931806774734
Generation:  12%|█▏        | 3/25 [14:02<2:03:55, 337.96s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bf38b0> 

Generation:  4
Best f1_score score: 0.9834931806774734
Generation:  16%|█▌        | 4/25 [24:05<2:34:47, 442.28s/it]Generation:  5
Best f1_score score: 0.9861425460318187
Generation:  20%|██        | 5/25 [26:50<1:54:07, 342.35s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475338ee0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  6
Best f1_score score: 0.9861425460318187
Generation:  24%|██▍       | 6/25 [28:53<1:24:50, 267.92s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b43d60> 

Generation:  7
Best f1_score score: 0.9861425460318187
Generation:  28%|██▊       | 7/25 [38:57<1:53:21, 377.84s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554754115a0> 

Generation:  8
Best f1_score score: 0.9861425460318187
Generation:  32%|███▏      | 8/25 [49:00<2:07:20, 449.46s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474273c40> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  9
Best f1_score score: 0.9861425460318187
Generation:  36%|███▌      | 9/25 [56:34<2:00:11, 450.73s/it]Generation:  10
Best f1_score score: 0.9861425460318187
Generation:  40%|████      | 10/25 [1:02:22<1:44:45, 419.04s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474b5b520> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.98644579550464
Generation:  44%|████▍     | 11/25 [1:04:35<1:17:23, 331.65s/it]Generation:  12
Best f1_score score: 0.98644579550464
Generation:  48%|████▊     | 12/25 [1:07:06<59:56, 276.67s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554754312a0> 

Generation:  13
Best f1_score score: 0.98644579550464
Generation:  52%|█████▏    | 13/25 [1:17:10<1:15:09, 375.80s/it]Generation:  14
Best f1_score score: 0.98644579550464
Generation:  56%|█████▌    | 14/25 [1:19:26<55:38, 303.52s/it]  Generation:  15
Best f1_score score: 0.98644579550464
Generation:  60%|██████    | 15/25 [1:22:38<44:58, 269.81s/it]Generation:  16
Best f1_score score: 0.98644579550464
Generation:  64%|██████▍   | 16/25 [1:30:59<50:52, 339.22s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554556f2560> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.98644579550464
Generation:  68%|██████▊   | 17/25 [1:37:49<48:04, 360.58s/it]Generation:  18
Best f1_score score: 0.98644579550464
Generation:  72%|███████▏  | 18/25 [1:46:24<47:29, 407.07s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bb3010> 

Generation:  19
Best f1_score score: 0.98644579550464
Generation:  76%|███████▌  | 19/25 [1:56:28<46:36, 466.07s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cb3520> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547540fd00> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e78e590> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554531c8430> 

Generation:  20
Best f1_score score: 0.98644579550464
Generation:  80%|████████  | 20/25 [2:06:31<42:16, 507.39s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457c79ff0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545aa0a500> 

Generation:  21
Best f1_score score: 0.98644579550464
Generation:  84%|████████▍ | 21/25 [2:16:35<35:45, 536.39s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457335090> 

Generation:  22
Best f1_score score: 0.98644579550464
Generation:  88%|████████▊ | 22/25 [2:26:40<27:50, 556.77s/it]Generation:  23
Best f1_score score: 0.9865537592023473
Generation:  92%|█████████▏| 23/25 [2:29:16<14:33, 436.64s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547471ddb0> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  24
Best f1_score score: 0.9865537592023473
Generation:  96%|█████████▌| 24/25 [2:31:10<05:39, 339.67s/it]Generation:  25
Best f1_score score: 0.9865537592023473
Generation: 100%|██████████| 25/25 [2:32:48<00:00, 267.27s/it]Generation: 100%|██████████| 25/25 [2:32:48<00:00, 366.74s/it]
2024-08-22 18:10:23,008 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33135' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-1f9122a3dadacefe51c68266ddae4833', 'DataFrame-6e1221048aad1443c8a69aa324a21063'} (stimulus_id='handle-worker-cleanup-1724375423.0086813')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=6, weights='distance')),
                ('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=True,
                                                l2_regularization=8.118743e-07,
                                                learning_rate=0.1367118986841,
                                                max_features=0.7726365642839,
                                                max_leaf_nodes=181,
                                                min_samples_leaf=67,
                                                n_iter_no_change=1, tol=0.0001,
                                                validation_fraction=None))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 0.0004888873647123348, 'f1': 1.0}
test score: {'auroc': 0.9998486944098494, 'accuracy': 0.9845454545454545, 'balanced_accuracy': 0.9848891095663689, 'logloss': 0.04892840586409733, 'f1': 0.9845116920642492}
original test score: {'auroc': 0.9999134029396997, 'accuracy': 0.99, 'balanced_accuracy': 0.9900860642171466, 'logloss': 0.03650924362316869, 'f1': 0.9899908505487233}
score end
32
lvl
0.5
type
MAR
num_run
2
class_full
finished
all finished
full run takes
42.050297853748006
hours
DONE
