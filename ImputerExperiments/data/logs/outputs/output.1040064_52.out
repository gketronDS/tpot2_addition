Run: 52
/cm/local/apps/slurm/var/spool/job1040064/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/901/901.pkl
working on 
../data/c/901/class_full_MCAR_0.5_3
2.999467372894287
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-04 15:07:17,058] A new study created in memory with name: no-name-01bcdc97-e73c-4ffb-a3c5-127b43727e26
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-04 15:07:18,201] Trial 3 finished with value: 0.270184491866604 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.270184491866604.
running
[I 2024-11-04 15:07:18,867] Trial 11 finished with value: 0.270184491866604 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.270184491866604.
running
[I 2024-11-04 15:07:19,139] Trial 14 finished with value: 0.40681855414623513 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.270184491866604.
running
[I 2024-11-04 15:07:20,050] Trial 18 finished with value: 0.4080212911372893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.270184491866604.
running
[I 2024-11-04 15:07:26,985] Trial 7 finished with value: 0.2703761390884219 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 3 with value: 0.270184491866604.
running
[I 2024-11-04 15:07:41,146] Trial 19 finished with value: 0.40189672427527007 and parameters: {'model_name': 'GAIN', 'batch_size': 151, 'hint_rate': 0.5089036214049129, 'alpha': 59, 'iterations': 5, 'learning_rate': 0.004176259598251228, 'p_miss': 0.05497437863308043}. Best is trial 3 with value: 0.270184491866604.
running
[I 2024-11-04 15:07:50,078] Trial 10 finished with value: 0.2703485598496576 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 3 with value: 0.270184491866604.
running
[I 2024-11-04 15:07:51,352] Trial 22 finished with value: 0.40681855414623513 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 3 with value: 0.270184491866604.
running
[I 2024-11-04 15:07:58,561] Trial 4 finished with value: 0.26996848549655084 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2892, 'weights': 'uniform'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:07:59,831] Trial 24 finished with value: 0.40681855414623513 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:08:11,124] Trial 8 finished with value: 0.2747366834858746 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6610, 'weights': 'distance'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:08:12,456] Trial 16 finished with value: 0.2700604210615781 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12458, 'weights': 'uniform'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:08:20,824] Trial 21 finished with value: 0.329416542036593 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 35, 'learning_rate': 0.08112993875017946, 'p_miss': 0.2679222788021116}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:08:24,167] Trial 0 finished with value: 0.27476856670174754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 14176, 'weights': 'distance'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:08:24,761] Trial 20 finished with value: 0.2701053534381638 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17671, 'weights': 'uniform'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:08:28,765] Trial 17 finished with value: 0.2748420385620446 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 27799, 'weights': 'distance'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:08:42,312] Trial 25 finished with value: 0.2699873168993034 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1347, 'weights': 'uniform'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:08:56,120] Trial 27 finished with value: 0.26998869446681917 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4895, 'weights': 'uniform'}. Best is trial 4 with value: 0.26996848549655084.
running
[I 2024-11-04 15:09:01,704] Trial 1 finished with value: 0.2108895422519283 and parameters: {'model_name': 'VAE', 'batch_size': 308, 'iterations': 45, 'learning_rate': 0.0003009851241576447, 'p_miss': 0.10797542309687554}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:09:03,686] Trial 29 finished with value: 0.2707299907057645 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 75, 'weights': 'uniform'}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:09:06,343] Trial 30 finished with value: 0.2700068710373586 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 986, 'weights': 'uniform'}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:09:06,591] Trial 28 finished with value: 0.2699954334021441 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4630, 'weights': 'uniform'}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:09:08,267] Trial 9 finished with value: 0.27022570871823215 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:09:08,662] Trial 31 finished with value: 0.2699928507147823 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1953, 'weights': 'uniform'}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:09:08,928] Trial 23 finished with value: 0.2748390630411977 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 24651, 'weights': 'distance'}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:09:10,751] Trial 12 finished with value: 0.27024604102498595 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:09:56,441] Trial 5 finished with value: 0.2913296176629593 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:10:08,428] Trial 2 finished with value: 0.4032653178581921 and parameters: {'model_name': 'GAIN', 'batch_size': 131, 'hint_rate': 0.9535506257193594, 'alpha': 48, 'iterations': 159, 'learning_rate': 0.002756491586473585, 'p_miss': 0.049905232155669624}. Best is trial 1 with value: 0.2108895422519283.
running
[I 2024-11-04 15:12:25,484] Trial 13 finished with value: 0.20930208538517667 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 118, 'learning_rate': 0.00017122913177372703, 'p_miss': 0.279791257350295}. Best is trial 13 with value: 0.20930208538517667.
running
[I 2024-11-04 15:50:44,371] Trial 6 finished with value: 0.39555243776642635 and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.58249233775966, 'alpha': 2, 'iterations': 1400, 'learning_rate': 0.000394846315741185, 'p_miss': 0.19002538908124025}. Best is trial 13 with value: 0.20930208538517667.
running
[I 2024-11-04 16:00:49,679] Trial 15 finished with value: 0.386785216221489 and parameters: {'model_name': 'GAIN', 'batch_size': 107, 'hint_rate': 0.9830469584035975, 'alpha': 93, 'iterations': 1623, 'learning_rate': 0.02636275721305086, 'p_miss': 0.2713451190586961}. Best is trial 13 with value: 0.20930208538517667.
running
[I 2024-11-04 16:04:08,872] Trial 46 finished with value: 0.2083336134365122 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 53, 'learning_rate': 0.00010544734179914595, 'p_miss': 0.13635891855993004}. Best is trial 46 with value: 0.2083336134365122.
running
[I 2024-11-04 16:04:59,555] Trial 45 finished with value: 0.20999356436904174 and parameters: {'model_name': 'VAE', 'batch_size': 828, 'iterations': 106, 'learning_rate': 0.0001405600045876012, 'p_miss': 0.14547585462693308}. Best is trial 46 with value: 0.2083336134365122.
running
[I 2024-11-04 16:08:42,695] Trial 47 finished with value: 0.20864442333304414 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 55, 'learning_rate': 0.00010812379056468614, 'p_miss': 0.13899455680424222}. Best is trial 46 with value: 0.2083336134365122.
running
[I 2024-11-04 16:12:53,257] Trial 48 finished with value: 0.209622198361369 and parameters: {'model_name': 'VAE', 'batch_size': 680, 'iterations': 69, 'learning_rate': 0.0001024412259881771, 'p_miss': 0.1437041354197433}. Best is trial 46 with value: 0.2083336134365122.
running
[I 2024-11-04 16:14:48,253] Trial 50 finished with value: 0.20713840969786673 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 23, 'learning_rate': 0.00010116086033447253, 'p_miss': 0.16521442185288784}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:15:17,943] Trial 51 finished with value: 0.2099334987133421 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6, 'learning_rate': 0.00010391433217856965, 'p_miss': 0.1981154543215787}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:16:17,866] Trial 49 finished with value: 0.20731720720015004 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 107, 'learning_rate': 0.00013577832867996077, 'p_miss': 0.15601173711675015}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:16:41,217] Trial 52 finished with value: 0.20979679457130346 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 23, 'learning_rate': 0.0004085839539672107, 'p_miss': 0.10492016197659584}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:17:10,147] Trial 53 finished with value: 0.2086031477202485 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 12, 'learning_rate': 0.0008117666096478744, 'p_miss': 0.10554354802611185}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:17:30,112] Trial 54 finished with value: 0.20927943085586814 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 12, 'learning_rate': 0.0009650185976075298, 'p_miss': 0.18564863922713024}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:17:37,907] Trial 56 finished with value: 0.21186976273674415 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 1, 'learning_rate': 0.00010314223609972448, 'p_miss': 0.11369273105324}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:18:01,449] Trial 55 finished with value: 0.2117440465946804 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 13, 'learning_rate': 0.001026778873644031, 'p_miss': 0.19200383683833594}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:37:44,485] Trial 57 finished with value: 0.214419031854484 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 262, 'learning_rate': 0.0002761544926406327, 'p_miss': 0.15174080166183723}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:38:57,502] Trial 58 finished with value: 0.2167265822957949 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 270, 'learning_rate': 0.0003045145511876606, 'p_miss': 0.14916087716748294}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:41:03,493] Trial 60 finished with value: 0.2109834738583384 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 29, 'learning_rate': 0.00019477866976268072, 'p_miss': 0.09434054292288706}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 16:41:21,954] Trial 61 finished with value: 0.20994999883232807 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4, 'learning_rate': 0.0007352407856584266, 'p_miss': 0.12695832406801896}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 17:13:53,506] Trial 59 finished with value: 0.23782082761354578 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 519, 'learning_rate': 0.00024020693579217348, 'p_miss': 0.12594040894558534}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 17:15:09,663] Trial 63 finished with value: 0.208302676238727 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 15, 'learning_rate': 0.002508786568470034, 'p_miss': 0.07594684773177167}. Best is trial 50 with value: 0.20713840969786673.
running
[I 2024-11-04 17:16:01,871] Trial 64 finished with value: 0.2066251102250743 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 12, 'learning_rate': 0.002679431496400881, 'p_miss': 0.078140116463096}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 17:16:13,439] Trial 65 finished with value: 0.40612476917115375 and parameters: {'model_name': 'GAIN', 'batch_size': 31, 'hint_rate': 0.045504802731991256, 'alpha': 7, 'iterations': 2, 'learning_rate': 0.0034972816039938225, 'p_miss': 0.012334609834312282}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 17:17:08,823] Trial 66 finished with value: 0.20848515754120345 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 14, 'learning_rate': 0.0020361894172735546, 'p_miss': 0.0801783150996838}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 17:18:24,351] Trial 67 finished with value: 0.26518441515243124 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 17, 'learning_rate': 0.008654149625182841, 'p_miss': 0.07427717673719668}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 17:19:04,258] Trial 68 finished with value: 0.20747718846844446 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 9, 'learning_rate': 0.0020735198319247724, 'p_miss': 0.07734557282189565}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 17:21:24,217] Trial 62 finished with value: 0.2212106049223479 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 568, 'learning_rate': 0.00018602221182856168, 'p_miss': 0.07300844201209218}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:04:22,021] Trial 69 finished with value: 0.27547818671654145 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:05:02,649] Trial 71 finished with value: 0.22145652722817114 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 7, 'learning_rate': 0.008465753323633252, 'p_miss': 0.16551167622730936}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:06:10,183] Trial 70 finished with value: 0.27582789637130006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:08:00,931] Trial 72 finished with value: 0.21885525072167872 and parameters: {'model_name': 'VAE', 'batch_size': 56, 'iterations': 41, 'learning_rate': 0.0015748238464326448, 'p_miss': 0.21815682862277797}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:10:06,624] Trial 74 finished with value: 0.27627263302604066 and parameters: {'model_name': 'VAE', 'batch_size': 56, 'iterations': 29, 'learning_rate': 0.006186526258671058, 'p_miss': 0.03953251307403802}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:12:33,850] Trial 75 finished with value: 0.3877382035665802 and parameters: {'model_name': 'GAIN', 'batch_size': 14, 'hint_rate': 0.019332124128138006, 'alpha': 87, 'iterations': 80, 'learning_rate': 0.0014549783591252246, 'p_miss': 0.16853023374735634}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:13:16,374] Trial 76 finished with value: 0.20897700704212233 and parameters: {'model_name': 'VAE', 'batch_size': 62, 'iterations': 9, 'learning_rate': 0.0021565259854820227, 'p_miss': 0.0867461403616996}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:13:32,504] Trial 77 finished with value: 0.20732104473541352 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 3, 'learning_rate': 0.002243587367962536, 'p_miss': 0.06402405532724005}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:13:47,475] Trial 78 finished with value: 0.20745056640244455 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 3, 'learning_rate': 0.004211755461673453, 'p_miss': 0.04731891980737392}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:13:59,807] Trial 79 finished with value: 0.20922878738835693 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 2, 'learning_rate': 0.004659230081534571, 'p_miss': 0.05685423816260575}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:14:14,565] Trial 80 finished with value: 0.20715777200921587 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 3, 'learning_rate': 0.0026889203596614066, 'p_miss': 0.037277820608883724}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:14:15,483] Trial 81 finished with value: 0.4080212911372893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:14:36,265] Trial 82 finished with value: 0.2221629426054436 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 2, 'learning_rate': 0.018846281465092193, 'p_miss': 0.03048646748863404}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:14:54,277] Trial 83 finished with value: 0.20876058455732643 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 4, 'learning_rate': 0.005129066929819852, 'p_miss': 0.022473422473127874}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:15:02,503] Trial 84 finished with value: 0.210037648519502 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 1, 'learning_rate': 0.0036885635818091223, 'p_miss': 0.05568721269000385}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:15:15,660] Trial 85 finished with value: 0.40300137085908183 and parameters: {'model_name': 'GAIN', 'batch_size': 22, 'hint_rate': 0.2784341023661118, 'alpha': 30, 'iterations': 3, 'learning_rate': 0.00048168567504936426, 'p_miss': 0.042563030170322674}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:15:46,261] Trial 86 finished with value: 0.2073308850695191 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 7, 'learning_rate': 0.0027267744202835167, 'p_miss': 0.06270265236314441}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:16:05,336] Trial 87 finished with value: 0.20994692706859613 and parameters: {'model_name': 'VAE', 'batch_size': 38, 'iterations': 3, 'learning_rate': 0.0029014645737399977, 'p_miss': 0.061400976936729766}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:16:47,862] Trial 88 finished with value: 0.20878486814150127 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 8, 'learning_rate': 0.001367866725325975, 'p_miss': 0.03906887316370097}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 18:17:27,921] Trial 89 finished with value: 0.21443767552156748 and parameters: {'model_name': 'VAE', 'batch_size': 44, 'iterations': 7, 'learning_rate': 0.007507416075582002, 'p_miss': 0.060373202438432916}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 19:26:48,877] Trial 41 finished with value: 0.27546873972653124 and parameters: {'model_name': 'VAE', 'batch_size': 963, 'iterations': 2707, 'learning_rate': 0.00010296533636749998, 'p_miss': 0.11609314927176592}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 19:28:46,562] Trial 91 finished with value: 0.29389141069819175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 19:29:19,768] Trial 92 finished with value: 0.24166434502686857 and parameters: {'model_name': 'VAE', 'batch_size': 86, 'iterations': 5, 'learning_rate': 0.014183600469170705, 'p_miss': 0.025986083979846815}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 19:29:35,657] Trial 93 finished with value: 0.2560846644215044 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 3, 'learning_rate': 0.04434631946895058, 'p_miss': 0.09484705127822077}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 19:29:36,498] Trial 94 finished with value: 0.4080212911372893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 20:01:55,949] Trial 37 finished with value: 0.2760835508115906 and parameters: {'model_name': 'VAE', 'batch_size': 738, 'iterations': 3621, 'learning_rate': 0.00011092736213333046, 'p_miss': 0.11496292351376362}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 20:50:49,754] Trial 36 finished with value: 0.27576498942513816 and parameters: {'model_name': 'VAE', 'batch_size': 831, 'iterations': 3424, 'learning_rate': 0.00011013429220052834, 'p_miss': 0.11249083394850248}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 20:52:03,986] Trial 97 finished with value: 0.2122736471036296 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 19, 'learning_rate': 0.0023874356770458758, 'p_miss': 0.06842495071486614}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 20:52:47,479] Trial 98 finished with value: 0.2096588023151634 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 10, 'learning_rate': 0.0028170732731051043, 'p_miss': 0.05037984352364165}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 20:54:10,952] Trial 99 finished with value: 0.21026757455140363 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 22, 'learning_rate': 0.0018729050596907309, 'p_miss': 0.1704122877932426}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:03:51,031] Trial 100 finished with value: 0.28402836494215083 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 151, 'learning_rate': 0.0030255136052049253, 'p_miss': 0.08249820439493688}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:04:18,633] Trial 101 finished with value: 0.2087580035449208 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 5, 'learning_rate': 0.0040720613171332624, 'p_miss': 0.06513355673945344}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:04:28,929] Trial 102 finished with value: 0.21227274215980135 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 2, 'learning_rate': 0.00014644613999172812, 'p_miss': 0.04423366096993208}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:05:10,128] Trial 103 finished with value: 0.2069682231778805 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 10, 'learning_rate': 0.0012304757209005747, 'p_miss': 0.09630942029496053}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:05:31,548] Trial 104 finished with value: 0.20807719653122247 and parameters: {'model_name': 'VAE', 'batch_size': 186, 'iterations': 4, 'learning_rate': 0.0012062556164143187, 'p_miss': 0.20816202455324387}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:05:55,709] Trial 105 finished with value: 0.2103113165524595 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 6, 'learning_rate': 0.0006456142150910422, 'p_miss': 0.08987689939936311}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:06:18,009] Trial 106 finished with value: 0.2093830611836222 and parameters: {'model_name': 'VAE', 'batch_size': 207, 'iterations': 4, 'learning_rate': 0.0010576444205805588, 'p_miss': 0.22444314311647157}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:06:43,227] Trial 107 finished with value: 0.21020946780862157 and parameters: {'model_name': 'VAE', 'batch_size': 545, 'iterations': 3, 'learning_rate': 0.0016599697766761987, 'p_miss': 0.24540386433737582}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:07:18,121] Trial 108 finished with value: 0.20960539769424053 and parameters: {'model_name': 'VAE', 'batch_size': 114, 'iterations': 9, 'learning_rate': 0.0011756596446837113, 'p_miss': 0.15874858382083365}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:07:25,380] Trial 109 finished with value: 0.2109443113270321 and parameters: {'model_name': 'VAE', 'batch_size': 37, 'iterations': 1, 'learning_rate': 0.0019844683452362568, 'p_miss': 0.1853059042668179}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:23:15,850] Trial 40 finished with value: 0.2757156511163389 and parameters: {'model_name': 'VAE', 'batch_size': 780, 'iterations': 4506, 'learning_rate': 0.00018332199977845421, 'p_miss': 0.10975140037102402}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:23:17,480] Trial 111 finished with value: 0.4080212911372893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:23:44,990] Trial 112 finished with value: 0.3801378566971387 and parameters: {'model_name': 'GAIN', 'batch_size': 260, 'hint_rate': 0.7178213886252084, 'alpha': 67, 'iterations': 11, 'learning_rate': 0.0053766798795394114, 'p_miss': 0.20271286604258731}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:24:18,869] Trial 113 finished with value: 0.27036075410794763 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 21:24:56,775] Trial 114 finished with value: 0.209069889494868 and parameters: {'model_name': 'VAE', 'batch_size': 390, 'iterations': 5, 'learning_rate': 0.003252793105380301, 'p_miss': 0.13208562327530776}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:09:09,783] Trial 90 finished with value: 0.2817847231918555 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 3636, 'learning_rate': 0.002502555625299412, 'p_miss': 0.17035893877209757}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:10:14,520] Trial 116 finished with value: 0.21066567055692714 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 15, 'learning_rate': 0.002268852976075784, 'p_miss': 0.07412558072063952}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:16:07,333] Trial 117 finished with value: 0.2268698602985336 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 104, 'learning_rate': 0.0013704679444502114, 'p_miss': 0.2932450391479758}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:16:57,313] Trial 118 finished with value: 0.2118050300940518 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 14, 'learning_rate': 0.0001405589134940557, 'p_miss': 0.10351449853571905}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:18:27,352] Trial 119 finished with value: 0.2206955585596512 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 25, 'learning_rate': 0.004028244232674393, 'p_miss': 0.07705698107089672}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:18:55,370] Trial 120 finished with value: 0.20792462726673758 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 7, 'learning_rate': 0.0017432748834947972, 'p_miss': 0.09794549055590651}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:19:22,531] Trial 121 finished with value: 0.2095914014210774 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 6, 'learning_rate': 0.0017417194371839315, 'p_miss': 0.09435159659005132}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:19:51,428] Trial 122 finished with value: 0.21145770981308615 and parameters: {'model_name': 'VAE', 'batch_size': 45, 'iterations': 8, 'learning_rate': 0.0008950697508282733, 'p_miss': 0.05005907559143802}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:20:23,841] Trial 123 finished with value: 0.2748420385620446 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 32188, 'weights': 'distance'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:20:40,643] Trial 124 finished with value: 0.20816510099919672 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 4, 'learning_rate': 0.0012632337555510953, 'p_miss': 0.1177892393730725}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:44:44,574] Trial 34 finished with value: 0.27558287122284064 and parameters: {'model_name': 'VAE', 'batch_size': 997, 'iterations': 6011, 'learning_rate': 0.00010737977630706896, 'p_miss': 0.0965279529288084}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:45:02,742] Trial 126 finished with value: 0.2098123624747484 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 4, 'learning_rate': 0.0011641128172986098, 'p_miss': 0.12415725545983823}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:45:13,033] Trial 127 finished with value: 0.2086199156495828 and parameters: {'model_name': 'VAE', 'batch_size': 30, 'iterations': 2, 'learning_rate': 0.0005431850869578779, 'p_miss': 0.10260425586353442}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:45:28,683] Trial 128 finished with value: 0.2092551516617127 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 3, 'learning_rate': 0.0013253953973723727, 'p_miss': 0.08435912967810752}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:46:09,492] Trial 129 finished with value: 0.20675189934979038 and parameters: {'model_name': 'VAE', 'batch_size': 81, 'iterations': 11, 'learning_rate': 0.0017694607113852494, 'p_miss': 0.11546194614690386}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:46:59,420] Trial 130 finished with value: 0.2090480982115981 and parameters: {'model_name': 'VAE', 'batch_size': 65, 'iterations': 11, 'learning_rate': 0.0019566656854872124, 'p_miss': 0.06876694153648649}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:47:21,081] Trial 39 finished with value: 0.27538416863826665 and parameters: {'model_name': 'VAE', 'batch_size': 909, 'iterations': 5138, 'learning_rate': 0.00010337690886066177, 'p_miss': 0.11509020787035631}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:49:51,668] Trial 132 finished with value: 0.2549451403998272 and parameters: {'model_name': 'VAE', 'batch_size': 98, 'iterations': 41, 'learning_rate': 0.002773293245433433, 'p_miss': 0.034691507832792845}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:50:35,877] Trial 133 finished with value: 0.20789972575646032 and parameters: {'model_name': 'VAE', 'batch_size': 167, 'iterations': 6, 'learning_rate': 0.003370141598748203, 'p_miss': 0.08733540665122727}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:51:28,162] Trial 131 finished with value: 0.27503392288093154 and parameters: {'model_name': 'VAE', 'batch_size': 171, 'iterations': 61, 'learning_rate': 0.0028354101368655306, 'p_miss': 0.10931390702256144}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:51:45,293] Trial 135 finished with value: 0.3896654805364148 and parameters: {'model_name': 'GAIN', 'batch_size': 16, 'hint_rate': 0.289309987089866, 'alpha': 29, 'iterations': 7, 'learning_rate': 0.0036113577438325155, 'p_miss': 0.14255626794846543}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:52:26,668] Trial 136 finished with value: 0.20863469332679116 and parameters: {'model_name': 'VAE', 'batch_size': 133, 'iterations': 10, 'learning_rate': 0.0015952853003475007, 'p_miss': 0.08593007587663942}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:52:53,251] Trial 137 finished with value: 0.20766861276300347 and parameters: {'model_name': 'VAE', 'batch_size': 181, 'iterations': 5, 'learning_rate': 0.002315395865146845, 'p_miss': 0.10003983086288239}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:53:21,511] Trial 138 finished with value: 0.20792201821747155 and parameters: {'model_name': 'VAE', 'batch_size': 257, 'iterations': 7, 'learning_rate': 0.0023450665880822494, 'p_miss': 0.09942356249330617}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:54:39,503] Trial 139 finished with value: 0.21206952987840477 and parameters: {'model_name': 'VAE', 'batch_size': 286, 'iterations': 18, 'learning_rate': 0.0022788097778505493, 'p_miss': 0.062155171541124446}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 22:55:54,621] Trial 140 finished with value: 0.24019312146371213 and parameters: {'model_name': 'VAE', 'batch_size': 407, 'iterations': 12, 'learning_rate': 0.004472959603449639, 'p_miss': 0.06956467172078246}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:38:42,646] Trial 32 finished with value: 0.2752596938338738 and parameters: {'model_name': 'VAE', 'batch_size': 806, 'iterations': 7022, 'learning_rate': 0.00011706112865193438, 'p_miss': 0.27767729139934133}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:38:43,202] Trial 142 finished with value: 0.4080212911372893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:39:30,464] Trial 143 finished with value: 0.2881316231687716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:40:17,063] Trial 144 finished with value: 0.21057743769877657 and parameters: {'model_name': 'VAE', 'batch_size': 243, 'iterations': 6, 'learning_rate': 0.0033548926358442205, 'p_miss': 0.17849897749378296}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:41:08,355] Trial 145 finished with value: 0.23344403431478047 and parameters: {'model_name': 'VAE', 'batch_size': 350, 'iterations': 5, 'learning_rate': 0.006711521968595477, 'p_miss': 0.09091584415473003}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:41:35,579] Trial 146 finished with value: 0.20729892510066547 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 8, 'learning_rate': 0.0025077915466904547, 'p_miss': 0.15390097616288026}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:42:17,729] Trial 147 finished with value: 0.20769200067647478 and parameters: {'model_name': 'VAE', 'batch_size': 75, 'iterations': 9, 'learning_rate': 0.0025521922951700477, 'p_miss': 0.07825205321750434}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:53:33,542] Trial 148 finished with value: 0.278091610851129 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 223, 'learning_rate': 0.0026519916893484124, 'p_miss': 0.15025574689159005}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:54:06,669] Trial 149 finished with value: 0.2080656165290363 and parameters: {'model_name': 'VAE', 'batch_size': 152, 'iterations': 8, 'learning_rate': 0.003285381983974123, 'p_miss': 0.15945547611144695}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:54:40,534] Trial 150 finished with value: 0.2093757747591069 and parameters: {'model_name': 'VAE', 'batch_size': 45, 'iterations': 9, 'learning_rate': 0.00201904351655674, 'p_miss': 0.08060686528627878}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:55:18,028] Trial 151 finished with value: 0.27480527776491237 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 20198, 'weights': 'distance'}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:55:48,830] Trial 38 finished with value: 0.2757658775078736 and parameters: {'model_name': 'VAE', 'batch_size': 595, 'iterations': 6593, 'learning_rate': 0.00010016921870306165, 'p_miss': 0.11597792406006985}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:56:38,592] Trial 152 finished with value: 0.24702322083502232 and parameters: {'model_name': 'VAE', 'batch_size': 98, 'iterations': 19, 'learning_rate': 0.0050742395630279285, 'p_miss': 0.05498409433320958}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:57:24,453] Trial 153 finished with value: 0.26015613476682853 and parameters: {'model_name': 'VAE', 'batch_size': 114, 'iterations': 20, 'learning_rate': 0.005435794705299282, 'p_miss': 0.054560388146537075}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:57:33,560] Trial 154 finished with value: 0.21530894827026992 and parameters: {'model_name': 'VAE', 'batch_size': 36, 'iterations': 14, 'learning_rate': 0.003811941591439731, 'p_miss': 0.047443635782745845}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:58:10,525] Trial 156 finished with value: 0.2083348812681677 and parameters: {'model_name': 'VAE', 'batch_size': 72, 'iterations': 7, 'learning_rate': 0.002421438851448529, 'p_miss': 0.09618982257351556}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:58:15,477] Trial 155 finished with value: 0.21119722612953082 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 13, 'learning_rate': 0.003890105926592006, 'p_miss': 0.045441897385793364}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:58:35,645] Trial 157 finished with value: 0.2095510070773936 and parameters: {'model_name': 'VAE', 'batch_size': 52, 'iterations': 5, 'learning_rate': 0.0022376737630792607, 'p_miss': 0.10110974483334242}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:58:41,174] Trial 158 finished with value: 0.2089781675263978 and parameters: {'model_name': 'VAE', 'batch_size': 134, 'iterations': 5, 'learning_rate': 0.002175626280340634, 'p_miss': 0.07950593099503347}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:58:53,778] Trial 159 finished with value: 0.20978417335032376 and parameters: {'model_name': 'VAE', 'batch_size': 204, 'iterations': 3, 'learning_rate': 0.0031471257605998784, 'p_miss': 0.07840131895712216}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:59:04,599] Trial 160 finished with value: 0.20944743084132328 and parameters: {'model_name': 'VAE', 'batch_size': 216, 'iterations': 3, 'learning_rate': 0.0030759427394400625, 'p_miss': 0.06720761330628627}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:59:23,537] Trial 161 finished with value: 0.2104051482374208 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 10, 'learning_rate': 0.00013199238748912655, 'p_miss': 0.09059255679019479}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:59:30,815] Trial 162 finished with value: 0.21023731411874738 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 6, 'learning_rate': 0.002601563635382503, 'p_miss': 0.09003298390713352}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-04 23:59:56,208] Trial 163 finished with value: 0.20855127612465005 and parameters: {'model_name': 'VAE', 'batch_size': 158, 'iterations': 8, 'learning_rate': 0.002629575218176694, 'p_miss': 0.1217263166842159}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-05 00:01:52,199] Trial 165 finished with value: 0.21771260221598782 and parameters: {'model_name': 'VAE', 'batch_size': 33, 'iterations': 34, 'learning_rate': 0.001507150330514745, 'p_miss': 0.11061154702529521}. Best is trial 64 with value: 0.2066251102250743.
running
[I 2024-11-05 00:02:13,678] Trial 166 finished with value: 0.20581653786089255 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 7, 'learning_rate': 0.0017804797740882097, 'p_miss': 0.09914887381687741}. Best is trial 166 with value: 0.20581653786089255.
running
[I 2024-11-05 00:02:33,641] Trial 167 finished with value: 0.20843244208051956 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 6, 'learning_rate': 0.0018030248748025324, 'p_miss': 0.15591077604181064}. Best is trial 166 with value: 0.20581653786089255.
running
[I 2024-11-05 00:03:27,934] Trial 168 finished with value: 0.20549437158673384 and parameters: {'model_name': 'VAE', 'batch_size': 82, 'iterations': 16, 'learning_rate': 0.00022051400505386132, 'p_miss': 0.10634411851684193}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:04:45,207] Trial 164 finished with value: 0.27695577830740026 and parameters: {'model_name': 'VAE', 'batch_size': 33, 'iterations': 97, 'learning_rate': 0.09492320423668485, 'p_miss': 0.014619948670718058}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:05:53,061] Trial 170 finished with value: 0.20943777568108674 and parameters: {'model_name': 'VAE', 'batch_size': 80, 'iterations': 15, 'learning_rate': 0.00019210723366220832, 'p_miss': 0.13049944534018992}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:08:22,801] Trial 169 finished with value: 0.20683895352987974 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 88, 'learning_rate': 0.00024413179220616427, 'p_miss': 0.1315138486022822}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:08:45,006] Trial 172 finished with value: 0.3925959895453457 and parameters: {'model_name': 'GAIN', 'batch_size': 19, 'hint_rate': 0.7611331227862171, 'alpha': 77, 'iterations': 11, 'learning_rate': 0.00027862010123862115, 'p_miss': 0.11451995256137981}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:08:46,758] Trial 173 finished with value: 0.4080212911372893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:13:44,444] Trial 141 finished with value: 0.28819066551085826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:13:46,626] Trial 171 finished with value: 0.2062754314881162 and parameters: {'model_name': 'VAE', 'batch_size': 91, 'iterations': 152, 'learning_rate': 0.0001662648700261762, 'p_miss': 0.1785938564373385}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:18:13,255] Trial 176 finished with value: 0.20903884134376205 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 82, 'learning_rate': 0.00022746635697557603, 'p_miss': 0.1615576290656153}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:20:56,550] Trial 175 finished with value: 0.21109294989211352 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 138, 'learning_rate': 0.00022887443232848123, 'p_miss': 0.16296009523369706}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:25:30,056] Trial 177 finished with value: 0.2068177551868223 and parameters: {'model_name': 'VAE', 'batch_size': 87, 'iterations': 141, 'learning_rate': 0.00012345067833084705, 'p_miss': 0.14108420174537034}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:31:30,377] Trial 178 finished with value: 0.210515913115943 and parameters: {'model_name': 'VAE', 'batch_size': 94, 'iterations': 180, 'learning_rate': 0.000185401257489254, 'p_miss': 0.18113415364900795}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:32:26,088] Trial 26 finished with value: 0.3217566688286573 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9797, 'learning_rate': 0.00012836469901344146, 'p_miss': 0.2797963748090386}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:34:24,856] Trial 179 finished with value: 0.2075040248228875 and parameters: {'model_name': 'VAE', 'batch_size': 91, 'iterations': 128, 'learning_rate': 0.0001367346542817403, 'p_miss': 0.17852717620026984}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:34:30,052] Trial 44 finished with value: 0.30362122994363344 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 9629, 'learning_rate': 0.00010701934155884456, 'p_miss': 0.192337354739752}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:38:26,211] Trial 180 finished with value: 0.21013031263423382 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 122, 'learning_rate': 0.00015671263133397182, 'p_miss': 0.1366621891887158}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:42:07,806] Trial 183 finished with value: 0.21023364184956553 and parameters: {'model_name': 'VAE', 'batch_size': 59, 'iterations': 127, 'learning_rate': 0.00016004421897178835, 'p_miss': 0.1388609279496844}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:44:17,170] Trial 182 finished with value: 0.2204209434818855 and parameters: {'model_name': 'VAE', 'batch_size': 114, 'iterations': 123, 'learning_rate': 0.00035605717548429247, 'p_miss': 0.13288855100097302}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:50:32,935] Trial 186 finished with value: 0.20822423751239202 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 84, 'learning_rate': 0.00011380913310248262, 'p_miss': 0.17574858573393926}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:53:23,983] Trial 181 finished with value: 0.21169868921394705 and parameters: {'model_name': 'VAE', 'batch_size': 64, 'iterations': 331, 'learning_rate': 0.00012047959621477899, 'p_miss': 0.13918446285237102}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:56:51,802] Trial 188 finished with value: 0.20994620402592826 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 68, 'learning_rate': 0.00012724539504322904, 'p_miss': 0.14963253537878385}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 00:58:47,387] Trial 184 finished with value: 0.2112595629686167 and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 398, 'learning_rate': 0.00011969877856335172, 'p_miss': 0.17112414467489737}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:00:38,561] Trial 185 finished with value: 0.21073153726224794 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 314, 'learning_rate': 0.00011991846302248148, 'p_miss': 0.1751945141049128}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:06:09,275] Trial 189 finished with value: 0.20785805699605656 and parameters: {'model_name': 'VAE', 'batch_size': 88, 'iterations': 182, 'learning_rate': 0.0001513260915064748, 'p_miss': 0.16769124912692493}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:10:09,290] Trial 191 finished with value: 0.20806950596329393 and parameters: {'model_name': 'VAE', 'batch_size': 87, 'iterations': 162, 'learning_rate': 0.00016382526540156125, 'p_miss': 0.19197909132376262}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:10:16,429] Trial 190 finished with value: 0.20908929323809775 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 209, 'learning_rate': 0.0001717370976641146, 'p_miss': 0.14470145011754923}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:10:48,964] Trial 193 finished with value: 0.27482206883010996 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 22760, 'weights': 'distance'}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:10:50,167] Trial 194 finished with value: 0.2747645149447224 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10397, 'weights': 'distance'}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:11:31,527] Trial 196 finished with value: 0.21213074915158056 and parameters: {'model_name': 'VAE', 'batch_size': 72, 'iterations': 12, 'learning_rate': 0.00023509997910297145, 'p_miss': 0.119728480102015}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:13:53,862] Trial 195 finished with value: 0.2084596534016435 and parameters: {'model_name': 'VAE', 'batch_size': 124, 'iterations': 53, 'learning_rate': 0.00010068448446519764, 'p_miss': 0.10648793884596604}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:17:32,056] Trial 192 finished with value: 0.21029566084364495 and parameters: {'model_name': 'VAE', 'batch_size': 50, 'iterations': 187, 'learning_rate': 0.00021258578536751877, 'p_miss': 0.187407905524136}. Best is trial 168 with value: 0.20549437158673384.
running
[I 2024-11-05 01:17:40,829] Trial 187 finished with value: 0.22781576592278255 and parameters: {'model_name': 'VAE', 'batch_size': 68, 'iterations': 464, 'learning_rate': 0.0001532672359942627, 'p_miss': 0.16973681196010254}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 01:23:22,511] Trial 199 finished with value: 0.2752395334457605 and parameters: {'model_name': 'VAE', 'batch_size': 102, 'iterations': 98, 'learning_rate': 0.0020304908053581615, 'p_miss': 0.1542486454902477}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 01:37:54,250] Trial 42 finished with value: 0.27517466260584694 and parameters: {'model_name': 'VAE', 'batch_size': 825, 'iterations': 8644, 'learning_rate': 0.00010102277443217957, 'p_miss': 0.11280689923475196}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 01:56:13,519] Trial 174 finished with value: 0.2777242913962949 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:06:31,661] Trial 198 finished with value: 0.27820756043667527 and parameters: {'model_name': 'VAE', 'batch_size': 51, 'iterations': 1450, 'learning_rate': 0.0002090365415479966, 'p_miss': 0.18552653837286004}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:07:33,677] Trial 96 finished with value: 0.2812891995292555 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 7340, 'learning_rate': 0.002524903484743731, 'p_miss': 0.07003403345600515}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:08:10,414] Trial 197 finished with value: 0.2771049474553407 and parameters: {'model_name': 'VAE', 'batch_size': 119, 'iterations': 1402, 'learning_rate': 0.0020314168272024995, 'p_miss': 0.15462772031607452}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:12:36,715] Trial 43 finished with value: 0.2756523771955724 and parameters: {'model_name': 'VAE', 'batch_size': 653, 'iterations': 9819, 'learning_rate': 0.00016275891030933495, 'p_miss': 0.17130495666598936}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:13:15,397] Trial 33 finished with value: 0.27574499697652477 and parameters: {'model_name': 'VAE', 'batch_size': 970, 'iterations': 8819, 'learning_rate': 0.00012390051733985228, 'p_miss': 0.28182919778220206}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:14:17,570] Trial 73 finished with value: 0.2772466761647324 and parameters: {'model_name': 'VAE', 'batch_size': 65, 'iterations': 9936, 'learning_rate': 0.001361589569957899, 'p_miss': 0.03119702704372391}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:23:56,186] Trial 110 finished with value: 0.2818092342768499 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 6980, 'learning_rate': 0.005224590731478737, 'p_miss': 0.09989294139164748}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:26:38,473] Trial 95 finished with value: 0.27714267675897464 and parameters: {'model_name': 'VAE', 'batch_size': 167, 'iterations': 7522, 'learning_rate': 0.0018746060258189813, 'p_miss': 0.06731828345427598}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:26:44,187] Trial 115 finished with value: 0.2819273963871466 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 6908, 'learning_rate': 0.00013633461336719143, 'p_miss': 0.1027321755726522}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:27:17,224] Trial 35 finished with value: 0.27588105120770245 and parameters: {'model_name': 'VAE', 'batch_size': 744, 'iterations': 9941, 'learning_rate': 0.00011225846813593794, 'p_miss': 0.10471674659815712}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:29:08,866] Trial 125 finished with value: 0.28504377111896473 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 7413, 'learning_rate': 0.003367911026924637, 'p_miss': 0.1811013118828592}. Best is trial 168 with value: 0.20549437158673384.
[I 2024-11-05 02:29:55,794] Trial 134 finished with value: 0.2768891565542676 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 8567, 'learning_rate': 0.0035786452875447594, 'p_miss': 0.09019194569780763}. Best is trial 168 with value: 0.20549437158673384.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
dtype: int64
0.20549437158673384
{'model_name': 'VAE', 'batch_size': 82, 'iterations': 16, 'learning_rate': 0.00022051400505386132, 'p_miss': 0.10634411851684193}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.5234500704213074
Generation:   4%|▍         | 1/25 [01:47<42:59, 107.49s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f9db0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747164a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474737850> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  2
Best f1_score score: 0.5234500704213074
Generation:   8%|▊         | 2/25 [02:37<28:11, 73.53s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474736aa0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474714130> 

Generation:  3
Best f1_score score: 0.5234500704213074
Generation:  12%|█▏        | 3/25 [12:42<1:55:57, 316.25s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467fc85b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  4
Best f1_score score: 0.5234500704213074
Generation:  16%|█▌        | 4/25 [19:21<2:02:11, 349.12s/it]Generation:  5
Best f1_score score: 0.5234500704213074
Generation:  20%|██        | 5/25 [21:01<1:26:22, 259.13s/it]Generation:  6
Best f1_score score: 0.5234500704213074
Generation:  24%|██▍       | 6/25 [22:13<1:01:56, 195.61s/it]Generation:  7
Best f1_score score: 0.5234500704213074
Generation:  28%|██▊       | 7/25 [23:18<45:51, 152.86s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467212dd0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.5234500704213074
Generation:  32%|███▏      | 8/25 [24:17<34:47, 122.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e8ca30> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  9
Best f1_score score: 0.5234500704213074
Generation:  36%|███▌      | 9/25 [26:34<34:00, 127.52s/it]Generation:  10
Best f1_score score: 0.5234500704213074
Generation:  40%|████      | 10/25 [28:37<31:30, 126.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467b708e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464fed1b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.5234500704213074
Generation:  44%|████▍     | 11/25 [33:03<39:22, 168.75s/it]Generation:  12
Best f1_score score: 0.5234500704213074
Generation:  48%|████▊     | 12/25 [34:07<29:41, 137.06s/it]Generation:  13
Best f1_score score: 0.5234500704213074
Generation:  52%|█████▏    | 13/25 [38:18<34:16, 171.40s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546517bfd0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.5234500704213074
Generation:  56%|█████▌    | 14/25 [41:30<32:34, 177.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e13e50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  15
Best f1_score score: 0.5234500704213074
Generation:  60%|██████    | 15/25 [44:21<29:16, 175.62s/it]Generation:  16
Best f1_score score: 0.5234500704213074
Generation:  64%|██████▍   | 16/25 [48:24<29:23, 195.97s/it]Generation:  17
Best f1_score score: 0.5234500704213074
Generation:  68%|██████▊   | 17/25 [53:04<29:29, 221.17s/it]Generation:  18
Best f1_score score: 0.5234500704213074
Generation:  72%|███████▏  | 18/25 [54:53<21:52, 187.57s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554671d4040> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  19
Best f1_score score: 0.5234500704213074
Generation:  76%|███████▌  | 19/25 [59:42<21:48, 218.11s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464f505e0> 
 l1_ratio must be specified when penalty is elasticnet. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1204, in fit
    raise ValueError("l1_ratio must be specified when penalty is elasticnet.")
ValueError: l1_ratio must be specified when penalty is elasticnet.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ffc3d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  20
Best f1_score score: 0.5234500704213074
Generation:  80%|████████  | 20/25 [1:01:23<15:13, 182.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554656774f0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554655cf4c0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467b67af0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467a8dab0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  21
Best f1_score score: 0.5234500704213074
Generation:  84%|████████▍ | 21/25 [1:02:38<10:02, 150.62s/it]Generation:  22
Best f1_score score: 0.5234500704213074
Generation:  88%|████████▊ | 22/25 [1:12:31<14:09, 283.12s/it]Generation:  23
Best f1_score score: 0.5234500704213074
Generation:  92%|█████████▏| 23/25 [1:13:43<07:20, 220.05s/it]Generation:  24
Best f1_score score: 0.5234500704213074
Generation:  96%|█████████▌| 24/25 [1:16:37<03:26, 206.13s/it]Generation:  25
Best f1_score score: 0.5234500704213074
Generation: 100%|██████████| 25/25 [1:18:11<00:00, 172.49s/it]Generation: 100%|██████████| 25/25 [1:18:15<00:00, 187.82s/it]
2024-11-05 03:48:20,269 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:34089' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-c3745fbc00250b45723508a57453c1bd', 'ndarray-fd3daf87df640dce90735da3ab923097'} (stimulus_id='handle-worker-cleanup-1730807300.2694545')
Fitted
Pipeline(steps=[('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=False,
                                                l2_regularization=0.0001480402899,
                                                learning_rate=0.0329188089107,
                                                max_features=0.171941656252,
                                                max_leaf_nodes=786,
                                                min_samples_leaf=177,
                                                tol=0.0001,
                                                validation_fraction=None))])
score start
train score: {'auroc': 0.7840150087681653, 'accuracy': 0.7140185196541362, 'balanced_accuracy': 0.7140027643879214, 'logloss': 0.6438324525965223, 'f1': 0.7139951200052073}
original test score: {'auroc': 0.44591401629951133, 'accuracy': 0.4820946774589159, 'balanced_accuracy': 0.48141397996179486, 'logloss': 0.70406497845032, 'f1': 0.42726065503904576}
imputed test score: {'auroc': 0.5236872578789074, 'accuracy': 0.5176600441501104, 'balanced_accuracy': 0.5176379305116976, 'logloss': 0.694076888992036, 'f1': 0.5175999615520198}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435018580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a5330> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.7187587044133277
Generation:   4%|▍         | 1/25 [07:44<3:05:48, 464.52s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f2ba60> 

Generation:  2
Best f1_score score: 0.7244509357776281
Generation:   8%|▊         | 2/25 [17:48<3:29:32, 546.62s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4dc0> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467dcc850> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547471b130> 

Generation:  3
Best f1_score score: 0.7244509357776281
Generation:  12%|█▏        | 3/25 [27:52<3:30:03, 572.88s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467de88b0> 

Generation:  4
Best f1_score score: 0.7244509357776281
Generation:  16%|█▌        | 4/25 [37:56<3:24:49, 585.23s/it]Generation:  5
Best f1_score score: 0.7265912021071659
Generation:  20%|██        | 5/25 [47:57<3:16:52, 590.63s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464c75960> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545beb2f80> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465555cf0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d802e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f29000> 

Generation:  6
Best f1_score score: 0.7279122725280486
Generation:  24%|██▍       | 6/25 [58:02<3:08:37, 595.67s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546557a2f0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a51e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554677329e0> 

Generation:  7
Best f1_score score: 0.7279122725280486
Generation:  28%|██▊       | 7/25 [1:08:07<2:59:35, 598.66s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464a32050> 

Generation:  8
Best f1_score score: 0.7279122725280486
Generation:  32%|███▏      | 8/25 [1:18:11<2:50:07, 600.46s/it]Generation:  9
Best f1_score score: 0.7279122725280486
Generation:  36%|███▌      | 9/25 [1:27:07<2:34:42, 580.15s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459249120> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d379a0> 

Generation:  10
Best f1_score score: 0.7283078452940905
Generation:  40%|████      | 10/25 [1:37:11<2:26:55, 587.72s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554668ef7c0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465418bb0> 

Generation:  11
Best f1_score score: 0.7289008378349854
Generation:  44%|████▍     | 11/25 [1:47:18<2:18:30, 593.63s/it]Generation:  12
Best f1_score score: 0.7314997187428693
Generation:  48%|████▊     | 12/25 [1:54:48<1:59:07, 549.84s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547473b490> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459a80580> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a55e980> 

Generation:  13
Best f1_score score: 0.7314997187428693
Generation:  52%|█████▏    | 13/25 [2:04:56<1:53:28, 567.34s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554649a95d0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546412ec50> 

Generation:  14
Best f1_score score: 0.7314997187428693
Generation:  56%|█████▌    | 14/25 [2:15:03<1:46:14, 579.48s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459bcc0d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554650b4370> 

Generation:  15
Best f1_score score: 0.7338705676627899
Generation:  60%|██████    | 15/25 [2:25:10<1:37:56, 587.60s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554647602b0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.7338705676627899
Generation:  64%|██████▍   | 16/25 [2:27:24<1:07:40, 451.20s/it]Generation:  17
Best f1_score score: 0.7338705676627899
Generation:  68%|██████▊   | 17/25 [2:34:25<58:56, 442.03s/it]  Generation:  18
Best f1_score score: 0.7338705676627899
Generation:  72%|███████▏  | 18/25 [2:36:15<39:56, 342.38s/it]Generation:  19
Best f1_score score: 0.7338705676627899
Generation:  76%|███████▌  | 19/25 [2:44:07<38:08, 381.34s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155450a2aa70> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e02bf0> 

Generation:  20
Best f1_score score: 0.7338705676627899
Generation:  80%|████████  | 20/25 [2:54:14<37:25, 449.13s/it]Generation:  21
Best f1_score score: 0.7338705676627899
Generation:  84%|████████▍ | 21/25 [2:55:37<22:36, 339.24s/it]Generation:  22
Best f1_score score: 0.7338705676627899
Generation:  88%|████████▊ | 22/25 [3:03:14<18:42, 374.32s/it]Generation:  23
Best f1_score score: 0.7338705676627899
Generation:  92%|█████████▏| 23/25 [3:11:06<13:27, 403.82s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554679236a0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547473aad0> 

Generation:  24
Best f1_score score: 0.7338705676627899
Generation:  96%|█████████▌| 24/25 [3:21:13<07:44, 464.88s/it]Generation:  25
Best f1_score score: 0.7338705676627899
Generation: 100%|██████████| 25/25 [3:28:05<00:00, 448.97s/it]Generation: 100%|██████████| 25/25 [3:28:05<00:00, 499.43s/it]
2024-11-05 07:16:44,764 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:39043' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-c3745fbc00250b45723508a57453c1bd', 'DataFrame-b8acd3cbecc05c6a2720fe9b99710a0d'} (stimulus_id='handle-worker-cleanup-1730819804.764672')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='median')),
                ('adaboostclassifier',
                 AdaBoostClassifier(learning_rate=0.6447089625557,
                                    n_estimators=379))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.8251142622110419, 'accuracy': 0.7394370515729441, 'balanced_accuracy': 0.7394167399385643, 'logloss': 0.6912006791315843, 'f1': 0.7394038731712997}
test score: {'auroc': 0.8147453279563139, 'accuracy': 0.7289673779740005, 'balanced_accuracy': 0.7289638913795866, 'logloss': 0.6912379163226523, 'f1': 0.7289646222782665}
original test score: {'auroc': 0.9612324092964875, 'accuracy': 0.8913416727986264, 'balanced_accuracy': 0.8913568455204259, 'logloss': 0.689392383381005, 'f1': 0.8913390579169943}
score end
901
lvl
0.5
type
MCAR
num_run
3
class_full
finished
all finished
full run takes
16.16109341118071
hours
DONE
