Run: 36
/cm/local/apps/slurm/var/spool/job1011349/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/310/310.pkl
working on 
../data/c/310/class_full_MNAR_0.5_2
4.199516534805298
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-22 19:31:11,819] A new study created in memory with name: no-name-f099214f-0ece-4c42-96c6-375e39d5b67e
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-22 19:31:12,278] Trial 6 finished with value: 0.136020460412672 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 6 with value: 0.136020460412672.
[I 2024-10-22 19:31:12,290] Trial 10 finished with value: 0.136020460412672 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 6 with value: 0.136020460412672.
running
running
[I 2024-10-22 19:31:12,702] Trial 14 finished with value: 0.16520347598757268 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 6 with value: 0.136020460412672.
running
[I 2024-10-22 19:31:12,910] Trial 17 finished with value: 0.16520347598757268 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 6 with value: 0.136020460412672.
running
[I 2024-10-22 19:31:15,318] Trial 15 finished with value: 0.136020460412672 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8378, 'weights': 'uniform'}. Best is trial 6 with value: 0.136020460412672.
running
[I 2024-10-22 19:31:15,501] Trial 7 finished with value: 0.12289335406665054 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 261, 'weights': 'uniform'}. Best is trial 7 with value: 0.12289335406665054.
running
[I 2024-10-22 19:31:16,275] Trial 4 finished with value: 0.13496332836835415 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5481, 'weights': 'uniform'}. Best is trial 7 with value: 0.12289335406665054.
running
[I 2024-10-22 19:31:16,861] Trial 13 finished with value: 0.11929430027287666 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 13 with value: 0.11929430027287666.
running
[I 2024-10-22 19:31:17,595] Trial 9 finished with value: 0.12574619235084988 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 13 with value: 0.11929430027287666.
running
[I 2024-10-22 19:31:18,051] Trial 24 finished with value: 0.16520347598757268 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 13 with value: 0.11929430027287666.
running
[I 2024-10-22 19:31:19,144] Trial 20 finished with value: 0.1341310480724496 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4584, 'weights': 'uniform'}. Best is trial 13 with value: 0.11929430027287666.
running
[I 2024-10-22 19:31:19,290] Trial 16 finished with value: 0.11648026964772484 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 16 with value: 0.11648026964772484.
running
[I 2024-10-22 19:31:19,540] Trial 22 finished with value: 0.136020460412672 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8056, 'weights': 'uniform'}. Best is trial 16 with value: 0.11648026964772484.
running
[I 2024-10-22 19:31:19,723] Trial 19 finished with value: 0.11722287499919895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 16 with value: 0.11648026964772484.
running
[I 2024-10-22 19:31:21,706] Trial 29 finished with value: 0.17560882333276245 and parameters: {'model_name': 'GAIN', 'batch_size': 31, 'hint_rate': 0.13997923691974096, 'alpha': 69, 'iterations': 1, 'learning_rate': 0.0030074699248813946, 'p_miss': 0.27463079751095826}. Best is trial 16 with value: 0.11648026964772484.
running
[I 2024-10-22 19:31:22,387] Trial 18 finished with value: 0.17216431897754406 and parameters: {'model_name': 'GAIN', 'batch_size': 101, 'hint_rate': 0.42093457397001216, 'alpha': 35, 'iterations': 2, 'learning_rate': 0.02216508034216796, 'p_miss': 0.14374285643378285}. Best is trial 16 with value: 0.11648026964772484.
running
[I 2024-10-22 19:31:23,267] Trial 8 finished with value: 0.29252075725661436 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 3, 'learning_rate': 0.016660092422779767, 'p_miss': 0.012246920427247988}. Best is trial 16 with value: 0.11648026964772484.
running
[I 2024-10-22 19:31:25,717] Trial 3 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.5185181157852607, 'alpha': 19, 'iterations': 75, 'learning_rate': 0.07064298389821563, 'p_miss': 0.21092883928911207}. Best is trial 16 with value: 0.11648026964772484.
running
[I 2024-10-22 19:31:26,933] Trial 28 finished with value: 0.11682489307633437 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 16 with value: 0.11648026964772484.
running
[I 2024-10-22 19:31:27,375] Trial 27 finished with value: 0.11632474051338271 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 27 with value: 0.11632474051338271.
running
[I 2024-10-22 19:31:30,460] Trial 25 finished with value: 0.14906879875671872 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 10, 'learning_rate': 0.037223833728680794, 'p_miss': 0.09630341102399913}. Best is trial 27 with value: 0.11632474051338271.
running
[I 2024-10-22 19:31:31,772] Trial 32 finished with value: 0.11638128930997631 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.11632474051338271.
running
[I 2024-10-22 19:31:32,240] Trial 34 finished with value: 0.11637431147525419 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 27 with value: 0.11632474051338271.
running
[I 2024-10-22 19:31:35,388] Trial 1 finished with value: 0.16510089874099634 and parameters: {'model_name': 'GAIN', 'batch_size': 45, 'hint_rate': 0.284557044226303, 'alpha': 13, 'iterations': 37, 'learning_rate': 0.006536917860419961, 'p_miss': 0.07857302740646031}. Best is trial 27 with value: 0.11632474051338271.
running
[I 2024-10-22 19:31:37,209] Trial 33 finished with value: 0.11637186294957072 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.11632474051338271.
running
[I 2024-10-22 19:31:42,171] Trial 36 finished with value: 0.11632474051338271 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 27 with value: 0.11632474051338271.
running
[I 2024-10-22 19:31:55,662] Trial 37 finished with value: 0.10918014281045982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:31:56,158] Trial 38 finished with value: 0.11054676676224325 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:31:58,008] Trial 39 finished with value: 0.11054676676224325 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:32:02,918] Trial 41 finished with value: 0.11537334474810565 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:32:12,453] Trial 43 finished with value: 0.11094526714506012 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:32:14,012] Trial 42 finished with value: 0.11094526714506012 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:32:29,427] Trial 46 finished with value: 0.11094526714506012 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:32:31,287] Trial 47 finished with value: 0.11094526714506012 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:32:39,183] Trial 0 finished with value: 0.1504230338381721 and parameters: {'model_name': 'VAE', 'batch_size': 584, 'iterations': 10, 'learning_rate': 0.013583449310633938, 'p_miss': 0.17995580394877908}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:33:58,312] Trial 11 finished with value: 0.14074118775884736 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 59, 'learning_rate': 0.006200221943504342, 'p_miss': 0.1617554525276347}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:35:07,715] Trial 26 finished with value: 0.1635780846463116 and parameters: {'model_name': 'GAIN', 'batch_size': 14, 'hint_rate': 0.5758172146267507, 'alpha': 72, 'iterations': 176, 'learning_rate': 0.051188432632347486, 'p_miss': 0.15710152982379622}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:35:21,191] Trial 2 finished with value: 0.31813630251551317 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 97, 'learning_rate': 0.00010165344116878489, 'p_miss': 0.1725900845194608}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:40:23,319] Trial 21 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.2452622795782673, 'alpha': 58, 'iterations': 1809, 'learning_rate': 0.009028438024026015, 'p_miss': 0.24904276666035793}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:47:55,220] Trial 12 finished with value: 0.11009572925298147 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:47:59,629] Trial 35 finished with value: 0.11012045599074269 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 37 with value: 0.10918014281045982.
running
[I 2024-10-22 19:48:07,893] Trial 40 finished with value: 0.10843971268851013 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 19:50:21,462] Trial 51 finished with value: 0.1098023245996673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 19:51:37,920] Trial 52 finished with value: 0.1094046693498609 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 19:51:43,728] Trial 53 finished with value: 0.10881246514213383 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 19:57:01,492] Trial 54 finished with value: 0.1095925375591384 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 20:04:21,702] Trial 56 finished with value: 0.10851169628195083 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 20:04:22,002] Trial 55 finished with value: 0.109160411882444 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 20:04:26,428] Trial 57 finished with value: 0.1100012120697657 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 20:04:30,184] Trial 64 finished with value: 0.15726528133398204 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 258, 'weights': 'distance'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 20:06:50,718] Trial 58 finished with value: 0.11083450602806307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 20:39:34,759] Trial 5 finished with value: 0.13948319140122192 and parameters: {'model_name': 'VAE', 'batch_size': 73, 'iterations': 1112, 'learning_rate': 0.0009219519441376335, 'p_miss': 0.13991430126413526}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 21:32:13,568] Trial 45 finished with value: 0.16029957052425453 and parameters: {'model_name': 'VAE', 'batch_size': 840, 'iterations': 1338, 'learning_rate': 0.0001498856473674689, 'p_miss': 0.29762834448670517}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 21:48:57,321] Trial 68 finished with value: 0.11018592369609988 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 21:59:40,326] Trial 65 finished with value: 0.13762890643643222 and parameters: {'model_name': 'VAE', 'batch_size': 786, 'iterations': 1571, 'learning_rate': 0.0007928196877557541, 'p_miss': 0.014096300952368607}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:04:49,863] Trial 69 finished with value: 0.11217613044019799 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:04:50,308] Trial 71 finished with value: 0.16520347598757268 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:15:24,725] Trial 70 finished with value: 0.11408918188530434 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:15:53,039] Trial 73 finished with value: 0.1425477536418409 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:21:43,449] Trial 72 finished with value: 0.10945154875576293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:32:21,963] Trial 74 finished with value: 0.10868756916614197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:38:24,363] Trial 75 finished with value: 0.10874901007743225 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:48:51,348] Trial 76 finished with value: 0.11036809231003852 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 22:54:53,303] Trial 77 finished with value: 0.10865845505747258 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 40 with value: 0.10843971268851013.
running
[I 2024-10-22 23:05:21,023] Trial 78 finished with value: 0.10832607354243731 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-22 23:26:20,747] Trial 23 finished with value: 0.19286336725366215 and parameters: {'model_name': 'GAIN', 'batch_size': 17, 'hint_rate': 0.6348899727282741, 'alpha': 30, 'iterations': 8240, 'learning_rate': 0.005727828013983386, 'p_miss': 0.2251444031994397}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-22 23:26:26,038] Trial 81 finished with value: 0.15745529918635484 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2579, 'weights': 'distance'}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-22 23:26:26,739] Trial 82 finished with value: 0.16520347598757268 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-22 23:42:40,294] Trial 83 finished with value: 0.11033927710430944 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-22 23:47:38,287] Trial 49 finished with value: 0.1409999941524897 and parameters: {'model_name': 'VAE', 'batch_size': 722, 'iterations': 3214, 'learning_rate': 0.00011865991189691684, 'p_miss': 0.29529091608719116}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-22 23:53:41,396] Trial 84 finished with value: 0.16587891391892545 and parameters: {'model_name': 'GAIN', 'batch_size': 194, 'hint_rate': 0.954630336155956, 'alpha': 92, 'iterations': 391, 'learning_rate': 0.000337507282068103, 'p_miss': 0.05972035234750152}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-22 23:57:13,686] Trial 85 finished with value: 0.16442216088676684 and parameters: {'model_name': 'GAIN', 'batch_size': 281, 'hint_rate': 0.9107519292937145, 'alpha': 97, 'iterations': 333, 'learning_rate': 0.0004923248152656231, 'p_miss': 0.062311678109905275}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-23 00:07:45,423] Trial 44 finished with value: 0.13883080263526462 and parameters: {'model_name': 'VAE', 'batch_size': 375, 'iterations': 4123, 'learning_rate': 0.00010587196921601173, 'p_miss': 0.2948638768801897}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-23 00:10:02,874] Trial 86 finished with value: 0.1085847657819526 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-23 00:13:45,365] Trial 87 finished with value: 0.10983221379367132 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-23 00:24:24,396] Trial 88 finished with value: 0.10897635090492774 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 78 with value: 0.10832607354243731.
running
[I 2024-10-23 00:26:33,061] Trial 89 finished with value: 0.10796863658127451 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 00:30:02,773] Trial 90 finished with value: 0.10987885489000637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 00:40:49,477] Trial 91 finished with value: 0.10995316581284516 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 00:41:05,009] Trial 94 finished with value: 0.11588499411853881 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 00:43:02,996] Trial 92 finished with value: 0.111760041912353 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 00:46:26,920] Trial 93 finished with value: 0.11199544651591556 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 00:49:14,447] Trial 30 finished with value: 0.15420682354265539 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5189, 'learning_rate': 0.00015275146437165955, 'p_miss': 0.010191762724423542}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 00:57:38,372] Trial 95 finished with value: 0.11210047322306727 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 00:59:20,829] Trial 96 finished with value: 0.10983580004220446 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:02:58,089] Trial 97 finished with value: 0.11026974469708525 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:06:39,853] Trial 98 finished with value: 0.10821692829502352 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:06:40,273] Trial 102 finished with value: 0.16520347598757268 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:06:47,377] Trial 103 finished with value: 0.15923014854882478 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6620, 'weights': 'distance'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:09:46,393] Trial 99 finished with value: 0.12878001811677922 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:14:04,825] Trial 100 finished with value: 0.11190138328592077 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:19:12,743] Trial 104 finished with value: 0.130073676185066 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:19:45,569] Trial 101 finished with value: 0.10996491765534441 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:24:44,392] Trial 105 finished with value: 0.11535797835904801 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:25:22,394] Trial 109 finished with value: 0.14568352454929773 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:29:10,450] Trial 60 finished with value: 0.13722617003129925 and parameters: {'model_name': 'VAE', 'batch_size': 567, 'iterations': 5228, 'learning_rate': 0.0006992230878282231, 'p_miss': 0.2976540316042168}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:30:50,007] Trial 106 finished with value: 0.1097075276038691 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:36:39,979] Trial 108 finished with value: 0.10980164090091193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:36:51,138] Trial 107 finished with value: 0.1081877922004415 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:36:58,016] Trial 114 finished with value: 0.11637487317070432 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:41:58,752] Trial 110 finished with value: 0.10861343621176962 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 89 with value: 0.10796863658127451.
running
[I 2024-10-23 01:45:39,894] Trial 111 finished with value: 0.10770030878365382 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 01:47:14,618] Trial 112 finished with value: 0.10834232000160379 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 01:53:13,397] Trial 113 finished with value: 0.1099362007754541 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 01:54:04,234] Trial 115 finished with value: 0.1098081359652453 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 01:58:40,633] Trial 116 finished with value: 0.10902605744025604 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:02:11,547] Trial 117 finished with value: 0.11178408665336988 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:03:34,360] Trial 118 finished with value: 0.10910868819043622 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:03:40,711] Trial 123 finished with value: 0.15753923840779094 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2734, 'weights': 'distance'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:09:45,203] Trial 119 finished with value: 0.10914899116994156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:10:16,192] Trial 125 finished with value: 0.1687754120158032 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.044285803119481604, 'alpha': 47, 'iterations': 16, 'learning_rate': 0.002267325500805026, 'p_miss': 0.12522993211548858}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:11:15,992] Trial 120 finished with value: 0.10964534855560024 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:15:19,651] Trial 121 finished with value: 0.10933639732027664 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:18:41,568] Trial 122 finished with value: 0.10990565338998555 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:20:10,608] Trial 124 finished with value: 0.10897257684044748 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:26:50,154] Trial 126 finished with value: 0.10850668316290528 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:26:57,040] Trial 131 finished with value: 0.1163743114752542 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:26:57,590] Trial 132 finished with value: 0.136020460412672 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:27:35,098] Trial 66 finished with value: 0.13782623633781851 and parameters: {'model_name': 'VAE', 'batch_size': 866, 'iterations': 4822, 'learning_rate': 0.000770772327328371, 'p_miss': 0.017496570844679205}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:28:37,326] Trial 127 finished with value: 0.11002821775546172 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:32:03,063] Trial 128 finished with value: 0.11255312290731354 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:35:09,519] Trial 129 finished with value: 0.11083385726629383 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:36:40,421] Trial 130 finished with value: 0.10929056651318172 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:43:29,321] Trial 133 finished with value: 0.10918846178180881 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:43:58,635] Trial 134 finished with value: 0.1082246780525102 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:45:42,827] Trial 135 finished with value: 0.10957908516494883 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:45:43,885] Trial 80 finished with value: 0.1669333782037985 and parameters: {'model_name': 'GAIN', 'batch_size': 271, 'hint_rate': 0.9882457495186966, 'alpha': 99, 'iterations': 7212, 'learning_rate': 0.00036338115844664873, 'p_miss': 0.06310166814725154}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:46:22,232] Trial 142 finished with value: 0.15339620144582178 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:46:23,015] Trial 141 finished with value: 0.15339620144582178 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:49:07,641] Trial 136 finished with value: 0.10945508942336162 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:49:27,177] Trial 145 finished with value: 0.10918014281045982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:52:04,740] Trial 137 finished with value: 0.11022846388373411 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:53:32,053] Trial 138 finished with value: 0.10924187729553243 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 02:57:29,027] Trial 31 finished with value: 0.1629731608542992 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8824, 'learning_rate': 0.0002968160682348343, 'p_miss': 0.0421132749262082}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:00:39,446] Trial 139 finished with value: 0.11107704019781292 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:01:15,511] Trial 140 finished with value: 0.10910577339443765 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:03:03,349] Trial 143 finished with value: 0.10806864568229475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:03:48,981] Trial 144 finished with value: 0.10785716054637826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:06:34,064] Trial 146 finished with value: 0.10910959247003323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:08:59,773] Trial 147 finished with value: 0.11053691872172285 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:09:06,517] Trial 155 finished with value: 0.15744187748920407 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2556, 'weights': 'distance'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:10:28,896] Trial 148 finished with value: 0.11016844579496872 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:14:37,356] Trial 149 finished with value: 0.11033870531311611 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:14:46,120] Trial 79 finished with value: 0.17197516931113999 and parameters: {'model_name': 'GAIN', 'batch_size': 176, 'hint_rate': 0.8535561020732412, 'alpha': 40, 'iterations': 8648, 'learning_rate': 0.0005231917392274077, 'p_miss': 0.06299046797873221}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:16:50,284] Trial 152 finished with value: 0.11541437105875374 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:17:47,180] Trial 150 finished with value: 0.10954706654808319 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:18:19,153] Trial 151 finished with value: 0.11015994591856966 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:20:38,810] Trial 153 finished with value: 0.11019358068052418 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:20:39,776] Trial 163 finished with value: 0.16520347598757268 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:23:02,910] Trial 154 finished with value: 0.10998467249723712 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:25:31,358] Trial 156 finished with value: 0.11056494305028622 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:25:41,041] Trial 59 finished with value: 0.13766460373406902 and parameters: {'model_name': 'VAE', 'batch_size': 771, 'iterations': 6336, 'learning_rate': 0.0009583941625102601, 'p_miss': 0.2967596380780125}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:27:47,108] Trial 157 finished with value: 0.11206500195833187 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:30:56,413] Trial 159 finished with value: 0.10867447037927935 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:31:13,779] Trial 158 finished with value: 0.11261850720745814 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:33:09,534] Trial 160 finished with value: 0.11024305980598444 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:33:19,505] Trial 171 finished with value: 0.11637431147525419 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:34:17,529] Trial 161 finished with value: 0.11045922692975704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:34:37,286] Trial 162 finished with value: 0.11003684358871298 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:38:24,742] Trial 164 finished with value: 0.11179650856697276 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:38:44,913] Trial 175 finished with value: 0.11363595959703403 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:40:43,109] Trial 165 finished with value: 0.10894414677445416 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:42:48,351] Trial 166 finished with value: 0.10838776943603286 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:42:53,602] Trial 167 finished with value: 0.10817399529990113 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:45:02,696] Trial 168 finished with value: 0.10961029631794325 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:47:58,185] Trial 169 finished with value: 0.11058486851720276 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:48:31,911] Trial 170 finished with value: 0.10868309167884968 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:48:50,890] Trial 182 finished with value: 0.3220617312430389 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 4, 'learning_rate': 0.002005666438947976, 'p_miss': 0.20366436853608338}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:50:18,997] Trial 172 finished with value: 0.1114369389777049 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:51:25,131] Trial 173 finished with value: 0.10996240633051388 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:51:40,916] Trial 174 finished with value: 0.11091112964794374 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:56:23,580] Trial 176 finished with value: 0.11194761776720855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:58:02,478] Trial 177 finished with value: 0.10966681735536268 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 03:59:40,661] Trial 178 finished with value: 0.10938453532303682 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 04:00:02,251] Trial 179 finished with value: 0.10981917590322472 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 04:02:02,369] Trial 180 finished with value: 0.1090003484097934 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 04:04:54,580] Trial 181 finished with value: 0.10930356302196347 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 04:05:00,473] Trial 192 finished with value: 0.1359250351762121 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6560, 'weights': 'uniform'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 04:05:11,553] Trial 193 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.7432859413326725, 'alpha': 1, 'iterations': 26, 'learning_rate': 0.09671037789175543, 'p_miss': 0.11579442067291298}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 04:05:55,933] Trial 183 finished with value: 0.10946700965654428 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 04:07:22,354] Trial 184 finished with value: 0.10818668499851998 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 111 with value: 0.10770030878365382.
running
[I 2024-10-23 04:08:31,395] Trial 185 finished with value: 0.10762132321276978 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 185 with value: 0.10762132321276978.
running
[I 2024-10-23 04:08:42,303] Trial 186 finished with value: 0.10882514305583353 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 185 with value: 0.10762132321276978.
running
[I 2024-10-23 04:14:03,804] Trial 187 finished with value: 0.10947350410514496 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 185 with value: 0.10762132321276978.
running
[I 2024-10-23 04:15:25,137] Trial 188 finished with value: 0.11007348920131188 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:16:42,342] Trial 189 finished with value: 0.10925535641926276 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:17:06,511] Trial 190 finished with value: 0.11015386840317591 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:18:46,851] Trial 191 finished with value: 0.11009959957697193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:20:19,415] Trial 195 finished with value: 0.11374845209231513 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:21:05,712] Trial 194 finished with value: 0.10992081227621933 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:22:39,503] Trial 196 finished with value: 0.1092843433718453 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:23:31,777] Trial 197 finished with value: 0.10926234609964387 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:23:34,218] Trial 198 finished with value: 0.11000402322757523 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:27:05,813] Trial 199 finished with value: 0.10981985651369416 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:36:23,096] Trial 48 finished with value: 0.1378810849406566 and parameters: {'model_name': 'VAE', 'batch_size': 845, 'iterations': 6986, 'learning_rate': 0.00012645191620660258, 'p_miss': 0.2998647755938711}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 04:37:45,860] Trial 67 finished with value: 0.1380255683363108 and parameters: {'model_name': 'VAE', 'batch_size': 619, 'iterations': 7791, 'learning_rate': 0.00010912093111471881, 'p_miss': 0.021255895709466593}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 05:01:01,083] Trial 63 finished with value: 0.13797388891415827 and parameters: {'model_name': 'VAE', 'batch_size': 793, 'iterations': 9738, 'learning_rate': 0.0009747666821213587, 'p_miss': 0.02650892184163911}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 05:01:36,751] Trial 50 finished with value: 0.13764574589389103 and parameters: {'model_name': 'VAE', 'batch_size': 877, 'iterations': 9935, 'learning_rate': 0.00010827091082529616, 'p_miss': 0.27115722451232194}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 05:02:43,844] Trial 61 finished with value: 0.13776754715898618 and parameters: {'model_name': 'VAE', 'batch_size': 962, 'iterations': 9435, 'learning_rate': 0.000872713092015155, 'p_miss': 0.018449337285932343}. Best is trial 185 with value: 0.10762132321276978.
[I 2024-10-23 05:02:57,048] Trial 62 finished with value: 0.13767400449470196 and parameters: {'model_name': 'VAE', 'batch_size': 969, 'iterations': 9328, 'learning_rate': 0.0007699693040741179, 'p_miss': 0.020019098740812813}. Best is trial 185 with value: 0.10762132321276978.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.10762132321276978
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.6626543016156607
Generation:   4%|▍         | 1/25 [05:29<2:11:49, 329.57s/it]Generation:  2
Best f1_score score: 0.6659375810875987
Generation:   8%|▊         | 2/25 [08:02<1:26:24, 225.40s/it]Generation:  3
Best f1_score score: 0.6659375810875987
Generation:  12%|█▏        | 3/25 [08:18<47:44, 130.20s/it]  Generation:  4
Best f1_score score: 0.6659375810875987
Generation:  16%|█▌        | 4/25 [08:33<29:36, 84.62s/it] Generation:  5
Best f1_score score: 0.6715072076531043
Generation:  20%|██        | 5/25 [08:49<19:56, 59.83s/it]Generation:  6
Best f1_score score: 0.6715072076531043
Generation:  24%|██▍       | 6/25 [09:10<14:47, 46.73s/it]Generation:  7
Best f1_score score: 0.6715072076531043
Generation:  28%|██▊       | 7/25 [11:02<20:20, 67.83s/it]Generation:  8
Best f1_score score: 0.6715072076531043
Generation:  32%|███▏      | 8/25 [11:22<14:56, 52.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f2a350> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  9
Best f1_score score: 0.6715072076531043
Generation:  36%|███▌      | 9/25 [11:56<12:27, 46.71s/it]Generation:  10
Best f1_score score: 0.680492763553304
Generation:  40%|████      | 10/25 [12:15<09:33, 38.24s/it]Generation:  11
Best f1_score score: 0.680492763553304
Generation:  44%|████▍     | 11/25 [12:38<07:52, 33.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fc220> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  12
Best f1_score score: 0.680492763553304
Generation:  48%|████▊     | 12/25 [13:00<06:29, 29.93s/it]Generation:  13
Best f1_score score: 0.680492763553304
Generation:  52%|█████▏    | 13/25 [13:17<05:14, 26.17s/it]Generation:  14
Best f1_score score: 0.680492763553304
Generation:  56%|█████▌    | 14/25 [13:37<04:26, 24.26s/it]Generation:  15
Best f1_score score: 0.680492763553304
Generation:  60%|██████    | 15/25 [13:59<03:55, 23.56s/it]Generation:  16
Best f1_score score: 0.680492763553304
Generation:  64%|██████▍   | 16/25 [14:19<03:23, 22.58s/it]Generation:  17
Best f1_score score: 0.680492763553304
Generation:  68%|██████▊   | 17/25 [14:36<02:47, 20.90s/it]Generation:  18
Best f1_score score: 0.680492763553304
Generation:  72%|███████▏  | 18/25 [14:59<02:30, 21.49s/it]Generation:  19
Best f1_score score: 0.680492763553304
Generation:  76%|███████▌  | 19/25 [15:23<02:12, 22.12s/it]Generation:  20
Best f1_score score: 0.680492763553304
Generation:  80%|████████  | 20/25 [16:33<03:02, 36.57s/it]Generation:  21
Best f1_score score: 0.681310830480472
Generation:  84%|████████▍ | 21/25 [16:58<02:12, 33.00s/it]Generation:  22
Best f1_score score: 0.681310830480472
Generation:  88%|████████▊ | 22/25 [19:14<03:12, 64.08s/it]Generation:  23
Best f1_score score: 0.681310830480472
Generation:  92%|█████████▏| 23/25 [19:37<01:43, 51.81s/it]Generation:  24
Best f1_score score: 0.681310830480472
Generation:  96%|█████████▌| 24/25 [20:10<00:46, 46.10s/it]Generation:  25
Best f1_score score: 0.681310830480472
Generation: 100%|██████████| 25/25 [27:56<00:00, 171.96s/it]Generation: 100%|██████████| 25/25 [27:59<00:00, 67.19s/it] 
2024-10-23 05:32:41,621 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37541' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-b5f468972b7ffa9aa2eaa92c4caed8b0', 'ndarray-deb923d53cb59a973d9b307a2431d40e'} (stimulus_id='handle-worker-cleanup-1729686761.621092')
2024-10-23 05:32:45,603 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,604 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,604 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,604 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,604 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,605 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,606 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,607 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,608 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,608 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,608 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,608 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,608 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,608 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,609 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 05:32:45,609 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
Fitted
Pipeline(steps=[('lineardiscriminantanalysis',
                 LinearDiscriminantAnalysis(shrinkage=0.0274314620088,
                                            solver='eigen'))])
score start
train score: {'auroc': 0.8437810865890805, 'accuracy': 0.9761904761904762, 'balanced_accuracy': 0.6569377563955843, 'logloss': 0.10620222008115927, 'f1': 0.6870134680438855}
original test score: {'auroc': 0.9198028516106319, 'accuracy': 0.9794367456414841, 'balanced_accuracy': 0.7548098926245379, 'logloss': 0.07917437035467648, 'f1': 0.7647416552354824}
imputed test score: {'auroc': 0.8823402569970076, 'accuracy': 0.978095663835494, 'balanced_accuracy': 0.6790309804611864, 'logloss': 0.0816552241541604, 'f1': 0.7128061225826567}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4e20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.6675044384605077
Generation:   4%|▍         | 1/25 [04:07<1:38:54, 247.26s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d5e950> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  2
Best f1_score score: 0.6675044384605077
Generation:   8%|▊         | 2/25 [09:03<1:45:44, 275.83s/it]Generation:  3
Best f1_score score: 0.6675044384605077
Generation:  12%|█▏        | 3/25 [10:18<1:07:36, 184.37s/it]Generation:  4
Best f1_score score: 0.6675044384605077
Generation:  16%|█▌        | 4/25 [10:48<43:11, 123.38s/it]  Generation:  5
Best f1_score score: 0.6675044384605077
Generation:  20%|██        | 5/25 [16:03<1:04:12, 192.61s/it]Generation:  6
Best f1_score score: 0.6675044384605077
Generation:  24%|██▍       | 6/25 [17:32<49:45, 157.16s/it]  Generation:  7
Best f1_score score: 0.685567162033934
Generation:  28%|██▊       | 7/25 [21:35<55:33, 185.17s/it]Generation:  8
Best f1_score score: 0.685567162033934
Generation:  32%|███▏      | 8/25 [25:46<58:24, 206.14s/it]Generation:  9
Best f1_score score: 0.685567162033934
Generation:  36%|███▌      | 9/25 [30:00<59:01, 221.33s/it]Generation:  10
Best f1_score score: 0.685567162033934
Generation:  40%|████      | 10/25 [35:02<1:01:33, 246.23s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545cf233a0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.685567162033934
Generation:  44%|████▍     | 11/25 [41:28<1:07:23, 288.83s/it]Generation:  12
Best f1_score score: 0.6934296429759128
Generation:  48%|████▊     | 12/25 [45:44<1:00:24, 278.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f7f2d10> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.6934296429759128
Generation:  52%|█████▏    | 13/25 [49:56<54:08, 270.69s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457c95d50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.6934296429759128
Generation:  56%|█████▌    | 14/25 [54:05<48:26, 264.18s/it]Generation:  15
Best f1_score score: 0.6934296429759128
Generation:  60%|██████    | 15/25 [58:10<43:03, 258.39s/it]Generation:  16
Best f1_score score: 0.6934296429759128
Generation:  64%|██████▍   | 16/25 [1:02:19<38:19, 255.54s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15544410ae60> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.6934296429759128
Generation:  68%|██████▊   | 17/25 [1:02:50<25:05, 188.16s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456d56470> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  18
Best f1_score score: 0.6934296429759128
Generation:  72%|███████▏  | 18/25 [1:07:01<24:08, 206.88s/it]Generation:  19
Best f1_score score: 0.6959398952462006
Generation:  76%|███████▌  | 19/25 [1:07:28<15:18, 153.07s/it]Generation:  20
Best f1_score score: 0.6959398952462006
Generation:  80%|████████  | 20/25 [1:11:39<15:11, 182.26s/it]Generation:  21
Best f1_score score: 0.6959398952462006
Generation:  84%|████████▍ | 21/25 [1:15:54<13:36, 204.10s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd7370> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554579ddbd0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.6959398952462006
Generation:  88%|████████▊ | 22/25 [1:20:01<10:51, 217.17s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545731d7e0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.6959398952462006
Generation:  92%|█████████▏| 23/25 [1:23:51<07:22, 221.01s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545761eda0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.6959398952462006
Generation:  96%|█████████▌| 24/25 [1:28:02<03:49, 229.89s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554546ded40> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  25
Best f1_score score: 0.6959398952462006
Generation: 100%|██████████| 25/25 [1:32:16<00:00, 237.08s/it]Generation: 100%|██████████| 25/25 [1:32:16<00:00, 221.45s/it]
2024-10-23 07:05:09,954 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:34819' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-68db4dfcae7bf14cc2bf281b35edb782', 'ndarray-b5f468972b7ffa9aa2eaa92c4caed8b0'} (stimulus_id='handle-worker-cleanup-1729692309.9546084')
2024-10-23 07:05:13,943 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,943 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,943 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,943 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,943 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,944 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,944 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,944 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,944 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,944 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,944 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,944 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,945 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,945 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,945 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-23 07:05:13,965 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=Ridge(), imputation_order='arabic',
                                  n_nearest_features=57)),
                ('randomforestclassifier',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features=0.2485418334154,
                                        min_samples_split=16,
                                        n_estimators=128))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.996268508900118, 'accuracy': 0.9893807288173485, 'balanced_accuracy': 0.9734443500537, 'logloss': 0.07790715953022212, 'f1': 0.900921073662227}
test score: {'auroc': 0.8542466115120577, 'accuracy': 0.9754135002235136, 'balanced_accuracy': 0.7245907410667136, 'logloss': 0.14148591813049, 'f1': 0.7267182422542219}
original test score: {'auroc': 0.9185178665727864, 'accuracy': 0.9848010728654448, 'balanced_accuracy': 0.7857155430381975, 'logloss': 0.1100655121473006, 'f1': 0.8152676576314}
score end
310
lvl
0.5
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
11.571783758534325
hours
DONE
