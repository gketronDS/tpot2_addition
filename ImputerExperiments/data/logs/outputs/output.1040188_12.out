Run: 12
/cm/local/apps/slurm/var/spool/job1040188/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/923/923.pkl
working on 
../data/c/923/class_full_MNAR_0.5_1
4.799906492233276
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-04 18:12:48,304] A new study created in memory with name: no-name-4c156be8-fdb4-4781-ac00-a9d41d5996ba
running
running
running
running
running
running
running
running
[I 2024-11-04 18:12:48,384] Trial 0 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 5310, 'learning_rate': 0.07552449244110879, 'p_miss': 0.08364283650321103}. Best is trial 0 with value: inf.
running
running
running
running
running
running
[I 2024-11-04 18:12:48,548] Trial 4 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4969, 'learning_rate': 0.003720238074481805, 'p_miss': 0.1102249675567356}. Best is trial 0 with value: inf.
running
running
running
[I 2024-11-04 18:12:48,773] Trial 6 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 3, 'learning_rate': 0.0549812577261883, 'p_miss': 0.2098324934103591}. Best is trial 0 with value: inf.
running
running
[I 2024-11-04 18:12:48,919] Trial 7 finished with value: 0.35410571286226195 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.35410571286226195.
running
[I 2024-11-04 18:12:49,139] Trial 15 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 216, 'iterations': 2, 'learning_rate': 0.013005863370993487, 'p_miss': 0.018580185947147932}. Best is trial 7 with value: 0.35410571286226195.
[I 2024-11-04 18:12:49,241] Trial 16 finished with value: 0.35410571286226195 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.35410571286226195.
running
running
[I 2024-11-04 18:12:49,442] Trial 19 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 549, 'learning_rate': 0.03915821601730808, 'p_miss': 0.05793718068044815}. Best is trial 7 with value: 0.35410571286226195.
[I 2024-11-04 18:12:49,546] Trial 9 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 167, 'learning_rate': 0.0009424637209089087, 'p_miss': 0.1544945771087523}. Best is trial 7 with value: 0.35410571286226195.
[I 2024-11-04 18:12:49,634] Trial 14 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 1, 'learning_rate': 0.0714146447428853, 'p_miss': 0.2787960484558387}. Best is trial 7 with value: 0.35410571286226195.
running
running
[I 2024-11-04 18:12:49,743] Trial 12 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 165, 'iterations': 85, 'learning_rate': 0.0033934614167389003, 'p_miss': 0.04969226084504312}. Best is trial 7 with value: 0.35410571286226195.
running
[I 2024-11-04 18:12:49,916] Trial 10 finished with value: 0.35410571286226195 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 7 with value: 0.35410571286226195.
running
running
[I 2024-11-04 18:12:50,296] Trial 26 finished with value: 0.35410571286226195 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 7 with value: 0.35410571286226195.
[I 2024-11-04 18:12:50,338] Trial 25 finished with value: 0.35410571286226195 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 7 with value: 0.35410571286226195.
running
running
[I 2024-11-04 18:12:51,638] Trial 3 finished with value: 0.2695273311996642 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 209, 'weights': 'distance'}. Best is trial 3 with value: 0.2695273311996642.
running
[I 2024-11-04 18:12:52,425] Trial 13 finished with value: 0.25360385428116394 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2959, 'weights': 'uniform'}. Best is trial 13 with value: 0.25360385428116394.
running
[I 2024-11-04 18:12:53,032] Trial 17 finished with value: 0.27078630758157474 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6010, 'weights': 'distance'}. Best is trial 13 with value: 0.25360385428116394.
running
[I 2024-11-04 18:12:53,339] Trial 23 finished with value: 0.27078630758157474 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5279, 'weights': 'distance'}. Best is trial 13 with value: 0.25360385428116394.
running
[I 2024-11-04 18:12:53,551] Trial 24 finished with value: 0.2707571000188241 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4800, 'weights': 'distance'}. Best is trial 13 with value: 0.25360385428116394.
running
[I 2024-11-04 18:12:53,805] Trial 22 finished with value: 0.27073427060452443 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4302, 'weights': 'distance'}. Best is trial 13 with value: 0.25360385428116394.
running
[I 2024-11-04 18:12:54,297] Trial 29 finished with value: 0.2708432211182035 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 43, 'weights': 'distance'}. Best is trial 13 with value: 0.25360385428116394.
running
[I 2024-11-04 18:12:55,462] Trial 30 finished with value: 0.27041710962733123 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 742, 'weights': 'distance'}. Best is trial 13 with value: 0.25360385428116394.
running
[I 2024-11-04 18:12:55,865] Trial 31 finished with value: 0.24297572434937384 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 133, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:12:57,087] Trial 2 finished with value: 0.25520931826391985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:12:57,718] Trial 20 finished with value: 0.252563777960931 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:12:57,916] Trial 32 finished with value: 0.252918716305864 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:12:59,499] Trial 40 finished with value: 0.2528904538145992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:12:59,743] Trial 11 finished with value: 0.3430845944407035 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:00,371] Trial 39 finished with value: 0.2528904911993831 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:00,971] Trial 34 finished with value: 0.3402223050779002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:01,236] Trial 37 finished with value: 0.252563777960931 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:02,271] Trial 38 finished with value: 0.25520931826391985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:03,451] Trial 41 finished with value: 0.2528904411442896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:05,556] Trial 18 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.6020449027528859, 'alpha': 8, 'iterations': 26, 'learning_rate': 0.0007173613879131416, 'p_miss': 0.05620716158139185}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:10,435] Trial 21 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.10625339017284134, 'alpha': 98, 'iterations': 44, 'learning_rate': 0.0010323535788409998, 'p_miss': 0.12590670204858498}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:10,753] Trial 1 finished with value: 0.3333039743059574 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.9320253039111638, 'alpha': 26, 'iterations': 8, 'learning_rate': 0.05859564382080563, 'p_miss': 0.24231381861287557}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:11,845] Trial 42 finished with value: 0.340770818412732 and parameters: {'model_name': 'GAIN', 'batch_size': 970, 'hint_rate': 0.5632149373019713, 'alpha': 21, 'iterations': 8, 'learning_rate': 0.0001600577075021177, 'p_miss': 0.2965164092598217}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:12,653] Trial 44 finished with value: 0.3342349471203912 and parameters: {'model_name': 'GAIN', 'batch_size': 702, 'hint_rate': 0.4556320284161062, 'alpha': 76, 'iterations': 9, 'learning_rate': 0.00010844119669132375, 'p_miss': 0.2806127223890402}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:14,131] Trial 43 finished with value: 0.3442837264325959 and parameters: {'model_name': 'GAIN', 'batch_size': 759, 'hint_rate': 0.5779132146198377, 'alpha': 91, 'iterations': 12, 'learning_rate': 0.00011700978131938846, 'p_miss': 0.2993868915663385}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:14,473] Trial 47 finished with value: 0.33947311155362575 and parameters: {'model_name': 'GAIN', 'batch_size': 984, 'hint_rate': 0.3184304534239553, 'alpha': 54, 'iterations': 10, 'learning_rate': 0.00010931443296076402, 'p_miss': 0.2941097942878925}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:14,853] Trial 36 finished with value: 0.33791751152831173 and parameters: {'model_name': 'GAIN', 'batch_size': 664, 'hint_rate': 0.6440401830087676, 'alpha': 30, 'iterations': 13, 'learning_rate': 0.00011255523486660206, 'p_miss': 0.2821284056529345}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:15,106] Trial 35 finished with value: 0.34389063636565553 and parameters: {'model_name': 'GAIN', 'batch_size': 662, 'hint_rate': 0.2817313967708128, 'alpha': 86, 'iterations': 14, 'learning_rate': 0.00013687008184121147, 'p_miss': 0.2939589628949911}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:15,293] Trial 49 finished with value: 0.2529714036054408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:15,691] Trial 27 finished with value: 0.346106383964946 and parameters: {'model_name': 'GAIN', 'batch_size': 942, 'hint_rate': 0.9728407887574252, 'alpha': 93, 'iterations': 14, 'learning_rate': 0.00017012288531176946, 'p_miss': 0.2780564224689871}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:16,011] Trial 45 finished with value: 0.3299392510621938 and parameters: {'model_name': 'GAIN', 'batch_size': 954, 'hint_rate': 0.15371541796891336, 'alpha': 73, 'iterations': 13, 'learning_rate': 0.0001620717599918294, 'p_miss': 0.2912071868987519}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:16,254] Trial 50 finished with value: 0.2529714036054408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:16,596] Trial 48 finished with value: 0.34244947511638446 and parameters: {'model_name': 'GAIN', 'batch_size': 990, 'hint_rate': 0.10035475869410049, 'alpha': 94, 'iterations': 10, 'learning_rate': 0.00010569141286446958, 'p_miss': 0.25231229527119015}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:17,280] Trial 51 finished with value: 0.2529714036054408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:18,755] Trial 52 finished with value: 0.2529714036054408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:18,998] Trial 33 finished with value: 0.33494739056361716 and parameters: {'model_name': 'GAIN', 'batch_size': 541, 'hint_rate': 0.9129011782248538, 'alpha': 78, 'iterations': 17, 'learning_rate': 0.00012779199979954695, 'p_miss': 0.2869464105255789}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:20,117] Trial 46 finished with value: 0.33207686174903034 and parameters: {'model_name': 'GAIN', 'batch_size': 664, 'hint_rate': 0.09443560764536046, 'alpha': 8, 'iterations': 16, 'learning_rate': 0.00018263592904237962, 'p_miss': 0.2938138547149761}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:20,588] Trial 56 finished with value: 0.2528904411442896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:21,077] Trial 60 finished with value: 0.25289070144079734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:21,320] Trial 53 finished with value: 0.2529714036054408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:21,557] Trial 58 finished with value: 0.2528904411442896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:21,787] Trial 57 finished with value: 0.2528904411442896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:22,104] Trial 61 finished with value: 0.2528904532443361 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:22,458] Trial 59 finished with value: 0.2528904411442896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:22,932] Trial 54 finished with value: 0.2529714036054408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:23,375] Trial 55 finished with value: 0.2529714036054408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:23,692] Trial 62 finished with value: 0.2528904541182623 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:26,667] Trial 66 finished with value: 0.2528904532443361 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:27,751] Trial 75 finished with value: 0.2508742135050839 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1947, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:33,293] Trial 77 finished with value: 0.25199367142200385 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2082, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:35,352] Trial 63 finished with value: 0.24776367689255707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:37,780] Trial 72 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:38,518] Trial 78 finished with value: 0.251671852903525 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2037, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:38,787] Trial 71 finished with value: 0.24931645408486883 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:39,814] Trial 73 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:40,155] Trial 67 finished with value: 0.24931645408486883 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:40,332] Trial 74 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:41,002] Trial 85 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 1577, 'learning_rate': 0.010317346841654222, 'p_miss': 0.18330754544775468}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:41,356] Trial 79 finished with value: 0.2520608909537999 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2102, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:42,418] Trial 8 finished with value: 0.3552426461191284 and parameters: {'model_name': 'GAIN', 'batch_size': 542, 'hint_rate': 0.19487219376082238, 'alpha': 68, 'iterations': 29, 'learning_rate': 0.05911100722547784, 'p_miss': 0.2051960127024719}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:43,026] Trial 80 finished with value: 0.2521001688886443 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2124, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:43,502] Trial 76 finished with value: 0.24675712834883595 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:43,865] Trial 81 finished with value: 0.25204259573997057 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2098, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:44,275] Trial 90 finished with value: 0.25668972574803045 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 31 with value: 0.24297572434937384.
[I 2024-11-04 18:13:44,296] Trial 82 finished with value: 0.2523910052486119 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2519, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
running
[I 2024-11-04 18:13:44,728] Trial 91 finished with value: 0.35015089045642506 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:45,554] Trial 83 finished with value: 0.24986335795070108 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1804, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:46,092] Trial 84 finished with value: 0.24944022232886356 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1489, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:46,305] Trial 86 finished with value: 0.24943801883278427 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1510, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:47,299] Trial 87 finished with value: 0.2496986124257155 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1091, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:48,428] Trial 89 finished with value: 0.24932203946499393 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1007, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:48,842] Trial 88 finished with value: 0.24861373799270922 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 939, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:49,234] Trial 100 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 416, 'learning_rate': 0.0005038309524151557, 'p_miss': 0.14820184566773828}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:13:59,338] Trial 93 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:01,997] Trial 92 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:02,228] Trial 94 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:02,505] Trial 99 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:02,842] Trial 96 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:03,105] Trial 95 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:03,572] Trial 97 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:04,352] Trial 101 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:06,472] Trial 98 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:14,791] Trial 102 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:16,949] Trial 104 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:17,906] Trial 103 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:18,567] Trial 105 finished with value: 0.24776367689255707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:18,858] Trial 107 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
[I 2024-11-04 18:14:19,050] Trial 114 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 9846, 'learning_rate': 0.0018032849234119904, 'p_miss': 0.1906538399244757}. Best is trial 31 with value: 0.24297572434937384.
running
running
[I 2024-11-04 18:14:19,606] Trial 106 finished with value: 0.2494073201850826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:19,921] Trial 111 finished with value: 0.24717506908673653 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 775, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:21,621] Trial 112 finished with value: 0.2467737200690759 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 682, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:22,955] Trial 113 finished with value: 0.246172885608208 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 626, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:23,616] Trial 117 finished with value: 0.24696172429089555 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 711, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:24,462] Trial 118 finished with value: 0.24684008311606687 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 695, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:25,990] Trial 119 finished with value: 0.24688949376046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 703, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:27,058] Trial 120 finished with value: 0.24685999078508963 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 699, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:28,332] Trial 121 finished with value: 0.2450861573304834 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 362, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:29,029] Trial 122 finished with value: 0.24500773183693889 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 524, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:29,837] Trial 123 finished with value: 0.24552291550590405 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 572, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:30,977] Trial 124 finished with value: 0.24440007423040475 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 453, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:32,461] Trial 125 finished with value: 0.24521625448871118 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 545, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:32,909] Trial 126 finished with value: 0.2445308196717156 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 470, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:33,826] Trial 127 finished with value: 0.244452452836689 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 459, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:35,086] Trial 128 finished with value: 0.24448179060839564 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 465, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:36,470] Trial 130 finished with value: 0.24428469120325627 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 258, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:36,802] Trial 129 finished with value: 0.24462387318898632 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 381, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:37,860] Trial 131 finished with value: 0.24446641100290054 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 253, 'weights': 'uniform'}. Best is trial 31 with value: 0.24297572434937384.
running
[I 2024-11-04 18:14:39,136] Trial 132 finished with value: 0.24291541679016354 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 176, 'weights': 'uniform'}. Best is trial 132 with value: 0.24291541679016354.
running
[I 2024-11-04 18:14:39,992] Trial 133 finished with value: 0.24287537674458645 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 174, 'weights': 'uniform'}. Best is trial 133 with value: 0.24287537674458645.
running
[I 2024-11-04 18:14:40,621] Trial 134 finished with value: 0.24264736410409055 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 151, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:41,536] Trial 135 finished with value: 0.24296069008111956 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 134, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:42,816] Trial 136 finished with value: 0.2439095558955045 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 203, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:43,873] Trial 137 finished with value: 0.24381139962707676 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 199, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:44,096] Trial 138 finished with value: 0.24295049550227105 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 132, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:45,149] Trial 139 finished with value: 0.2514634666343085 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 39, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:46,491] Trial 140 finished with value: 0.26840538161265315 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:47,465] Trial 142 finished with value: 0.2510545646370239 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 31, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:47,886] Trial 141 finished with value: 0.2520137933131655 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 33, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:49,009] Trial 143 finished with value: 0.2507471065231831 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 52, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:50,104] Trial 144 finished with value: 0.24291541679016354 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 176, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:51,661] Trial 146 finished with value: 0.24503450168421823 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 289, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:51,864] Trial 145 finished with value: 0.2443342296631188 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 215, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:53,139] Trial 147 finished with value: 0.24520004193239112 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 309, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:54,561] Trial 148 finished with value: 0.24490145346203618 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 281, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:55,816] Trial 150 finished with value: 0.24482357161051654 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 278, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:56,010] Trial 149 finished with value: 0.2443926748632909 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 255, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:57,102] Trial 151 finished with value: 0.26940637529191847 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 256, 'weights': 'distance'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:58,572] Trial 152 finished with value: 0.269431707809275 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 240, 'weights': 'distance'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:14:59,796] Trial 154 finished with value: 0.2443066771058799 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 217, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:00,058] Trial 153 finished with value: 0.2694389040401187 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 255, 'weights': 'distance'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:00,360] Trial 155 finished with value: 0.2545442148528956 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:03,051] Trial 158 finished with value: 0.2516953437806087 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 37, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:03,455] Trial 156 finished with value: 0.2546261876261998 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3314, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:03,648] Trial 157 finished with value: 0.24295049550227105 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 132, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:04,987] Trial 159 finished with value: 0.25505238015359116 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3791, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:05,346] Trial 163 finished with value: 0.25668972574803045 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:07,520] Trial 162 finished with value: 0.25668972574803045 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5966, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:07,756] Trial 160 finished with value: 0.24442176128161117 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 417, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:08,362] Trial 161 finished with value: 0.2549831400038897 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4376, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:08,771] Trial 164 finished with value: 0.24294674721096587 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 170, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:11,640] Trial 166 finished with value: 0.24422265161418943 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 232, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:11,959] Trial 168 finished with value: 0.24403898897807075 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 208, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:12,200] Trial 167 finished with value: 0.24428192573517649 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 230, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:12,486] Trial 165 finished with value: 0.24424349388574162 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 235, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:15,285] Trial 170 finished with value: 0.24294674721096587 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 170, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:15,661] Trial 169 finished with value: 0.24294674721096587 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 170, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:16,514] Trial 171 finished with value: 0.24882810662390628 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 958, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:16,793] Trial 172 finished with value: 0.24906806110389262 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 979, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:19,100] Trial 173 finished with value: 0.2482637843852064 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 892, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:19,829] Trial 175 finished with value: 0.26057700105587606 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:20,297] Trial 174 finished with value: 0.24519313356923664 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 540, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:20,622] Trial 176 finished with value: 0.2433415811307582 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 116, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:23,272] Trial 177 finished with value: 0.2452026237301453 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 546, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:23,738] Trial 178 finished with value: 0.24486565298983815 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 517, 'weights': 'uniform'}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:24,071] Trial 182 finished with value: inf and parameters: {'model_name': 'VAE', 'batch_size': 83, 'iterations': 2215, 'learning_rate': 0.017752134227249205, 'p_miss': 0.013683101594467728}. Best is trial 134 with value: 0.24264736410409055.
running
[I 2024-11-04 18:15:24,243] Trial 179 finished with value: 0.24247867384897948 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 147, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:24,584] Trial 180 finished with value: 0.2444940373248199 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 473, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:25,438] Trial 185 finished with value: 0.35015089045642506 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:27,676] Trial 181 finished with value: 0.24274969487000725 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 164, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:28,021] Trial 183 finished with value: 0.2430435742429209 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 129, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:28,604] Trial 184 finished with value: 0.24348671657704618 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 114, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:29,020] Trial 186 finished with value: 0.24311773125422018 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 127, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:31,648] Trial 187 finished with value: 0.24258698240754736 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 143, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:31,839] Trial 188 finished with value: 0.24753692447455947 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 69, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:32,141] Trial 190 finished with value: 0.28097492984273537 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:32,338] Trial 189 finished with value: 0.24308953040549647 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 123, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:35,199] Trial 191 finished with value: 0.28097492984273537 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:35,664] Trial 193 finished with value: 0.24441357405472228 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 415, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:36,052] Trial 192 finished with value: 0.24438343836388277 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 421, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:36,200] Trial 194 finished with value: 0.24460786330713313 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 380, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:39,123] Trial 195 finished with value: 0.24443776464482347 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 402, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
running
[I 2024-11-04 18:15:39,567] Trial 196 finished with value: 0.24458801939033753 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 384, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:15:39,832] Trial 198 finished with value: 0.24254372710067534 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 150, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:15:40,139] Trial 197 finished with value: 0.24284595231906483 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 136, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:15:42,091] Trial 199 finished with value: 0.24254372710067534 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 150, 'weights': 'uniform'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:22:43,129] Trial 28 finished with value: 0.24468631292010173 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:01,643] Trial 5 finished with value: 0.24496412737385148 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:02,115] Trial 69 finished with value: 0.24419109059642788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:03,688] Trial 64 finished with value: 0.2443203348545921 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:05,842] Trial 68 finished with value: 0.2431190532359183 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:07,383] Trial 70 finished with value: 0.24491822026986615 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:10,803] Trial 65 finished with value: 0.24425094724464874 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:11,981] Trial 109 finished with value: 0.243097593399413 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:12,613] Trial 116 finished with value: 0.24337799632942209 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:17,934] Trial 108 finished with value: 0.24319438501008667 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 179 with value: 0.24247867384897948.
[I 2024-11-04 18:23:18,584] Trial 110 finished with value: 0.24143190661502228 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 110 with value: 0.24143190661502228.
[I 2024-11-04 18:23:21,791] Trial 115 finished with value: 0.24476185218145718 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 110 with value: 0.24143190661502228.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
dtype: int64
0    0
1    0
2    0
3    0
dtype: int64
0.24143190661502228
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'roman'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8270026980739879
Generation:   4%|▍         | 1/25 [00:15<06:10, 15.43s/it]Generation:  2
Best f1_score score: 0.8270026980739879
Generation:   8%|▊         | 2/25 [01:00<12:39, 33.01s/it]Generation:  3
Best f1_score score: 0.8272352325170631
Generation:  12%|█▏        | 3/25 [01:18<09:31, 25.96s/it]Generation:  4
Best f1_score score: 0.8298924251406575
Generation:  16%|█▌        | 4/25 [01:36<07:57, 22.73s/it]Generation:  5
Best f1_score score: 0.8305797032612965
Generation:  20%|██        | 5/25 [01:53<06:53, 20.65s/it]Generation:  6
Best f1_score score: 0.8310838927916591
Generation:  24%|██▍       | 6/25 [02:12<06:26, 20.35s/it]Generation:  7
Best f1_score score: 0.8310838927916591
Generation:  28%|██▊       | 7/25 [02:27<05:34, 18.58s/it]Generation:  8
Best f1_score score: 0.8314105559379901
Generation:  32%|███▏      | 8/25 [02:38<04:35, 16.24s/it]Generation:  9
Best f1_score score: 0.8314105559379901
Generation:  36%|███▌      | 9/25 [02:52<04:06, 15.43s/it]Generation:  10
Best f1_score score: 0.8316895054759039
Generation:  40%|████      | 10/25 [03:05<03:39, 14.62s/it]Generation:  11
Best f1_score score: 0.8316895054759039
Generation:  44%|████▍     | 11/25 [03:44<05:08, 22.02s/it]Generation:  12
Best f1_score score: 0.8316895054759039
Generation:  48%|████▊     | 12/25 [05:00<08:19, 38.43s/it]Generation:  13
Best f1_score score: 0.8317421193117578
Generation:  52%|█████▏    | 13/25 [06:27<10:37, 53.13s/it]Generation:  14
Best f1_score score: 0.8317421193117578
Generation:  56%|█████▌    | 14/25 [06:37<07:23, 40.31s/it]Generation:  15
Best f1_score score: 0.8317421193117578
Generation:  60%|██████    | 15/25 [07:03<05:59, 35.93s/it]Generation:  16
Best f1_score score: 0.8319284355552338
Generation:  64%|██████▍   | 16/25 [07:15<04:18, 28.70s/it]Generation:  17
Best f1_score score: 0.8319284355552338
Generation:  68%|██████▊   | 17/25 [07:27<03:08, 23.56s/it]Generation:  18
Best f1_score score: 0.8319284355552338
Generation:  72%|███████▏  | 18/25 [08:08<03:21, 28.80s/it]Generation:  19
Best f1_score score: 0.8319913056814837
Generation:  76%|███████▌  | 19/25 [08:26<02:33, 25.56s/it]Generation:  20
Best f1_score score: 0.8319913056814837
Generation:  80%|████████  | 20/25 [08:52<02:09, 25.93s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dbe4220> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  21
Best f1_score score: 0.8326991957402361
Generation:  84%|████████▍ | 21/25 [09:08<01:31, 22.85s/it]Generation:  22
Best f1_score score: 0.8326991957402361
Generation:  88%|████████▊ | 22/25 [09:21<00:59, 19.83s/it]Generation:  23
Best f1_score score: 0.8326991957402361
Generation:  92%|█████████▏| 23/25 [09:38<00:38, 19.15s/it]Generation:  24
Best f1_score score: 0.8326991957402361
Generation:  96%|█████████▌| 24/25 [09:53<00:17, 17.83s/it]Generation:  25
Best f1_score score: 0.8326991957402361
Generation: 100%|██████████| 25/25 [10:16<00:00, 19.31s/it]Generation: 100%|██████████| 25/25 [10:19<00:00, 24.80s/it]
2024-11-04 18:34:20,422 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:40197' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-a07a925cb6848e47eb6f199fe52b8845', 'ndarray-782bc5f56dfe6ad3c3952dbb6d6329f9'} (stimulus_id='handle-worker-cleanup-1730774060.422111')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(max_depth=8, n_estimators=99, n_jobs=1,
                                num_leaves=179, verbose=-1))])
score start
train score: {'auroc': 0.9613138963923201, 'accuracy': 0.8768807870370371, 'balanced_accuracy': 0.8725178489574787, 'logloss': 0.2569531790331463, 'f1': 0.8747333262360175}
original test score: {'auroc': 0.9997769902605564, 'accuracy': 0.9942163100057837, 'balanced_accuracy': 0.9945085541129755, 'logloss': 0.07860857881609837, 'f1': 0.9941618448705274}
imputed test score: {'auroc': 0.9266466904003091, 'accuracy': 0.8305378831694621, 'balanced_accuracy': 0.8235046859076767, 'logloss': 0.3444829096680957, 'f1': 0.8264927245358755}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4cd0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4d90> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4a00> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 382, in predict
    scores = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 363, in decision_function
    X = self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4a60> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 813, in predict
    y = super().predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 428, in predict
    X = self._validate_for_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 606, in _validate_for_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4190> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 382, in predict
    scores = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 760, in decision_function
    return super().decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 363, in decision_function
    X = self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.838832451918935
Generation:   4%|▍         | 1/25 [00:59<23:56, 59.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d3bd90> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554574171f0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 382, in predict
    scores = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 760, in decision_function
    return super().decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_base.py", line 363, in decision_function
    X = self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.8431498278814857
Generation:   8%|▊         | 2/25 [03:07<38:09, 99.54s/it]Generation:  3
Best f1_score score: 0.8482014562438224
Generation:  12%|█▏        | 3/25 [05:16<41:26, 113.02s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457332320> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.8482014562438224
Generation:  16%|█▌        | 4/25 [05:37<26:48, 76.61s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474595c90> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745c05e0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  5
Best f1_score score: 0.8497183997098816
Generation:  20%|██        | 5/25 [06:34<23:13, 69.69s/it]Generation:  6
Best f1_score score: 0.8497183997098816
Generation:  24%|██▍       | 6/25 [08:44<28:36, 90.34s/it]Generation:  7
Best f1_score score: 0.8497183997098816
Generation:  28%|██▊       | 7/25 [09:06<20:23, 67.95s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d5e3e0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547457cf40> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  8
Best f1_score score: 0.8497183997098816
Generation:  32%|███▏      | 8/25 [11:14<24:38, 86.99s/it]Generation:  9
Best f1_score score: 0.851123611414675
Generation:  36%|███▌      | 9/25 [11:38<17:55, 67.22s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454b861a0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742bb460> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  10
Best f1_score score: 0.8528447384900272
Generation:  40%|████      | 10/25 [12:01<13:25, 53.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bb732e0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bb5ab30> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f7df280> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  11
Best f1_score score: 0.8550203980522306
Generation:  44%|████▍     | 11/25 [12:24<10:18, 44.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff0a6e0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  12
Best f1_score score: 0.8550203980522306
Generation:  48%|████▊     | 12/25 [12:48<08:14, 38.00s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d89fee0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d920460> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  13
Best f1_score score: 0.8550203980522306
Generation:  52%|█████▏    | 13/25 [13:17<07:06, 35.50s/it]Generation:  14
Best f1_score score: 0.8568345790899372
Generation:  56%|█████▌    | 14/25 [13:47<06:10, 33.68s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554546c6da0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457495cf0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.8568345790899372
Generation:  60%|██████    | 15/25 [16:01<10:38, 63.90s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454a46020> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  16
Best f1_score score: 0.8568345790899372
Generation:  64%|██████▍   | 16/25 [17:10<09:50, 65.62s/it]Generation:  17
Best f1_score score: 0.860993607959271
Generation:  68%|██████▊   | 17/25 [17:30<06:54, 51.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454840eb0> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  18
Best f1_score score: 0.860993607959271
Generation:  72%|███████▏  | 18/25 [17:55<05:05, 43.62s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d785c00> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  19
Best f1_score score: 0.860993607959271
Generation:  76%|███████▌  | 19/25 [18:19<03:47, 37.93s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456d74190> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  20
Best f1_score score: 0.860993607959271
Generation:  80%|████████  | 20/25 [18:54<03:05, 37.02s/it]Generation:  21
Best f1_score score: 0.860993607959271
Generation:  84%|████████▍ | 21/25 [19:15<02:08, 32.23s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff09330> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f918070> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.860993607959271
Generation:  88%|████████▊ | 22/25 [19:38<01:28, 29.46s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457112470> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.860993607959271
Generation:  92%|█████████▏| 23/25 [20:00<00:54, 27.03s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd5600> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474291840> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  24
Best f1_score score: 0.860993607959271
Generation:  96%|█████████▌| 24/25 [21:49<00:51, 51.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454a47f10> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545feb9870> 
 float division by zero 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 469, in fit
    Xt = self._fit(X, y, routed_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 406, in _fit
    X, fitted_transformer = fit_transform_one_cached(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 1310, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 682, in fit_transform
    self.fit(X)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 617, in fit
    self.model = self.VAE(VAEImputer=self, input_size=features.shape[1])
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 568, in __init__
    self.encoder = VAEImputer.Encoder(VAEImputer, input_size)
  File "/common/ketrong/tpotexp/tpot2/tpot2/builtin_modules/imputer.py", line 499, in __init__
    self.E_W4 = torch.nn.init.xavier_normal_(torch.empty((VAEImputer.split_size, VAEImputer.code_size),requires_grad=True, device=VAEImputer.device))
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/torch/nn/init.py", line 392, in xavier_normal_
    std = gain * math.sqrt(2.0 / float(fan_in + fan_out))
ZeroDivisionError: float division by zero

Generation:  25
Best f1_score score: 0.860993607959271
Generation: 100%|██████████| 25/25 [22:15<00:00, 44.15s/it]Generation: 100%|██████████| 25/25 [22:15<00:00, 53.43s/it]
2024-11-04 18:56:45,778 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45665' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-782bc5f56dfe6ad3c3952dbb6d6329f9', 'DataFrame-867b02822c2859f7e155c5243cc4edfc'} (stimulus_id='handle-worker-cleanup-1730775405.7786078')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer()),
                ('randomforestclassifier',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features=0.0899108813779,
                                        min_samples_leaf=7,
                                        min_samples_split=18,
                                        n_estimators=128))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.960847480848631, 'accuracy': 0.8802083333333334, 'balanced_accuracy': 0.8819216827833041, 'logloss': 0.2612443981703977, 'f1': 0.8795982974598222}
test score: {'auroc': 0.9468824589999972, 'accuracy': 0.8548293811451706, 'balanced_accuracy': 0.8538873976520454, 'logloss': 0.28492047850482466, 'f1': 0.8535114234551711}
original test score: {'auroc': 1.0, 'accuracy': 0.9982648930017352, 'balanced_accuracy': 0.9980719794344473, 'logloss': 0.04365405813144043, 'f1': 0.9982467259203675}
score end
923
lvl
0.5
type
MNAR
num_run
1
class_full
finished
all finished
full run takes
0.7370911670393414
hours
DONE
