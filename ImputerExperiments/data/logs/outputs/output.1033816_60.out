Run: 60
/cm/local/apps/slurm/var/spool/job1033816/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/871/871.pkl
working on 
../data/c/871/class_full_MNAR_0.5_3
1.5748724937438965
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-31 04:33:03,565] A new study created in memory with name: no-name-ee9b3b3d-881a-4b17-9cd3-138acf986926
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-31 04:33:03,717] Trial 2 finished with value: 0.20484718292648782 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:03,875] Trial 5 finished with value: 0.3673608900326144 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:04,066] Trial 3 finished with value: 0.3673608900326144 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:04,299] Trial 8 finished with value: 0.3673608900326144 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:04,641] Trial 19 finished with value: 0.20484718292648782 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:04,983] Trial 10 finished with value: 0.20484718292648782 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2559, 'weights': 'uniform'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:05,151] Trial 20 finished with value: 0.3673608900326144 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:05,372] Trial 21 finished with value: 0.20484718292648782 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:05,610] Trial 23 finished with value: 0.3673608900326144 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 2 with value: 0.20484718292648782.
running
[I 2024-10-31 04:33:05,748] Trial 14 finished with value: 0.20043622759898563 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 788, 'weights': 'uniform'}. Best is trial 14 with value: 0.20043622759898563.
running
[I 2024-10-31 04:33:06,073] Trial 9 finished with value: 0.20301804457497372 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1629, 'weights': 'uniform'}. Best is trial 14 with value: 0.20043622759898563.
running
[I 2024-10-31 04:33:06,843] Trial 26 finished with value: 0.1996961874285744 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 596, 'weights': 'uniform'}. Best is trial 26 with value: 0.1996961874285744.
running
[I 2024-10-31 04:33:07,436] Trial 27 finished with value: 0.23995624114872882 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 142, 'weights': 'distance'}. Best is trial 26 with value: 0.1996961874285744.
running
[I 2024-10-31 04:33:08,644] Trial 7 finished with value: 0.19850111567682865 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 7 with value: 0.19850111567682865.
running
[I 2024-10-31 04:33:10,660] Trial 17 finished with value: 0.19933992133531192 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 7 with value: 0.19850111567682865.
running
[I 2024-10-31 04:33:12,359] Trial 12 finished with value: 0.20863506099693457 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 7 with value: 0.19850111567682865.
[I 2024-10-31 04:33:12,480] Trial 0 finished with value: 0.3203950514049404 and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9893900192794737, 'alpha': 69, 'iterations': 1, 'learning_rate': 0.003408463219086354, 'p_miss': 0.2504590547474333}. Best is trial 7 with value: 0.19850111567682865.
running
running
[I 2024-10-31 04:33:16,167] Trial 13 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.02266549989434332, 'alpha': 18, 'iterations': 20, 'learning_rate': 0.013440503318481303, 'p_miss': 0.11464133201582233}. Best is trial 7 with value: 0.19850111567682865.
running
[I 2024-10-31 04:33:18,842] Trial 29 finished with value: 0.19850111567682865 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 7 with value: 0.19850111567682865.
running
[I 2024-10-31 04:33:22,039] Trial 30 finished with value: 0.20073101476907912 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 7 with value: 0.19850111567682865.
running
[I 2024-10-31 04:33:23,588] Trial 24 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.7416822886793665, 'alpha': 89, 'iterations': 7, 'learning_rate': 0.0006720872845233249, 'p_miss': 0.19607530552479252}. Best is trial 7 with value: 0.19850111567682865.
running
[I 2024-10-31 04:33:24,115] Trial 1 finished with value: 0.13318660141816835 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 2, 'learning_rate': 0.02646172390243093, 'p_miss': 0.09275585924892048}. Best is trial 1 with value: 0.13318660141816835.
running
[I 2024-10-31 04:33:24,856] Trial 32 finished with value: 0.19933992133531192 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 1 with value: 0.13318660141816835.
running
[I 2024-10-31 04:33:25,245] Trial 31 finished with value: 0.19933992133531192 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 1 with value: 0.13318660141816835.
running
[I 2024-10-31 04:33:27,265] Trial 6 finished with value: 0.11655435147254403 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 4, 'learning_rate': 0.015790318580966727, 'p_miss': 0.07645363522828853}. Best is trial 6 with value: 0.11655435147254403.
running
[I 2024-10-31 04:33:27,845] Trial 33 finished with value: 0.19933992133531192 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 6 with value: 0.11655435147254403.
running
[I 2024-10-31 04:33:29,410] Trial 34 finished with value: 0.19850111567682865 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 6 with value: 0.11655435147254403.
running
[I 2024-10-31 04:33:32,114] Trial 36 finished with value: 0.19859816125622248 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 6 with value: 0.11655435147254403.
running
[I 2024-10-31 04:36:11,344] Trial 25 finished with value: 0.1550919290585636 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 59, 'learning_rate': 0.002434587981887874, 'p_miss': 0.10075763720570684}. Best is trial 6 with value: 0.11655435147254403.
running
[I 2024-10-31 04:42:25,264] Trial 15 finished with value: 0.21210257769059507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 6 with value: 0.11655435147254403.
running
[I 2024-10-31 04:46:37,138] Trial 43 finished with value: 0.21474536413466322 and parameters: {'model_name': 'VAE', 'batch_size': 113, 'iterations': 266, 'learning_rate': 0.09867501871398127, 'p_miss': 0.012255941143178392}. Best is trial 6 with value: 0.11655435147254403.
running
[I 2024-10-31 04:46:41,542] Trial 46 finished with value: 0.09939160186230131 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 1, 'learning_rate': 0.01828274583826755, 'p_miss': 0.08759601331488297}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 04:46:47,045] Trial 47 finished with value: 0.10189582917344224 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 1, 'learning_rate': 0.019313423274826956, 'p_miss': 0.08378601723180058}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 04:46:55,076] Trial 48 finished with value: 0.12199346225259496 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 1, 'learning_rate': 0.027086162210193075, 'p_miss': 0.07011845375719576}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 04:47:00,544] Trial 49 finished with value: 0.10487067161214363 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 1, 'learning_rate': 0.018456801660967737, 'p_miss': 0.043116010813667734}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 04:47:05,447] Trial 50 finished with value: 0.10014179794101634 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 1, 'learning_rate': 0.01157179366007788, 'p_miss': 0.0313137520207868}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 05:16:17,940] Trial 44 finished with value: 0.21162097525697793 and parameters: {'model_name': 'VAE', 'batch_size': 66, 'iterations': 778, 'learning_rate': 0.09876317299654698, 'p_miss': 0.04318560000520831}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 05:16:24,383] Trial 52 finished with value: 0.10548029985746443 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 1, 'learning_rate': 0.005628682822388797, 'p_miss': 0.011098754863778482}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 05:16:45,110] Trial 53 finished with value: 0.11423790883627882 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 7, 'learning_rate': 0.012157836982497486, 'p_miss': 0.14434056509278587}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 05:16:54,337] Trial 54 finished with value: 0.14224992727928462 and parameters: {'model_name': 'VAE', 'batch_size': 213, 'iterations': 1, 'learning_rate': 0.04076282668015395, 'p_miss': 0.054299556940460014}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 05:18:04,693] Trial 22 finished with value: 0.209703534528825 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 782, 'learning_rate': 0.003582152878200345, 'p_miss': 0.05998123756839103}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 05:18:08,405] Trial 56 finished with value: 0.10372593131131425 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 1, 'learning_rate': 0.007128382700140499, 'p_miss': 0.012817815863285384}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 05:18:18,611] Trial 57 finished with value: 0.1017370228029036 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 3, 'learning_rate': 0.008208271425913457, 'p_miss': 0.029854657835685153}. Best is trial 46 with value: 0.09939160186230131.
running
[I 2024-10-31 05:18:30,303] Trial 58 finished with value: 0.09905184564419098 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 4, 'learning_rate': 0.006981217975719932, 'p_miss': 0.014870621574831811}. Best is trial 58 with value: 0.09905184564419098.
running
[I 2024-10-31 05:18:41,799] Trial 59 finished with value: 0.10456563536539092 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 4, 'learning_rate': 0.007787290453029033, 'p_miss': 0.03433735946153044}. Best is trial 58 with value: 0.09905184564419098.
running
[I 2024-10-31 05:18:49,906] Trial 60 finished with value: 0.1230575960515723 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.041748510095396374, 'p_miss': 0.13171077494870026}. Best is trial 58 with value: 0.09905184564419098.
running
[I 2024-10-31 05:22:45,434] Trial 11 finished with value: 0.3254688708995968 and parameters: {'model_name': 'GAIN', 'batch_size': 34, 'hint_rate': 0.7825102074351832, 'alpha': 46, 'iterations': 2037, 'learning_rate': 0.00038228484758606344, 'p_miss': 0.2432055475107424}. Best is trial 58 with value: 0.09905184564419098.
running
[I 2024-10-31 05:23:36,378] Trial 62 finished with value: 0.16360086226746406 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 15, 'learning_rate': 0.009448810933624206, 'p_miss': 0.18408523878011895}. Best is trial 58 with value: 0.09905184564419098.
running
[I 2024-10-31 05:23:42,801] Trial 63 finished with value: 0.09758870151456113 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.004864175336739473, 'p_miss': 0.02609324153638004}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:23:54,960] Trial 64 finished with value: 0.10684277744313483 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.0015315661414105686, 'p_miss': 0.033113359572664786}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:24:31,967] Trial 65 finished with value: 0.11374275247813193 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 12, 'learning_rate': 0.005420480169783759, 'p_miss': 0.029234655237095897}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:24:47,050] Trial 66 finished with value: 0.10553051258305779 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 3, 'learning_rate': 0.010465906257554142, 'p_miss': 0.08266233797776305}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:24:56,566] Trial 67 finished with value: 0.10662329719559718 and parameters: {'model_name': 'VAE', 'batch_size': 897, 'iterations': 2, 'learning_rate': 0.022586813142664357, 'p_miss': 0.05732816280241276}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:25:02,956] Trial 68 finished with value: 0.10505067255703833 and parameters: {'model_name': 'VAE', 'batch_size': 67, 'iterations': 2, 'learning_rate': 0.005167636463086546, 'p_miss': 0.03084361608481036}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:25:03,960] Trial 69 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.12125414716776428, 'alpha': 1, 'iterations': 2, 'learning_rate': 0.00014788177420850383, 'p_miss': 0.010080777715486332}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:25:24,706] Trial 70 finished with value: 0.09776599582761811 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 6, 'learning_rate': 0.0018486723640682985, 'p_miss': 0.0534032925017993}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:27:29,193] Trial 71 finished with value: 0.11571536057712783 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 33, 'learning_rate': 0.0017680133003596132, 'p_miss': 0.055699094293493456}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:27:57,711] Trial 72 finished with value: 0.09883427154351114 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8, 'learning_rate': 0.0035847791395675487, 'p_miss': 0.02993992198589015}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:28:08,093] Trial 42 finished with value: 0.2134529524391559 and parameters: {'model_name': 'VAE', 'batch_size': 100, 'iterations': 1043, 'learning_rate': 0.09779964304005986, 'p_miss': 0.03219272777756756}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:28:10,739] Trial 74 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.32754829696064325, 'alpha': 99, 'iterations': 7, 'learning_rate': 0.0035031169713341014, 'p_miss': 0.06792345948748116}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:28:12,551] Trial 75 finished with value: 0.2393203078949692 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3055, 'weights': 'distance'}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:28:16,702] Trial 73 finished with value: 0.10204353314136302 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7, 'learning_rate': 0.0011770154021842995, 'p_miss': 0.049027060648205}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:28:29,122] Trial 76 finished with value: 0.0976841167312347 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.0010622341788023776, 'p_miss': 0.0455827456200836}. Best is trial 63 with value: 0.09758870151456113.
running
[I 2024-10-31 05:28:32,869] Trial 77 finished with value: 0.0969048648917014 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 4, 'learning_rate': 0.0031432376860154754, 'p_miss': 0.026135148027900117}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:28:48,592] Trial 78 finished with value: 0.09708999425981278 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6, 'learning_rate': 0.0008642141140592764, 'p_miss': 0.10230017400928129}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:29:08,612] Trial 79 finished with value: 0.10016059615241699 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 10, 'learning_rate': 0.0009299877459299681, 'p_miss': 0.022315995413147823}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:29:08,951] Trial 81 finished with value: 0.3543723580781333 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:29:19,358] Trial 80 finished with value: 0.10578989194403657 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 10, 'learning_rate': 0.000823541002185678, 'p_miss': 0.29358690205287574}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:30:29,279] Trial 82 finished with value: 0.10561582858305862 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 22, 'learning_rate': 0.002586909066744943, 'p_miss': 0.10926759384546667}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:30:46,432] Trial 83 finished with value: 0.09839503382744828 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 25, 'learning_rate': 0.0005281906634432371, 'p_miss': 0.045430071774217665}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:30:47,977] Trial 85 finished with value: 0.2389962893733149 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1774, 'weights': 'distance'}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:30:49,760] Trial 84 finished with value: 0.0990857328485059 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.00046410150135662984, 'p_miss': 0.06945296625950102}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:31:08,710] Trial 86 finished with value: 0.10480228427673825 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.0005057005224590262, 'p_miss': 0.05036767419949821}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:32:45,895] Trial 87 finished with value: 0.10293981987140148 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 37, 'learning_rate': 0.0004055173657077528, 'p_miss': 0.04239618158943776}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:33:45,810] Trial 88 finished with value: 0.11878577404019611 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 55, 'learning_rate': 0.0021307721836832973, 'p_miss': 0.045224991998487854}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:33:51,490] Trial 90 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.3901603743388925, 'alpha': 46, 'iterations': 19, 'learning_rate': 0.0012926365255531368, 'p_miss': 0.020635003941788983}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:34:10,736] Trial 91 finished with value: 0.10539678535665176 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 6, 'learning_rate': 0.00023109918134255153, 'p_miss': 0.1755814345675285}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:34:11,150] Trial 92 finished with value: 0.3543723580781333 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:37:34,925] Trial 89 finished with value: 0.10391209883573164 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 101, 'learning_rate': 0.0002737460487224072, 'p_miss': 0.021857254639558614}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:38:13,952] Trial 94 finished with value: 0.11147951657245858 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 12, 'learning_rate': 0.0034630583879769125, 'p_miss': 0.10266269926380513}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:51:01,736] Trial 16 finished with value: 0.2224360765606035 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 1499, 'learning_rate': 0.00877253850813831, 'p_miss': 0.20956272724891423}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:51:13,796] Trial 96 finished with value: 0.10176592408761094 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 4, 'learning_rate': 0.0006235925181733742, 'p_miss': 0.07338570342598703}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:51:30,503] Trial 97 finished with value: 0.09841961953937749 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.0009434061735550109, 'p_miss': 0.06089046606236216}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:51:44,723] Trial 45 finished with value: 0.21251584804564186 and parameters: {'model_name': 'VAE', 'batch_size': 77, 'iterations': 1286, 'learning_rate': 0.06508434004997751, 'p_miss': 0.05603499682731283}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:52:11,763] Trial 99 finished with value: 0.10848983212998604 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 9, 'learning_rate': 0.0009751792823155274, 'p_miss': 0.04257190782928216}. Best is trial 77 with value: 0.0969048648917014.
running
[I 2024-10-31 05:52:24,929] Trial 100 finished with value: 0.0962530210876631 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 4, 'learning_rate': 0.0043896059408283054, 'p_miss': 0.06401413220294262}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 05:52:31,880] Trial 101 finished with value: 0.10738963606687228 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 2, 'learning_rate': 0.004409474134630461, 'p_miss': 0.09455928484304682}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 05:53:30,138] Trial 102 finished with value: 0.10154398073002338 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 18, 'learning_rate': 0.0026146600611586506, 'p_miss': 0.062467304193065676}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 05:53:45,198] Trial 103 finished with value: 0.10295517011054725 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.0007102557281234868, 'p_miss': 0.07993582024714554}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 05:53:46,629] Trial 104 finished with value: 0.23916176626922883 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2158, 'weights': 'distance'}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 05:55:42,147] Trial 4 finished with value: 0.21563801695576018 and parameters: {'model_name': 'VAE', 'batch_size': 130, 'iterations': 1554, 'learning_rate': 0.00032401106055657107, 'p_miss': 0.2871370035108687}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 06:24:17,361] Trial 41 finished with value: 0.2139967805144151 and parameters: {'model_name': 'VAE', 'batch_size': 128, 'iterations': 1681, 'learning_rate': 0.08105439032664412, 'p_miss': 0.01583045997335808}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 06:24:28,792] Trial 107 finished with value: 0.09699034799838917 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4, 'learning_rate': 0.0019374621537003563, 'p_miss': 0.0375258912110431}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 06:24:38,948] Trial 108 finished with value: 0.1006207173591424 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 3, 'learning_rate': 0.0018156660647445364, 'p_miss': 0.2418535749883956}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 06:25:00,409] Trial 109 finished with value: 0.09971885344372224 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 8, 'learning_rate': 0.0011959348315235905, 'p_miss': 0.03855818357646112}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 06:25:14,675] Trial 110 finished with value: 0.10719203848209431 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4, 'learning_rate': 0.004316559899749439, 'p_miss': 0.06083015413275307}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:04:24,292] Trial 28 finished with value: 0.18764154109929945 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3135, 'learning_rate': 0.00011122125977249485, 'p_miss': 0.061497682142062}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:04:42,538] Trial 112 finished with value: 0.10828960195548712 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 6, 'learning_rate': 0.002561206866717918, 'p_miss': 0.02387633015090656}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:11:33,337] Trial 113 finished with value: 0.1773172226766192 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 126, 'learning_rate': 0.0014240618018865896, 'p_miss': 0.13014831263846205}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:11:33,541] Trial 114 finished with value: 0.3673608900326144 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:12:24,718] Trial 115 finished with value: 0.10472781709196041 and parameters: {'model_name': 'VAE', 'batch_size': 45, 'iterations': 12, 'learning_rate': 0.0019056877652877764, 'p_miss': 0.04921937913796827}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:12:38,700] Trial 116 finished with value: 0.09831671189642428 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 4, 'learning_rate': 0.003143136310922267, 'p_miss': 0.036802250008129866}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:12:49,667] Trial 117 finished with value: 0.0972426791842659 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 3, 'learning_rate': 0.0028305993241306464, 'p_miss': 0.037422297157372095}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:12:59,926] Trial 118 finished with value: 0.10724089249412953 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 3, 'learning_rate': 0.002803597676245626, 'p_miss': 0.04027149301196103}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:13:14,115] Trial 119 finished with value: 0.10603000630040063 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4, 'learning_rate': 0.0021419178748029524, 'p_miss': 0.06211324331200718}. Best is trial 100 with value: 0.0962530210876631.
running
[I 2024-10-31 07:13:21,621] Trial 120 finished with value: 0.09605189788908863 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 2, 'learning_rate': 0.004611502504335698, 'p_miss': 0.037074137242481306}. Best is trial 120 with value: 0.09605189788908863.
running
[I 2024-10-31 07:13:25,940] Trial 121 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.5603061962488844, 'alpha': 26, 'iterations': 2, 'learning_rate': 0.004494707462444535, 'p_miss': 0.037177384769339565}. Best is trial 120 with value: 0.09605189788908863.
running
[I 2024-10-31 08:26:13,596] Trial 38 finished with value: 0.215465234769807 and parameters: {'model_name': 'VAE', 'batch_size': 235, 'iterations': 4597, 'learning_rate': 0.09464893528783391, 'p_miss': 0.01253019370099584}. Best is trial 120 with value: 0.09605189788908863.
running
[I 2024-10-31 08:26:20,710] Trial 123 finished with value: 0.10613995375863998 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 2, 'learning_rate': 0.006187145259460703, 'p_miss': 0.026230051462005743}. Best is trial 120 with value: 0.09605189788908863.
running
[I 2024-10-31 08:26:33,787] Trial 124 finished with value: 0.09824756528912507 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 3, 'learning_rate': 0.0032016076737084787, 'p_miss': 0.04890604735855304}. Best is trial 120 with value: 0.09605189788908863.
running
[I 2024-10-31 08:29:17,347] Trial 37 finished with value: 0.21397575885726253 and parameters: {'model_name': 'VAE', 'batch_size': 287, 'iterations': 4086, 'learning_rate': 0.08243797805217541, 'p_miss': 0.010484886506506058}. Best is trial 120 with value: 0.09605189788908863.
running
[I 2024-10-31 08:29:30,680] Trial 126 finished with value: 0.09515569642381423 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 3, 'learning_rate': 0.0033054095430475727, 'p_miss': 0.05150048129971403}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:29:41,106] Trial 127 finished with value: 0.10386640669382068 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 3, 'learning_rate': 0.00324371317139029, 'p_miss': 0.0528807210736016}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:29:48,076] Trial 128 finished with value: 0.10357127484618278 and parameters: {'model_name': 'VAE', 'batch_size': 23, 'iterations': 2, 'learning_rate': 0.00395743506717269, 'p_miss': 0.034502591403967865}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:29:57,617] Trial 129 finished with value: 0.10557322521048465 and parameters: {'model_name': 'VAE', 'batch_size': 42, 'iterations': 3, 'learning_rate': 0.002839032802146749, 'p_miss': 0.036954462595739}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:36:30,808] Trial 125 finished with value: 0.21170073917042656 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:36:44,861] Trial 131 finished with value: 0.10842717228764993 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 4, 'learning_rate': 0.002157748009889021, 'p_miss': 0.018651523438012265}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:37:10,391] Trial 132 finished with value: 0.11040664045534279 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 6, 'learning_rate': 0.0052157581516630025, 'p_miss': 0.052040806526913765}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:37:22,091] Trial 133 finished with value: 0.1080955906343372 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4, 'learning_rate': 0.0015364054969451556, 'p_miss': 0.07495118492069155}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:37:23,685] Trial 134 finished with value: 0.20133029051953938 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1056, 'weights': 'uniform'}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:37:28,802] Trial 135 finished with value: 0.09861046614175567 and parameters: {'model_name': 'VAE', 'batch_size': 11, 'iterations': 2, 'learning_rate': 0.003171022067560808, 'p_miss': 0.06589608325888605}. Best is trial 126 with value: 0.09515569642381423.
running
[I 2024-10-31 08:37:38,681] Trial 136 finished with value: 0.09507091066907031 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.004210851653582505, 'p_miss': 0.0461626740323792}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:37:48,773] Trial 137 finished with value: 0.09905324144459664 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.006508582556055783, 'p_miss': 0.04591513284445227}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:38:06,107] Trial 138 finished with value: 0.1107676143453272 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 5, 'learning_rate': 0.004531983929223055, 'p_miss': 0.028698841369913523}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:38:23,099] Trial 139 finished with value: 0.1051099894763345 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 4, 'learning_rate': 0.003657154811773489, 'p_miss': 0.0524645075039579}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:39:12,569] Trial 106 finished with value: 0.22193786723753242 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3279, 'learning_rate': 0.0019686316778799837, 'p_miss': 0.019724072181109775}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:39:27,049] Trial 130 finished with value: 0.21207114347196035 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:39:31,903] Trial 141 finished with value: 0.11088049277282053 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 6, 'learning_rate': 0.002924900510544862, 'p_miss': 0.04040553173078615}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:39:41,451] Trial 143 finished with value: 0.10691950757669777 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 3, 'learning_rate': 0.005152494506589165, 'p_miss': 0.03288880721692895}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:39:58,070] Trial 144 finished with value: 0.10248682677033263 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 5, 'learning_rate': 0.0024489416863664017, 'p_miss': 0.02660911591968106}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:39:58,490] Trial 145 finished with value: 0.3543723580781333 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:40:05,702] Trial 146 finished with value: 0.10377712951910736 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 2, 'learning_rate': 0.0005634841933441959, 'p_miss': 0.04516840351460932}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:40:31,714] Trial 147 finished with value: 0.10249313058084016 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 8, 'learning_rate': 0.003952989849159481, 'p_miss': 0.047100286877526605}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:40:42,883] Trial 148 finished with value: 0.09520678750890957 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 4, 'learning_rate': 0.0016573675926760277, 'p_miss': 0.05359696807182732}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:58:13,940] Trial 140 finished with value: 0.20650274265347549 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 387, 'learning_rate': 0.0021551445755367553, 'p_miss': 0.03468259867642459}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:58:29,355] Trial 150 finished with value: 0.09928889677893596 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4, 'learning_rate': 0.0015430472608194464, 'p_miss': 0.0545731398203482}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:58:39,918] Trial 151 finished with value: 0.3398242792697939 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.2318424084761782, 'alpha': 69, 'iterations': 6, 'learning_rate': 0.0011277528613668592, 'p_miss': 0.09044265310314947}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:58:48,498] Trial 152 finished with value: 0.10097250118148833 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.0016879953456404204, 'p_miss': 0.05755847109148723}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:59:03,575] Trial 153 finished with value: 0.1041731058933261 and parameters: {'model_name': 'VAE', 'batch_size': 25, 'iterations': 4, 'learning_rate': 0.003113928864981411, 'p_miss': 0.01703973911423758}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:59:33,438] Trial 154 finished with value: 0.10523098197007838 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 9, 'learning_rate': 0.0023238958173951623, 'p_miss': 0.06943284460869971}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 08:59:52,439] Trial 155 finished with value: 0.09948549410135124 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 5, 'learning_rate': 0.003865979120842187, 'p_miss': 0.03967621430838103}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:00:02,282] Trial 142 finished with value: 0.21335650419866936 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 402, 'learning_rate': 0.0030079389631823667, 'p_miss': 0.0377466600510043}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:00:14,045] Trial 156 finished with value: 0.09922491141091443 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7, 'learning_rate': 0.000739765501913797, 'p_miss': 0.04720279046578337}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:00:25,840] Trial 158 finished with value: 0.1068653081734284 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.006014883475665721, 'p_miss': 0.026309933519954032}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:00:26,911] Trial 157 finished with value: 0.11032476883409292 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7, 'learning_rate': 0.0008008030749470623, 'p_miss': 0.046424907991471615}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:01:15,971] Trial 159 finished with value: 0.111140398642817 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 13, 'learning_rate': 0.005050107639575498, 'p_miss': 0.058621862609024404}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:01:16,377] Trial 160 finished with value: 0.10599260190588618 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 14, 'learning_rate': 0.0010467456030712834, 'p_miss': 0.057351640409090326}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:01:35,022] Trial 162 finished with value: 0.11164004514927492 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 5, 'learning_rate': 0.007502690071887281, 'p_miss': 0.0638548056350912}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:01:47,181] Trial 163 finished with value: 0.10069403046645124 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 4, 'learning_rate': 0.001400157757589931, 'p_miss': 0.11701032693345871}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:01:48,173] Trial 164 finished with value: 0.23980009591502024 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 182, 'weights': 'distance'}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:03:02,770] Trial 161 finished with value: 0.10486457636768584 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 33, 'learning_rate': 0.0011081127291115338, 'p_miss': 0.0660824211419696}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:03:18,932] Trial 166 finished with value: 0.10489997343603012 and parameters: {'model_name': 'VAE', 'batch_size': 37, 'iterations': 5, 'learning_rate': 0.00036744298535575597, 'p_miss': 0.15745410686098643}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:03:35,795] Trial 167 finished with value: 0.1011201135169042 and parameters: {'model_name': 'VAE', 'batch_size': 900, 'iterations': 3, 'learning_rate': 0.0009281317221410223, 'p_miss': 0.05001947090624968}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:03:53,105] Trial 165 finished with value: 0.09669760103194018 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 35, 'learning_rate': 0.00037217907530275794, 'p_miss': 0.03130047283650149}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:04:02,065] Trial 168 finished with value: 0.10255362258109701 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6, 'learning_rate': 0.0044031067795372485, 'p_miss': 0.040814147195354256}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:06:31,553] Trial 170 finished with value: 0.09777907951819564 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 57, 'learning_rate': 0.000255067717332756, 'p_miss': 0.03198383166367279}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:06:38,946] Trial 171 finished with value: 0.09545794587026754 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 2, 'learning_rate': 0.003536918286864481, 'p_miss': 0.03094080917802418}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:08:30,209] Trial 39 finished with value: 0.2137096416443695 and parameters: {'model_name': 'VAE', 'batch_size': 230, 'iterations': 4839, 'learning_rate': 0.04170823062859335, 'p_miss': 0.01659037659244307}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:11:09,708] Trial 173 finished with value: 0.09887888590191234 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 45, 'learning_rate': 0.00018897113641879904, 'p_miss': 0.029338812769818548}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:14:18,126] Trial 169 finished with value: 0.10603177504204067 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 155, 'learning_rate': 0.0002630615965179702, 'p_miss': 0.041827768491025076}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:14:18,532] Trial 175 finished with value: 0.20484718292648782 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:15:22,304] Trial 174 finished with value: 0.09996494826031252 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 69, 'learning_rate': 0.00018009723246179856, 'p_miss': 0.02250301800364815}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:19:09,752] Trial 176 finished with value: 0.09864308778603001 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 92, 'learning_rate': 0.00016637206677339657, 'p_miss': 0.024304998251186996}. Best is trial 136 with value: 0.09507091066907031.
running
[I 2024-10-31 09:19:16,908] Trial 178 finished with value: 0.09332829161037233 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 2, 'learning_rate': 0.003429195922645284, 'p_miss': 0.03387334374673283}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:19:26,389] Trial 179 finished with value: 0.10435251316169047 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 2, 'learning_rate': 0.003453850549514732, 'p_miss': 0.032095878184657874}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:20:04,205] Trial 177 finished with value: 0.197656982519819 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 95, 'learning_rate': 0.003438621942796517, 'p_miss': 0.03312908893961061}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:20:14,130] Trial 181 finished with value: 0.10373853088648846 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 2, 'learning_rate': 0.004743005213472859, 'p_miss': 0.013035803881299237}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:20:15,179] Trial 182 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.6073791473075467, 'alpha': 71, 'iterations': 2, 'learning_rate': 0.002576102335118337, 'p_miss': 0.017802067870378156}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:20:25,322] Trial 183 finished with value: 0.21768446832193353 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:20:38,280] Trial 184 finished with value: 0.09762385821251587 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 3, 'learning_rate': 0.004160801863719078, 'p_miss': 0.028955361873607217}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:21:50,808] Trial 180 finished with value: 0.09714208367034052 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 51, 'learning_rate': 0.0003229589407118663, 'p_miss': 0.014604741667602672}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:23:20,914] Trial 185 finished with value: 0.18348017775984782 and parameters: {'model_name': 'VAE', 'batch_size': 649, 'iterations': 27, 'learning_rate': 0.00405598711307234, 'p_miss': 0.028751158872290218}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:24:24,901] Trial 186 finished with value: 0.10010453850832471 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 43, 'learning_rate': 0.0002996985936987492, 'p_miss': 0.02856662978703551}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:25:32,442] Trial 187 finished with value: 0.1022916189418989 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 43, 'learning_rate': 0.00027475690620794486, 'p_miss': 0.010982701654783864}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:26:59,849] Trial 188 finished with value: 0.09928692756616204 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 50, 'learning_rate': 0.00021941213612014954, 'p_miss': 0.016029267256749635}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:29:14,858] Trial 189 finished with value: 0.09996214921545048 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 70, 'learning_rate': 0.00036643324887682154, 'p_miss': 0.023837658491342645}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:30:42,043] Trial 190 finished with value: 0.10729798951311922 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 67, 'learning_rate': 0.0003652595451005535, 'p_miss': 0.02257258293406325}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:30:54,265] Trial 192 finished with value: 0.10062337929346557 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 3, 'learning_rate': 0.00556843128110198, 'p_miss': 0.035763777158038676}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:30:58,880] Trial 193 finished with value: 0.11351079949108853 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 1, 'learning_rate': 0.00042511202502046384, 'p_miss': 0.220856451447046}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:32:51,301] Trial 191 finished with value: 0.19222921621372874 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 60, 'learning_rate': 0.005540204814040456, 'p_miss': 0.035886848180307004}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:33:04,492] Trial 195 finished with value: 0.09414977822964692 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4, 'learning_rate': 0.00012221044648844437, 'p_miss': 0.04290988842623955}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:33:21,347] Trial 196 finished with value: 0.11599111421286427 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4, 'learning_rate': 0.0018033504018845682, 'p_miss': 0.04420948070542438}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:33:32,569] Trial 197 finished with value: 0.10457198716690544 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.0037926503519555652, 'p_miss': 0.04141719764507599}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:33:52,501] Trial 198 finished with value: 0.09721062045991614 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 5, 'learning_rate': 0.002351511961239668, 'p_miss': 0.2795280721180379}. Best is trial 178 with value: 0.09332829161037233.
running
[I 2024-10-31 09:34:04,632] Trial 194 finished with value: 0.10263130080549168 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 58, 'learning_rate': 0.00012588806813321546, 'p_miss': 0.2770317471894989}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 09:34:06,997] Trial 199 finished with value: 0.10174160759661359 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 5, 'learning_rate': 0.002755395950053686, 'p_miss': 0.05283672314402052}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 09:36:34,328] Trial 93 finished with value: 0.20989622267237454 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4936, 'learning_rate': 0.0037970013935500154, 'p_miss': 0.06661832713750701}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 09:52:44,215] Trial 105 finished with value: 0.22711596069805381 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 4595, 'learning_rate': 0.0017296991568039924, 'p_miss': 0.06353274829148062}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 09:54:13,164] Trial 51 finished with value: 0.20557235398469795 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6680, 'learning_rate': 0.008817148641839814, 'p_miss': 0.018974540723929102}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 10:50:09,860] Trial 40 finished with value: 0.21483610746314294 and parameters: {'model_name': 'VAE', 'batch_size': 117, 'iterations': 7996, 'learning_rate': 0.07970939616933584, 'p_miss': 0.013170797172955509}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 10:58:44,494] Trial 95 finished with value: 0.22923294456109566 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7706, 'learning_rate': 0.0006474839672993357, 'p_miss': 0.06475192174905953}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:25:12,412] Trial 122 finished with value: 0.22843512103321933 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 5009, 'learning_rate': 0.006174075427668091, 'p_miss': 0.051819677168896155}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:42:27,635] Trial 55 finished with value: 0.21190649905602074 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 9984, 'learning_rate': 0.0066368114538475935, 'p_miss': 0.03820240624106478}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:51:55,399] Trial 18 finished with value: 0.21271848710984026 and parameters: {'model_name': 'VAE', 'batch_size': 251, 'iterations': 9238, 'learning_rate': 0.08111847296134118, 'p_miss': 0.232068691909701}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:53:27,466] Trial 61 finished with value: 0.21130356637836697 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 8054, 'learning_rate': 0.001152546760999648, 'p_miss': 0.03281247932826061}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:56:11,747] Trial 98 finished with value: 0.21297007912380606 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 9362, 'learning_rate': 0.0009704623361803314, 'p_miss': 0.06224511822121194}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:59:20,342] Trial 172 finished with value: 0.21340379648815605 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 6961, 'learning_rate': 0.00016420059794914165, 'p_miss': 0.030777959986905832}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:59:39,103] Trial 35 finished with value: 0.21273562948777816 and parameters: {'model_name': 'VAE', 'batch_size': 623, 'iterations': 8858, 'learning_rate': 0.00010958377325040869, 'p_miss': 0.011152766247401302}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:59:49,572] Trial 149 finished with value: 0.21416032778626476 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 6911, 'learning_rate': 0.0015621376583508431, 'p_miss': 0.05518407005419752}. Best is trial 178 with value: 0.09332829161037233.
[I 2024-10-31 11:59:56,756] Trial 111 finished with value: 0.2296848872243981 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 9525, 'learning_rate': 0.002928252130949946, 'p_miss': 0.04934908554017133}. Best is trial 178 with value: 0.09332829161037233.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.09332829161037233
{'model_name': 'VAE', 'batch_size': 6, 'iterations': 2, 'learning_rate': 0.003429195922645284, 'p_miss': 0.03387334374673283}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4ee0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.5142018373078703
Generation:   4%|▍         | 1/25 [00:11<04:47, 11.99s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f8700> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  2
Best f1_score score: 0.5142018373078703
Generation:   8%|▊         | 2/25 [00:52<10:58, 28.65s/it]Generation:  3
Best f1_score score: 0.5142018373078703
Generation:  12%|█▏        | 3/25 [01:00<07:09, 19.51s/it]Generation:  4
Best f1_score score: 0.5142018373078703
Generation:  16%|█▌        | 4/25 [01:11<05:38, 16.12s/it]Generation:  5
Best f1_score score: 0.5142018373078703
Generation:  20%|██        | 5/25 [02:30<12:56, 38.84s/it]Generation:  6
Best f1_score score: 0.5142018373078703
Generation:  24%|██▍       | 6/25 [02:40<09:07, 28.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a5c00> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.5142018373078703
Generation:  28%|██▊       | 7/25 [02:54<07:13, 24.11s/it]Generation:  8
Best f1_score score: 0.5142018373078703
Generation:  32%|███▏      | 8/25 [03:09<05:56, 20.99s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f09390> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  9
Best f1_score score: 0.5142018373078703
Generation:  36%|███▌      | 9/25 [03:20<04:50, 18.14s/it]Generation:  10
Best f1_score score: 0.5172009811080353
Generation:  40%|████      | 10/25 [03:34<04:10, 16.68s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a717b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.5172009811080353
Generation:  44%|████▍     | 11/25 [06:01<13:10, 56.48s/it]Generation:  12
Best f1_score score: 0.5172009811080353
Generation:  48%|████▊     | 12/25 [06:13<09:21, 43.22s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a07e50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  13
Best f1_score score: 0.5172009811080353
Generation:  52%|█████▏    | 13/25 [06:40<07:36, 38.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554657b9330> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.5172009811080353
Generation:  56%|█████▌    | 14/25 [06:53<05:38, 30.73s/it]Generation:  15
Best f1_score score: 0.5223014809310278
Generation:  60%|██████    | 15/25 [07:15<04:40, 28.08s/it]Generation:  16
Best f1_score score: 0.5223014809310278
Generation:  64%|██████▍   | 16/25 [07:41<04:05, 27.25s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fd720> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.5223014809310278
Generation:  68%|██████▊   | 17/25 [07:56<03:08, 23.58s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465873490> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  18
Best f1_score score: 0.5223014809310278
Generation:  72%|███████▏  | 18/25 [09:28<05:08, 44.09s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554655d7220> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465ab3970> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  19
Best f1_score score: 0.5223014809310278
Generation:  76%|███████▌  | 19/25 [10:01<04:05, 40.90s/it]Generation:  20
Best f1_score score: 0.5223014809310278
Generation:  80%|████████  | 20/25 [10:22<02:54, 34.94s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747152d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  21
Best f1_score score: 0.5223014809310278
Generation:  84%|████████▍ | 21/25 [10:39<01:58, 29.55s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465679f60> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  22
Best f1_score score: 0.5223014809310278
Generation:  88%|████████▊ | 22/25 [11:03<01:23, 27.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fcee0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  23
Best f1_score score: 0.5223014809310278
Generation:  92%|█████████▏| 23/25 [11:58<01:12, 36.02s/it]Generation:  24
Best f1_score score: 0.5223014809310278
Generation:  96%|█████████▌| 24/25 [12:20<00:31, 31.69s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c7ebc0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0f100> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  25
Best f1_score score: 0.5223014809310278
Generation: 100%|██████████| 25/25 [12:40<00:00, 28.45s/it]Generation: 100%|██████████| 25/25 [12:44<00:00, 30.59s/it]
2024-10-31 12:13:44,586 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37081' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-909b05a72f24db85502e89ac2c8c6307', 'ndarray-2c00092ba1cd743626b416db9c976854'} (stimulus_id='handle-worker-cleanup-1730402024.5868058')
Fitted
Pipeline(steps=[('svc',
                 SVC(C=19.7513114289841, coef0=0.6875622809886,
                     kernel='sigmoid', max_iter=3000, probability=True,
                     shrinking=False))])
score start
train score: {'auroc': 0.4918007904510875, 'accuracy': 0.5009746588693957, 'balanced_accuracy': 0.5009746588693957, 'logloss': 0.6938245852899187, 'f1': 0.5009746588693957}
original test score: {'auroc': 0.5050767414403778, 'accuracy': 0.5, 'balanced_accuracy': 0.5, 'logloss': 0.6932139060342836, 'f1': 0.3333333333333333}
imputed test score: {'auroc': 0.5007117557766908, 'accuracy': 0.5064935064935064, 'balanced_accuracy': 0.5064935064935064, 'logloss': 0.693683872040721, 'f1': 0.504568266632351}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4e50> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 813, in predict
    y = super().predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 428, in predict
    X = self._validate_for_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 606, in _validate_for_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745a0c10> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.5093468476189835
Generation:   4%|▍         | 1/25 [01:48<43:34, 108.92s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d21c30> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155453269330> 
 Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 101, in predict
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 574, in _check_X
    return self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.527447950318288
Generation:   8%|▊         | 2/25 [03:31<40:17, 105.09s/it]Generation:  3
Best f1_score score: 0.527447950318288
Generation:  12%|█▏        | 3/25 [04:03<26:24, 72.02s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d22b00> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.527447950318288
Generation:  16%|█▌        | 4/25 [04:39<20:06, 57.46s/it]Generation:  5
Best f1_score score: 0.527447950318288
Generation:  20%|██        | 5/25 [05:23<17:37, 52.90s/it]Generation:  6
Best f1_score score: 0.527447950318288
Generation:  24%|██▍       | 6/25 [07:07<22:11, 70.08s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f9ed990> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.527447950318288
Generation:  28%|██▊       | 7/25 [08:48<24:06, 80.37s/it]Generation:  8
Best f1_score score: 0.527447950318288
Generation:  32%|███▏      | 8/25 [09:08<17:18, 61.12s/it]Generation:  9
Best f1_score score: 0.527447950318288
Generation:  36%|███▌      | 9/25 [10:53<19:58, 74.88s/it]Generation:  10
Best f1_score score: 0.5298508642365478
Generation:  40%|████      | 10/25 [17:17<42:32, 170.18s/it]Generation:  11
Best f1_score score: 0.5298508642365478
Generation:  44%|████▍     | 11/25 [17:39<29:07, 124.83s/it]Generation:  12
Best f1_score score: 0.5298508642365478
Generation:  48%|████▊     | 12/25 [19:24<25:42, 118.65s/it]Generation:  13
Best f1_score score: 0.5298508642365478
Generation:  52%|█████▏    | 13/25 [21:08<22:53, 114.43s/it]Generation:  14
Best f1_score score: 0.5298508642365478
Generation:  56%|█████▌    | 14/25 [22:51<20:19, 110.86s/it]Generation:  15
Best f1_score score: 0.5298508642365478
Generation:  60%|██████    | 15/25 [26:35<24:10, 145.06s/it]Generation:  16
Best f1_score score: 0.5298508642365478
Generation:  64%|██████▍   | 16/25 [26:45<15:40, 104.45s/it]Generation:  17
Best f1_score score: 0.5298508642365478
Generation:  68%|██████▊   | 17/25 [27:01<10:21, 77.69s/it] Generation:  18
Best f1_score score: 0.5298508642365478
Generation:  72%|███████▏  | 18/25 [27:21<07:02, 60.35s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742aabf0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452fa9b40> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 904, in predict
    proba = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 946, in predict_proba
    X = self._validate_X_predict(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 641, in _validate_X_predict
    X = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e5b86a0> 

Generation:  19
Best f1_score score: 0.5389059372823946
Generation:  76%|███████▌  | 19/25 [37:26<22:24, 224.12s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547412e560> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 825, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.5389059372823946
Generation:  80%|████████  | 20/25 [39:08<15:35, 187.19s/it]Generation:  21
Best f1_score score: 0.5389059372823946
Generation:  84%|████████▍ | 21/25 [40:50<10:47, 161.88s/it]Generation:  22
Best f1_score score: 0.5389059372823946
Generation:  88%|████████▊ | 22/25 [41:05<05:53, 117.77s/it]Generation:  23
Best f1_score score: 0.5389059372823946
Generation:  92%|█████████▏| 23/25 [41:15<02:50, 85.27s/it] Generation:  24
Best f1_score score: 0.5389059372823946
Generation:  96%|█████████▌| 24/25 [41:30<01:04, 64.17s/it]Generation:  25
Best f1_score score: 0.5389059372823946
Generation: 100%|██████████| 25/25 [41:38<00:00, 47.52s/it]Generation: 100%|██████████| 25/25 [41:38<00:00, 99.96s/it]
2024-10-31 12:55:32,676 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:35951' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-fbf45b88abf3cfe84fe27faad8a1b111', 'ndarray-2c00092ba1cd743626b416db9c976854'} (stimulus_id='handle-worker-cleanup-1730404532.675966')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=50)),
                ('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=True,
                                                l2_regularization=0.0004354551768,
                                                learning_rate=0.9785416899854,
                                                max_features=0.9068650307771,
                                                max_leaf_nodes=908,
                                                min_samples_leaf=124,
                                                n_iter_no_change=13, tol=0.0001,
                                                validation_fraction=0.0202328597986))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.7719082921367384, 'accuracy': 0.691358024691358, 'balanced_accuracy': 0.691358024691358, 'logloss': 0.5770343025461915, 'f1': 0.6912160518232413}
test score: {'auroc': 0.5265542249957835, 'accuracy': 0.5064935064935064, 'balanced_accuracy': 0.5064935064935064, 'logloss': 0.7569873841924737, 'f1': 0.5057432432432433}
original test score: {'auroc': 0.5044965424186203, 'accuracy': 0.4935064935064935, 'balanced_accuracy': 0.49350649350649345, 'logloss': 0.7609309448459224, 'f1': 0.4925170343932511}
score end
871
lvl
0.5
type
MNAR
num_run
3
class_full
finished
all finished
full run takes
8.376986209485265
hours
DONE
