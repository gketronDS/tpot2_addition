Run: 3
/cm/local/apps/slurm/var/spool/job1069961/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/823/823.pkl
working on 
../data/c/823/class_full_MCAR_0.3_1
0.7728509902954102
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-25 09:49:57,419] A new study created in memory with name: no-name-e1e552bf-c8af-4b45-a638-8ef02d142ef2
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-25 09:49:58,016] Trial 1 finished with value: 0.27456840626500967 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.27456840626500967.
running
[I 2024-11-25 09:49:58,400] Trial 7 finished with value: 0.27456840626500967 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.27456840626500967.
running
[I 2024-11-25 09:50:10,033] Trial 5 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:10,263] Trial 18 finished with value: 0.1520676887541787 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:10,533] Trial 17 finished with value: 0.1520676887541787 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 14016, 'weights': 'uniform'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:12,110] Trial 2 finished with value: 0.15354633647863422 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5617, 'weights': 'distance'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:13,789] Trial 12 finished with value: 0.1545145592178485 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12913, 'weights': 'distance'}. Best is trial 5 with value: 0.14513138198583078.
[I 2024-11-25 09:50:13,947] Trial 4 finished with value: 0.1545145592178485 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 14515, 'weights': 'distance'}. Best is trial 5 with value: 0.14513138198583078.
running
running
[I 2024-11-25 09:50:14,734] Trial 22 finished with value: 0.1520676887541787 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:15,111] Trial 10 finished with value: 0.1543382193082993 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9536, 'weights': 'distance'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:15,356] Trial 16 finished with value: 0.15439977123655763 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 9923, 'weights': 'distance'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:16,037] Trial 24 finished with value: 0.16327956446380593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:16,348] Trial 9 finished with value: 0.3056551136674216 and parameters: {'model_name': 'VAE', 'batch_size': 91, 'iterations': 1, 'learning_rate': 0.00042700726386178553, 'p_miss': 0.28125382500613744}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:24,604] Trial 11 finished with value: 0.30582610443466896 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9, 'learning_rate': 0.00020133195216922534, 'p_miss': 0.04659563772562454}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:29,818] Trial 20 finished with value: 0.29306729451625213 and parameters: {'model_name': 'VAE', 'batch_size': 55, 'iterations': 13, 'learning_rate': 0.0013195011955431362, 'p_miss': 0.2653838641546222}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:32,817] Trial 15 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.8515038839482398, 'alpha': 89, 'iterations': 137, 'learning_rate': 0.0012814272912034916, 'p_miss': 0.02508042239579991}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:41,712] Trial 27 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:42,192] Trial 25 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:42,523] Trial 28 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:42,944] Trial 26 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:53,610] Trial 29 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:58,513] Trial 30 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:50:59,457] Trial 0 finished with value: 0.1618430186976265 and parameters: {'model_name': 'VAE', 'batch_size': 217, 'iterations': 12, 'learning_rate': 0.07751792006684914, 'p_miss': 0.010679453109158004}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:00,934] Trial 31 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:05,839] Trial 19 finished with value: 0.29268094048814586 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 53, 'learning_rate': 0.0005265133222445771, 'p_miss': 0.2688287297542626}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:09,848] Trial 32 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:10,901] Trial 33 finished with value: 0.14513138198583078 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:12,220] Trial 21 finished with value: 0.14839239576356528 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:18,300] Trial 36 finished with value: 0.14568396528605826 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:26,244] Trial 34 finished with value: 0.15167086719689699 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:34,492] Trial 38 finished with value: 0.15370024337434338 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:35,149] Trial 8 finished with value: 0.2589271659247454 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.35272276779022027, 'alpha': 14, 'iterations': 120, 'learning_rate': 0.0017258135322802553, 'p_miss': 0.29937685075383674}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:48,925] Trial 37 finished with value: 0.14696321470381854 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:51,178] Trial 40 finished with value: 0.14652797356901104 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:51:56,513] Trial 41 finished with value: 0.14599117973001624 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:52:08,056] Trial 47 finished with value: 0.14521111064318154 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:57:02,939] Trial 6 finished with value: 0.2125158731035254 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 249, 'learning_rate': 0.01430731242111211, 'p_miss': 0.26161741080544476}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 09:59:45,372] Trial 13 finished with value: 0.1605229336809193 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 318, 'learning_rate': 0.07501961901739847, 'p_miss': 0.12637292783038317}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 10:10:37,969] Trial 35 finished with value: 0.1627385882107492 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 10:18:38,703] Trial 3 finished with value: 0.161475604328349 and parameters: {'model_name': 'VAE', 'batch_size': 112, 'iterations': 756, 'learning_rate': 0.0002556829961721946, 'p_miss': 0.09891904601376113}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 10:25:23,433] Trial 39 finished with value: 0.1506073534244326 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 10:26:02,041] Trial 14 finished with value: 0.15014984916197152 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 5 with value: 0.14513138198583078.
running
[I 2024-11-25 10:30:51,401] Trial 23 finished with value: 0.14357702725718946 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 23 with value: 0.14357702725718946.
running
[I 2024-11-25 10:47:30,926] Trial 48 finished with value: 0.13771590641456669 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 48 with value: 0.13771590641456669.
running
[I 2024-11-25 10:47:39,791] Trial 49 finished with value: 0.13767643624213197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 11:07:00,803] Trial 42 finished with value: 0.28651188934313365 and parameters: {'model_name': 'GAIN', 'batch_size': 760, 'hint_rate': 0.03465476136999601, 'alpha': 1, 'iterations': 3556, 'learning_rate': 0.017222563422421868, 'p_miss': 0.1460617947813524}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 11:39:04,465] Trial 58 finished with value: 0.2942663884588522 and parameters: {'model_name': 'GAIN', 'batch_size': 849, 'hint_rate': 0.13139179316252725, 'alpha': 100, 'iterations': 2876, 'learning_rate': 0.009307172301019594, 'p_miss': 0.18903747958401831}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 11:40:24,886] Trial 50 finished with value: 0.2917217464709977 and parameters: {'model_name': 'GAIN', 'batch_size': 628, 'hint_rate': 0.045918179818756844, 'alpha': 97, 'iterations': 4923, 'learning_rate': 0.028198893165704977, 'p_miss': 0.15252973673307568}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 11:42:55,845] Trial 45 finished with value: 0.2886015738582669 and parameters: {'model_name': 'GAIN', 'batch_size': 704, 'hint_rate': 0.05578497598856724, 'alpha': 0, 'iterations': 5036, 'learning_rate': 0.025660923523705657, 'p_miss': 0.1513118515595541}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 11:47:30,174] Trial 53 finished with value: 0.29307624792780756 and parameters: {'model_name': 'GAIN', 'batch_size': 378, 'hint_rate': 0.04628295115500153, 'alpha': 2, 'iterations': 5110, 'learning_rate': 0.00969234256255323, 'p_miss': 0.18646829027915748}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 12:03:08,373] Trial 51 finished with value: 0.281836174665539 and parameters: {'model_name': 'GAIN', 'batch_size': 829, 'hint_rate': 0.07965988491344783, 'alpha': 99, 'iterations': 5707, 'learning_rate': 0.016592547107916345, 'p_miss': 0.14570810759181824}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 12:07:28,613] Trial 56 finished with value: 0.29545126491839035 and parameters: {'model_name': 'GAIN', 'batch_size': 684, 'hint_rate': 0.010004779033835065, 'alpha': 0, 'iterations': 4510, 'learning_rate': 0.007079055109042428, 'p_miss': 0.19638454797974086}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 12:10:47,222] Trial 60 finished with value: 0.2830841030454499 and parameters: {'model_name': 'GAIN', 'batch_size': 931, 'hint_rate': 0.05574402440131154, 'alpha': 100, 'iterations': 3514, 'learning_rate': 0.011152338329043231, 'p_miss': 0.19054608442095164}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 12:18:16,872] Trial 46 finished with value: 0.290463362798817 and parameters: {'model_name': 'GAIN', 'batch_size': 664, 'hint_rate': 0.04975965190643811, 'alpha': 0, 'iterations': 6983, 'learning_rate': 0.020046833847609292, 'p_miss': 0.14387725159395282}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 12:25:28,799] Trial 44 finished with value: 0.2893939141643153 and parameters: {'model_name': 'GAIN', 'batch_size': 879, 'hint_rate': 0.02111125634917338, 'alpha': 15, 'iterations': 7146, 'learning_rate': 0.02386803177859231, 'p_miss': 0.15977715507520254}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 12:25:51,804] Trial 55 finished with value: 0.2923095930342288 and parameters: {'model_name': 'GAIN', 'batch_size': 728, 'hint_rate': 0.11289641851341387, 'alpha': 2, 'iterations': 5909, 'learning_rate': 0.008293094902257664, 'p_miss': 0.1875381604013176}. Best is trial 49 with value: 0.13767643624213197.
running
[I 2024-11-25 12:36:26,049] Trial 62 finished with value: 0.13738224518738285 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:37:25,000] Trial 63 finished with value: 0.13769254140031478 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:37:31,307] Trial 73 finished with value: 0.14457039567032112 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 382, 'weights': 'uniform'}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:37:37,798] Trial 74 finished with value: 0.14576364207332784 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 614, 'weights': 'uniform'}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:37:44,577] Trial 75 finished with value: 0.14755354339276458 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1095, 'weights': 'uniform'}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:37:51,768] Trial 76 finished with value: 0.1507548190946666 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4114, 'weights': 'uniform'}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:40:07,162] Trial 64 finished with value: 0.13778502083933092 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:41:08,194] Trial 54 finished with value: 0.28841063906848124 and parameters: {'model_name': 'GAIN', 'batch_size': 811, 'hint_rate': 0.04784527219246798, 'alpha': 100, 'iterations': 7176, 'learning_rate': 0.008196416027013848, 'p_miss': 0.18863121304380476}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:42:15,951] Trial 43 finished with value: 0.28919610010987873 and parameters: {'model_name': 'GAIN', 'batch_size': 953, 'hint_rate': 0.022894139201730945, 'alpha': 2, 'iterations': 8238, 'learning_rate': 0.01769655497971177, 'p_miss': 0.14145226582739368}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:44:06,439] Trial 65 finished with value: 0.13811935613705356 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:56:24,053] Trial 59 finished with value: 0.29737242287859156 and parameters: {'model_name': 'GAIN', 'batch_size': 946, 'hint_rate': 0.02443088580428321, 'alpha': 0, 'iterations': 7192, 'learning_rate': 0.008631187866618189, 'p_miss': 0.20330839376674326}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:57:26,611] Trial 52 finished with value: 0.2832447508593846 and parameters: {'model_name': 'GAIN', 'batch_size': 889, 'hint_rate': 0.02126414494576262, 'alpha': 100, 'iterations': 9907, 'learning_rate': 0.009715879133172166, 'p_miss': 0.1381630890787892}. Best is trial 62 with value: 0.13738224518738285.
running
[I 2024-11-25 12:57:46,920] Trial 66 finished with value: 0.1366457879057797 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 12:58:55,690] Trial 57 finished with value: 0.2888802768988075 and parameters: {'model_name': 'GAIN', 'batch_size': 824, 'hint_rate': 0.04525540265073741, 'alpha': 3, 'iterations': 9760, 'learning_rate': 0.008910512464236029, 'p_miss': 0.20022284328184672}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 12:59:22,763] Trial 61 finished with value: 0.29073743185598466 and parameters: {'model_name': 'GAIN', 'batch_size': 933, 'hint_rate': 0.9270857013944132, 'alpha': 100, 'iterations': 8707, 'learning_rate': 0.00010069790835047188, 'p_miss': 0.1999223198552611}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:01:05,328] Trial 67 finished with value: 0.13725862897193672 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:03:43,289] Trial 68 finished with value: 0.1382750203848631 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:09:29,308] Trial 69 finished with value: 0.13752530446849504 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:14:54,939] Trial 70 finished with value: 0.13775151299737082 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:15:29,124] Trial 71 finished with value: 0.13779579718288373 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:15:29,379] Trial 91 finished with value: 0.27456840626500967 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:24:00,455] Trial 72 finished with value: 0.13701620083839647 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:25:07,684] Trial 77 finished with value: 0.136892095490056 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:25:08,273] Trial 94 finished with value: 0.302359358903643 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1, 'learning_rate': 0.004125066700199228, 'p_miss': 0.07268604933998231}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:26:53,521] Trial 78 finished with value: 0.1378104771930213 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:28:10,228] Trial 79 finished with value: 0.13794392637882152 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:29:04,639] Trial 80 finished with value: 0.13731442319049242 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:30:19,502] Trial 81 finished with value: 0.13818074749693032 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:41:12,729] Trial 82 finished with value: 0.1373837215775358 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:41:50,289] Trial 84 finished with value: 0.13734530679160167 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:42:14,724] Trial 83 finished with value: 0.13751393535025314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:43:41,311] Trial 85 finished with value: 0.13743931962793082 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:44:01,782] Trial 86 finished with value: 0.1369808502425029 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:45:06,975] Trial 87 finished with value: 0.13764347464249965 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:45:07,240] Trial 105 finished with value: 0.27456840626500967 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 66 with value: 0.1366457879057797.
running
[I 2024-11-25 13:48:25,838] Trial 88 finished with value: 0.1363380089364838 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 13:54:06,058] Trial 89 finished with value: 0.13792817502713206 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 13:59:00,599] Trial 90 finished with value: 0.1374242431385916 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 13:59:38,417] Trial 92 finished with value: 0.13784324656157346 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:08:03,603] Trial 93 finished with value: 0.13744759129207998 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:09:04,343] Trial 95 finished with value: 0.13777653816539148 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:09:05,963] Trial 112 finished with value: 0.18101840171257644 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 3, 'learning_rate': 0.09595085351266909, 'p_miss': 0.08721620465687965}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:09:29,964] Trial 111 finished with value: 0.18032700834752935 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 1395, 'learning_rate': 0.09737768348665263, 'p_miss': 0.23546431286360753}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:10:51,765] Trial 96 finished with value: 0.13861306980304477 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:12:44,903] Trial 97 finished with value: 0.13785937686123378 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:13:43,761] Trial 98 finished with value: 0.13870545444791793 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:14:04,541] Trial 99 finished with value: 0.13717717131596557 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:25:36,371] Trial 101 finished with value: 0.1378327851640911 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:25:43,451] Trial 100 finished with value: 0.13804629536370377 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:25:49,660] Trial 119 finished with value: 0.15112675940959505 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:25:54,502] Trial 120 finished with value: 0.15112675940959505 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:26:59,045] Trial 102 finished with value: 0.1373828198249876 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:28:02,843] Trial 103 finished with value: 0.13729275836576874 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:28:35,824] Trial 104 finished with value: 0.13799425485206743 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:29:05,761] Trial 106 finished with value: 0.13781838103989882 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:32:56,452] Trial 107 finished with value: 0.13673739370564783 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:38:42,189] Trial 110 finished with value: 0.13944322271559634 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:39:28,984] Trial 108 finished with value: 0.1374480627482846 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:42:41,725] Trial 114 finished with value: 0.14160170513026582 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:43:03,625] Trial 109 finished with value: 0.13782550871056132 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:43:03,914] Trial 131 finished with value: 0.16327956446380593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:44:55,863] Trial 115 finished with value: 0.14246439293957888 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:47:25,543] Trial 118 finished with value: 0.14169986384553082 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:47:49,667] Trial 134 finished with value: 0.20609230937832276 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:48:19,647] Trial 113 finished with value: 0.1388190668405727 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:48:45,160] Trial 117 finished with value: 0.14242864764366545 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 14:53:43,698] Trial 116 finished with value: 0.13944327187892963 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:05:13,967] Trial 121 finished with value: 0.13992902228683776 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:07:06,537] Trial 122 finished with value: 0.14014989747704282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:07:43,250] Trial 123 finished with value: 0.13976990332987416 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:07:49,659] Trial 141 finished with value: 0.1452502545682158 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:08:28,860] Trial 126 finished with value: 0.1395366021012841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:09:29,510] Trial 124 finished with value: 0.13991671861590435 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:10:05,330] Trial 125 finished with value: 0.14003773421217866 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:14:10,252] Trial 127 finished with value: 0.13940808695037607 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:18:24,707] Trial 128 finished with value: 0.1398942866713871 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:20:46,067] Trial 129 finished with value: 0.1398247786355789 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:21:42,787] Trial 130 finished with value: 0.13973440984292543 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:22:11,615] Trial 132 finished with value: 0.1392195864077748 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:24:29,253] Trial 133 finished with value: 0.13931918483997158 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:32:03,959] Trial 135 finished with value: 0.13767706629908144 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:32:27,355] Trial 152 finished with value: 0.20617361804446874 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:32:34,048] Trial 153 finished with value: 0.1537197911719372 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6323, 'weights': 'distance'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:32:34,408] Trial 154 finished with value: 0.27456840626500967 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:32:52,510] Trial 136 finished with value: 0.1381989319539958 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:35:13,379] Trial 137 finished with value: 0.13732972090345877 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:40:41,538] Trial 138 finished with value: 0.13761838469235058 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:49:47,614] Trial 139 finished with value: 0.13734657057508431 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:52:56,823] Trial 143 finished with value: 0.13790904373241256 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:54:03,057] Trial 140 finished with value: 0.13793910721559535 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:54:35,003] Trial 142 finished with value: 0.1378962028076728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:54:47,262] Trial 162 finished with value: 0.1479607215496152 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:54:51,944] Trial 163 finished with value: 0.15629908868722422 and parameters: {'model_name': 'VAE', 'batch_size': 133, 'iterations': 34, 'learning_rate': 0.04703308070498479, 'p_miss': 0.01123579179898121}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:56:42,468] Trial 144 finished with value: 0.13760198884327624 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:56:48,463] Trial 165 finished with value: 0.1452502545682158 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 15:57:08,930] Trial 145 finished with value: 0.1374755831061249 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:01:06,737] Trial 146 finished with value: 0.1380057716997714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:03:13,486] Trial 147 finished with value: 0.13782309383117147 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:06:10,583] Trial 149 finished with value: 0.13813442526785089 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:06:36,361] Trial 150 finished with value: 0.13797154637908 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:07:55,422] Trial 148 finished with value: 0.13744399101431481 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:08:51,356] Trial 151 finished with value: 0.13763190657693267 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:16:35,187] Trial 155 finished with value: 0.13751040508045853 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:16:59,942] Trial 156 finished with value: 0.13841210600368722 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:21:52,944] Trial 157 finished with value: 0.1368950120141069 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:27:00,322] Trial 158 finished with value: 0.13788525067930818 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:33:54,708] Trial 159 finished with value: 0.13681206794064021 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:36:47,387] Trial 160 finished with value: 0.13760041767713393 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:40:32,663] Trial 161 finished with value: 0.1376593730383223 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:41:17,997] Trial 164 finished with value: 0.1376158510886179 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:43:20,680] Trial 166 finished with value: 0.13865361077622274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:43:33,199] Trial 167 finished with value: 0.13787818809704583 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:43:38,535] Trial 183 finished with value: 0.1520676887541787 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 15961, 'weights': 'uniform'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:47:06,919] Trial 169 finished with value: 0.13831395824892237 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:47:40,850] Trial 168 finished with value: 0.13707160110974423 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:50:19,485] Trial 171 finished with value: 0.1374838542794197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:50:24,149] Trial 170 finished with value: 0.13736002129231312 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:52:55,690] Trial 173 finished with value: 0.13774043833654182 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 16:54:07,359] Trial 172 finished with value: 0.13746734532398935 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:00:20,175] Trial 174 finished with value: 0.13796740253068426 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:00:49,567] Trial 175 finished with value: 0.13833535992320842 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:00:49,851] Trial 192 finished with value: 0.16327956446380593 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:08:26,518] Trial 176 finished with value: 0.13754841992251327 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:09:33,270] Trial 194 finished with value: 0.15900264471663025 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 770, 'learning_rate': 0.0034765817362523797, 'p_miss': 0.23669490815307181}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:09:58,771] Trial 195 finished with value: 0.20653161557673272 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:13:16,988] Trial 177 finished with value: 0.13736888625442772 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:17:48,660] Trial 178 finished with value: 0.13744387852269654 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:20:52,878] Trial 179 finished with value: 0.1378812820025327 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
running
[I 2024-11-25 17:27:13,966] Trial 180 finished with value: 0.1374762232547368 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:27:46,803] Trial 181 finished with value: 0.13765112190781323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:29:40,746] Trial 182 finished with value: 0.13743281150113046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:30:11,162] Trial 184 finished with value: 0.13722508700078895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:31:34,331] Trial 185 finished with value: 0.13700139533910122 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:33:59,362] Trial 186 finished with value: 0.13745287851834306 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:34:18,469] Trial 187 finished with value: 0.13761159145754293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:34:41,128] Trial 188 finished with value: 0.13741884572241142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:37:05,982] Trial 189 finished with value: 0.13761196593422703 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:39:54,475] Trial 190 finished with value: 0.13817649985113048 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:44:04,634] Trial 191 finished with value: 0.13665385460235652 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:44:29,964] Trial 193 finished with value: 0.13777008044021025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:54:40,333] Trial 196 finished with value: 0.13814360649797788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 17:57:40,866] Trial 197 finished with value: 0.13742314727477878 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 18:00:38,387] Trial 198 finished with value: 0.1382347955424497 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
[I 2024-11-25 18:03:24,492] Trial 199 finished with value: 0.13740191274383562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 88 with value: 0.1363380089364838.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0.1363380089364838
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8613398987214641
Generation:   4%|▍         | 1/25 [00:48<19:33, 48.90s/it]Generation:  2
Best f1_score score: 0.8624858728730388
Generation:   8%|▊         | 2/25 [01:40<19:24, 50.63s/it]Generation:  3
Best f1_score score: 0.8624858728730388
Generation:  12%|█▏        | 3/25 [02:54<22:26, 61.20s/it]Generation:  4
Best f1_score score: 0.8624858728730388
Generation:  16%|█▌        | 4/25 [03:34<18:27, 52.76s/it]Generation:  5
Best f1_score score: 0.8635956895953711
Generation:  20%|██        | 5/25 [04:15<16:09, 48.47s/it]Generation:  6
Best f1_score score: 0.8635956895953711
Generation:  24%|██▍       | 6/25 [07:18<29:52, 94.35s/it]Generation:  7
Best f1_score score: 0.8635956895953711
Generation:  28%|██▊       | 7/25 [11:30<43:42, 145.69s/it]Generation:  8
Best f1_score score: 0.8635956895953711
Generation:  32%|███▏      | 8/25 [12:28<33:27, 118.06s/it]Generation:  9
Best f1_score score: 0.8635956895953711
Generation:  36%|███▌      | 9/25 [13:57<29:03, 108.99s/it]Generation:  10
Best f1_score score: 0.8635956895953711
Generation:  40%|████      | 10/25 [14:56<23:21, 93.44s/it]Generation:  11
Best f1_score score: 0.8635956895953711
Generation:  44%|████▍     | 11/25 [15:53<19:13, 82.40s/it]Generation:  12
Best f1_score score: 0.8635956895953711
Generation:  48%|████▊     | 12/25 [16:56<16:32, 76.38s/it]Generation:  13
Best f1_score score: 0.8646285990766149
Generation:  52%|█████▏    | 13/25 [18:06<14:54, 74.52s/it]Generation:  14
Best f1_score score: 0.8646285990766149
Generation:  56%|█████▌    | 14/25 [19:38<14:36, 79.71s/it]Generation:  15
Best f1_score score: 0.8646285990766149
Generation:  60%|██████    | 15/25 [20:41<12:27, 74.71s/it]Generation:  16
Best f1_score score: 0.8646285990766149
Generation:  64%|██████▍   | 16/25 [21:22<09:41, 64.65s/it]Generation:  17
Best f1_score score: 0.8646285990766149
Generation:  68%|██████▊   | 17/25 [22:55<09:44, 73.06s/it]Generation:  18
Best f1_score score: 0.8646285990766149
Generation:  72%|███████▏  | 18/25 [24:25<09:06, 78.02s/it]Generation:  19
Best f1_score score: 0.8646285990766149
Generation:  76%|███████▌  | 19/25 [25:52<08:04, 80.72s/it]Generation:  20
Best f1_score score: 0.8646285990766149
Generation:  80%|████████  | 20/25 [26:53<06:13, 74.79s/it]Generation:  21
Best f1_score score: 0.8646285990766149
Generation:  84%|████████▍ | 21/25 [27:59<04:48, 72.19s/it]Generation:  22
Best f1_score score: 0.8646285990766149
Generation:  88%|████████▊ | 22/25 [28:39<03:08, 62.71s/it]Generation:  23
Best f1_score score: 0.8646285990766149
Generation:  92%|█████████▏| 23/25 [30:11<02:22, 71.26s/it]Generation:  24
Best f1_score score: 0.8646285990766149
Generation:  96%|█████████▌| 24/25 [30:54<01:03, 63.07s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e12f80> 

Generation:  25
Best f1_score score: 0.8646285990766149
Generation: 100%|██████████| 25/25 [41:10<00:00, 228.75s/it]Generation: 100%|██████████| 25/25 [41:14<00:00, 98.96s/it] 
2024-11-25 18:54:46,155 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33983' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-059b1a6da0b976f3b0121f975847ea46', 'ndarray-5ec4aaac9d620b994049d7a074eff000'} (stimulus_id='handle-worker-cleanup-1732589686.1558027')
Fitted
Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3946400647226,
                                        min_samples_leaf=20,
                                        min_samples_split=5,
                                        n_estimators=128))])
score start
train score: {'auroc': 0.9797372219058352, 'accuracy': 0.9203609496124031, 'balanced_accuracy': 0.9160373569021281, 'logloss': 0.20216489136186158, 'f1': 0.9183600539440089}
original test score: {'auroc': 0.99854250101946, 'accuracy': 0.9765019379844961, 'balanced_accuracy': 0.974613233009697, 'logloss': 0.08207342085619058, 'f1': 0.9759861233646223}
imputed test score: {'auroc': 0.9467123161533889, 'accuracy': 0.8570736434108527, 'balanced_accuracy': 0.8485946997645376, 'logloss': 0.2824533070484101, 'f1': 0.8524072897534716}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014550>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0d30> 

Generation:  1
Best f1_score score: 0.8570243299797602
Generation:   4%|▍         | 1/25 [10:03<4:01:18, 603.27s/it]Generation:  2
Best f1_score score: 0.8570243299797602
Generation:   8%|▊         | 2/25 [11:19<1:52:27, 293.36s/it]Generation:  3
Best f1_score score: 0.8570243299797602
Generation:  12%|█▏        | 3/25 [12:39<1:11:44, 195.67s/it]Generation:  4
Best f1_score score: 0.8616895959642601
Generation:  16%|█▌        | 4/25 [14:39<58:04, 165.93s/it]  Generation:  5
Best f1_score score: 0.8616895959642601
Generation:  20%|██        | 5/25 [19:28<1:10:06, 210.34s/it]Generation:  6
Best f1_score score: 0.8616895959642601
Generation:  24%|██▍       | 6/25 [20:04<47:50, 151.09s/it]  Generation:  7
Best f1_score score: 0.8616895959642601
Generation:  28%|██▊       | 7/25 [21:26<38:32, 128.49s/it]Generation:  8
Best f1_score score: 0.8617139071566591
Generation:  32%|███▏      | 8/25 [22:07<28:27, 100.47s/it]Generation:  9
Best f1_score score: 0.8617139071566591
Generation:  36%|███▌      | 9/25 [23:34<25:40, 96.28s/it] Generation:  10
Best f1_score score: 0.8617139071566591
Generation:  40%|████      | 10/25 [24:45<22:09, 88.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452e43e20> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452d7f550> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.8617139071566591
Generation:  44%|████▍     | 11/25 [29:17<33:45, 144.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452e42590> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.8617139071566591
Generation:  48%|████▊     | 12/25 [30:55<28:15, 130.46s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452e78c10> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15543a866170> 

Generation:  13
Best f1_score score: 0.8629141112191047
Generation:  52%|█████▏    | 13/25 [41:02<54:57, 274.83s/it]Generation:  14
Best f1_score score: 0.8629141112191047
Generation:  56%|█████▌    | 14/25 [41:36<37:02, 202.07s/it]Generation:  15
Best f1_score score: 0.8629141112191047
Generation:  60%|██████    | 15/25 [42:59<27:42, 166.22s/it]Generation:  16
Best f1_score score: 0.8629141112191047
Generation:  64%|██████▍   | 16/25 [47:57<30:52, 205.83s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554526dbd30> 

Generation:  17
Best f1_score score: 0.8629141112191047
Generation:  68%|██████▊   | 17/25 [58:05<43:35, 326.97s/it]Generation:  18
Best f1_score score: 0.8629141112191047
Generation:  72%|███████▏  | 18/25 [59:15<29:06, 249.46s/it]Generation:  19
Best f1_score score: 0.8629826079963309
Generation:  76%|███████▌  | 19/25 [1:04:39<27:12, 272.09s/it]Generation:  20
Best f1_score score: 0.8629826079963309
Generation:  80%|████████  | 20/25 [1:05:51<17:39, 211.82s/it]Generation:  21
Best f1_score score: 0.8629826079963309
Generation:  84%|████████▍ | 21/25 [1:10:27<15:24, 231.22s/it]Generation:  22
Best f1_score score: 0.8629826079963309
Generation:  88%|████████▊ | 22/25 [1:11:50<09:20, 186.69s/it]Generation:  23
Best f1_score score: 0.8633535948048283
Generation:  92%|█████████▏| 23/25 [1:12:49<04:56, 148.49s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545236c7c0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155411f6d960> 

Generation:  24
Best f1_score score: 0.8633535948048283
Generation:  96%|█████████▌| 24/25 [1:22:57<04:46, 286.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554520f0b20> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fd094b0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f98b670> 

Generation:  25
Best f1_score score: 0.8633535948048283
Generation: 100%|██████████| 25/25 [1:33:04<00:00, 382.51s/it]Generation: 100%|██████████| 25/25 [1:33:04<00:00, 223.38s/it]
2024-11-25 20:28:09,605 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:44493' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-059b1a6da0b976f3b0121f975847ea46', 'DataFrame-b569c5e7d9d9dfbb3e443ad23fbd7f4f'} (stimulus_id='handle-worker-cleanup-1732595289.6052837')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='median')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8105607584905,
                                      min_samples_leaf=2, min_samples_split=18,
                                      n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.996179228353733, 'accuracy': 0.961421996124031, 'balanced_accuracy': 0.957959336258983, 'logloss': 0.15723809471704844, 'f1': 0.9604604120859581}
test score: {'auroc': 0.9548029422632851, 'accuracy': 0.8616763565891473, 'balanced_accuracy': 0.8511673265752002, 'logloss': 0.24535302445292748, 'f1': 0.8563204598548932}
original test score: {'auroc': 0.9986814585034924, 'accuracy': 0.9832848837209303, 'balanced_accuracy': 0.9823979613191155, 'logloss': 0.056146117289851305, 'f1': 0.9829494425758583}
score end
823
lvl
0.3
type
MCAR
num_run
1
class_full
finished
all finished
full run takes
10.639786427285935
hours
DONE
