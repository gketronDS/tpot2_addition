Run: 10
/cm/local/apps/slurm/var/spool/job1011619/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/725/725.pkl
working on 
../data/c/725/class_full_MNAR_0.1_1
2.517406940460205
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-23 11:58:09,584] A new study created in memory with name: no-name-aa73324e-dbba-4715-af56-1ce29b6a3008
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-23 11:58:09,838] Trial 9 finished with value: 0.2520976762783383 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 9 with value: 0.2520976762783383.
running
[I 2024-10-23 11:58:10,018] Trial 5 finished with value: 0.4931465363453126 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 9 with value: 0.2520976762783383.
running
[I 2024-10-23 11:58:10,122] Trial 1 finished with value: 0.4931465363453126 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 9 with value: 0.2520976762783383.
running
[I 2024-10-23 11:58:10,420] Trial 16 finished with value: 0.2577924034256217 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 9 with value: 0.2520976762783383.
running
[I 2024-10-23 11:58:10,827] Trial 19 finished with value: 0.4931465363453126 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 9 with value: 0.2520976762783383.
running
[I 2024-10-23 11:58:11,098] Trial 20 finished with value: 0.2577924034256217 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 9 with value: 0.2520976762783383.
running
[I 2024-10-23 11:58:12,709] Trial 11 finished with value: 0.2518806881898713 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3259, 'weights': 'uniform'}. Best is trial 11 with value: 0.2518806881898713.
running
[I 2024-10-23 11:58:13,080] Trial 14 finished with value: 0.25182006305085425 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3100, 'weights': 'uniform'}. Best is trial 14 with value: 0.25182006305085425.
running
[I 2024-10-23 11:58:13,521] Trial 8 finished with value: 0.2515373861263291 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2441, 'weights': 'distance'}. Best is trial 8 with value: 0.2515373861263291.
running
[I 2024-10-23 11:58:13,708] Trial 2 finished with value: 0.25185577188754876 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4518, 'weights': 'distance'}. Best is trial 8 with value: 0.2515373861263291.
running
[I 2024-10-23 11:58:15,406] Trial 15 finished with value: 0.31019468158937497 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1, 'learning_rate': 0.05828438197459242, 'p_miss': 0.06305401307316866}. Best is trial 8 with value: 0.2515373861263291.
running
[I 2024-10-23 11:58:16,046] Trial 10 finished with value: 0.3230173345403815 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 2, 'learning_rate': 0.00011756472223463282, 'p_miss': 0.07813107890658304}. Best is trial 8 with value: 0.2515373861263291.
running
[I 2024-10-23 11:58:18,348] Trial 25 finished with value: 0.2519274992827185 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 8 with value: 0.2515373861263291.
running
[I 2024-10-23 11:58:19,764] Trial 13 finished with value: 0.2995763472898261 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 6, 'learning_rate': 0.00833544158777385, 'p_miss': 0.05637404767310663}. Best is trial 8 with value: 0.2515373861263291.
running
[I 2024-10-23 11:58:20,136] Trial 26 finished with value: 0.2519274716795316 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 8 with value: 0.2515373861263291.
running
[I 2024-10-23 11:58:20,352] Trial 27 finished with value: 0.2514865963516864 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 941, 'weights': 'uniform'}. Best is trial 27 with value: 0.2514865963516864.
running
[I 2024-10-23 11:58:22,313] Trial 24 finished with value: 0.4636610897970221 and parameters: {'model_name': 'GAIN', 'batch_size': 321, 'hint_rate': 0.2996762445265452, 'alpha': 95, 'iterations': 12, 'learning_rate': 0.00024956653964179355, 'p_miss': 0.2796097670565538}. Best is trial 27 with value: 0.2514865963516864.
running
[I 2024-10-23 11:58:22,602] Trial 28 finished with value: 0.25149044643548846 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 837, 'weights': 'uniform'}. Best is trial 27 with value: 0.2514865963516864.
running
[I 2024-10-23 11:58:24,234] Trial 30 finished with value: 0.25287574492409853 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 71, 'weights': 'distance'}. Best is trial 27 with value: 0.2514865963516864.
running
[I 2024-10-23 11:58:24,957] Trial 29 finished with value: 0.25126826006314823 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1207, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 11:58:26,378] Trial 33 finished with value: 0.2517988928517813 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 276, 'weights': 'uniform'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 11:58:26,905] Trial 32 finished with value: 0.25174194790456095 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 264, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 11:58:29,910] Trial 36 finished with value: 0.2513160433952183 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1303, 'weights': 'uniform'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 11:58:32,453] Trial 4 finished with value: 0.2976127753668668 and parameters: {'model_name': 'VAE', 'batch_size': 115, 'iterations': 14, 'learning_rate': 0.0023635100709554283, 'p_miss': 0.04763180319603855}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 11:58:37,780] Trial 7 finished with value: 0.2823346447366501 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 11:58:41,696] Trial 21 finished with value: 0.2521904582667596 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:07:13,602] Trial 3 finished with value: 0.285942187879182 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 217, 'learning_rate': 0.08110622397886698, 'p_miss': 0.22012732205544638}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:09:33,481] Trial 6 finished with value: 0.48982851035821257 and parameters: {'model_name': 'GAIN', 'batch_size': 505, 'hint_rate': 0.7671942430543415, 'alpha': 52, 'iterations': 545, 'learning_rate': 0.0004236515804397144, 'p_miss': 0.28814273874999546}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:09:37,481] Trial 43 finished with value: 0.25147392836175503 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1876, 'weights': 'uniform'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:09:40,641] Trial 44 finished with value: 0.2514870577095259 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1785, 'weights': 'uniform'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:21:31,294] Trial 18 finished with value: 0.2811042018935462 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:21:34,793] Trial 46 finished with value: 0.2514181138774236 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1687, 'weights': 'uniform'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:21:38,738] Trial 47 finished with value: 0.2514697317789804 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1744, 'weights': 'uniform'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:21:42,453] Trial 48 finished with value: 0.25142787783414833 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1624, 'weights': 'uniform'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:21:45,497] Trial 49 finished with value: 0.25134834554526264 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1329, 'weights': 'uniform'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:21:50,095] Trial 50 finished with value: 0.25132308578733975 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1127, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:25:24,813] Trial 17 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.7874431213852114, 'alpha': 48, 'iterations': 7300, 'learning_rate': 0.00019641332429829516, 'p_miss': 0.16251146795942442}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:25:28,749] Trial 52 finished with value: 0.2514086826943253 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 916, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:25:34,037] Trial 53 finished with value: 0.25191432736950076 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5025, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:25:59,598] Trial 22 finished with value: 0.2641488183712825 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:28:34,678] Trial 0 finished with value: 0.48529148485822465 and parameters: {'model_name': 'GAIN', 'batch_size': 20, 'hint_rate': 0.6340282105625485, 'alpha': 76, 'iterations': 1623, 'learning_rate': 0.00152100274814902, 'p_miss': 0.2946019158365999}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:28:38,061] Trial 56 finished with value: 0.25140230615856396 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 903, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:28:41,238] Trial 57 finished with value: 0.2514145736287856 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 955, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:28:45,870] Trial 58 finished with value: 0.251557678071611 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2532, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:28:50,502] Trial 59 finished with value: 0.25191432736950076 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6241, 'weights': 'distance'}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:29:49,679] Trial 60 finished with value: 0.5081542056995725 and parameters: {'model_name': 'GAIN', 'batch_size': 104, 'hint_rate': 0.022049517852800293, 'alpha': 1, 'iterations': 49, 'learning_rate': 0.02233855626840981, 'p_miss': 0.14024436820491085}. Best is trial 29 with value: 0.25126826006314823.
running
[I 2024-10-23 12:29:53,177] Trial 61 finished with value: 0.2512608765979909 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1215, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 12:29:57,154] Trial 62 finished with value: 0.251294920660044 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1351, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 12:43:46,075] Trial 12 finished with value: 0.2572092003028862 and parameters: {'model_name': 'VAE', 'batch_size': 359, 'iterations': 1006, 'learning_rate': 0.0010285724684318443, 'p_miss': 0.2864058100313915}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 12:43:50,828] Trial 64 finished with value: 0.2515416049457247 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2449, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 12:43:53,951] Trial 65 finished with value: 0.2514843676594823 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 574, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 12:43:58,053] Trial 66 finished with value: 0.25129263175657457 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1338, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 12:44:02,171] Trial 67 finished with value: 0.25127630953963137 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1271, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:42:13,488] Trial 51 finished with value: 0.49174201214523594 and parameters: {'model_name': 'GAIN', 'batch_size': 29, 'hint_rate': 0.011971024624995497, 'alpha': 0, 'iterations': 3938, 'learning_rate': 0.006969884798208096, 'p_miss': 0.15130941326087416}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:44:58,374] Trial 69 finished with value: 0.26139882413644455 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 70, 'learning_rate': 0.0188476103301965, 'p_miss': 0.017391040885385428}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:45:02,403] Trial 70 finished with value: 0.2513153993404297 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1371, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:45:07,070] Trial 71 finished with value: 0.25146771348652225 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2224, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:45:07,387] Trial 72 finished with value: 0.4931465363453126 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:45:10,831] Trial 73 finished with value: 0.25132740108559093 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1377, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:54:27,326] Trial 45 finished with value: 0.4913023592304498 and parameters: {'model_name': 'GAIN', 'batch_size': 21, 'hint_rate': 0.013245439378273771, 'alpha': 3, 'iterations': 5696, 'learning_rate': 0.0028730394594000106, 'p_miss': 0.14466538856668595}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:54:36,837] Trial 75 finished with value: 0.3252251330162513 and parameters: {'model_name': 'VAE', 'batch_size': 94, 'iterations': 3, 'learning_rate': 0.00045269874860182394, 'p_miss': 0.22187232593897394}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:54:40,316] Trial 76 finished with value: 0.2513422766354007 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1475, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:54:44,763] Trial 77 finished with value: 0.2514223710360742 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2037, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:54:47,909] Trial 78 finished with value: 0.25141684697119177 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 621, 'weights': 'distance'}. Best is trial 61 with value: 0.2512608765979909.
running
[I 2024-10-23 13:54:51,923] Trial 79 finished with value: 0.25125460387907367 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1251, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:54:56,339] Trial 80 finished with value: 0.2516207345461813 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2730, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:54:56,649] Trial 81 finished with value: 0.2520976762783383 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:00,189] Trial 82 finished with value: 0.2512737796881134 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1270, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:03,236] Trial 83 finished with value: 0.2514580116856798 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 594, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:15,730] Trial 84 finished with value: 0.27788484869807484 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:19,410] Trial 85 finished with value: 0.2512782077532582 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1181, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:25,221] Trial 86 finished with value: 0.25180182820078717 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4146, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:28,941] Trial 87 finished with value: 0.2512918082377934 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1142, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:32,408] Trial 88 finished with value: 0.2513431506147118 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1042, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:35,415] Trial 89 finished with value: 0.251429083604939 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 616, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:40,304] Trial 90 finished with value: 0.25143418680812696 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2062, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:55:42,823] Trial 91 finished with value: 0.252830444512424 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 95, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:56:56,650] Trial 74 finished with value: 0.25877730420015743 and parameters: {'model_name': 'VAE', 'batch_size': 73, 'iterations': 225, 'learning_rate': 0.0008088493763640451, 'p_miss': 0.2263518714000554}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:57:00,802] Trial 93 finished with value: 0.251321361252833 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1128, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:57:04,963] Trial 94 finished with value: 0.2513586557065379 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1643, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:57:05,245] Trial 95 finished with value: 0.4931465363453126 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:57:08,601] Trial 96 finished with value: 0.25126602310129986 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1212, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:57:12,658] Trial 97 finished with value: 0.2512685753777952 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1211, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:57:16,416] Trial 98 finished with value: 0.2513892594323623 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 744, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:57:20,686] Trial 99 finished with value: 0.2513121904062227 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1132, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:57:54,305] Trial 100 finished with value: 0.3680945559985041 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:22,316] Trial 101 finished with value: 0.4923712252985245 and parameters: {'model_name': 'GAIN', 'batch_size': 845, 'hint_rate': 0.9863709404225722, 'alpha': 32, 'iterations': 17, 'learning_rate': 0.03413665354098848, 'p_miss': 0.09805687420064711}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:25,387] Trial 102 finished with value: 0.25164859395254763 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 334, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:29,860] Trial 103 finished with value: 0.2513614662315771 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1651, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:33,829] Trial 104 finished with value: 0.2513021720116994 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1171, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:38,147] Trial 105 finished with value: 0.2513982243612195 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1934, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:42,528] Trial 106 finished with value: 0.25133757309546373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1496, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:45,942] Trial 107 finished with value: 0.2514024675339085 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 896, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:49,852] Trial 108 finished with value: 0.25125936173028923 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1232, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:53,880] Trial 109 finished with value: 0.2512870023363708 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1147, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:58:57,021] Trial 110 finished with value: 0.25163810527423264 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 421, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:59:00,845] Trial 111 finished with value: 0.2513934529834425 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 929, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:59:05,628] Trial 112 finished with value: 0.2514043556320599 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1853, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:59:09,958] Trial 113 finished with value: 0.31812505894894316 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1, 'learning_rate': 0.007642060522738332, 'p_miss': 0.0101043114617404}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 13:59:14,520] Trial 114 finished with value: 0.2513770020263473 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1585, 'weights': 'distance'}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 14:00:07,229] Trial 115 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.3626550118707004, 'alpha': 100, 'iterations': 217, 'learning_rate': 0.004839624794480899, 'p_miss': 0.19038990119477484}. Best is trial 79 with value: 0.25125460387907367.
running
[I 2024-10-23 14:00:11,409] Trial 116 finished with value: 0.2512443633955321 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1258, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:15,192] Trial 117 finished with value: 0.25128508577143077 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1306, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:19,348] Trial 118 finished with value: 0.25128783604012067 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1290, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:23,680] Trial 119 finished with value: 0.2513414357241649 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1513, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:26,755] Trial 120 finished with value: 0.2515315029249248 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 960, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:30,740] Trial 121 finished with value: 0.25134188123860685 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 771, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:41,637] Trial 122 finished with value: 0.2521713063333352 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:45,498] Trial 123 finished with value: 0.2512910092523224 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1309, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:49,733] Trial 124 finished with value: 0.2513998456481327 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1746, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:50,306] Trial 125 finished with value: 0.2577924034256217 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:54,338] Trial 126 finished with value: 0.2512660236644205 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1205, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:00:58,547] Trial 127 finished with value: 0.25135307758526193 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 793, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:02,358] Trial 128 finished with value: 0.251269791039326 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1267, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:06,487] Trial 129 finished with value: 0.2513679721894318 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1026, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:10,861] Trial 130 finished with value: 0.2513399784545599 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1494, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:14,742] Trial 131 finished with value: 0.25126602310129986 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1212, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:18,895] Trial 132 finished with value: 0.25133818411510805 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1427, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:22,669] Trial 133 finished with value: 0.25126745810153867 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1255, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:26,699] Trial 134 finished with value: 0.2519005533394289 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3770, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:30,607] Trial 135 finished with value: 0.25156630766252 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2254, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:34,445] Trial 136 finished with value: 0.2521019695296731 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4994, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:38,175] Trial 137 finished with value: 0.2512921246994399 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1205, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:41,826] Trial 138 finished with value: 0.2513554794076037 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1019, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:45,352] Trial 139 finished with value: 0.2513521990508951 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 723, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:49,873] Trial 140 finished with value: 0.25136706442388157 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1708, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:01:53,687] Trial 141 finished with value: 0.25133488605786247 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1405, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:03:15,063] Trial 142 finished with value: 0.2589373503307036 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 29, 'learning_rate': 0.03559335834281619, 'p_miss': 0.10763182922169662}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:04:46,802] Trial 34 finished with value: 0.5013848945658725 and parameters: {'model_name': 'GAIN', 'batch_size': 801, 'hint_rate': 0.8434221638473587, 'alpha': 1, 'iterations': 5354, 'learning_rate': 0.0020101873157206515, 'p_miss': 0.24140956487116522}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:04:50,345] Trial 144 finished with value: 0.25155641227546816 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 490, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:04:54,172] Trial 145 finished with value: 0.25128395061492564 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1214, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:04:58,225] Trial 146 finished with value: 0.25129630050839225 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1057, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:05:02,795] Trial 147 finished with value: 0.25135058020523265 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1562, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:05:06,442] Trial 148 finished with value: 0.25125439815749084 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1241, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:05:10,187] Trial 149 finished with value: 0.25141450370106744 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 857, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:05:14,767] Trial 150 finished with value: 0.2512848879584461 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1288, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:06:57,160] Trial 92 finished with value: 0.25602613130586704 and parameters: {'model_name': 'VAE', 'batch_size': 917, 'iterations': 211, 'learning_rate': 0.02972288930783053, 'p_miss': 0.10936636647806428}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:07:13,283] Trial 152 finished with value: 0.2813943808568812 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:07:17,416] Trial 153 finished with value: 0.2513447448318169 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1460, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:07:17,791] Trial 154 finished with value: 0.2520976762783383 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:20:48,828] Trial 31 finished with value: 0.5318671764302467 and parameters: {'model_name': 'GAIN', 'batch_size': 859, 'hint_rate': 0.1365234332835225, 'alpha': 74, 'iterations': 6002, 'learning_rate': 0.0002268812255172742, 'p_miss': 0.29583829513740467}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:20:52,682] Trial 156 finished with value: 0.251305129394996 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1169, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:20:56,607] Trial 157 finished with value: 0.25135143360148493 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1036, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:00,137] Trial 158 finished with value: 0.2512453139833707 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1243, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:03,962] Trial 40 finished with value: 0.4865971965559483 and parameters: {'model_name': 'GAIN', 'batch_size': 27, 'hint_rate': 0.9022731196455307, 'alpha': 4, 'iterations': 7309, 'learning_rate': 0.05441367437802686, 'p_miss': 0.23452379378024177}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:04,656] Trial 159 finished with value: 0.25130036466011013 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1356, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:08,285] Trial 160 finished with value: 0.251294920660044 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1351, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:08,815] Trial 161 finished with value: 0.25137574666473494 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1586, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:12,608] Trial 163 finished with value: 0.25143000839165836 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 959, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:12,740] Trial 162 finished with value: 0.25137292180912024 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1627, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:16,179] Trial 164 finished with value: 0.2513707607930019 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 708, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:17,057] Trial 165 finished with value: 0.25139298312000635 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1840, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:20,429] Trial 166 finished with value: 0.251259318114954 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1229, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:20,997] Trial 167 finished with value: 0.2513068760098144 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1083, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:24,368] Trial 168 finished with value: 0.2512603392826721 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1246, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:25,062] Trial 169 finished with value: 0.2512613591095517 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1264, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:28,459] Trial 170 finished with value: 0.25125211403492254 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1237, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:30,284] Trial 171 finished with value: 0.25191432736950076 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6328, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:32,877] Trial 172 finished with value: 0.2513991100025527 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 906, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:21:34,519] Trial 173 finished with value: 0.25139603792061455 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 928, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:19,917] Trial 54 finished with value: 0.49679816751375433 and parameters: {'model_name': 'GAIN', 'batch_size': 37, 'hint_rate': 0.02108837398947666, 'alpha': 1, 'iterations': 6085, 'learning_rate': 0.0019408171147151504, 'p_miss': 0.1379332049771162}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:24,070] Trial 176 finished with value: 0.2512533148920193 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1226, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:22:24,200] Trial 39 finished with value: 0.4798871570368715 and parameters: {'model_name': 'GAIN', 'batch_size': 21, 'hint_rate': 0.9554279586934845, 'alpha': 5, 'iterations': 7823, 'learning_rate': 0.0748382383612278, 'p_miss': 0.2402349649506726}. Best is trial 116 with value: 0.2512443633955321.
running
running
[I 2024-10-23 14:22:28,064] Trial 177 finished with value: 0.2513495110756107 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1447, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:28,575] Trial 178 finished with value: 0.2516781569492728 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3060, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:31,955] Trial 180 finished with value: 0.2513155628411045 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1129, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:32,099] Trial 179 finished with value: 0.25126826006314823 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1207, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:35,885] Trial 182 finished with value: 0.25127331349044 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1237, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:36,207] Trial 181 finished with value: 0.2512718532988505 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1197, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:40,108] Trial 183 finished with value: 0.2513555242102544 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1450, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:40,473] Trial 184 finished with value: 0.2513391088091946 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1396, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:44,304] Trial 185 finished with value: 0.25129480224641626 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1075, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:44,614] Trial 186 finished with value: 0.2513301514514163 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1045, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:48,117] Trial 187 finished with value: 0.25139804700364243 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 843, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:48,740] Trial 188 finished with value: 0.251269791039326 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1267, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:22:52,446] Trial 189 finished with value: 0.2512532917078126 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1260, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:23:04,913] Trial 191 finished with value: 0.3706154238707386 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:23:09,471] Trial 192 finished with value: 0.2513406696347658 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1468, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:23:13,948] Trial 193 finished with value: 0.2513770020263473 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1585, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:23:17,844] Trial 194 finished with value: 0.2513248422012393 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1343, 'weights': 'uniform'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:36:10,790] Trial 23 finished with value: 0.26671739774902103 and parameters: {'model_name': 'VAE', 'batch_size': 14, 'iterations': 3941, 'learning_rate': 0.0007169494869674786, 'p_miss': 0.20618930020695045}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:36:15,206] Trial 196 finished with value: 0.251286013099589 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1174, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:36:19,586] Trial 197 finished with value: 0.25125157890904753 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1254, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:36:19,902] Trial 198 finished with value: 0.4931465363453126 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 116 with value: 0.2512443633955321.
running
[I 2024-10-23 14:36:25,706] Trial 199 finished with value: 0.25191432736950076 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5811, 'weights': 'distance'}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:39:45,524] Trial 151 finished with value: 0.2542002694598251 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:40:00,843] Trial 190 finished with value: 0.29653823014533476 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:42:45,798] Trial 155 finished with value: 0.48852552563150164 and parameters: {'model_name': 'GAIN', 'batch_size': 177, 'hint_rate': 0.5131149848215486, 'alpha': 25, 'iterations': 1922, 'learning_rate': 0.013225309688430643, 'p_miss': 0.18400070555779943}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:48:09,022] Trial 174 finished with value: 0.5111539955939015 and parameters: {'model_name': 'GAIN', 'batch_size': 221, 'hint_rate': 0.5602282902956649, 'alpha': 29, 'iterations': 1406, 'learning_rate': 0.01322361755218526, 'p_miss': 0.26059557060787303}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:49:12,638] Trial 55 finished with value: 0.5035943815157319 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.012934333183448166, 'alpha': 4, 'iterations': 7765, 'learning_rate': 0.008644948166737405, 'p_miss': 0.13992011840727978}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:53:11,858] Trial 42 finished with value: 0.49322544242835153 and parameters: {'model_name': 'GAIN', 'batch_size': 784, 'hint_rate': 0.9689973130080168, 'alpha': 0, 'iterations': 7483, 'learning_rate': 0.0011403775741989134, 'p_miss': 0.14579799629126947}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:54:04,141] Trial 175 finished with value: 0.49888352069656794 and parameters: {'model_name': 'GAIN', 'batch_size': 171, 'hint_rate': 0.5124824357432741, 'alpha': 26, 'iterations': 1963, 'learning_rate': 0.012869714498653472, 'p_miss': 0.18666748716928827}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:55:40,444] Trial 143 finished with value: 0.5144449562601203 and parameters: {'model_name': 'GAIN', 'batch_size': 173, 'hint_rate': 0.3213063174482428, 'alpha': 27, 'iterations': 2990, 'learning_rate': 0.013310410327017113, 'p_miss': 0.2459685719436294}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:56:01,562] Trial 35 finished with value: 0.5025471731487122 and parameters: {'model_name': 'GAIN', 'batch_size': 934, 'hint_rate': 0.9462261352715888, 'alpha': 1, 'iterations': 7873, 'learning_rate': 0.001331171802647493, 'p_miss': 0.23370688366068698}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 14:56:20,317] Trial 41 finished with value: 0.5043078159405417 and parameters: {'model_name': 'GAIN', 'batch_size': 903, 'hint_rate': 0.8741234069392751, 'alpha': 4, 'iterations': 7836, 'learning_rate': 0.04617852182124991, 'p_miss': 0.2510593577453488}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 15:00:30,513] Trial 195 finished with value: 0.25759179131803234 and parameters: {'model_name': 'VAE', 'batch_size': 178, 'iterations': 1479, 'learning_rate': 0.015551697602575859, 'p_miss': 0.1848922976682714}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 15:00:41,210] Trial 37 finished with value: 0.5156788508626835 and parameters: {'model_name': 'GAIN', 'batch_size': 745, 'hint_rate': 0.8741172662217446, 'alpha': 1, 'iterations': 9476, 'learning_rate': 0.0014597048327617955, 'p_miss': 0.23663278236290636}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 15:00:46,621] Trial 38 finished with value: 0.5152260022435347 and parameters: {'model_name': 'GAIN', 'batch_size': 872, 'hint_rate': 0.9821978412194624, 'alpha': 6, 'iterations': 9570, 'learning_rate': 0.001920757564202658, 'p_miss': 0.23958104004229291}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 15:04:54,386] Trial 63 finished with value: 0.26488389808147367 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 9507, 'learning_rate': 0.0008494327174919956, 'p_miss': 0.1510445060588427}. Best is trial 116 with value: 0.2512443633955321.
[I 2024-10-23 15:05:27,559] Trial 68 finished with value: 0.2624110084124086 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 8617, 'learning_rate': 0.008088249723320185, 'p_miss': 0.12542773877721058}. Best is trial 116 with value: 0.2512443633955321.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0.2512443633955321
{'model_name': 'KNNImputer', 'n_neighbors': 1258, 'weights': 'distance'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9008917999109688
Generation:   4%|▍         | 1/25 [03:03<1:13:12, 183.03s/it]Generation:  2
Best f1_score score: 0.9008917999109688
Generation:   8%|▊         | 2/25 [09:55<2:01:50, 317.86s/it]Generation:  3
Best f1_score score: 0.9008917999109688
Generation:  12%|█▏        | 3/25 [17:08<2:15:48, 370.37s/it]Generation:  4
Best f1_score score: 0.9008917999109688
Generation:  16%|█▌        | 4/25 [18:03<1:26:03, 245.87s/it]Generation:  5
Best f1_score score: 0.9019696125594063
Generation:  20%|██        | 5/25 [19:38<1:03:55, 191.76s/it]Generation:  6
Best f1_score score: 0.9019696125594063
Generation:  24%|██▍       | 6/25 [23:44<1:06:30, 210.01s/it]Generation:  7
Best f1_score score: 0.9019696125594063
Generation:  28%|██▊       | 7/25 [24:03<44:17, 147.62s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465be3ee0> 

Generation:  8
Best f1_score score: 0.9019696125594063
Generation:  32%|███▏      | 8/25 [34:10<1:23:15, 293.84s/it]Generation:  9
Best f1_score score: 0.9019696125594063
Generation:  36%|███▌      | 9/25 [36:39<1:06:19, 248.72s/it]Generation:  10
Best f1_score score: 0.9019696125594063
Generation:  40%|████      | 10/25 [37:51<48:31, 194.13s/it] Generation:  11
Best f1_score score: 0.9019696125594063
Generation:  44%|████▍     | 11/25 [40:33<43:00, 184.31s/it]Generation:  12
Best f1_score score: 0.9019696125594063
Generation:  48%|████▊     | 12/25 [44:33<43:32, 200.97s/it]Generation:  13
Best f1_score score: 0.9019696125594063
Generation:  52%|█████▏    | 13/25 [46:34<35:22, 176.84s/it]Generation:  14
Best f1_score score: 0.9023681071844534
Generation:  56%|█████▌    | 14/25 [51:22<38:34, 210.45s/it]Generation:  15
Best f1_score score: 0.9023681071844534
Generation:  60%|██████    | 15/25 [53:31<30:59, 185.99s/it]Generation:  16
Best f1_score score: 0.9023681071844534
Generation:  64%|██████▍   | 16/25 [54:04<20:58, 139.80s/it]Generation:  17
Best f1_score score: 0.9023681071844534
Generation:  68%|██████▊   | 17/25 [59:06<25:09, 188.68s/it]Generation:  18
Best f1_score score: 0.9023834970800282
Generation:  72%|███████▏  | 18/25 [1:03:19<24:16, 208.11s/it]Generation:  19
Best f1_score score: 0.9023834970800282
Generation:  76%|███████▌  | 19/25 [1:07:11<21:30, 215.00s/it]Generation:  20
Best f1_score score: 0.9023834970800282
Generation:  80%|████████  | 20/25 [1:10:50<18:02, 216.49s/it]Generation:  21
Best f1_score score: 0.9023834970800282
Generation:  84%|████████▍ | 21/25 [1:18:29<19:17, 289.28s/it]Generation:  22
Best f1_score score: 0.9023834970800282
Generation:  88%|████████▊ | 22/25 [1:19:20<10:53, 217.67s/it]Generation:  23
Best f1_score score: 0.9042305408090122
Generation:  92%|█████████▏| 23/25 [1:20:47<05:57, 178.54s/it]Generation:  24
Best f1_score score: 0.9042305408090122
Generation:  96%|█████████▌| 24/25 [1:23:02<02:45, 165.48s/it]Generation:  25
Best f1_score score: 0.9042305408090122
Generation: 100%|██████████| 25/25 [1:28:08<00:00, 207.48s/it]Generation: 100%|██████████| 25/25 [1:28:11<00:00, 211.67s/it]
2024-10-23 16:33:58,440 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:36683' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'ndarray-6dbebfb86d73677f2b54a93f54270bbd'} (stimulus_id='handle-worker-cleanup-1729726438.4400227')
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.0082938654986,
                               hidden_layer_sizes=[70],
                               learning_rate='adaptive',
                               learning_rate_init=0.0081349210888,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9676260029835556, 'accuracy': 0.9096596978483138, 'balanced_accuracy': 0.9003704775043389, 'logloss': 0.2215973670747738, 'f1': 0.9049885135168232}
original test score: {'auroc': 0.9910571544310687, 'accuracy': 0.9481391092129348, 'balanced_accuracy': 0.9426190601353797, 'logloss': 0.13765538102161412, 'f1': 0.9457492937069336}
imputed test score: {'auroc': 0.9661535559561762, 'accuracy': 0.9103111653447223, 'balanced_accuracy': 0.8987134609616342, 'logloss': 0.22752063904366102, 'f1': 0.9051593117138779}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435018580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4e80> 
 Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4e80> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4e80> 

Generation:  1
Best f1_score score: 0.8954710172021576
Generation:   4%|▍         | 1/25 [10:02<4:01:09, 602.89s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467bc3a30> 

Generation:  2
Best f1_score score: 0.8987843017923659
Generation:   8%|▊         | 2/25 [20:07<3:51:30, 603.95s/it]Generation:  3
Best f1_score score: 0.9011751253882163
Generation:  12%|█▏        | 3/25 [24:34<2:44:58, 449.94s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467bda620> 

Generation:  4
Best f1_score score: 0.9011751253882163
Generation:  16%|█▌        | 4/25 [34:40<2:59:02, 511.53s/it]malloc(): invalid next size (unsorted)
2024-10-23 17:12:33,620 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
malloc(): invalid next size (unsorted)
2024-10-23 17:16:15,484 - distributed.scheduler - ERROR - Task eval_objective_list-b40cd60b6d3cf8af96fe714504d8d50a marked as failed because 2 workers died while trying to run it
Exception in future
2024-10-23 17:16:15,491 - distributed.nanny - WARNING - Restarting worker
Attempted to run task 'eval_objective_list-b40cd60b6d3cf8af96fe714504d8d50a' on 2 different workers, but all those workers died while running it. The last worker that attempt to run the task was tcp://127.0.0.1:38981. Inspecting worker logs is often a good next step to diagnose what went wrong. For more information see https://distributed.dask.org/en/stable/killed.html.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f05840> 

Generation:  5
Best f1_score score: 0.9011751253882163
Generation:  20%|██        | 5/25 [44:46<3:01:51, 545.60s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465f226b0> 

Generation:  6
Best f1_score score: 0.9049882166377794
Generation:  24%|██▍       | 6/25 [54:51<2:59:11, 565.86s/it]Generation:  7
Best f1_score score: 0.9049882166377794
Generation:  28%|██▊       | 7/25 [56:00<2:01:00, 403.35s/it]Generation:  8
Best f1_score score: 0.9049882166377794
Generation:  32%|███▏      | 8/25 [56:56<1:23:00, 293.00s/it]Generation:  9
Best f1_score score: 0.9049882166377794
Generation:  36%|███▌      | 9/25 [58:06<59:29, 223.09s/it]  Generation:  10
Best f1_score score: 0.9049882166377794
Generation:  40%|████      | 10/25 [59:02<42:52, 171.49s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545215f970> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465ef5090> 

Generation:  11
Best f1_score score: 0.9049882166377794
Generation:  44%|████▍     | 11/25 [1:09:08<1:11:03, 304.57s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546577d7e0> 

Generation:  12
Best f1_score score: 0.9049882166377794
Generation:  48%|████▊     | 12/25 [1:19:15<1:25:53, 396.43s/it]Generation:  13
Best f1_score score: 0.9049882166377794
Generation:  52%|█████▏    | 13/25 [1:21:13<1:02:26, 312.21s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554656a6da0> 

Generation:  14
Best f1_score score: 0.9049882166377794
Generation:  56%|█████▌    | 14/25 [1:31:19<1:13:30, 400.94s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465499540> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.9049882166377794
Generation:  60%|██████    | 15/25 [1:32:26<50:01, 300.18s/it]  Generation:  16
Best f1_score score: 0.9049882166377794
Generation:  64%|██████▍   | 16/25 [1:35:23<39:29, 263.24s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454d75b70> 
 Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 317, in fit
    self.coef_, self.intercept_, n_iter_ = _fit_liblinear(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1214, in _fit_liblinear
    solver_type = _get_liblinear_solver_type(multi_class, penalty, loss, dual)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1046, in _get_liblinear_solver_type
    raise ValueError(
ValueError: Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554642d65c0> 

Generation:  17
Best f1_score score: 0.9049882166377794
Generation:  68%|██████▊   | 17/25 [1:45:30<48:53, 366.69s/it]Generation:  18
Best f1_score score: 0.9049882166377794
Generation:  72%|███████▏  | 18/25 [1:48:46<36:47, 315.38s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f5e9e0> 

Generation:  19
Best f1_score score: 0.9049882166377794
Generation:  76%|███████▌  | 19/25 [1:58:52<40:15, 402.59s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465fe5ae0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553b7785e70> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.9049882166377794
Generation:  80%|████████  | 20/25 [2:04:17<31:36, 379.37s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a640a0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465659090> 

Generation:  21
Best f1_score score: 0.9049882166377794
Generation:  84%|████████▍ | 21/25 [2:14:24<29:50, 447.51s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465fc8100> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.9049882166377794
Generation:  88%|████████▊ | 22/25 [2:16:36<17:39, 353.06s/it]Generation:  23
Best f1_score score: 0.9049882166377794
Generation:  92%|█████████▏| 23/25 [2:16:48<08:21, 250.64s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554656af070> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554503cfaf0> 

Generation:  24
Best f1_score score: 0.9049882166377794
Generation:  96%|█████████▌| 24/25 [2:26:55<05:57, 357.41s/it]Generation:  25
Best f1_score score: 0.9049882166377794
Generation: 100%|██████████| 25/25 [2:29:04<00:00, 288.88s/it]Generation: 100%|██████████| 25/25 [2:29:04<00:00, 357.77s/it]
2024-10-23 19:03:10,450 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46457' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-0a9e8d023c53da3b59011db2e980eeed', 'ndarray-422b2c53f5e51e71a00dd009dc06b86a'} (stimulus_id='handle-worker-cleanup-1729735390.4508662')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='median')),
                ('logisticregression',
                 LogisticRegression(C=3.4719373091603, l1_ratio=0.5755473595258,
                                    max_iter=1000, n_jobs=1,
                                    penalty='elasticnet', solver='saga'))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9578571801723189, 'accuracy': 0.9096596978483138, 'balanced_accuracy': 0.9013479692666684, 'logloss': 0.2459199335352976, 'f1': 0.9052020391291182}
test score: {'auroc': 0.954784824374511, 'accuracy': 0.9115314215985357, 'balanced_accuracy': 0.9014416163915062, 'logloss': 0.2510458441366551, 'f1': 0.9067807945411919}
original test score: {'auroc': 0.9896950093850402, 'accuracy': 0.9463087248322147, 'balanced_accuracy': 0.9457105573198675, 'logloss': 0.16851491425382534, 'f1': 0.9444088136805688}
score end
725
lvl
0.1
type
MNAR
num_run
1
class_full
finished
all finished
full run takes
7.087218372490671
hours
DONE
