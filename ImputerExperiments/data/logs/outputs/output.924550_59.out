Run: 59
/cm/local/apps/slurm/var/spool/job924550/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
starting loops
../data/c/6/6.pkl
working on 
../data/c/6/class_full_MNAR_0.3_3
3.7451395988464355
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-08-15 23:15:28,177] A new study created in memory with name: no-name-4b1ed75a-270a-4e89-aca8-289ce5bf0327
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-08-15 23:15:29,177] Trial 9 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 9 with value: 0.21276693142169104.
running
[I 2024-08-15 23:15:29,414] Trial 1 finished with value: 0.0937749297868454 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.0937749297868454.
running
[I 2024-08-15 23:15:30,073] Trial 16 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.0937749297868454.
running
[I 2024-08-15 23:15:30,501] Trial 10 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:15:30,987] Trial 3 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:15:31,260] Trial 7 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:15:41,912] Trial 15 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.37159427278567736, 'alpha': 93, 'iterations': 7, 'learning_rate': 0.0005309545034044943, 'p_miss': 0.11036488452291883}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:11,180] Trial 4 finished with value: 0.0937749297868454 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17421, 'weights': 'uniform'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:14,792] Trial 13 finished with value: 0.0886226473738595 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6087, 'weights': 'uniform'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:17,643] Trial 6 finished with value: 0.08627702384762553 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3034, 'weights': 'distance'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:22,293] Trial 17 finished with value: 0.0919603970686501 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12782, 'weights': 'uniform'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:24,137] Trial 14 finished with value: 0.08843947598558659 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6662, 'weights': 'distance'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:36,202] Trial 21 finished with value: 0.09264012330510286 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 15733, 'weights': 'distance'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:37,914] Trial 11 finished with value: 0.0906883450088535 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11691, 'weights': 'distance'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:38,545] Trial 22 finished with value: 0.08763847253332704 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5141, 'weights': 'distance'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:16:40,819] Trial 8 finished with value: 0.20145007761800948 and parameters: {'model_name': 'GAIN', 'batch_size': 280, 'hint_rate': 0.762311609128029, 'alpha': 37, 'iterations': 21, 'learning_rate': 0.0014503190759009097, 'p_miss': 0.19398614079607246}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:17:44,463] Trial 0 finished with value: 0.19317761114397633 and parameters: {'model_name': 'GAIN', 'batch_size': 10, 'hint_rate': 0.216714509343953, 'alpha': 40, 'iterations': 76, 'learning_rate': 0.0019670738529917733, 'p_miss': 0.22925674377491134}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:19:30,573] Trial 30 finished with value: 0.08735581973623809 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:20:31,480] Trial 12 finished with value: 0.21357597280164337 and parameters: {'model_name': 'GAIN', 'batch_size': 249, 'hint_rate': 0.15588076754302416, 'alpha': 54, 'iterations': 126, 'learning_rate': 0.04260085385014005, 'p_miss': 0.07526450803445815}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:20:49,444] Trial 26 finished with value: 0.09292138926836505 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:21:35,647] Trial 2 finished with value: 0.14244573474115332 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:21:54,861] Trial 20 finished with value: 0.09081771720572811 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:22:06,492] Trial 5 finished with value: 0.08769821269725632 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:22:26,470] Trial 28 finished with value: 0.0887971252509733 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:14,697] Trial 36 finished with value: 0.08669847824477112 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:16,923] Trial 40 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:18,654] Trial 41 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:20,423] Trial 42 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:22,203] Trial 43 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:24,377] Trial 44 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:27,128] Trial 45 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:28,875] Trial 46 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:30,838] Trial 47 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:31,207] Trial 37 finished with value: 0.08669848870062724 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 16, 'imputation_order': 'random'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:32,372] Trial 23 finished with value: 0.09066160440807647 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:33,206] Trial 48 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:33,628] Trial 49 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:34,556] Trial 50 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:35,423] Trial 51 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:35,741] Trial 52 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:36,165] Trial 38 finished with value: 0.08669846521425714 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:36,821] Trial 54 finished with value: 0.0937749297868454 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:37,173] Trial 53 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:37,539] Trial 55 finished with value: 0.0937749297868454 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:38,992] Trial 56 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:39,751] Trial 58 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:39,961] Trial 57 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:40,441] Trial 59 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:41,391] Trial 60 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:48,433] Trial 33 finished with value: 0.09248041802026788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:52,049] Trial 31 finished with value: 0.08686196474299482 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:23:59,741] Trial 39 finished with value: 0.08669846334062105 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 15, 'imputation_order': 'random'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:24:22,967] Trial 24 finished with value: 0.13573810445590015 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:25:55,957] Trial 27 finished with value: 0.0901582672094435 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:45:53,768] Trial 66 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9864809450094459, 'alpha': 2, 'iterations': 5789, 'learning_rate': 0.00010860472447755377, 'p_miss': 0.2806966113527125}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:45:55,763] Trial 70 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:45:57,889] Trial 71 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:13,915] Trial 72 finished with value: 0.21167242404729664 and parameters: {'model_name': 'GAIN', 'batch_size': 23, 'hint_rate': 0.573679377071752, 'alpha': 90, 'iterations': 1, 'learning_rate': 0.0560849109391598, 'p_miss': 0.01470624749838731}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:15,817] Trial 73 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:17,755] Trial 74 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:22,366] Trial 75 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:24,277] Trial 76 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:26,052] Trial 77 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:28,307] Trial 78 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:29,447] Trial 79 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:46:31,317] Trial 80 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:48:43,373] Trial 67 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9872416456404944, 'alpha': 0, 'iterations': 6587, 'learning_rate': 0.0001009419338305382, 'p_miss': 0.2915081863216695}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:05,153] Trial 82 finished with value: 0.08403275440060727 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 796, 'weights': 'uniform'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:09,356] Trial 83 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:10,618] Trial 84 finished with value: 0.0937749297868454 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:12,464] Trial 85 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:14,179] Trial 86 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:16,151] Trial 87 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:17,315] Trial 88 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:19,129] Trial 89 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:20,991] Trial 90 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:22,955] Trial 91 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:51,617] Trial 92 finished with value: 0.09077741283571213 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10432, 'weights': 'uniform'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:53,248] Trial 93 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:57,735] Trial 94 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:49:59,819] Trial 95 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:50:01,275] Trial 96 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:50:03,274] Trial 97 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:50:05,329] Trial 98 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:50:07,401] Trial 99 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:50:09,058] Trial 100 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:50:57,771] Trial 69 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.986708014066854, 'alpha': 2, 'iterations': 6147, 'learning_rate': 0.00010581477182145618, 'p_miss': 0.01625658483795764}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:50:59,119] Trial 102 finished with value: 0.0937749297868454 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:51:01,502] Trial 103 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:51:24,207] Trial 104 finished with value: 0.08210178200942683 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 252, 'weights': 'distance'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:51:25,201] Trial 105 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:51:27,065] Trial 106 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:51:29,190] Trial 107 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:51:31,273] Trial 108 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:51:33,370] Trial 109 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:52:50,198] Trial 62 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9853347782170389, 'alpha': 3, 'iterations': 7750, 'learning_rate': 0.07086563883721184, 'p_miss': 0.2926396705263123}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:52:52,285] Trial 111 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:52:54,124] Trial 112 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:52:56,261] Trial 113 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:52:57,949] Trial 114 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:52:59,953] Trial 115 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:02,087] Trial 116 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:03,857] Trial 117 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:04,781] Trial 64 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9617119138804537, 'alpha': 5, 'iterations': 7685, 'learning_rate': 0.00010054404597940005, 'p_miss': 0.011798876251071733}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:05,829] Trial 118 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:06,968] Trial 120 finished with value: 0.0937749297868454 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:07,126] Trial 119 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:11,284] Trial 121 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:12,246] Trial 122 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:13,459] Trial 123 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:14,303] Trial 124 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:16,263] Trial 126 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:18,281] Trial 127 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:20,213] Trial 128 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:46,083] Trial 125 finished with value: 0.08993398266546467 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8681, 'weights': 'uniform'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:53,310] Trial 129 finished with value: 0.09280092402259603 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 14221, 'weights': 'uniform'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:53:55,541] Trial 131 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:57:09,113] Trial 63 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9840553423898142, 'alpha': 1, 'iterations': 8726, 'learning_rate': 0.00010815141145273141, 'p_miss': 0.019956401648833694}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:57:11,056] Trial 133 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:57:12,042] Trial 134 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:57:32,592] Trial 61 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9537159136298007, 'alpha': 0, 'iterations': 8790, 'learning_rate': 0.00011472559801152067, 'p_miss': 0.2980348675313127}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:57:34,326] Trial 136 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:57:36,401] Trial 137 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:57:38,646] Trial 138 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-15 23:57:40,456] Trial 139 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:01:04,502] Trial 68 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9416823125536146, 'alpha': 4, 'iterations': 9488, 'learning_rate': 0.00011341005272338193, 'p_miss': 0.29974659306202006}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:01:28,168] Trial 65 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9021050160395063, 'alpha': 8, 'iterations': 9659, 'learning_rate': 0.00010832041760726221, 'p_miss': 0.29365817245369497}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:29:13,441] Trial 132 finished with value: 0.22182118057109407 and parameters: {'model_name': 'GAIN', 'batch_size': 928, 'hint_rate': 0.02150124127691605, 'alpha': 58, 'iterations': 503, 'learning_rate': 0.01198811798559934, 'p_miss': 0.1425847422606086}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:30:55,809] Trial 110 finished with value: 0.2233008834349782 and parameters: {'model_name': 'GAIN', 'batch_size': 878, 'hint_rate': 0.6020233397969713, 'alpha': 68, 'iterations': 559, 'learning_rate': 0.009116469062447168, 'p_miss': 0.1436696901009332}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:33:00,773] Trial 130 finished with value: 0.21708641472456539 and parameters: {'model_name': 'GAIN', 'batch_size': 861, 'hint_rate': 0.05407906560278469, 'alpha': 71, 'iterations': 581, 'learning_rate': 0.012160079144246114, 'p_miss': 0.1394481165214913}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:52:55,037] Trial 101 finished with value: 0.2130705540349714 and parameters: {'model_name': 'GAIN', 'batch_size': 987, 'hint_rate': 0.5930778446926948, 'alpha': 67, 'iterations': 1046, 'learning_rate': 0.010711517099201899, 'p_miss': 0.015927116756101284}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:52:56,396] Trial 146 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:52:57,507] Trial 147 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 00:52:58,716] Trial 148 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 01:01:26,161] Trial 34 finished with value: 0.1005060061730129 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 01:01:27,282] Trial 150 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 01:01:28,418] Trial 151 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 01:17:35,036] Trial 19 finished with value: 0.2246184528344469 and parameters: {'model_name': 'GAIN', 'batch_size': 58, 'hint_rate': 0.8726346881112299, 'alpha': 47, 'iterations': 7671, 'learning_rate': 0.0002171356294171831, 'p_miss': 0.12985533218597223}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 01:17:36,215] Trial 153 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 01:17:36,494] Trial 154 finished with value: 0.0937749297868454 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:45,372] Trial 140 finished with value: 0.09852118081551167 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:46,390] Trial 156 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:47,145] Trial 157 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:47,944] Trial 158 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:48,548] Trial 159 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:49,457] Trial 160 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:50,458] Trial 161 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:51,025] Trial 162 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:51,978] Trial 163 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:52,367] Trial 164 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:53,443] Trial 165 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:54,232] Trial 166 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:54,806] Trial 167 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:55,732] Trial 168 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:56,389] Trial 169 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:57,005] Trial 170 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:57,757] Trial 171 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:58,381] Trial 172 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:28:59,296] Trial 173 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:00,115] Trial 174 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:01,002] Trial 175 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:01,828] Trial 176 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:03,034] Trial 177 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:03,775] Trial 178 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:04,248] Trial 179 finished with value: 0.0937749297868454 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:04,872] Trial 180 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:56,120] Trial 18 finished with value: 0.09367973462751515 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:57,016] Trial 182 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:57,763] Trial 183 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:29:58,383] Trial 184 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:30:21,099] Trial 185 finished with value: 0.08931709035083694 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8559, 'weights': 'distance'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:30:21,846] Trial 186 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:30:22,613] Trial 187 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:30:23,509] Trial 188 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:30:24,467] Trial 189 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:32:59,307] Trial 142 finished with value: 0.09867731978294583 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:00,321] Trial 191 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:00,724] Trial 192 finished with value: 0.21276693142169104 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:01,454] Trial 193 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:02,231] Trial 194 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:03,399] Trial 195 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:04,410] Trial 196 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:05,140] Trial 197 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:05,767] Trial 198 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
running
[I 2024-08-16 02:33:06,290] Trial 199 finished with value: 0.0818039922874675 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 02:53:41,480] Trial 135 finished with value: 0.09349399378581763 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 02:58:09,664] Trial 141 finished with value: 0.0932394486469949 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 03:15:45,787] Trial 144 finished with value: 0.09340235277184433 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 03:15:51,423] Trial 143 finished with value: 0.09319214608279308 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 03:16:48,111] Trial 145 finished with value: 0.09352506058285882 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 03:34:39,201] Trial 81 finished with value: 0.2235747127916737 and parameters: {'model_name': 'GAIN', 'batch_size': 815, 'hint_rate': 0.05539402044797015, 'alpha': 3, 'iterations': 8220, 'learning_rate': 0.010230802115873216, 'p_miss': 0.14596296963619784}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 03:48:47,561] Trial 155 finished with value: 0.09363350847288447 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 03:55:25,113] Trial 149 finished with value: 0.08868639126338523 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 04:01:37,394] Trial 152 finished with value: 0.08897444558306644 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 05:11:56,526] Trial 181 finished with value: 0.08874005103818507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 10 with value: 0.0818039922874675.
[I 2024-08-16 05:19:08,380] Trial 25 finished with value: 0.0806691993791801 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 25 with value: 0.0806691993791801.
[I 2024-08-16 05:19:32,721] Trial 32 finished with value: 0.08057512775032198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 32 with value: 0.08057512775032198.
[I 2024-08-16 06:05:16,602] Trial 190 finished with value: 0.08428835878922289 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 32 with value: 0.08057512775032198.
[I 2024-08-16 07:05:30,295] Trial 29 finished with value: 0.07864009503681342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 16, 'imputation_order': 'arabic'}. Best is trial 29 with value: 0.07864009503681342.
[I 2024-08-16 07:06:28,163] Trial 35 finished with value: 0.07857542525498153 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'ascending'}. Best is trial 35 with value: 0.07857542525498153.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
dtype: int64
0.07857542525498153
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 16, 'imputation_order': 'ascending'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8242149757223224
Generation:   4%|▍         | 1/25 [05:44<2:17:51, 344.64s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b429e0> 

Generation:  2
Best f1_score score: 0.8242149757223224
Generation:   8%|▊         | 2/25 [15:47<3:10:14, 496.28s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b42e90> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475be4eb0> 

Generation:  3
Best f1_score score: 0.8242149757223224
Generation:  12%|█▏        | 3/25 [25:50<3:19:58, 545.37s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547542d450> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547540fd00> 
 Argument 'metric' has incorrect type (expected str, got numpy.str_) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 259, in predict
    probabilities = self.predict_proba(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 343, in predict_proba
    probabilities = ArgKminClassMode.compute(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py", line 584, in compute
    return ArgKminClassMode64.compute(
TypeError: Argument 'metric' has incorrect type (expected str, got numpy.str_)

Generation:  4
Best f1_score score: 0.8286024764000764
Generation:  16%|█▌        | 4/25 [32:43<2:52:32, 492.96s/it]Generation:  5
Best f1_score score: 0.8286024764000764
Generation:  20%|██        | 5/25 [38:52<2:29:23, 448.16s/it]Generation:  6
Best f1_score score: 0.8286024764000764
Generation:  24%|██▍       | 6/25 [45:48<2:18:26, 437.20s/it]Generation:  7
Best f1_score score: 0.8286024764000764
Generation:  28%|██▊       | 7/25 [51:55<2:04:18, 414.36s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554751bb880> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  8
Best f1_score score: 0.8372317227349722
Generation:  32%|███▏      | 8/25 [58:15<1:54:17, 403.38s/it]Generation:  9
Best f1_score score: 0.8372317227349722
Generation:  36%|███▌      | 9/25 [1:02:52<1:37:01, 363.85s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474f58d90> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bba06d0> 

Generation:  10
Best f1_score score: 0.8372317227349722
Generation:  40%|████      | 10/25 [1:12:58<1:49:39, 438.65s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bdc040> 

Generation:  11
Best f1_score score: 0.8372317227349722
Generation:  44%|████▍     | 11/25 [1:23:04<1:54:19, 489.93s/it]Generation:  12
Best f1_score score: 0.8372317227349722
Generation:  48%|████▊     | 12/25 [1:29:37<1:39:46, 460.49s/it]Generation:  13
Best f1_score score: 0.8389618565425657
Generation:  52%|█████▏    | 13/25 [1:36:26<1:28:57, 444.78s/it]Generation:  14
Best f1_score score: 0.8389618565425657
Generation:  56%|█████▌    | 14/25 [1:43:55<1:21:48, 446.21s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b436a0> 

Generation:  15
Best f1_score score: 0.8389618565425657
Generation:  60%|██████    | 15/25 [1:54:04<1:22:30, 495.06s/it]Generation:  16
Best f1_score score: 0.8389618565425657
Generation:  64%|██████▍   | 16/25 [1:58:35<1:04:08, 427.59s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474ec6e00> 

Generation:  17
Best f1_score score: 0.8389618565425657
Generation:  68%|██████▊   | 17/25 [2:08:43<1:04:16, 482.10s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554743bafb0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474fb1420> 

Generation:  18
Best f1_score score: 0.8389618565425657
Generation:  72%|███████▏  | 18/25 [2:18:53<1:00:41, 520.26s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474ecf0a0> 

Generation:  19
Best f1_score score: 0.8389618565425657
Generation:  76%|███████▌  | 19/25 [2:29:02<54:42, 547.13s/it]  Generation:  20
Best f1_score score: 0.8389618565425657
Generation:  80%|████████  | 20/25 [2:34:50<40:36, 487.30s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474fcee00> 

Generation:  21
Best f1_score score: 0.8389618565425657
Generation:  84%|████████▍ | 21/25 [2:45:01<34:57, 524.30s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b43fa0> 

Generation:  22
Best f1_score score: 0.8389618565425657
Generation:  88%|████████▊ | 22/25 [2:55:12<27:30, 550.31s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474b66830> 

Generation:  23
Best f1_score score: 0.8389618565425657
Generation:  92%|█████████▏| 23/25 [3:05:23<18:57, 568.74s/it]Generation:  24
Best f1_score score: 0.8389618565425657
Generation:  96%|█████████▌| 24/25 [3:11:24<08:26, 506.27s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745f5ed0> 

Generation:  25
Best f1_score score: 0.8389618565425657
Generation: 100%|██████████| 25/25 [3:21:36<00:00, 538.17s/it]Generation: 100%|██████████| 25/25 [3:21:40<00:00, 484.01s/it]
2024-08-16 11:14:45,691 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45835' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-87f326c2b853d5b31aa79dc6c47bda7b', 'ndarray-56c756f524c25cae3f29cff48da779fa'} (stimulus_id='handle-worker-cleanup-1723832085.6917582')
Fitted
Pipeline(steps=[('histgradientboostingclassifier',
                 HistGradientBoostingClassifier(early_stopping=False,
                                                l2_regularization=0.0039842263193,
                                                learning_rate=0.0948463555796,
                                                max_features=0.1402828952646,
                                                max_leaf_nodes=1243,
                                                min_samples_leaf=31, tol=0.0001,
                                                validation_fraction=None))])
score start
train score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 0.0002499298053905921, 'f1': 1.0}
original test score: {'auroc': 0.9989443939599382, 'accuracy': 0.941, 'balanced_accuracy': 0.9403827982254683, 'logloss': 0.19870541283729343, 'f1': 0.9407694601563134}
imputed test score: {'auroc': 0.9902297699074057, 'accuracy': 0.8375, 'balanced_accuracy': 0.8371338757596456, 'logloss': 0.6502484610989228, 'f1': 0.8379359451338421}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155436506200>
Start tpot fit
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b36f20> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b36fb0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b365c0> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b36980> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b36ef0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b46890> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bab040> 

Generation:  1
Best f1_score score: 0.7109792299916757
Generation:   4%|▍         | 1/25 [10:02<4:00:52, 602.17s/it]Generation:  2
Best f1_score score: 0.79051106649484
Generation:   8%|▊         | 2/25 [19:02<3:36:51, 565.73s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547544e2f0> 

Generation:  3
Best f1_score score: 0.79051106649484
Generation:  12%|█▏        | 3/25 [29:05<3:33:41, 582.81s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b47280> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554754277f0> 

Generation:  4
Best f1_score score: 0.7941231482275607
Generation:  16%|█▌        | 4/25 [39:09<3:26:56, 591.25s/it]Generation:  5
Best f1_score score: 0.834842437003933
Generation:  20%|██        | 5/25 [49:09<3:18:09, 594.47s/it]Generation:  6
Best f1_score score: 0.8394953401072993
Generation:  24%|██▍       | 6/25 [57:34<2:58:34, 563.93s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554579e4c10> 

Generation:  7
Best f1_score score: 0.8394953401072993
Generation:  28%|██▊       | 7/25 [1:07:38<2:53:06, 577.01s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e624640> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff354e0> 

Generation:  8
Best f1_score score: 0.8394953401072993
Generation:  32%|███▏      | 8/25 [1:17:42<2:45:54, 585.55s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554579b6230> 

Generation:  9
Best f1_score score: 0.8394953401072993
Generation:  36%|███▌      | 9/25 [1:27:46<2:37:42, 591.40s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474a8f190> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474c8fac0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452291390> 

Generation:  10
Best f1_score score: 0.8394953401072993
Generation:  40%|████      | 10/25 [1:37:52<2:28:58, 595.89s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547499b0d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454e1a890> 

Generation:  11
Best f1_score score: 0.840769591084418
Generation:  44%|████▍     | 11/25 [1:47:57<2:19:41, 598.68s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f2035b0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545efdfca0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475be4c70> 

Generation:  12
Best f1_score score: 0.840769591084418
Generation:  48%|████▊     | 12/25 [1:58:02<2:10:09, 600.71s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454c907f0> 

Generation:  13
Best f1_score score: 0.8431806374304178
Generation:  52%|█████▏    | 13/25 [2:08:07<2:00:22, 601.88s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474aec610> 

Generation:  14
Best f1_score score: 0.8433261717308932
Generation:  56%|█████▌    | 14/25 [2:18:11<1:50:29, 602.68s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457a0d630> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474941e10> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e700700> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bc6680> 

Generation:  15
Best f1_score score: 0.8459297978593915
Generation:  60%|██████    | 15/25 [2:28:16<1:40:33, 603.31s/it]Generation:  16
Best f1_score score: 0.8489317685128098
Generation:  64%|██████▍   | 16/25 [2:37:40<1:28:43, 591.47s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d6a14e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457483a00> 

Generation:  17
Best f1_score score: 0.8489317685128098
Generation:  68%|██████▊   | 17/25 [2:47:45<1:19:24, 595.50s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475c03ee0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746afa60> 

Generation:  18
Best f1_score score: 0.8551058716454898
Generation:  72%|███████▏  | 18/25 [2:57:49<1:09:46, 598.02s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d6f9240> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451b04e50> 

Generation:  19
Best f1_score score: 0.8551058716454898
Generation:  76%|███████▌  | 19/25 [3:07:54<1:00:00, 600.15s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474f07040> 

Generation:  20
Best f1_score score: 0.8551058716454898
Generation:  80%|████████  | 20/25 [3:17:59<50:08, 601.71s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547545c880> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b37640> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475427fd0> 

Generation:  21
Best f1_score score: 0.8551058716454898
Generation:  84%|████████▍ | 21/25 [3:28:07<40:13, 603.34s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545da38df0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475b37e50> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475444640> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452362b90> 

Generation:  22
Best f1_score score: 0.8551058716454898
Generation:  88%|████████▊ | 22/25 [3:38:12<30:11, 603.86s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554520ef160> 

Generation:  23
Best f1_score score: 0.8551058716454898
Generation:  92%|█████████▏| 23/25 [3:48:17<20:08, 604.22s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d6f8970> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475bc41c0> 

Generation:  24
Best f1_score score: 0.8553504523132647
Generation:  96%|█████████▌| 24/25 [3:58:24<10:05, 605.26s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545727a7a0> 

Generation:  25
Best f1_score score: 0.8553504523132647
Generation: 100%|██████████| 25/25 [4:08:29<00:00, 605.12s/it]Generation: 100%|██████████| 25/25 [4:08:29<00:00, 596.39s/it]
2024-08-16 15:24:28,422 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:40379' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-87f326c2b853d5b31aa79dc6c47bda7b', 'DataFrame-5f545837687c4cbe38bffdbf1158a9b5'} (stimulus_id='handle-worker-cleanup-1723847068.421996')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=KNeighborsRegressor(),
                                  imputation_order='random',
                                  initial_strategy='median',
                                  n_nearest_features=88)),
                ('extratreesclassifier',
                 ExtraTreesClassifier(max_features=0.6809202566445,
                                      min_samples_split=5, n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9999999275038038, 'accuracy': 0.9999444444444444, 'balanced_accuracy': 0.9999432720671659, 'logloss': 0.12090884091114981, 'f1': 0.9999444436308289}
test score: {'auroc': 0.9890942345239859, 'accuracy': 0.8645, 'balanced_accuracy': 0.8638992014213609, 'logloss': 0.6728072520830417, 'f1': 0.8651077906359278}
original test score: {'auroc': 0.9988446476156827, 'accuracy': 0.9485, 'balanced_accuracy': 0.947978787044997, 'logloss': 0.43905162799392394, 'f1': 0.9485121348687241}
score end
6
lvl
0.3
type
MNAR
num_run
3
class_full
finished
all finished
full run takes
16.245652618871794
hours
DONE
