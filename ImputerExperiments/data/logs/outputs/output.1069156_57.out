Run: 57
/cm/local/apps/slurm/var/spool/job1069156/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/41027/41027.pkl
working on 
../data/c/41027/class_full_MNAR_0.01_3
1.91953444480896
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-22 15:31:28,495] A new study created in memory with name: no-name-70ff9d92-4087-445c-bbd7-4d22b0a42f8a
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-22 15:31:28,992] Trial 2 finished with value: 0.6435740321680778 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 2 with value: 0.6435740321680778.
running
[I 2024-11-22 15:31:29,269] Trial 0 finished with value: 0.6024323417029062 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.6024323417029062.
running
[I 2024-11-22 15:31:29,516] Trial 10 finished with value: 0.6435740321680778 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 0 with value: 0.6024323417029062.
running
[I 2024-11-22 15:31:29,840] Trial 8 finished with value: 0.6024323417029062 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.6024323417029062.
running
[I 2024-11-22 15:31:30,214] Trial 18 finished with value: 0.6024323417029062 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.6024323417029062.
running
[I 2024-11-22 15:31:40,772] Trial 9 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.8861071938538811, 'alpha': 97, 'iterations': 1, 'learning_rate': 0.0010593383618556717, 'p_miss': 0.08374847846907607}. Best is trial 0 with value: 0.6024323417029062.
running
[I 2024-11-22 15:31:41,538] Trial 1 finished with value: 0.36990688794921117 and parameters: {'model_name': 'VAE', 'batch_size': 109, 'iterations': 1, 'learning_rate': 0.0021389840468211737, 'p_miss': 0.025281510661841776}. Best is trial 1 with value: 0.36990688794921117.
running
[I 2024-11-22 15:31:44,493] Trial 20 finished with value: 0.36051589821501334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:31:54,995] Trial 22 finished with value: 0.6373453976309568 and parameters: {'model_name': 'GAIN', 'batch_size': 323, 'hint_rate': 0.7960788204886726, 'alpha': 29, 'iterations': 18, 'learning_rate': 0.00018865596994461709, 'p_miss': 0.11726203249780252}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:05,247] Trial 15 finished with value: 0.3605251090288125 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6400, 'weights': 'uniform'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:07,576] Trial 4 finished with value: 0.36062145867922457 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11612, 'weights': 'uniform'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:14,108] Trial 17 finished with value: 0.3606855242047578 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21330, 'weights': 'uniform'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:20,675] Trial 13 finished with value: 0.5072168766926753 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:21,241] Trial 16 finished with value: 0.4170625318658584 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 29465, 'weights': 'distance'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:25,773] Trial 19 finished with value: 0.41706194603708147 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21201, 'weights': 'distance'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:30,162] Trial 3 finished with value: 0.5101335085489878 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 20 with value: 0.36051589821501334.
[I 2024-11-22 15:32:30,290] Trial 28 finished with value: 0.3605336908744356 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
running
[I 2024-11-22 15:32:30,542] Trial 29 finished with value: 0.3605336908744356 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:31,679] Trial 21 finished with value: 0.4170586379779741 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 13963, 'weights': 'distance'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:32,257] Trial 25 finished with value: 0.36051589821501334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:33,377] Trial 26 finished with value: 0.36051589821501334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:34,045] Trial 30 finished with value: 0.3605336908744356 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:35,836] Trial 24 finished with value: 0.3606436198714096 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12453, 'weights': 'uniform'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:36,592] Trial 23 finished with value: 0.4170625318658584 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 34200, 'weights': 'distance'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:38,721] Trial 5 finished with value: 0.5089037817926123 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:39,503] Trial 27 finished with value: 0.36051589821501334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:56,522] Trial 35 finished with value: 0.36054953505498016 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:32:57,675] Trial 36 finished with value: 0.36051589821501334 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:33:21,420] Trial 37 finished with value: 0.39426789592742695 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:33:21,755] Trial 38 finished with value: 0.39426789592742695 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:43:04,816] Trial 12 finished with value: 0.3621112562145964 and parameters: {'model_name': 'VAE', 'batch_size': 425, 'iterations': 143, 'learning_rate': 0.005709784234546541, 'p_miss': 0.07429836146307163}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:50:07,130] Trial 6 finished with value: 0.3745420249560216 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 486, 'learning_rate': 0.008765238365269603, 'p_miss': 0.2586471636965834}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:50:08,889] Trial 14 finished with value: 0.6325495095414928 and parameters: {'model_name': 'GAIN', 'batch_size': 122, 'hint_rate': 0.9225233529220136, 'alpha': 86, 'iterations': 821, 'learning_rate': 0.050895054209835776, 'p_miss': 0.26023315664701846}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 15:57:00,662] Trial 11 finished with value: 0.367988259387798 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 618, 'learning_rate': 0.0018513028989176077, 'p_miss': 0.17733746557014624}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 16:03:18,247] Trial 39 finished with value: 0.36997093334685377 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 16:03:41,613] Trial 50 finished with value: 0.36053704767956024 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 16:04:05,723] Trial 51 finished with value: 0.360518273878479 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 16:04:15,045] Trial 52 finished with value: 0.36053369370618815 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 16:04:23,359] Trial 53 finished with value: 0.36053369105504257 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 16:04:55,330] Trial 40 finished with value: 0.3780055018305506 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 20 with value: 0.36051589821501334.
running
[I 2024-11-22 16:05:17,429] Trial 55 finished with value: 0.36051498319687364 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:05:37,519] Trial 56 finished with value: 0.36065472804631915 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:05:58,944] Trial 57 finished with value: 0.36051498319687364 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:08:25,089] Trial 46 finished with value: 0.3639841933817678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:12:17,689] Trial 7 finished with value: 0.4254200084822396 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:15:31,645] Trial 48 finished with value: 0.3645847095430014 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:15:45,415] Trial 47 finished with value: 0.36257707672054595 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:22:55,970] Trial 54 finished with value: 0.3630932004049119 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:23:02,774] Trial 49 finished with value: 0.3644938267306503 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:23:03,477] Trial 64 finished with value: 0.36071167391521847 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:23:40,751] Trial 65 finished with value: 0.455050412725151 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 13, 'learning_rate': 0.06764972784804063, 'p_miss': 0.18042461237214705}. Best is trial 55 with value: 0.36051498319687364.
running
[I 2024-11-22 16:23:55,038] Trial 66 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 17:29:46,943] Trial 32 finished with value: 0.5185024308777642 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3279, 'learning_rate': 0.0728571430168985, 'p_miss': 0.29066210573021345}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:10:31,773] Trial 68 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.038158424051883744, 'alpha': 11, 'iterations': 9176, 'learning_rate': 0.00010153068561792421, 'p_miss': 0.21671883239971862}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:10:46,259] Trial 69 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:10:47,474] Trial 70 finished with value: 0.3666735472969694 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:11:05,094] Trial 71 finished with value: 0.6419529816024194 and parameters: {'model_name': 'GAIN', 'batch_size': 829, 'hint_rate': 0.26684336286971233, 'alpha': 56, 'iterations': 8, 'learning_rate': 0.0005649344172509112, 'p_miss': 0.012240848260393983}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:11:17,840] Trial 72 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:11:32,714] Trial 73 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:14:43,742] Trial 74 finished with value: 0.36323212738402805 and parameters: {'model_name': 'VAE', 'batch_size': 66, 'iterations': 64, 'learning_rate': 0.01758231389626334, 'p_miss': 0.12563408743216464}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:14:57,907] Trial 75 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:15:12,673] Trial 76 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:15:27,972] Trial 77 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:15:49,869] Trial 78 finished with value: 0.3605221056604282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:16:04,833] Trial 79 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:16:15,920] Trial 80 finished with value: 0.36065314184501834 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:16:31,161] Trial 81 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:16:32,115] Trial 82 finished with value: 0.36071167391521847 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:16:41,079] Trial 83 finished with value: 0.6394764619165747 and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.5026427803072431, 'alpha': 57, 'iterations': 3, 'learning_rate': 0.0003957905190250495, 'p_miss': 0.21640713473401768}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:17:02,819] Trial 84 finished with value: 0.36068259269978575 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:17:14,460] Trial 85 finished with value: 0.36064552462564786 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:17:29,192] Trial 86 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:17:43,728] Trial 87 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:17:58,550] Trial 88 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:18:13,379] Trial 89 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:18:27,496] Trial 90 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:18:43,454] Trial 91 finished with value: 0.41694366547758877 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 206, 'weights': 'distance'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:18:54,664] Trial 92 finished with value: 0.36065314184501834 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:19:28,480] Trial 93 finished with value: 0.3954397947416096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:19:40,367] Trial 94 finished with value: 0.36065314184501834 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:22:41,099] Trial 95 finished with value: 0.36536451246477464 and parameters: {'model_name': 'VAE', 'batch_size': 47, 'iterations': 64, 'learning_rate': 0.022412056394430876, 'p_miss': 0.07613147147447066}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:22:55,075] Trial 96 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:23:09,700] Trial 97 finished with value: 0.36049140402611524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:23:24,056] Trial 98 finished with value: 0.360685961715523 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:23:38,949] Trial 99 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:23:52,984] Trial 100 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:24:07,674] Trial 101 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:24:22,706] Trial 102 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:24:33,590] Trial 103 finished with value: 0.36064552462564786 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:24:55,014] Trial 104 finished with value: 0.36070938260232854 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 27209, 'weights': 'uniform'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:24:56,189] Trial 105 finished with value: 0.3666735472969694 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:25:10,822] Trial 106 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:25:24,715] Trial 107 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:25:58,116] Trial 108 finished with value: 0.3946018880738222 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:26:12,776] Trial 109 finished with value: 0.3605155571171411 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:26:34,703] Trial 110 finished with value: 0.36049705570135127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:26:50,567] Trial 111 finished with value: 0.3605155571171411 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:27:05,327] Trial 112 finished with value: 0.36069016705952683 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:27:43,202] Trial 67 finished with value: 0.410433353922459 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2889, 'learning_rate': 0.00012142633021704281, 'p_miss': 0.29704768504111234}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:27:49,604] Trial 114 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.5041636049790269, 'alpha': 5, 'iterations': 4, 'learning_rate': 0.005777240354007733, 'p_miss': 0.04942249753313949}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:03,664] Trial 115 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:08,653] Trial 43 finished with value: 0.4738603488243024 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4600, 'learning_rate': 0.051003933959232924, 'p_miss': 0.26285048189536764}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:18,639] Trial 116 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:23,877] Trial 117 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:32,702] Trial 42 finished with value: 0.45997273481501466 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4779, 'learning_rate': 0.06477942872806534, 'p_miss': 0.2970308387240437}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:33,182] Trial 118 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:39,144] Trial 119 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:48,649] Trial 121 finished with value: 0.36077576899127717 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:49,681] Trial 120 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:28:55,462] Trial 122 finished with value: 0.3605071506209519 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:05,241] Trial 123 finished with value: 0.3605155571171411 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:06,224] Trial 124 finished with value: 0.3605158405611947 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:06,487] Trial 125 finished with value: 0.3606235007559181 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:19,729] Trial 126 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:21,507] Trial 127 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:22,128] Trial 128 finished with value: 0.3604895815492233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:35,010] Trial 129 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:36,766] Trial 130 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:37,790] Trial 133 finished with value: 0.36071167391521847 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:29:56,454] Trial 134 finished with value: 0.4170281303105853 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1360, 'weights': 'distance'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:30:06,170] Trial 131 finished with value: 0.3921624168244614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:30:12,479] Trial 132 finished with value: 0.39569343626032044 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:30:21,829] Trial 136 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:30:27,170] Trial 137 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:30:36,633] Trial 138 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:30:42,411] Trial 139 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:30:47,694] Trial 135 finished with value: 0.39569343626032044 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:30:51,881] Trial 140 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:31:22,868] Trial 143 finished with value: 0.5104119539491592 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:34:08,892] Trial 141 finished with value: 0.6390363406118172 and parameters: {'model_name': 'GAIN', 'batch_size': 34, 'hint_rate': 0.6733957151315084, 'alpha': 74, 'iterations': 218, 'learning_rate': 0.00037852061095759905, 'p_miss': 0.132081321897371}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:34:21,998] Trial 145 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:34:27,845] Trial 142 finished with value: 0.6354522760894886 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.01804400066999229, 'alpha': 76, 'iterations': 256, 'learning_rate': 0.0002822198102603179, 'p_miss': 0.14520923986066722}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:34:36,328] Trial 146 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:34:42,319] Trial 147 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:34:50,395] Trial 148 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:34:56,347] Trial 149 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:35:46,591] Trial 144 finished with value: 0.639190932738417 and parameters: {'model_name': 'GAIN', 'batch_size': 951, 'hint_rate': 0.19611261268729002, 'alpha': 74, 'iterations': 221, 'learning_rate': 0.00037665804986163694, 'p_miss': 0.1284077742357879}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:53:58,591] Trial 151 finished with value: 0.36146841144196645 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:54:02,993] Trial 150 finished with value: 0.36177334195161864 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:54:13,964] Trial 153 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:54:18,791] Trial 154 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:54:29,534] Trial 155 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:54:34,635] Trial 156 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:54:43,911] Trial 157 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:54:47,914] Trial 158 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:54:58,733] Trial 159 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:55:02,823] Trial 160 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:55:13,534] Trial 161 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:55:26,315] Trial 152 finished with value: 0.36162978405140767 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:57:21,912] Trial 164 finished with value: 0.3670971317520915 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 29, 'learning_rate': 0.0009144427087125724, 'p_miss': 0.21570742848687444}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:57:22,680] Trial 165 finished with value: 0.6435740321680778 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:57:37,743] Trial 166 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:57:51,460] Trial 167 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:58:05,290] Trial 168 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:58:19,019] Trial 169 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:58:25,934] Trial 170 finished with value: 0.3605336907466311 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:58:48,337] Trial 171 finished with value: 0.3606960334697089 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 26561, 'weights': 'uniform'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:58:57,830] Trial 34 finished with value: 0.45731948941368616 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5423, 'learning_rate': 0.07524610152329075, 'p_miss': 0.298517632153386}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:02,665] Trial 172 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:11,975] Trial 173 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:15,990] Trial 174 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:26,101] Trial 175 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:31,284] Trial 176 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:41,096] Trial 177 finished with value: 0.3605815361652335 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:45,131] Trial 178 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:54,896] Trial 179 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 18:59:58,732] Trial 180 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:08,240] Trial 62 finished with value: 0.47451289639058825 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4289, 'learning_rate': 0.0818535482140209, 'p_miss': 0.19821409669942835}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:09,400] Trial 181 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:16,580] Trial 184 finished with value: 0.3605336910261116 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:18,120] Trial 182 finished with value: 0.3607332277219561 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:28,317] Trial 183 finished with value: 0.3607332277219561 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:30,215] Trial 186 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:36,429] Trial 185 finished with value: 0.3606295393853802 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:42,303] Trial 187 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:44,809] Trial 188 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:51,293] Trial 189 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:57,136] Trial 190 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:00:59,396] Trial 191 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:01:05,474] Trial 192 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:01:11,601] Trial 193 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:01:14,466] Trial 194 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:01:19,498] Trial 195 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:01:27,030] Trial 196 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
running
[I 2024-11-22 19:01:30,099] Trial 197 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 19:01:34,352] Trial 198 finished with value: 0.36046336249171784 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 19:01:41,678] Trial 199 finished with value: 0.3605815361652335 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 19:05:13,342] Trial 113 finished with value: 0.6525665290248213 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.5220295534969849, 'alpha': 0, 'iterations': 2818, 'learning_rate': 0.005001037522775483, 'p_miss': 0.13350732838134025}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 19:17:07,158] Trial 61 finished with value: 0.4423791316910954 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5129, 'learning_rate': 0.07822387729164824, 'p_miss': 0.18887948376679753}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 19:38:15,960] Trial 163 finished with value: 0.3753678229402696 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 1266, 'learning_rate': 0.02359666104173509, 'p_miss': 0.2144180825576958}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 19:48:41,243] Trial 162 finished with value: 0.36240772604264665 and parameters: {'model_name': 'VAE', 'batch_size': 222, 'iterations': 1351, 'learning_rate': 0.0010167256739446449, 'p_miss': 0.19831264950269856}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 19:55:31,429] Trial 44 finished with value: 0.4660225163456781 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7770, 'learning_rate': 0.0945561691179192, 'p_miss': 0.2897150917134038}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 20:15:10,009] Trial 63 finished with value: 0.47384616834859655 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8937, 'learning_rate': 0.09032400802744232, 'p_miss': 0.1858185332733795}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 20:32:49,168] Trial 58 finished with value: 0.4613298008482283 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9372, 'learning_rate': 0.092889340327195, 'p_miss': 0.19265137395112314}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 20:37:03,075] Trial 31 finished with value: 0.4822112953538168 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8914, 'learning_rate': 0.04775840269184279, 'p_miss': 0.28894774769639464}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 20:38:17,451] Trial 33 finished with value: 0.4408718645172571 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7556, 'learning_rate': 0.07202349901675886, 'p_miss': 0.299461406106065}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 20:39:06,825] Trial 59 finished with value: 0.47994034034316346 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9956, 'learning_rate': 0.09072263586666916, 'p_miss': 0.19427772743963767}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 20:39:34,804] Trial 60 finished with value: 0.4432167259648521 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9261, 'learning_rate': 0.00010333066539367554, 'p_miss': 0.18422726261325773}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 20:39:50,785] Trial 41 finished with value: 0.46556050923930936 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9847, 'learning_rate': 0.08929069320312934, 'p_miss': 0.2633579890782661}. Best is trial 66 with value: 0.36046336249171784.
[I 2024-11-22 20:39:56,939] Trial 45 finished with value: 0.43354683161051943 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9404, 'learning_rate': 0.04864311711737252, 'p_miss': 0.28862065007283944}. Best is trial 66 with value: 0.36046336249171784.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.36046336249171784
{'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8145036648362624
Generation:   4%|▍         | 1/25 [02:19<55:50, 139.59s/it]Generation:  2
Best f1_score score: 0.8145036648362624
Generation:   8%|▊         | 2/25 [06:39<1:20:32, 210.11s/it]Generation:  3
Best f1_score score: 0.8145036648362624
Generation:  12%|█▏        | 3/25 [07:51<54:03, 147.45s/it]  Generation:  4
Best f1_score score: 0.8145036648362624
Generation:  16%|█▌        | 4/25 [08:18<34:54, 99.75s/it] Generation:  5
Best f1_score score: 0.8145036648362624
Generation:  20%|██        | 5/25 [08:40<23:56, 71.81s/it]Generation:  6
Best f1_score score: 0.8166931661743881
Generation:  24%|██▍       | 6/25 [09:06<17:45, 56.09s/it]Generation:  7
Best f1_score score: 0.8166931661743881
Generation:  28%|██▊       | 7/25 [12:22<30:31, 101.77s/it]Generation:  8
Best f1_score score: 0.8166931661743881
Generation:  32%|███▏      | 8/25 [12:39<21:12, 74.88s/it] WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d098d0> 

Generation:  9
Best f1_score score: 0.8166931661743881
Generation:  36%|███▌      | 9/25 [22:46<1:04:19, 241.24s/it]Generation:  10
Best f1_score score: 0.8166931661743881
Generation:  40%|████      | 10/25 [27:09<1:01:57, 247.85s/it]Generation:  11
Best f1_score score: 0.8166931661743881
Generation:  44%|████▍     | 11/25 [27:29<41:33, 178.08s/it]  Generation:  12
Best f1_score score: 0.8166931661743881
Generation:  48%|████▊     | 12/25 [31:27<42:31, 196.28s/it]Generation:  13
Best f1_score score: 0.8166931661743881
Generation:  52%|█████▏    | 13/25 [31:44<28:25, 142.11s/it]Generation:  14
Best f1_score score: 0.8166931661743881
Generation:  56%|█████▌    | 14/25 [41:12<49:36, 270.62s/it]Generation:  15
Best f1_score score: 0.8166931661743881
Generation:  60%|██████    | 15/25 [41:36<32:43, 196.38s/it]Generation:  16
Best f1_score score: 0.8166931661743881
Generation:  64%|██████▍   | 16/25 [46:01<32:33, 217.04s/it]Generation:  17
Best f1_score score: 0.8166931661743881
Generation:  68%|██████▊   | 17/25 [46:52<22:17, 167.20s/it]Generation:  18
Best f1_score score: 0.8166931661743881
Generation:  72%|███████▏  | 18/25 [48:20<16:42, 143.20s/it]Generation:  19
Best f1_score score: 0.8166931661743881
Generation:  76%|███████▌  | 19/25 [53:59<20:13, 202.23s/it]Generation:  20
Best f1_score score: 0.8166931661743881
Generation:  80%|████████  | 20/25 [57:04<16:24, 196.96s/it]Generation:  21
Best f1_score score: 0.8166931661743881
Generation:  84%|████████▍ | 21/25 [1:00:43<13:33, 203.49s/it]Generation:  22
Best f1_score score: 0.8166931661743881
Generation:  88%|████████▊ | 22/25 [1:05:33<11:28, 229.66s/it]Generation:  23
Best f1_score score: 0.8166931661743881
Generation:  92%|█████████▏| 23/25 [1:07:33<06:33, 196.62s/it]Generation:  24
Best f1_score score: 0.8166931661743881
Generation:  96%|█████████▌| 24/25 [1:08:04<02:27, 147.02s/it]Generation:  25
Best f1_score score: 0.8166931661743881
Generation: 100%|██████████| 25/25 [1:08:25<00:00, 109.27s/it]Generation: 100%|██████████| 25/25 [1:08:29<00:00, 164.36s/it]
2024-11-22 21:48:34,658 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33605' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-efcae4f40ec64c5f7ca27938c1e9d594', 'ndarray-bbcff8349ee42c708f6fa6a3154c2ae0'} (stimulus_id='handle-worker-cleanup-1732340914.6587126')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(boosting_type='goss', class_weight='balanced',
                                max_depth=10, n_estimators=84, n_jobs=1,
                                num_leaves=105, verbose=-1))])
score start
train score: {'auroc': 0.9832322172859107, 'accuracy': 0.8821642727653047, 'balanced_accuracy': 0.9133002563473754, 'logloss': 0.2563280987760599, 'f1': 0.8544107239742348}
original test score: {'auroc': 0.9725205632338988, 'accuracy': 0.8518518518518519, 'balanced_accuracy': 0.8798742517165173, 'logloss': 0.30575796175835135, 'f1': 0.8205234020193846}
imputed test score: {'auroc': 0.9683440096109671, 'accuracy': 0.8437081659973227, 'balanced_accuracy': 0.8703688755624001, 'logloss': 0.32913169565886574, 'f1': 0.8111326852836646}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435018580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.7977834706642699
Generation:   4%|▍         | 1/25 [00:52<20:53, 52.21s/it]Generation:  2
Best f1_score score: 0.7977834706642699
Generation:   8%|▊         | 2/25 [01:41<19:23, 50.57s/it]Generation:  3
Best f1_score score: 0.8009771214454096
Generation:  12%|█▏        | 3/25 [05:51<51:58, 141.76s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474701f90> 

Generation:  4
Best f1_score score: 0.8009771214454096
Generation:  16%|█▌        | 4/25 [15:56<1:53:31, 324.36s/it]Generation:  5
Best f1_score score: 0.8125382450088281
Generation:  20%|██        | 5/25 [22:26<1:56:05, 348.25s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464f43430> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554679dad70> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547471cd90> 

Generation:  6
Best f1_score score: 0.8125382450088281
Generation:  24%|██▍       | 6/25 [32:31<2:17:56, 435.59s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467aa03d0> 

Generation:  7
Best f1_score score: 0.8125382450088281
Generation:  28%|██▊       | 7/25 [42:35<2:27:09, 490.55s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464f40490> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f593c0> 

Generation:  8
Best f1_score score: 0.8125382450088281
Generation:  32%|███▏      | 8/25 [52:40<2:29:17, 526.91s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1552bc2c3ac0> 

Generation:  9
Best f1_score score: 0.8134381490811041
Generation:  36%|███▌      | 9/25 [1:02:45<2:27:03, 551.45s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467716ad0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465057eb0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0e200> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.8134381490811041
Generation:  40%|████      | 10/25 [1:09:27<2:06:18, 505.23s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467a2f880> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554671d6ce0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546508a590> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fbc10> 

Generation:  11
Best f1_score score: 0.8389886888621335
Generation:  44%|████▍     | 11/25 [1:19:32<2:05:02, 535.88s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466c25ba0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554671f4130> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e1ba90> 

Generation:  12
Best f1_score score: 0.8389886888621335
Generation:  48%|████▊     | 12/25 [1:29:37<2:00:38, 556.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464b87be0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554644f8dc0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451a96bc0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451120460> 

Generation:  13
Best f1_score score: 0.8389886888621335
Generation:  52%|█████▏    | 13/25 [1:39:42<1:54:17, 571.46s/it]Generation:  14
Best f1_score score: 0.8389886888621335
Generation:  56%|█████▌    | 14/25 [1:48:29<1:42:16, 557.88s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547473b850> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452436740> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f016c0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155453db8850> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554657613f0> 

Generation:  15
Best f1_score score: 0.8505391759085235
Generation:  60%|██████    | 15/25 [1:58:34<1:35:21, 572.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545253e440> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451fcd7e0> 

Generation:  16
Best f1_score score: 0.8505391759085235
Generation:  64%|██████▍   | 16/25 [2:08:39<1:27:17, 581.94s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554516d7040> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547473b8e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554656548e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464e25570> 

Generation:  17
Best f1_score score: 0.8529004159254143
Generation:  68%|██████▊   | 17/25 [2:18:43<1:18:29, 588.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464d20a30> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464d43b20> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554671d5660> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547473dba0> 

Generation:  18
Best f1_score score: 0.8529004159254143
Generation:  72%|███████▏  | 18/25 [2:28:50<1:09:19, 594.20s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b4f0c70> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546573d510> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545432ed40> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546565dcf0> 

Generation:  19
Best f1_score score: 0.8529004159254143
Generation:  76%|███████▌  | 19/25 [2:38:57<59:47, 597.96s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554668353f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554674d9b10> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454310b50> 

Generation:  20
Best f1_score score: 0.8529004159254143
Generation:  80%|████████  | 20/25 [2:49:02<50:00, 600.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467b30460> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554677c7d60> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467989690> 

Generation:  21
Best f1_score score: 0.8546694605193703
Generation:  84%|████████▍ | 21/25 [2:59:08<40:07, 601.92s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546789f9d0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554522654b0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546792c280> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451365450> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464a39810> 

Generation:  22
Best f1_score score: 0.8546694605193703
Generation:  88%|████████▊ | 22/25 [3:09:15<30:09, 603.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554433286d0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15528e2189a0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ae93c0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554650e2860> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554597d91b0> 

Generation:  23
Best f1_score score: 0.8546694605193703
Generation:  92%|█████████▏| 23/25 [3:19:21<20:08, 604.34s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554522d6d10> 

Generation:  24
Best f1_score score: 0.8546694605193703
Generation:  96%|█████████▌| 24/25 [3:29:27<10:04, 604.65s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465ea40d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547473aa10> 

Generation:  25
Best f1_score score: 0.8546694605193703
Generation: 100%|██████████| 25/25 [3:39:33<00:00, 605.12s/it]Generation: 100%|██████████| 25/25 [3:39:33<00:00, 526.94s/it]
2024-11-23 01:29:45,411 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:38155' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-bbcff8349ee42c708f6fa6a3154c2ae0', 'DataFrame-799d26c91538e3b5eb9b5b36c8c133e1'} (stimulus_id='handle-worker-cleanup-1732354185.4117587')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=27, weights='distance')),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.0350943574736,
                               hidden_layer_sizes=[135, 135, 135],
                               learning_rate='adaptive',
                               learning_rate_init=0.0104119175826,
                               n_iter_no_change=32))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9778327842298641, 'accuracy': 0.8860409984660438, 'balanced_accuracy': 0.827186797227578, 'logloss': 0.25645020379689004, 'f1': 0.8433018353853754}
test score: {'auroc': 0.9737827341251567, 'accuracy': 0.8782909415439536, 'balanced_accuracy': 0.821031844257997, 'logloss': 0.2826893479888136, 'f1': 0.8353721309817891}
original test score: {'auroc': 0.9811777252837283, 'accuracy': 0.8895582329317269, 'balanced_accuracy': 0.8347147266760663, 'logloss': 0.2364344119647882, 'f1': 0.8502995142061981}
score end
41027
lvl
0.01
type
MNAR
num_run
3
class_full
finished
all finished
full run takes
9.98054309838348
hours
DONE
