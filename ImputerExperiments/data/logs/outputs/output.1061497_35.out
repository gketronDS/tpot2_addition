Run: 35
/cm/local/apps/slurm/var/spool/job1061497/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/40498/40498.pkl
working on 
../data/c/40498/class_full_MNAR_0.3_2
0.8555612564086914
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-17 06:48:51,331] A new study created in memory with name: no-name-72d8c7e3-7db2-4bda-be3e-b0bd2bee26d1
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-17 06:48:51,449] Trial 0 finished with value: 0.12779296941993196 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.12779296941993196.
running
running
running
running
running
[I 2024-11-17 06:48:51,915] Trial 5 finished with value: 0.12874424961520134 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.12779296941993196.
[I 2024-11-17 06:48:52,040] Trial 9 finished with value: 0.12779296941993196 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.12779296941993196.
running
running
[I 2024-11-17 06:48:52,210] Trial 16 finished with value: 0.12779296941993196 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.12779296941993196.
running
[I 2024-11-17 06:48:52,357] Trial 3 finished with value: 0.26307051932202496 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 0 with value: 0.12779296941993196.
running
[I 2024-11-17 06:48:54,410] Trial 1 finished with value: 0.11551121499350936 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 69, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:48:55,298] Trial 8 finished with value: 0.1250164620729696 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3547, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:48:55,440] Trial 19 finished with value: 0.12053007003250149 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1256, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:48:55,596] Trial 6 finished with value: 0.12401238875471185 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2683, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:48:57,947] Trial 24 finished with value: 0.1250164620729696 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3405, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:02,393] Trial 13 finished with value: 0.23345161521949365 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 2, 'learning_rate': 0.0002127637247442032, 'p_miss': 0.1004169585271885}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:03,533] Trial 21 finished with value: 0.2590851255754485 and parameters: {'model_name': 'GAIN', 'batch_size': 216, 'hint_rate': 0.09970708783541841, 'alpha': 7, 'iterations': 3, 'learning_rate': 0.00024910866629252495, 'p_miss': 0.03939426527145224}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:06,351] Trial 10 finished with value: 0.16520265037097095 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 5, 'learning_rate': 0.04887441320974997, 'p_miss': 0.23976996830208913}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:08,079] Trial 17 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.14407392799563584, 'alpha': 91, 'iterations': 68, 'learning_rate': 0.0015132907780202075, 'p_miss': 0.0998167933295633}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:14,101] Trial 20 finished with value: 0.12401252551324704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:17,612] Trial 30 finished with value: 0.11591081247474273 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 129, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:18,419] Trial 2 finished with value: 0.12487779693336132 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:20,012] Trial 28 finished with value: 0.12277635320808958 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:20,260] Trial 7 finished with value: 0.12341479225603055 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:21,094] Trial 31 finished with value: 0.11564032817033132 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 73, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:21,502] Trial 32 finished with value: 0.1204755587949227 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:23,472] Trial 34 finished with value: 0.11614506850477728 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 38, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:24,006] Trial 33 finished with value: 0.11572493837006045 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 111, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:24,944] Trial 35 finished with value: 0.11568114891436336 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 96, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:25,152] Trial 36 finished with value: 0.11589721533252847 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 118, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:27,981] Trial 37 finished with value: 0.1190460304390821 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 917, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:28,311] Trial 38 finished with value: 0.11954116042757323 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1022, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:28,740] Trial 26 finished with value: 0.1861538163345932 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:29,140] Trial 39 finished with value: 0.11954635594729845 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1023, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:29,650] Trial 40 finished with value: 0.119792223669005 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1081, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:35,363] Trial 29 finished with value: 0.12570962507613465 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:36,203] Trial 11 finished with value: 0.11631546508354038 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:38,093] Trial 46 finished with value: 0.11773006684808156 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 583, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:38,704] Trial 47 finished with value: 0.11762514850619091 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 555, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:42,956] Trial 14 finished with value: 0.11917211774708167 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:49:48,279] Trial 18 finished with value: 0.11694618332299785 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:55:05,946] Trial 25 finished with value: 0.13303780626992862 and parameters: {'model_name': 'VAE', 'batch_size': 991, 'iterations': 74, 'learning_rate': 0.01826554521177423, 'p_miss': 0.021684316957387872}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:58:03,087] Trial 23 finished with value: 0.13836943262692164 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 197, 'learning_rate': 0.008132905755400563, 'p_miss': 0.01043041238339863}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 06:58:06,561] Trial 53 finished with value: 0.11744652510782994 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 523, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:17:21,539] Trial 27 finished with value: 0.11835833084501879 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:34,292] Trial 55 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9788993069253016, 'alpha': 0, 'iterations': 2357, 'learning_rate': 0.0020970356912407427, 'p_miss': 0.2894787991032542}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:37,478] Trial 56 finished with value: 0.1169120067538778 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 367, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:40,292] Trial 57 finished with value: 0.1161764721710858 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:44,726] Trial 58 finished with value: 0.12336942386901825 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1986, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:45,124] Trial 59 finished with value: 0.26307051932202496 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:48,653] Trial 60 finished with value: 0.11710355368147993 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 401, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:51,866] Trial 61 finished with value: 0.11713677811375882 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 416, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:52,248] Trial 62 finished with value: 0.26307051932202496 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:29:56,381] Trial 63 finished with value: 0.12237103930867292 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1737, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:36:22,887] Trial 52 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9636839150854426, 'alpha': 44, 'iterations': 7984, 'learning_rate': 0.004236451928404582, 'p_miss': 0.2876456209526642}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:36:25,336] Trial 65 finished with value: 0.11653866225954213 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 284, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:36:28,322] Trial 66 finished with value: 0.11567295769737715 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 78, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:36:31,695] Trial 67 finished with value: 0.11807406629390367 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 683, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:36:34,046] Trial 68 finished with value: 0.11596916272876638 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 22, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:38:59,183] Trial 22 finished with value: 0.26275353529111944 and parameters: {'model_name': 'GAIN', 'batch_size': 323, 'hint_rate': 0.45476866845120745, 'alpha': 67, 'iterations': 1632, 'learning_rate': 0.06581224292477177, 'p_miss': 0.034047816026146704}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:39:45,059] Trial 70 finished with value: 0.23635771745598086 and parameters: {'model_name': 'VAE', 'batch_size': 60, 'iterations': 11, 'learning_rate': 0.00046205866773165935, 'p_miss': 0.19319213902384685}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:39:47,640] Trial 71 finished with value: 0.11616731612940161 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 218, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:39:51,704] Trial 72 finished with value: 0.11759347473063775 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 748, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:39:52,295] Trial 73 finished with value: 0.12874424961520134 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:39:54,595] Trial 74 finished with value: 0.11655700277452077 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 288, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:40:41,221] Trial 4 finished with value: 0.13283384670823706 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 885, 'learning_rate': 0.00035173025080787444, 'p_miss': 0.29918323297541866}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:40:44,079] Trial 76 finished with value: 0.11629629036223124 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 232, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:40:46,367] Trial 77 finished with value: 0.13114770896641423 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:40:49,367] Trial 78 finished with value: 0.11618939800145153 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 226, 'weights': 'uniform'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:40:52,481] Trial 79 finished with value: 0.11582731673433244 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 235, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:40:58,236] Trial 80 finished with value: 0.12372710775211246 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2601, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:41:01,620] Trial 81 finished with value: 0.11644554545496251 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 381, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:41:06,461] Trial 82 finished with value: 0.23849214329390006 and parameters: {'model_name': 'VAE', 'batch_size': 148, 'iterations': 1, 'learning_rate': 0.00011101969812627015, 'p_miss': 0.1562346444336181}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:41:10,750] Trial 83 finished with value: 0.11749607355240184 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 713, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:41:16,847] Trial 84 finished with value: 0.1250164620729696 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3804, 'weights': 'distance'}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:41:23,390] Trial 85 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.6012559303405832, 'alpha': 36, 'iterations': 20, 'learning_rate': 0.0008054244684157536, 'p_miss': 0.09351071459874255}. Best is trial 1 with value: 0.11551121499350936.
running
[I 2024-11-17 07:41:26,547] Trial 86 finished with value: 0.11526144711049764 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 107, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:41:29,688] Trial 87 finished with value: 0.11556169129545395 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 170, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:41:32,664] Trial 88 finished with value: 0.11564650702575534 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 201, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:41:35,182] Trial 89 finished with value: 0.12206208728910531 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:41:38,747] Trial 90 finished with value: 0.11556947738917644 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 174, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:41:42,928] Trial 91 finished with value: 0.11650373935874972 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 394, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:41:45,990] Trial 92 finished with value: 0.11566842019301996 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 189, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:41:52,289] Trial 93 finished with value: 0.1250164620729696 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3089, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:44:10,063] Trial 54 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9093474423779699, 'alpha': 49, 'iterations': 8801, 'learning_rate': 0.0016092807324509552, 'p_miss': 0.2975873308217588}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:58:35,269] Trial 75 finished with value: 0.13428000490488998 and parameters: {'model_name': 'VAE', 'batch_size': 115, 'iterations': 321, 'learning_rate': 0.000536661266994931, 'p_miss': 0.16427825245108119}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:58:38,567] Trial 96 finished with value: 0.11562202304001819 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 203, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:58:42,245] Trial 97 finished with value: 0.11566366668291957 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 190, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:58:46,111] Trial 98 finished with value: 0.1168722651048933 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 517, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:58:50,053] Trial 99 finished with value: 0.11570780649034762 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 217, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:58:57,356] Trial 100 finished with value: 0.11632909330443979 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:00,219] Trial 101 finished with value: 0.11554832975862454 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 161, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:01,391] Trial 102 finished with value: 0.26307051932202496 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:05,242] Trial 103 finished with value: 0.11671793932901689 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 469, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:10,893] Trial 104 finished with value: 0.12020250082168367 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1476, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:15,433] Trial 105 finished with value: 0.11798876101449333 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 843, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:19,220] Trial 106 finished with value: 0.11556875756406593 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 172, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:22,752] Trial 107 finished with value: 0.11557935008575745 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 148, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:25,829] Trial 108 finished with value: 0.11545079306469397 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 122, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:29,866] Trial 109 finished with value: 0.11635038587507066 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 359, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:34,170] Trial 110 finished with value: 0.11701274711860823 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 548, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:37,450] Trial 111 finished with value: 0.11534229548395114 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 113, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 07:59:41,103] Trial 112 finished with value: 0.11545079306469397 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 122, 'weights': 'distance'}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 08:06:35,752] Trial 94 finished with value: 0.13306141921726083 and parameters: {'model_name': 'VAE', 'batch_size': 659, 'iterations': 326, 'learning_rate': 0.02192751294410061, 'p_miss': 0.21816548970940708}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 08:08:03,001] Trial 95 finished with value: 0.13282148356264517 and parameters: {'model_name': 'VAE', 'batch_size': 680, 'iterations': 295, 'learning_rate': 0.02110179877394171, 'p_miss': 0.2180118419718444}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 08:08:23,903] Trial 69 finished with value: 0.13581542100138305 and parameters: {'model_name': 'VAE', 'batch_size': 44, 'iterations': 694, 'learning_rate': 0.08097255951023365, 'p_miss': 0.1942709285907551}. Best is trial 86 with value: 0.11526144711049764.
running
[I 2024-11-17 08:08:27,567] Trial 116 finished with value: 0.11523704639846474 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 99, 'weights': 'distance'}. Best is trial 116 with value: 0.11523704639846474.
running
[I 2024-11-17 08:08:30,987] Trial 117 finished with value: 0.11521520655813862 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 74, 'weights': 'distance'}. Best is trial 117 with value: 0.11521520655813862.
running
[I 2024-11-17 08:08:34,712] Trial 118 finished with value: 0.11529582728465546 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 105, 'weights': 'distance'}. Best is trial 117 with value: 0.11521520655813862.
running
[I 2024-11-17 08:08:38,198] Trial 119 finished with value: 0.11521520655813862 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 74, 'weights': 'distance'}. Best is trial 117 with value: 0.11521520655813862.
running
[I 2024-11-17 08:17:31,919] Trial 41 finished with value: 0.2689226316950405 and parameters: {'model_name': 'GAIN', 'batch_size': 915, 'hint_rate': 0.987528666923059, 'alpha': 42, 'iterations': 2486, 'learning_rate': 0.059758785920032094, 'p_miss': 0.298709884265497}. Best is trial 117 with value: 0.11521520655813862.
running
[I 2024-11-17 08:17:34,770] Trial 121 finished with value: 0.12486150870056423 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'distance'}. Best is trial 117 with value: 0.11521520655813862.
running
[I 2024-11-17 08:33:22,689] Trial 113 finished with value: 0.112604594820027 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 113 with value: 0.112604594820027.
running
[I 2024-11-17 08:40:40,989] Trial 114 finished with value: 0.112142477372667 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 08:42:14,945] Trial 120 finished with value: 0.11298794244430546 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 08:42:35,160] Trial 115 finished with value: 0.11237804815063439 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 08:45:41,579] Trial 122 finished with value: 0.13178871166897926 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 08:50:39,344] Trial 15 finished with value: 0.13908362523765222 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 2128, 'learning_rate': 0.04521454397849931, 'p_miss': 0.0594457061911094}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:08:03,024] Trial 123 finished with value: 0.11373437432885318 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:15:44,896] Trial 124 finished with value: 0.11299720378979036 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:16:26,862] Trial 12 finished with value: 0.13927572067452765 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 2944, 'learning_rate': 0.0010368656806653013, 'p_miss': 0.22983234392675844}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:17:12,499] Trial 125 finished with value: 0.11278788699031819 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:17:38,968] Trial 126 finished with value: 0.11292753568322125 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:20:39,316] Trial 127 finished with value: 0.11278447670608667 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:25:30,622] Trial 128 finished with value: 0.1126523208999988 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:44:02,177] Trial 129 finished with value: 0.11301712165189577 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:51:42,469] Trial 130 finished with value: 0.11297259494806841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:52:33,428] Trial 131 finished with value: 0.11224550197426311 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:52:50,843] Trial 132 finished with value: 0.11346964581452246 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:53:48,223] Trial 133 finished with value: 0.11254051973642931 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 09:56:25,596] Trial 134 finished with value: 0.1122358733359536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 10:00:56,668] Trial 135 finished with value: 0.11285034251436525 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 10:19:34,145] Trial 136 finished with value: 0.1129863560634203 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 10:20:24,515] Trial 48 finished with value: 0.13338684405752507 and parameters: {'model_name': 'VAE', 'batch_size': 437, 'iterations': 3200, 'learning_rate': 0.04768444574032075, 'p_miss': 0.29894129082409493}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 10:25:25,025] Trial 137 finished with value: 0.11255945695330867 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 10:26:09,592] Trial 139 finished with value: 0.11279284151458895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 10:26:34,233] Trial 138 finished with value: 0.11293714026770571 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 10:27:20,135] Trial 140 finished with value: 0.1131154249399104 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 114 with value: 0.112142477372667.
running
[I 2024-11-17 10:29:21,447] Trial 141 finished with value: 0.11200293076428872 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 141 with value: 0.11200293076428872.
running
[I 2024-11-17 10:32:43,739] Trial 142 finished with value: 0.1115470075959093 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 10:51:00,164] Trial 143 finished with value: 0.1133532590125885 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 10:51:42,411] Trial 144 finished with value: 0.11217855736045801 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 10:56:58,566] Trial 145 finished with value: 0.11297926946162942 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 10:57:21,211] Trial 146 finished with value: 0.11283085905597041 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 10:58:16,792] Trial 147 finished with value: 0.11282447008010602 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:00:07,770] Trial 148 finished with value: 0.11183985975842621 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:02:05,988] Trial 149 finished with value: 0.11295523363802269 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:04:58,625] Trial 150 finished with value: 0.11198709386311487 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:19:39,910] Trial 64 finished with value: 0.255499783575075 and parameters: {'model_name': 'GAIN', 'batch_size': 54, 'hint_rate': 0.7856283602421044, 'alpha': 99, 'iterations': 7369, 'learning_rate': 0.07483059045486913, 'p_miss': 0.18819172940073012}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:23:36,630] Trial 151 finished with value: 0.11188504368092718 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:24:18,437] Trial 152 finished with value: 0.11214373149986531 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:27:37,209] Trial 154 finished with value: 0.11349645258851956 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:28:50,725] Trial 155 finished with value: 0.11341851331615734 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:29:29,873] Trial 153 finished with value: 0.11193692982841603 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:31:52,743] Trial 157 finished with value: 0.1134373455327983 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 142 with value: 0.1115470075959093.
running
[I 2024-11-17 11:32:32,981] Trial 156 finished with value: 0.11108594393587574 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 156 with value: 0.11108594393587574.
running
[I 2024-11-17 11:36:51,206] Trial 158 finished with value: 0.11226245348461902 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 156 with value: 0.11108594393587574.
running
[I 2024-11-17 11:50:18,388] Trial 159 finished with value: 0.11238560494826857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 156 with value: 0.11108594393587574.
running
[I 2024-11-17 11:55:27,063] Trial 160 finished with value: 0.11082083606730093 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 11:56:15,331] Trial 161 finished with value: 0.11126516324962647 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 11:58:42,867] Trial 162 finished with value: 0.1127784883458605 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:00:14,729] Trial 163 finished with value: 0.111484117254992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:00:22,941] Trial 164 finished with value: 0.11213644793530006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:02:25,431] Trial 172 finished with value: 0.17277707129649816 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:02:28,577] Trial 173 finished with value: 0.17566642372887312 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:02:53,125] Trial 175 finished with value: 0.12595761568897204 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:02:53,538] Trial 174 finished with value: 0.12595761568897204 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'descending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:03:15,874] Trial 177 finished with value: 0.1163295814097701 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:04:33,829] Trial 165 finished with value: 0.11282341718614937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:05:29,128] Trial 166 finished with value: 0.11234847742721973 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:08:29,022] Trial 167 finished with value: 0.11198452962052693 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:21:26,342] Trial 168 finished with value: 0.11151807193020238 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:27:14,385] Trial 169 finished with value: 0.11220064152911499 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:28:21,708] Trial 170 finished with value: 0.11135141185073291 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:29:37,165] Trial 45 finished with value: 0.2674167175723322 and parameters: {'model_name': 'GAIN', 'batch_size': 804, 'hint_rate': 0.9839976962240238, 'alpha': 0, 'iterations': 9261, 'learning_rate': 0.02654535253870807, 'p_miss': 0.29222468471901963}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:30:30,779] Trial 171 finished with value: 0.11223783785881825 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:33:18,786] Trial 176 finished with value: 0.11193668409562836 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:33:47,157] Trial 178 finished with value: 0.11194930080945864 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:34:46,237] Trial 179 finished with value: 0.11216561618419488 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:36:44,483] Trial 180 finished with value: 0.11233394608238023 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:38:58,646] Trial 181 finished with value: 0.11213502640195147 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:39:08,031] Trial 50 finished with value: 0.27069892560841885 and parameters: {'model_name': 'GAIN', 'batch_size': 934, 'hint_rate': 0.9872932900815348, 'alpha': 47, 'iterations': 9111, 'learning_rate': 0.05200120297107403, 'p_miss': 0.29707270280364706}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:51:45,949] Trial 182 finished with value: 0.11218956926020843 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'roman'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:58:19,250] Trial 183 finished with value: 0.11257820656502886 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 12:59:10,746] Trial 184 finished with value: 0.11218473795014557 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 13:00:31,754] Trial 185 finished with value: 0.11194504120182583 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 13:01:43,830] Trial 186 finished with value: 0.11239243433920984 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 13:04:37,129] Trial 187 finished with value: 0.11148157841610642 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 13:04:46,703] Trial 188 finished with value: 0.11200258220861911 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 160 with value: 0.11082083606730093.
running
[I 2024-11-17 13:04:47,451] Trial 199 finished with value: 0.12874424961520134 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 160 with value: 0.11082083606730093.
[I 2024-11-17 13:05:32,571] Trial 189 finished with value: 0.11210782684869561 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 160 with value: 0.11082083606730093.
[I 2024-11-17 13:07:13,190] Trial 190 finished with value: 0.11190135479850323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 160 with value: 0.11082083606730093.
[I 2024-11-17 13:07:42,194] Trial 191 finished with value: 0.11129823468765485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 160 with value: 0.11082083606730093.
[I 2024-11-17 13:08:05,156] Trial 192 finished with value: 0.11099407886784445 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'roman'}. Best is trial 160 with value: 0.11082083606730093.
[I 2024-11-17 13:16:45,361] Trial 193 finished with value: 0.11080020173296075 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:22:31,139] Trial 194 finished with value: 0.11235159573512583 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:22:48,081] Trial 195 finished with value: 0.1119768744098738 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:24:01,472] Trial 43 finished with value: 0.13259657606032027 and parameters: {'model_name': 'VAE', 'batch_size': 714, 'iterations': 4959, 'learning_rate': 0.08684462655031469, 'p_miss': 0.29524317465150096}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:24:19,732] Trial 196 finished with value: 0.11196651870725768 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:25:14,173] Trial 197 finished with value: 0.1114090851785257 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:26:51,863] Trial 198 finished with value: 0.11101359820963089 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:44:49,602] Trial 44 finished with value: 0.1324995221487001 and parameters: {'model_name': 'VAE', 'batch_size': 473, 'iterations': 8151, 'learning_rate': 0.09298649190444068, 'p_miss': 0.29956040663091255}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:46:10,979] Trial 49 finished with value: 0.1335047858208292 and parameters: {'model_name': 'VAE', 'batch_size': 439, 'iterations': 8235, 'learning_rate': 0.09224275846396311, 'p_miss': 0.2957312668201638}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:47:14,081] Trial 42 finished with value: 0.13332836353499813 and parameters: {'model_name': 'VAE', 'batch_size': 763, 'iterations': 7208, 'learning_rate': 0.08608019148599486, 'p_miss': 0.29345294316266785}. Best is trial 193 with value: 0.11080020173296075.
[I 2024-11-17 13:50:56,397] Trial 51 finished with value: 0.13360285529739202 and parameters: {'model_name': 'VAE', 'batch_size': 640, 'iterations': 9269, 'learning_rate': 0.08154805543655425, 'p_miss': 0.29906719048592634}. Best is trial 193 with value: 0.11080020173296075.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
dtype: int64
0.11080020173296075
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'random'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.3535390944859066
Generation:   4%|▍         | 1/25 [00:16<06:41, 16.72s/it]Generation:  2
Best f1_score score: 0.3615563256543094
Generation:   8%|▊         | 2/25 [00:39<07:44, 20.18s/it]Generation:  3
Best f1_score score: 0.3615563256543094
Generation:  12%|█▏        | 3/25 [01:01<07:46, 21.22s/it]Generation:  4
Best f1_score score: 0.3784015042197054
Generation:  16%|█▌        | 4/25 [01:38<09:34, 27.36s/it]Generation:  5
Best f1_score score: 0.3904942555787985
Generation:  20%|██        | 5/25 [04:25<25:52, 77.64s/it]Generation:  6
Best f1_score score: 0.3937889530591593
Generation:  24%|██▍       | 6/25 [04:39<17:42, 55.91s/it]Generation:  7
Best f1_score score: 0.3937889530591593
Generation:  28%|██▊       | 7/25 [04:56<13:02, 43.46s/it]Generation:  8
Best f1_score score: 0.3937889530591593
Generation:  32%|███▏      | 8/25 [07:34<22:35, 79.74s/it]Generation:  9
Best f1_score score: 0.3937889530591593
Generation:  36%|███▌      | 9/25 [08:10<17:38, 66.14s/it]Generation:  10
Best f1_score score: 0.3937889530591593
Generation:  40%|████      | 10/25 [08:30<12:57, 51.84s/it]Generation:  11
Best f1_score score: 0.4023389424178084
Generation:  44%|████▍     | 11/25 [09:00<10:34, 45.32s/it]Generation:  12
Best f1_score score: 0.4023389424178084
Generation:  48%|████▊     | 12/25 [09:24<08:21, 38.58s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464fbe680> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  13
Best f1_score score: 0.4023389424178084
Generation:  52%|█████▏    | 13/25 [09:59<07:32, 37.70s/it]Generation:  14
Best f1_score score: 0.4023389424178084
Generation:  56%|█████▌    | 14/25 [10:26<06:19, 34.46s/it]Generation:  15
Best f1_score score: 0.4023389424178084
Generation:  60%|██████    | 15/25 [11:24<06:54, 41.44s/it]Generation:  16
Best f1_score score: 0.4023389424178084
Generation:  64%|██████▍   | 16/25 [11:51<05:33, 37.04s/it]Generation:  17
Best f1_score score: 0.4023389424178084
Generation:  68%|██████▊   | 17/25 [12:24<04:46, 35.83s/it]Generation:  18
Best f1_score score: 0.40800493950085776
Generation:  72%|███████▏  | 18/25 [13:08<04:29, 38.52s/it]Generation:  19
Best f1_score score: 0.40800493950085776
Generation:  76%|███████▌  | 19/25 [13:30<03:19, 33.28s/it]Generation:  20
Best f1_score score: 0.40800493950085776
Generation:  80%|████████  | 20/25 [14:00<02:42, 32.51s/it]Generation:  21
Best f1_score score: 0.40800493950085776
Generation:  84%|████████▍ | 21/25 [14:27<02:03, 30.79s/it]Generation:  22
Best f1_score score: 0.40800493950085776
Generation:  88%|████████▊ | 22/25 [14:49<01:24, 28.09s/it]Generation:  23
Best f1_score score: 0.40800493950085776
Generation:  92%|█████████▏| 23/25 [15:22<00:58, 29.50s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0a60> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  24
Best f1_score score: 0.40800493950085776
Generation:  96%|█████████▌| 24/25 [15:49<00:28, 28.79s/it]Generation:  25
Best f1_score score: 0.40800493950085776
Generation: 100%|██████████| 25/25 [16:26<00:00, 31.37s/it]Generation: 100%|██████████| 25/25 [16:30<00:00, 39.61s/it]
2024-11-17 14:10:35,148 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:36161' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-30e96f69f28ddb2c57452e14ddbc16db', 'ndarray-453a6c1882b0f66cb296036f202f3e20'} (stimulus_id='handle-worker-cleanup-1731881435.14826')
Fitted
Pipeline(steps=[('randomforestclassifier',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features=0.3247736632504,
                                        min_samples_leaf=4,
                                        min_samples_split=12,
                                        n_estimators=128))])
score start
train score: {'auroc': 0.9873297645939159, 'accuracy': 0.8848902501276161, 'balanced_accuracy': 0.9538903690943826, 'logloss': 0.7012068725534863, 'f1': 0.9110105744210083}
original test score: {'auroc': 0.8235780456182421, 'accuracy': 0.5785714285714286, 'balanced_accuracy': 0.3553372192363356, 'logloss': 1.1202468837342616, 'f1': 0.3575526656623098}
imputed test score: {'auroc': 0.7711240239982597, 'accuracy': 0.5357142857142857, 'balanced_accuracy': 0.30173439103851474, 'logloss': 1.1864928893777866, 'f1': 0.3040088829065565}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435018580>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd11b0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0be0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0820> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd07f0> 

Generation:  1
Best f1_score score: 0.34071056565893315
Generation:   4%|▍         | 1/25 [10:02<4:01:07, 602.82s/it]Generation:  2
Best f1_score score: 0.34071056565893315
Generation:   8%|▊         | 2/25 [10:18<1:38:37, 257.28s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553ee2c71c0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  3
Best f1_score score: 0.3552765531738492
Generation:  12%|█▏        | 3/25 [11:00<58:19, 159.07s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547406c190> 

Generation:  4
Best f1_score score: 0.3587867343389318
Generation:  16%|█▌        | 4/25 [21:05<1:57:17, 335.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474089330> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d705b0> 

Generation:  5
Best f1_score score: 0.3587867343389318
Generation:  20%|██        | 5/25 [31:10<2:24:12, 432.64s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545741bdf0> 

Generation:  6
Best f1_score score: 0.36505748576714675
Generation:  24%|██▍       | 6/25 [41:16<2:35:38, 491.48s/it]Generation:  7
Best f1_score score: 0.36505748576714675
Generation:  28%|██▊       | 7/25 [48:26<2:21:21, 471.18s/it]Generation:  8
Best f1_score score: 0.36602007677685133
Generation:  32%|███▏      | 8/25 [49:05<1:34:35, 333.88s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fe83550> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554573afa60> 

Generation:  9
Best f1_score score: 0.36602007677685133
Generation:  36%|███▌      | 9/25 [59:11<1:51:39, 418.71s/it]Generation:  10
Best f1_score score: 0.36602007677685133
Generation:  40%|████      | 10/25 [1:00:01<1:16:13, 304.89s/it]Generation:  11
Best f1_score score: 0.36602007677685133
Generation:  44%|████▍     | 11/25 [1:00:49<52:48, 226.30s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545c1c76d0> 

Generation:  12
Best f1_score score: 0.36602007677685133
Generation:  48%|████▊     | 12/25 [1:10:55<1:14:04, 341.89s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554525d8e20> 

Generation:  13
Best f1_score score: 0.37059790412843857
Generation:  52%|█████▏    | 13/25 [1:21:02<1:24:27, 422.27s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e05a230> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ff182e0> 

Generation:  14
Best f1_score score: 0.3937504695135668
Generation:  56%|█████▌    | 14/25 [1:31:07<1:27:30, 477.31s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745bd780> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.3995491523666805
Generation:  60%|██████    | 15/25 [1:31:34<56:55, 341.52s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f7068c0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456cea380> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.40806573589016804
Generation:  64%|██████▍   | 16/25 [1:34:27<43:37, 290.83s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fce86d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d380a0> 

Generation:  17
Best f1_score score: 0.40806573589016804
Generation:  68%|██████▊   | 17/25 [1:44:33<51:26, 385.78s/it]Generation:  18
Best f1_score score: 0.40806573589016804
Generation:  72%|███████▏  | 18/25 [1:44:48<31:59, 274.22s/it]Generation:  19
Best f1_score score: 0.42164977857230046
Generation:  76%|███████▌  | 19/25 [1:45:06<19:44, 197.38s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545c270730> 

Generation:  20
Best f1_score score: 0.42164977857230046
Generation:  80%|████████  | 20/25 [1:55:12<26:39, 319.99s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454d2ab90> 

Generation:  21
Best f1_score score: 0.42164977857230046
Generation:  84%|████████▍ | 21/25 [2:05:19<27:05, 406.26s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d59bd0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474585bd0> 

Generation:  22
Best f1_score score: 0.42164977857230046
Generation:  88%|████████▊ | 22/25 [2:15:28<23:20, 466.89s/it]Generation:  23
Best f1_score score: 0.42215205111493265
Generation:  92%|█████████▏| 23/25 [2:15:48<11:05, 332.78s/it]Generation:  24
Best f1_score score: 0.42247674208015934
Generation:  96%|█████████▌| 24/25 [2:16:04<03:57, 237.91s/it]Generation:  25
Best f1_score score: 0.42247674208015934
Generation: 100%|██████████| 25/25 [2:16:23<00:00, 172.17s/it]Generation: 100%|██████████| 25/25 [2:16:23<00:00, 327.34s/it]
2024-11-17 16:27:09,595 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:39199' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-9b387249548aaf6058e060fd48e9f3fc', 'ndarray-453a6c1882b0f66cb296036f202f3e20'} (stimulus_id='handle-worker-cleanup-1731889629.5954587')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=69, weights='distance')),
                ('extratreesclassifier',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features=0.6239467154026,
                                      min_samples_split=8, n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9996042984510297, 'accuracy': 0.9895354772843288, 'balanced_accuracy': 0.9961340528153023, 'logloss': 0.41244852991623776, 'f1': 0.9657862866089525}
test score: {'auroc': 0.6826638107407226, 'accuracy': 0.5591836734693878, 'balanced_accuracy': 0.30010352313371463, 'logloss': 1.2030439704386044, 'f1': 0.3139314187295558}
original test score: {'auroc': 0.8116809259415125, 'accuracy': 0.6030612244897959, 'balanced_accuracy': 0.3263530529362635, 'logloss': 1.063860639336949, 'f1': 0.3344107841486751}
score end
40498
lvl
0.3
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
9.646184349589877
hours
DONE
