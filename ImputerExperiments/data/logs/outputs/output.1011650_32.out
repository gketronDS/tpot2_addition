Run: 32
/cm/local/apps/slurm/var/spool/job1011650/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/725/725.pkl
working on 
../data/c/725/class_full_MAR_0.5_2
3.5449109077453613
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-23 12:45:58,967] A new study created in memory with name: no-name-59e09158-ab49-4115-a7a4-48191e5c48a0
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-23 12:45:59,187] Trial 3 finished with value: 0.24441503520366498 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.24441503520366498.
running
[I 2024-10-23 12:45:59,443] Trial 9 finished with value: 0.39637177112359195 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 3 with value: 0.24441503520366498.
running
[I 2024-10-23 12:45:59,560] Trial 10 finished with value: 0.24441503520366498 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 3 with value: 0.24441503520366498.
running
[I 2024-10-23 12:45:59,930] Trial 16 finished with value: 0.37956602683567053 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 3 with value: 0.24441503520366498.
running
[I 2024-10-23 12:46:01,703] Trial 8 finished with value: 0.2333465756050969 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1459, 'weights': 'uniform'}. Best is trial 8 with value: 0.2333465756050969.
running
[I 2024-10-23 12:46:01,856] Trial 14 finished with value: 0.23601544026416432 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2588, 'weights': 'uniform'}. Best is trial 8 with value: 0.2333465756050969.
running
[I 2024-10-23 12:46:02,101] Trial 20 finished with value: 0.39637177112359195 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 8 with value: 0.2333465756050969.
running
[I 2024-10-23 12:46:02,321] Trial 22 finished with value: 0.24441503520366498 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 8 with value: 0.2333465756050969.
running
[I 2024-10-23 12:46:02,795] Trial 18 finished with value: 0.2401566504149153 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6048, 'weights': 'distance'}. Best is trial 8 with value: 0.2333465756050969.
running
[I 2024-10-23 12:46:05,070] Trial 23 finished with value: 0.22573899737763484 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 23 with value: 0.22573899737763484.
running
[I 2024-10-23 12:46:05,382] Trial 24 finished with value: 0.23962407844457548 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3687, 'weights': 'uniform'}. Best is trial 23 with value: 0.22573899737763484.
running
[I 2024-10-23 12:46:07,000] Trial 1 finished with value: 0.22919160084337867 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 23 with value: 0.22573899737763484.
[I 2024-10-23 12:46:07,135] Trial 6 finished with value: 0.22607042772759645 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 23 with value: 0.22573899737763484.
running
running
[I 2024-10-23 12:46:07,393] Trial 13 finished with value: 0.22533778427792014 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:08,488] Trial 5 finished with value: 0.26092399058231425 and parameters: {'model_name': 'VAE', 'batch_size': 103, 'iterations': 1, 'learning_rate': 0.07596227103486496, 'p_miss': 0.13825551643933603}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:10,047] Trial 25 finished with value: 0.22573899737763484 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:10,992] Trial 26 finished with value: 0.22573899737763484 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:11,830] Trial 29 finished with value: 0.3955780985177658 and parameters: {'model_name': 'GAIN', 'batch_size': 66, 'hint_rate': 0.7151962642430456, 'alpha': 5, 'iterations': 7, 'learning_rate': 0.024906018581409575, 'p_miss': 0.07642329290365965}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:12,385] Trial 28 finished with value: 0.22573898212908614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:13,226] Trial 27 finished with value: 0.22573898212908614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:19,769] Trial 17 finished with value: 0.395863182048583 and parameters: {'model_name': 'GAIN', 'batch_size': 428, 'hint_rate': 0.3678691299247555, 'alpha': 86, 'iterations': 25, 'learning_rate': 0.08979035369021163, 'p_miss': 0.09834474934076518}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:19,961] Trial 4 finished with value: 0.24573818047783896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:22,250] Trial 7 finished with value: 0.2485452648492712 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:22,929] Trial 30 finished with value: 0.22565953136396133 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:23,905] Trial 2 finished with value: 0.40602818775104377 and parameters: {'model_name': 'GAIN', 'batch_size': 306, 'hint_rate': 0.6736579067020793, 'alpha': 31, 'iterations': 35, 'learning_rate': 0.013672227824782002, 'p_miss': 0.14582586291954452}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:25,941] Trial 33 finished with value: 0.2256594366480673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:38,390] Trial 11 finished with value: 0.388772153913057 and parameters: {'model_name': 'GAIN', 'batch_size': 16, 'hint_rate': 0.8299107745179842, 'alpha': 21, 'iterations': 92, 'learning_rate': 0.003386966913922393, 'p_miss': 0.07356013150061567}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:50,196] Trial 37 finished with value: 0.30255229718336785 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:46:50,435] Trial 36 finished with value: 0.2995507165023413 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:47:06,702] Trial 21 finished with value: 0.24735419672207398 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 59, 'learning_rate': 0.02282111514001016, 'p_miss': 0.030775533940279043}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:47:22,868] Trial 19 finished with value: 0.31495188304792066 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 104, 'learning_rate': 0.017544070594190782, 'p_miss': 0.13704807251548484}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:47:44,041] Trial 46 finished with value: 0.23177717100727518 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 12:54:50,290] Trial 34 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.055587139302182065, 'alpha': 99, 'iterations': 2617, 'learning_rate': 0.00012019799162987319, 'p_miss': 0.26412788893257866}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 13:09:51,800] Trial 31 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.2890702879237245, 'alpha': 80, 'iterations': 5779, 'learning_rate': 0.00013103233171964237, 'p_miss': 0.016748323324078912}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 13:10:00,496] Trial 32 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8229362369978437, 'alpha': 93, 'iterations': 5951, 'learning_rate': 0.00019630146074889508, 'p_miss': 0.29515543674019806}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 13:11:19,433] Trial 15 finished with value: 0.2459699277973802 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 514, 'learning_rate': 0.0009950112397892085, 'p_miss': 0.152542857095897}. Best is trial 13 with value: 0.22533778427792014.
running
[I 2024-10-23 13:15:11,912] Trial 0 finished with value: 0.22270355211122822 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:16:43,119] Trial 47 finished with value: 0.2230706276624926 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:17:45,669] Trial 35 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.06312470706733059, 'alpha': 99, 'iterations': 7706, 'learning_rate': 0.00010000002494648702, 'p_miss': 0.2951626943963048}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:23:13,683] Trial 48 finished with value: 0.22377046457487873 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:38:05,624] Trial 50 finished with value: 0.22387036452759732 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:38:13,744] Trial 49 finished with value: 0.224145628430564 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:39:25,242] Trial 51 finished with value: 0.22374537477302342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:40:35,830] Trial 52 finished with value: 0.22594606212188834 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:42:27,902] Trial 53 finished with value: 0.22464054536682299 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:43:20,153] Trial 54 finished with value: 0.2273517723041864 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:48:57,743] Trial 55 finished with value: 0.2264581647826879 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 13:58:58,754] Trial 58 finished with value: 0.24794273982054663 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:02:40,195] Trial 61 finished with value: 0.24907600919243675 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:04:06,154] Trial 56 finished with value: 0.2269131492125982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:04:15,418] Trial 65 finished with value: 0.2896936939332071 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.000673619541636201, 'p_miss': 0.21248579887816418}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:06:41,782] Trial 57 finished with value: 0.22330881391196983 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:08:05,053] Trial 62 finished with value: 0.25050147907569553 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:08:33,359] Trial 59 finished with value: 0.22355199146227173 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:08:35,632] Trial 69 finished with value: 0.22728886636285955 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 244, 'weights': 'distance'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:10:33,385] Trial 60 finished with value: 0.22388266222131134 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:26:59,683] Trial 63 finished with value: 0.2246414787791055 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:27:00,315] Trial 72 finished with value: 0.3283548191971387 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:30:35,019] Trial 64 finished with value: 0.22565759903447388 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:32:08,929] Trial 66 finished with value: 0.22391804307928836 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:35:11,601] Trial 67 finished with value: 0.22567906764817947 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:35:59,198] Trial 12 finished with value: 0.248169583534512 and parameters: {'model_name': 'VAE', 'batch_size': 206, 'iterations': 1852, 'learning_rate': 0.004687966457377961, 'p_miss': 0.024922161549654}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:36:01,794] Trial 68 finished with value: 0.2276120347774755 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:36:15,887] Trial 78 finished with value: 0.24538590734799906 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:36:20,169] Trial 79 finished with value: 0.2401566504149153 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6258, 'weights': 'distance'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:36:29,314] Trial 70 finished with value: 0.22400079014052038 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:37:06,792] Trial 81 finished with value: 0.28947352290118633 and parameters: {'model_name': 'VAE', 'batch_size': 894, 'iterations': 7, 'learning_rate': 0.0008402788252974921, 'p_miss': 0.21101292771144514}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:39:09,069] Trial 71 finished with value: 0.22602308534689897 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:52:12,148] Trial 73 finished with value: 0.23193695177458323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:52:12,798] Trial 84 finished with value: 0.3283548191971387 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 14:52:27,223] Trial 85 finished with value: 0.24935783122304897 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:00:52,605] Trial 76 finished with value: 0.22852642504036594 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:01:12,371] Trial 77 finished with value: 0.22917952045163514 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:01:51,324] Trial 82 finished with value: 0.2326457572622692 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:05:25,986] Trial 80 finished with value: 0.2233706055793669 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:06:46,322] Trial 74 finished with value: 0.2500202306341141 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 797, 'learning_rate': 0.0037427756268918915, 'p_miss': 0.19494962505027905}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:08:33,143] Trial 83 finished with value: 0.22390462174365272 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:13:59,491] Trial 75 finished with value: 0.2482445223531884 and parameters: {'model_name': 'VAE', 'batch_size': 871, 'iterations': 689, 'learning_rate': 0.004354597865213628, 'p_miss': 0.21237421657409936}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:14:39,679] Trial 44 finished with value: 0.30610804622614673 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3018, 'learning_rate': 0.00023416809151767228, 'p_miss': 0.29187602435107685}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:21:34,977] Trial 86 finished with value: 0.22571660919955178 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:29:37,640] Trial 88 finished with value: 0.22480179769760503 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:29:53,459] Trial 87 finished with value: 0.22478305411860605 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:29:54,702] Trial 89 finished with value: 0.2253844287890982 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:33:24,680] Trial 90 finished with value: 0.22472871105852374 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 0 with value: 0.22270355211122822.
running
[I 2024-10-23 15:34:47,809] Trial 91 finished with value: 0.22230879972223913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:34:52,014] Trial 100 finished with value: 0.23810207249318585 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4225, 'weights': 'distance'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:35:06,370] Trial 101 finished with value: 0.24115873747805855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:35:14,668] Trial 102 finished with value: 0.2257388721596675 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:36:55,061] Trial 92 finished with value: 0.22423207594328082 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:36:55,907] Trial 104 finished with value: 0.37956602683567053 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:41:24,686] Trial 105 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.9725422766844329, 'alpha': 58, 'iterations': 271, 'learning_rate': 0.0014747261093385514, 'p_miss': 0.24712908883961376}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:42:08,377] Trial 93 finished with value: 0.22471981643625566 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:43:03,812] Trial 94 finished with value: 0.22397725961518117 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:49:50,360] Trial 95 finished with value: 0.22502134412437763 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:55:38,072] Trial 98 finished with value: 0.22774266479746577 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:57:38,359] Trial 96 finished with value: 0.22435322543915132 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:58:29,612] Trial 97 finished with value: 0.22532702119832243 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 15:59:17,835] Trial 99 finished with value: 0.2289087674672307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:00:26,135] Trial 113 finished with value: 0.29623007189082606 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:03:53,562] Trial 103 finished with value: 0.2258362713115393 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:04:01,987] Trial 115 finished with value: 0.23773198241536142 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:09:50,733] Trial 108 finished with value: 0.2259036336373638 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:10:26,427] Trial 106 finished with value: 0.22562346239338313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:10:50,124] Trial 107 finished with value: 0.2248557141893454 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:16:54,162] Trial 109 finished with value: 0.22633296653095464 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:24:14,145] Trial 110 finished with value: 0.2249889345587766 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:25:24,265] Trial 112 finished with value: 0.22687722990647688 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:26:32,999] Trial 111 finished with value: 0.2247152971266349 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:26:36,076] Trial 123 finished with value: 0.24431166749177513 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4982, 'weights': 'uniform'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:26:47,731] Trial 124 finished with value: 0.3822586365479343 and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.5259180700709553, 'alpha': 56, 'iterations': 7, 'learning_rate': 0.009266271138398788, 'p_miss': 0.18307565020762026}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:28:16,566] Trial 114 finished with value: 0.22380821579519855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:31:49,380] Trial 116 finished with value: 0.22515567474553172 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:35:35,630] Trial 41 finished with value: 0.2929133177084565 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5610, 'learning_rate': 0.00014583448448932145, 'p_miss': 0.2844655243143901}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:37:45,219] Trial 117 finished with value: 0.2247251905601116 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:38:12,985] Trial 118 finished with value: 0.22339372861700313 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:38:51,918] Trial 119 finished with value: 0.22335001209039795 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:45:00,513] Trial 120 finished with value: 0.22319399329439804 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:51:54,606] Trial 121 finished with value: 0.22613564152332616 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:53:04,387] Trial 133 finished with value: 0.30805455678481575 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:54:11,850] Trial 122 finished with value: 0.2231112865920612 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:54:12,640] Trial 135 finished with value: 0.3283548191971387 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:55:14,402] Trial 125 finished with value: 0.22381194901169876 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 16:56:34,512] Trial 126 finished with value: 0.22406014067183572 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 17:00:03,464] Trial 127 finished with value: 0.22410093409211532 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 17:03:57,301] Trial 128 finished with value: 0.22403425920659018 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 17:06:25,949] Trial 129 finished with value: 0.22454620905253342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 91 with value: 0.22230879972223913.
running
[I 2024-10-23 17:06:31,622] Trial 130 finished with value: 0.22221998713395658 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:06:40,743] Trial 141 finished with value: 0.24969107637967589 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:06:44,675] Trial 142 finished with value: 0.2419499102856612 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:07:15,296] Trial 131 finished with value: 0.22265559053824951 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:13:35,784] Trial 132 finished with value: 0.225659478582577 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:20:38,203] Trial 134 finished with value: 0.22272489555924002 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:21:17,164] Trial 139 finished with value: 0.23821500530001613 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:22:23,108] Trial 136 finished with value: 0.22467173944105728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:23:00,486] Trial 137 finished with value: 0.22489169074989918 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:24:06,548] Trial 138 finished with value: 0.22559008041178163 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:24:16,174] Trial 151 finished with value: 0.22573899800825817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:24:19,570] Trial 152 finished with value: 0.2328615904876245 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2004, 'weights': 'distance'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:31:52,276] Trial 140 finished with value: 0.22500932086505893 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:31:57,520] Trial 154 finished with value: 0.38451644704237786 and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.25387048778664784, 'alpha': 70, 'iterations': 2, 'learning_rate': 0.04271344118083968, 'p_miss': 0.10956764383558801}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:34:35,106] Trial 144 finished with value: 0.22550489071434496 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:34:55,269] Trial 143 finished with value: 0.2248567799584138 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:35:07,106] Trial 145 finished with value: 0.22444769837302264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:41:43,840] Trial 146 finished with value: 0.2229467549227795 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:46:29,530] Trial 40 finished with value: 0.30558515997673885 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8177, 'learning_rate': 0.00010887412604199676, 'p_miss': 0.28792088445065955}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:48:14,783] Trial 147 finished with value: 0.2248226236579637 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:49:06,001] Trial 148 finished with value: 0.22463377479538266 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:50:42,075] Trial 149 finished with value: 0.22542942051624465 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:50:43,094] Trial 163 finished with value: 0.37956602683567053 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:50:44,685] Trial 150 finished with value: 0.22502960529884347 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:51:44,741] Trial 153 finished with value: 0.2238565499540705 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 17:59:23,272] Trial 155 finished with value: 0.2246347904793901 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:02:03,207] Trial 156 finished with value: 0.22450665523663554 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:02:35,608] Trial 157 finished with value: 0.22547486040635611 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:02:45,080] Trial 158 finished with value: 0.22433471722447842 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:03:15,557] Trial 170 finished with value: 0.22565940579322735 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:03:50,813] Trial 171 finished with value: 0.2951150617486092 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 14, 'learning_rate': 0.0003842962305202516, 'p_miss': 0.06696582226393247}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:06:02,081] Trial 43 finished with value: 0.29412632780474696 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7386, 'learning_rate': 0.00011036824306621166, 'p_miss': 0.2926519669670381}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:06:06,803] Trial 45 finished with value: 0.33574537734461557 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8119, 'learning_rate': 0.0001000573547137015, 'p_miss': 0.2975780924324486}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:09:41,137] Trial 159 finished with value: 0.22380030593932151 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:13:34,979] Trial 160 finished with value: 0.22475868217994277 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:15:17,502] Trial 161 finished with value: 0.22588834173226163 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:16:08,562] Trial 162 finished with value: 0.2238467913679835 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:18:02,854] Trial 165 finished with value: 0.22403318351483983 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:18:17,379] Trial 164 finished with value: 0.22442376732321118 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:18:55,560] Trial 166 finished with value: 0.22511132588452404 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:26:16,877] Trial 167 finished with value: 0.2244975338123913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:28:58,139] Trial 168 finished with value: 0.22342886540568233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:29:35,265] Trial 169 finished with value: 0.22470522349157124 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:30:21,524] Trial 172 finished with value: 0.2245681573507977 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:32:36,178] Trial 173 finished with value: 0.22637225933705113 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:32:45,331] Trial 174 finished with value: 0.2247705232149655 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:36:35,591] Trial 175 finished with value: 0.22598600894769677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:39:44,929] Trial 176 finished with value: 0.22421488168887627 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:41:16,895] Trial 177 finished with value: 0.223949946360484 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:41:25,099] Trial 190 finished with value: 0.22573889693272506 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:42:35,459] Trial 178 finished with value: 0.2246722215612543 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:42:38,208] Trial 192 finished with value: 0.23017713689316333 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 630, 'weights': 'uniform'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:44:28,988] Trial 179 finished with value: 0.22412098753792428 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:45:00,097] Trial 180 finished with value: 0.22385067425044025 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:45:19,377] Trial 181 finished with value: 0.22463452346497265 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:47:11,876] Trial 193 finished with value: 0.4373973689824161 and parameters: {'model_name': 'GAIN', 'batch_size': 155, 'hint_rate': 0.49984547522542777, 'alpha': 36, 'iterations': 240, 'learning_rate': 0.00801463367719384, 'p_miss': 0.24588017438560122}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:47:36,348] Trial 38 finished with value: 0.3011783018268792 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9089, 'learning_rate': 0.00010414673850356164, 'p_miss': 0.29612647186621055}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:48:44,428] Trial 194 finished with value: 0.39747434137717463 and parameters: {'model_name': 'GAIN', 'batch_size': 293, 'hint_rate': 0.5071046399910834, 'alpha': 38, 'iterations': 208, 'learning_rate': 0.0019475209879005206, 'p_miss': 0.047285991174181585}. Best is trial 130 with value: 0.22221998713395658.
running
[I 2024-10-23 18:49:02,673] Trial 195 finished with value: 0.430601647543605 and parameters: {'model_name': 'GAIN', 'batch_size': 171, 'hint_rate': 0.510840755381499, 'alpha': 37, 'iterations': 208, 'learning_rate': 0.008445601501960312, 'p_miss': 0.24165957639069152}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:50:00,157] Trial 42 finished with value: 0.28783593819941694 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9170, 'learning_rate': 0.00016962755596444743, 'p_miss': 0.2805670737292894}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:51:16,917] Trial 39 finished with value: 0.2978309977242479 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 9487, 'learning_rate': 0.00011089512962650735, 'p_miss': 0.2882979157498001}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:51:48,976] Trial 182 finished with value: 0.2258072527809886 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:53:44,900] Trial 183 finished with value: 0.2250175867595036 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:54:05,106] Trial 184 finished with value: 0.2253480902848699 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:54:38,556] Trial 185 finished with value: 0.2256543150617063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:56:07,534] Trial 186 finished with value: 0.2243741427749017 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:56:13,647] Trial 187 finished with value: 0.2242045907303269 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 18:58:32,113] Trial 188 finished with value: 0.22577175438226207 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 19:00:17,575] Trial 189 finished with value: 0.22515606420613285 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 19:01:17,478] Trial 191 finished with value: 0.22378630930442492 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 19:03:41,200] Trial 196 finished with value: 0.22307741521246077 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 19:04:43,237] Trial 197 finished with value: 0.22496917541165157 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 19:05:02,495] Trial 198 finished with value: 0.22330304597803638 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 130 with value: 0.22221998713395658.
[I 2024-10-23 19:05:37,877] Trial 199 finished with value: 0.22544197205968172 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 130 with value: 0.22221998713395658.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0.22221998713395658
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'ascending'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9336838400611857
Generation:   4%|▍         | 1/25 [00:19<07:37, 19.07s/it]Generation:  2
Best f1_score score: 0.9343889195857301
Generation:   8%|▊         | 2/25 [03:15<42:51, 111.81s/it]Generation:  3
Best f1_score score: 0.9343944829732548
Generation:  12%|█▏        | 3/25 [03:37<25:50, 70.46s/it] Generation:  4
Best f1_score score: 0.9349185607841441
Generation:  16%|█▌        | 4/25 [04:43<24:09, 69.03s/it]Generation:  5
Best f1_score score: 0.9349185607841441
Generation:  20%|██        | 5/25 [05:04<17:13, 51.68s/it]Generation:  6
Best f1_score score: 0.9349185607841441
Generation:  24%|██▍       | 6/25 [06:32<20:13, 63.87s/it]Generation:  7
Best f1_score score: 0.9349500372761697
Generation:  28%|██▊       | 7/25 [06:52<14:53, 49.62s/it]Generation:  8
Best f1_score score: 0.9349500372761697
Generation:  32%|███▏      | 8/25 [07:05<10:44, 37.91s/it]Generation:  9
Best f1_score score: 0.9349500372761697
Generation:  36%|███▌      | 9/25 [07:28<08:51, 33.25s/it]Generation:  10
Best f1_score score: 0.9349500372761697
Generation:  40%|████      | 10/25 [07:40<06:40, 26.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fb550> 
 Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 317, in fit
    self.coef_, self.intercept_, n_iter_ = _fit_liblinear(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1214, in _fit_liblinear
    solver_type = _get_liblinear_solver_type(multi_class, penalty, loss, dual)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 1046, in _get_liblinear_solver_type
    raise ValueError(
ValueError: Unsupported set of arguments: The combination of penalty='l1' and loss='hinge' is not supported, Parameters: penalty='l1', loss='hinge', dual=True

Generation:  11
Best f1_score score: 0.9349500372761697
Generation:  44%|████▍     | 11/25 [07:54<05:19, 22.79s/it]Generation:  12
Best f1_score score: 0.9349500372761697
Generation:  48%|████▊     | 12/25 [08:50<07:06, 32.82s/it]Generation:  13
Best f1_score score: 0.9349500372761697
Generation:  52%|█████▏    | 13/25 [09:51<08:18, 41.55s/it]Generation:  14
Best f1_score score: 0.9349500372761697
Generation:  56%|█████▌    | 14/25 [12:40<14:38, 79.89s/it]Generation:  15
Best f1_score score: 0.9369399365413275
Generation:  60%|██████    | 15/25 [14:44<15:33, 93.36s/it]Generation:  16
Best f1_score score: 0.9369399365413275
Generation:  64%|██████▍   | 16/25 [18:30<19:58, 133.14s/it]Generation:  17
Best f1_score score: 0.9369399365413275
Generation:  68%|██████▊   | 17/25 [18:59<13:35, 101.92s/it]Generation:  18
Best f1_score score: 0.9369399365413275
Generation:  72%|███████▏  | 18/25 [20:53<12:19, 105.61s/it]Generation:  19
Best f1_score score: 0.9369399365413275
Generation:  76%|███████▌  | 19/25 [21:14<08:01, 80.20s/it] Generation:  20
Best f1_score score: 0.9369399365413275
Generation:  80%|████████  | 20/25 [21:57<05:44, 68.87s/it]Generation:  21
Best f1_score score: 0.9369399365413275
Generation:  84%|████████▍ | 21/25 [22:52<04:19, 64.79s/it]Generation:  22
Best f1_score score: 0.9369399365413275
Generation:  88%|████████▊ | 22/25 [25:55<05:00, 100.14s/it]Generation:  23
Best f1_score score: 0.9369399365413275
Generation:  92%|█████████▏| 23/25 [26:49<02:52, 86.42s/it] Generation:  24
Best f1_score score: 0.9369399365413275
Generation:  96%|█████████▌| 24/25 [28:27<01:29, 89.93s/it]Generation:  25
Best f1_score score: 0.9369399365413275
Generation: 100%|██████████| 25/25 [28:44<00:00, 68.08s/it]Generation: 100%|██████████| 25/25 [28:48<00:00, 69.15s/it]
2024-10-23 19:38:38,638 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46759' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-5e4dfa6fea1b5d103fbdb31f994122b5', 'ndarray-422b2c53f5e51e71a00dd009dc06b86a'} (stimulus_id='handle-worker-cleanup-1729737518.638027')
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.0104529413132, early_stopping=True,
                               hidden_layer_sizes=[381, 381, 381],
                               learning_rate='invscaling',
                               learning_rate_init=0.0005432733535,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9890434627819819, 'accuracy': 0.9426216999847398, 'balanced_accuracy': 0.9366813361375919, 'logloss': 0.1339232258301892, 'f1': 0.9399387435286006}
original test score: {'auroc': 0.9906288750011596, 'accuracy': 0.947528981086028, 'balanced_accuracy': 0.9428378382557122, 'logloss': 0.12366082616840625, 'f1': 0.9452127527254861}
imputed test score: {'auroc': 0.8885483955755796, 'accuracy': 0.8120805369127517, 'balanced_accuracy': 0.8058471738196031, 'logloss': 0.5944040380975493, 'f1': 0.8052476937369024}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4c70> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.9301095081830164
Generation:   4%|▍         | 1/25 [00:45<18:16, 45.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745978b0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745974c0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1c1f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d75db0> 

Generation:  2
Best f1_score score: 0.9301095081830164
Generation:   8%|▊         | 2/25 [10:49<2:23:22, 374.04s/it]Generation:  3
Best f1_score score: 0.9302322251850208
Generation:  12%|█▏        | 3/25 [13:07<1:37:33, 266.05s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d750c0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545730de40> 

Generation:  4
Best f1_score score: 0.9331390269665846
Generation:  16%|█▌        | 4/25 [23:12<2:20:00, 400.01s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d744c0> 

Generation:  5
Best f1_score score: 0.9378369983023414
Generation:  20%|██        | 5/25 [33:16<2:37:54, 473.75s/it]Generation:  6
Best f1_score score: 0.9378369983023414
Generation:  24%|██▍       | 6/25 [40:11<2:23:41, 453.75s/it]Generation:  7
Best f1_score score: 0.9378369983023414
Generation:  28%|██▊       | 7/25 [47:02<2:11:54, 439.72s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554573bbee0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742374f0> 

Generation:  8
Best f1_score score: 0.9378369983023414
Generation:  32%|███▏      | 8/25 [57:07<2:19:26, 492.12s/it]Generation:  9
Best f1_score score: 0.9378369983023414
Generation:  36%|███▌      | 9/25 [1:00:32<1:47:22, 402.64s/it]Generation:  10
Best f1_score score: 0.9378369983023414
Generation:  40%|████      | 10/25 [1:05:20<1:31:45, 367.00s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ce149d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452feb460> 

Generation:  11
Best f1_score score: 0.9378369983023414
Generation:  44%|████▍     | 11/25 [1:15:26<1:42:43, 440.27s/it]Generation:  12
Best f1_score score: 0.9378369983023414
Generation:  48%|████▊     | 12/25 [1:18:50<1:19:47, 368.29s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451d61870> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.9378369983023414
Generation:  52%|█████▏    | 13/25 [1:20:51<58:41, 293.47s/it]  Generation:  14
Best f1_score score: 0.9378369983023414
Generation:  56%|█████▌    | 14/25 [1:26:27<56:10, 306.45s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474597310> 

Generation:  15
Best f1_score score: 0.9378369983023414
Generation:  60%|██████    | 15/25 [1:36:34<1:06:07, 396.76s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457443160> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554573db5b0> 

Generation:  16
Best f1_score score: 0.9378369983023414
Generation:  64%|██████▍   | 16/25 [1:46:41<1:09:01, 460.15s/it]Generation:  17
Best f1_score score: 0.9378369983023414
Generation:  68%|██████▊   | 17/25 [1:55:47<1:04:47, 485.94s/it]Generation:  18
Best f1_score score: 0.9378369983023414
Generation:  72%|███████▏  | 18/25 [1:59:40<47:49, 409.88s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454b89b40> 

Generation:  19
Best f1_score score: 0.9378369983023414
Generation:  76%|███████▌  | 19/25 [2:09:47<46:54, 469.17s/it]Generation:  20
Best f1_score score: 0.9378369983023414
Generation:  80%|████████  | 20/25 [2:12:52<31:59, 383.89s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457377d90> 

Generation:  21
Best f1_score score: 0.9378369983023414
Generation:  84%|████████▍ | 21/25 [2:22:59<30:03, 450.98s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452b30b80> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  22
Best f1_score score: 0.9378369983023414
Generation:  88%|████████▊ | 22/25 [2:25:31<18:03, 361.01s/it]Generation:  23
Best f1_score score: 0.9378369983023414
Generation:  92%|█████████▏| 23/25 [2:28:36<10:16, 308.27s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454387d30> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454fa0700> 

Generation:  24
Best f1_score score: 0.9378369983023414
Generation:  96%|█████████▌| 24/25 [2:38:41<06:37, 397.28s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457413820> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d6e1c30> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f6a71f0> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1f3d0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  25
Best f1_score score: 0.9378369983023414
Generation: 100%|██████████| 25/25 [2:41:39<00:00, 331.60s/it]Generation: 100%|██████████| 25/25 [2:41:39<00:00, 387.99s/it]
2024-10-23 22:20:42,568 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:36663' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'DataFrame-b63a4db107bac87192a13f53b6ff85f1'} (stimulus_id='handle-worker-cleanup-1729747242.5680122')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=81, weights='distance')),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.0003516929585, early_stopping=True,
                               hidden_layer_sizes=[500, 500, 500],
                               learning_rate_init=0.0032114918651,
                               n_iter_no_change=32))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9894669071053899, 'accuracy': 0.9427743018464825, 'balanced_accuracy': 0.9413912714551895, 'logloss': 0.12996084624668547, 'f1': 0.9406633434356062}
test score: {'auroc': 0.9052868544499315, 'accuracy': 0.8431970713849909, 'balanced_accuracy': 0.8375483553760664, 'logloss': 0.476112294769798, 'f1': 0.8373013742493657}
original test score: {'auroc': 0.9910989000794713, 'accuracy': 0.9487492373398414, 'balanced_accuracy': 0.9492187379208192, 'logloss': 0.12257039176549119, 'f1': 0.9470333505687694}
score end
725
lvl
0.5
type
MAR
num_run
2
class_full
finished
all finished
full run takes
9.585296488404275
hours
DONE
