Run: 60
/cm/local/apps/slurm/var/spool/job1015548/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/728/728.pkl
working on 
../data/c/728/class_full_MNAR_0.5_3
1.0533087253570557
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-24 15:57:34,336] A new study created in memory with name: no-name-a2b7852e-b880-4c4b-9cf0-4d27ffa33f67
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-24 15:57:34,625] Trial 10 finished with value: 0.2992520624575975 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 10 with value: 0.2992520624575975.
running
[I 2024-10-24 15:57:35,557] Trial 4 finished with value: 0.3022463668154629 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1713, 'weights': 'uniform'}. Best is trial 10 with value: 0.2992520624575975.
running
[I 2024-10-24 15:57:35,670] Trial 7 finished with value: 0.2892533248088418 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 558, 'weights': 'distance'}. Best is trial 7 with value: 0.2892533248088418.
running
[I 2024-10-24 15:57:35,786] Trial 0 finished with value: 0.30259321644562787 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1546, 'weights': 'uniform'}. Best is trial 7 with value: 0.2892533248088418.
[I 2024-10-24 15:57:35,946] Trial 12 finished with value: 0.3007648791297444 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 650, 'weights': 'uniform'}. Best is trial 7 with value: 0.2892533248088418.
running
running
[I 2024-10-24 15:57:36,030] Trial 18 finished with value: 0.38138547166378445 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.2892533248088418.
running
[I 2024-10-24 15:57:36,101] Trial 16 finished with value: 0.30294304770117647 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1404, 'weights': 'uniform'}. Best is trial 7 with value: 0.2892533248088418.
running
[I 2024-10-24 15:57:36,180] Trial 8 finished with value: 0.3000210462343075 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2253, 'weights': 'uniform'}. Best is trial 7 with value: 0.2892533248088418.
running
[I 2024-10-24 15:57:36,309] Trial 19 finished with value: 0.38138547166378445 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 7 with value: 0.2892533248088418.
[I 2024-10-24 15:57:36,376] Trial 5 finished with value: 0.30102827048742486 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1993, 'weights': 'uniform'}. Best is trial 7 with value: 0.2892533248088418.
[I 2024-10-24 15:57:36,439] Trial 23 finished with value: 0.38138547166378445 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.2892533248088418.
running
running
running
[I 2024-10-24 15:57:36,538] Trial 20 finished with value: 0.38138547166378445 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 7 with value: 0.2892533248088418.
running
[I 2024-10-24 15:57:37,687] Trial 2 finished with value: 0.29473118312764895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 7 with value: 0.2892533248088418.
running
[I 2024-10-24 15:57:39,255] Trial 3 finished with value: 0.2856793825321173 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 3 with value: 0.2856793825321173.
running
[I 2024-10-24 15:57:39,824] Trial 9 finished with value: 0.3490893614602285 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 1, 'learning_rate': 0.002997636373394412, 'p_miss': 0.11001810578411117}. Best is trial 3 with value: 0.2856793825321173.
running
[I 2024-10-24 15:57:40,561] Trial 28 finished with value: 0.29473118312764895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 3 with value: 0.2856793825321173.
running
[I 2024-10-24 15:57:40,937] Trial 15 finished with value: 0.39537002249535563 and parameters: {'model_name': 'GAIN', 'batch_size': 860, 'hint_rate': 0.7021221753082362, 'alpha': 12, 'iterations': 5, 'learning_rate': 0.09960489147425715, 'p_miss': 0.13747828576068213}. Best is trial 3 with value: 0.2856793825321173.
running
[I 2024-10-24 15:57:41,268] Trial 26 finished with value: 0.337841304269651 and parameters: {'model_name': 'VAE', 'batch_size': 69, 'iterations': 1, 'learning_rate': 0.013209244192327343, 'p_miss': 0.10521178830665016}. Best is trial 3 with value: 0.2856793825321173.
running
[I 2024-10-24 15:57:43,315] Trial 25 finished with value: 0.3845282815844179 and parameters: {'model_name': 'GAIN', 'batch_size': 234, 'hint_rate': 0.8745558741465582, 'alpha': 2, 'iterations': 10, 'learning_rate': 0.00021761225314448262, 'p_miss': 0.03165982170216246}. Best is trial 3 with value: 0.2856793825321173.
running
[I 2024-10-24 15:57:45,754] Trial 32 finished with value: 0.265864622381198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 32 with value: 0.265864622381198.
running
[I 2024-10-24 15:57:46,285] Trial 33 finished with value: 0.265864622381198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 32 with value: 0.265864622381198.
running
[I 2024-10-24 15:57:48,414] Trial 22 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.8372407530577439, 'alpha': 13, 'iterations': 20, 'learning_rate': 0.00025677129479611616, 'p_miss': 0.22505574902376757}. Best is trial 32 with value: 0.265864622381198.
running
[I 2024-10-24 15:57:48,694] Trial 34 finished with value: 0.265864622381198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 32 with value: 0.265864622381198.
running
[I 2024-10-24 15:57:51,531] Trial 35 finished with value: 0.265864622381198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 32 with value: 0.265864622381198.
running
[I 2024-10-24 15:57:52,203] Trial 36 finished with value: 0.265864622381198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 32 with value: 0.265864622381198.
running
[I 2024-10-24 15:57:54,875] Trial 17 finished with value: 0.37544515988233557 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.9507656415015492, 'alpha': 90, 'iterations': 36, 'learning_rate': 0.05358670790867974, 'p_miss': 0.2260793092918235}. Best is trial 32 with value: 0.265864622381198.
running
[I 2024-10-24 15:57:56,131] Trial 40 finished with value: 0.25695471207292436 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:00,140] Trial 37 finished with value: 0.265864622381198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:00,391] Trial 38 finished with value: 0.265864622381198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:01,827] Trial 27 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.873406272468547, 'alpha': 79, 'iterations': 344, 'learning_rate': 0.036990547273478475, 'p_miss': 0.13849867100558386}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:02,853] Trial 42 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:05,763] Trial 24 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5662000640714443, 'alpha': 77, 'iterations': 438, 'learning_rate': 0.0021913032479407395, 'p_miss': 0.17748782812387806}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:07,889] Trial 43 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:08,244] Trial 44 finished with value: 0.26729150975659305 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:09,724] Trial 45 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:10,673] Trial 46 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:12,536] Trial 39 finished with value: 0.265864622381198 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:13,172] Trial 21 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.4476526115076287, 'alpha': 33, 'iterations': 600, 'learning_rate': 0.07643207429552602, 'p_miss': 0.10995499607926904}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:13,360] Trial 47 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:15,457] Trial 48 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:16,455] Trial 49 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:16,975] Trial 50 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:17,781] Trial 13 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.8991770242466689, 'alpha': 69, 'iterations': 693, 'learning_rate': 0.0030752964071548996, 'p_miss': 0.15834592434450323}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:18,762] Trial 51 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:20,707] Trial 52 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:58:20,989] Trial 53 finished with value: 0.2582821371597775 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:59:49,759] Trial 11 finished with value: 0.2620336303001657 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 15:59:58,489] Trial 62 finished with value: 0.26807009266933535 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:00:14,243] Trial 41 finished with value: 0.2713924878834998 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:02:57,308] Trial 14 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 5, 'hint_rate': 0.4625545544641101, 'alpha': 63, 'iterations': 7644, 'learning_rate': 0.00575366407365119, 'p_miss': 0.08560473262005718}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:11:18,563] Trial 29 finished with value: 0.3068518249089157 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2296, 'learning_rate': 0.00012183449487619588, 'p_miss': 0.272282663879052}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:11:26,776] Trial 66 finished with value: 0.2686859342625678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:11:27,680] Trial 67 finished with value: 0.2888515349271631 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3175, 'weights': 'distance'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:17:05,556] Trial 30 finished with value: 0.41729384971729405 and parameters: {'model_name': 'GAIN', 'batch_size': 977, 'hint_rate': 0.21287621130086248, 'alpha': 73, 'iterations': 6494, 'learning_rate': 0.00011065686396161851, 'p_miss': 0.25391400730239744}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:17:08,774] Trial 69 finished with value: 0.3438640189775649 and parameters: {'model_name': 'VAE', 'batch_size': 120, 'iterations': 3, 'learning_rate': 0.0005785600803818433, 'p_miss': 0.04311731535893279}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:17:18,182] Trial 70 finished with value: 0.2686859342625678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:17:20,449] Trial 1 finished with value: 0.3640496260312223 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3376, 'learning_rate': 0.0010660287385878073, 'p_miss': 0.18200723471699765}. Best is trial 40 with value: 0.25695471207292436.
running
[I 2024-10-24 16:17:22,671] Trial 71 finished with value: 0.2569536927632395 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 71 with value: 0.2569536927632395.
running
[I 2024-10-24 16:17:25,427] Trial 72 finished with value: 0.2569536927632395 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 71 with value: 0.2569536927632395.
running
[I 2024-10-24 16:17:27,520] Trial 73 finished with value: 0.2569536927632395 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 71 with value: 0.2569536927632395.
running
[I 2024-10-24 16:17:29,518] Trial 75 finished with value: 0.2888515349271631 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2820, 'weights': 'distance'}. Best is trial 71 with value: 0.2569536927632395.
running
[I 2024-10-24 16:17:30,282] Trial 74 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:17:34,372] Trial 76 finished with value: 0.2569536927632395 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:17:35,675] Trial 77 finished with value: 0.25695392209328105 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:17:36,173] Trial 79 finished with value: 0.38138547166378445 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:17:39,598] Trial 78 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:17:46,344] Trial 68 finished with value: 0.31396105271380986 and parameters: {'model_name': 'VAE', 'batch_size': 787, 'iterations': 106, 'learning_rate': 0.0007909998852366514, 'p_miss': 0.012935649734475058}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:18:19,805] Trial 80 finished with value: 0.3415470521366988 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:18:25,936] Trial 83 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:18:33,188] Trial 82 finished with value: 0.328815297669352 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:18:33,331] Trial 85 finished with value: 0.2992520624575975 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:18:37,719] Trial 86 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:18:40,923] Trial 81 finished with value: 0.29947344928950004 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 107, 'learning_rate': 0.017363199342483572, 'p_miss': 0.2971893712278119}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:18:41,962] Trial 87 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:18:46,946] Trial 88 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:20:43,622] Trial 84 finished with value: 0.27120851377674404 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:20:48,410] Trial 91 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:20:49,375] Trial 92 finished with value: 0.28950601226615835 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'distance'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:20:51,772] Trial 89 finished with value: 0.2728928530633589 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:20:53,859] Trial 93 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:20:56,160] Trial 90 finished with value: 0.2700949208757529 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:20:56,409] Trial 94 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:00,565] Trial 96 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:00,834] Trial 95 finished with value: 0.2758502747183721 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:02,127] Trial 97 finished with value: 0.2758502747183721 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:04,550] Trial 98 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:05,423] Trial 99 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:06,313] Trial 100 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:10,471] Trial 102 finished with value: 0.2569550998553482 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:10,800] Trial 104 finished with value: 0.38138547166378445 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:11,026] Trial 101 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:15,193] Trial 106 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:20,122] Trial 107 finished with value: 0.25695356604006314 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:50,673] Trial 103 finished with value: 0.36061537565063256 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:52,970] Trial 105 finished with value: 0.328815297669352 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:54,749] Trial 110 finished with value: 0.37781442380256325 and parameters: {'model_name': 'GAIN', 'batch_size': 272, 'hint_rate': 0.02872375017330403, 'alpha': 41, 'iterations': 2, 'learning_rate': 0.008825159143720637, 'p_miss': 0.0532004635937163}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:21:56,961] Trial 109 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:00,777] Trial 111 finished with value: 0.29773951646504193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:02,377] Trial 112 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:04,024] Trial 114 finished with value: 0.2890805303224352 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 947, 'weights': 'distance'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:04,141] Trial 108 finished with value: 0.328815297669352 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:05,859] Trial 113 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:08,264] Trial 116 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:08,545] Trial 115 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:10,754] Trial 117 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:13,764] Trial 118 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:16,602] Trial 119 finished with value: 0.2729434537638263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:17,035] Trial 120 finished with value: 0.2729434537638263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:17,559] Trial 121 finished with value: 0.2729434537638263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:41,457] Trial 122 finished with value: 0.30291392013429114 and parameters: {'model_name': 'VAE', 'batch_size': 50, 'iterations': 41, 'learning_rate': 0.025555700536700587, 'p_miss': 0.21386307689259554}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:45,901] Trial 125 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:50,964] Trial 126 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:22:55,967] Trial 127 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:23:00,437] Trial 128 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:23:04,810] Trial 129 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:23:49,667] Trial 130 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.2594205720591355, 'alpha': 96, 'iterations': 1570, 'learning_rate': 0.00042463611317969884, 'p_miss': 0.07134029614766714}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:23:54,643] Trial 131 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:23:59,411] Trial 132 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:03,598] Trial 133 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:03,720] Trial 134 finished with value: 0.2992520624575975 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:07,580] Trial 135 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:12,000] Trial 136 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:16,386] Trial 137 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:20,280] Trial 138 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:25,426] Trial 139 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:29,786] Trial 140 finished with value: 0.25695471207292436 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:33,984] Trial 141 finished with value: 0.25695392209328105 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:24:35,004] Trial 142 finished with value: 0.2888515349271631 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2520, 'weights': 'distance'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:26:10,471] Trial 31 finished with value: 0.4075209545968671 and parameters: {'model_name': 'GAIN', 'batch_size': 601, 'hint_rate': 0.5785490247068278, 'alpha': 86, 'iterations': 8566, 'learning_rate': 0.0716504308000684, 'p_miss': 0.2993975251094668}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:26:14,761] Trial 144 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:26:37,238] Trial 145 finished with value: 0.32355672223338183 and parameters: {'model_name': 'VAE', 'batch_size': 314, 'iterations': 10, 'learning_rate': 0.00624035368284437, 'p_miss': 0.20553187850223031}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:26:41,436] Trial 146 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:26:45,875] Trial 147 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:26:50,650] Trial 148 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:26:54,896] Trial 149 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:28:25,499] Trial 150 finished with value: 0.2713610572015924 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:28:29,969] Trial 151 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:28:35,023] Trial 152 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:28:36,214] Trial 153 finished with value: 0.28293389982012035 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:28:45,167] Trial 154 finished with value: 0.26729150975659305 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:28:50,302] Trial 155 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:28:54,619] Trial 156 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:28:58,979] Trial 157 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:03,234] Trial 158 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:07,076] Trial 159 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:10,391] Trial 143 finished with value: 0.30413143072422494 and parameters: {'model_name': 'VAE', 'batch_size': 383, 'iterations': 153, 'learning_rate': 0.002100024937265149, 'p_miss': 0.19516960445979778}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:11,848] Trial 160 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:15,930] Trial 161 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:17,243] Trial 162 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:20,498] Trial 163 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:22,261] Trial 164 finished with value: 0.25695471207292436 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:26,884] Trial 166 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:30,699] Trial 167 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:35,106] Trial 168 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:35,365] Trial 169 finished with value: 0.38138547166378445 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:39,496] Trial 170 finished with value: 0.25695392209328105 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:29:58,930] Trial 165 finished with value: 0.40355994767848885 and parameters: {'model_name': 'GAIN', 'batch_size': 135, 'hint_rate': 0.024203914301088092, 'alpha': 54, 'iterations': 194, 'learning_rate': 0.001390183619298168, 'p_miss': 0.25245849444049623}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:30:03,594] Trial 172 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:30:16,432] Trial 171 finished with value: 0.3913293527689105 and parameters: {'model_name': 'GAIN', 'batch_size': 94, 'hint_rate': 0.03531178593658296, 'alpha': 53, 'iterations': 211, 'learning_rate': 0.0009369274423326984, 'p_miss': 0.24525215120118915}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:31:44,454] Trial 173 finished with value: 0.272376541873236 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:31:45,538] Trial 175 finished with value: 0.28531993944526607 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 25, 'weights': 'uniform'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:31:50,161] Trial 176 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:31:54,282] Trial 177 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:31:59,397] Trial 178 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:04,064] Trial 179 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:09,815] Trial 180 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:14,832] Trial 181 finished with value: 0.25695650283114596 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'random'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:19,400] Trial 182 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:24,150] Trial 183 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:47,062] Trial 184 finished with value: 0.2609695750906771 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:51,685] Trial 185 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:53,781] Trial 174 finished with value: 0.2736303448298991 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:56,070] Trial 186 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:32:58,777] Trial 187 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:00,655] Trial 188 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:06,166] Trial 190 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:07,975] Trial 189 finished with value: 0.268704504820248 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:10,461] Trial 191 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:13,201] Trial 192 finished with value: 0.2729434537638263 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:15,278] Trial 193 finished with value: 0.2701468950965765 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:18,114] Trial 194 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:20,330] Trial 195 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:22,903] Trial 196 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:24,840] Trial 197 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
running
[I 2024-10-24 16:33:27,991] Trial 198 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 16:33:29,536] Trial 199 finished with value: 0.2569526502521461 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 16:35:20,819] Trial 123 finished with value: 0.3034473484963642 and parameters: {'model_name': 'VAE', 'batch_size': 53, 'iterations': 1551, 'learning_rate': 0.027694986694760265, 'p_miss': 0.19666937501421058}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 16:37:44,302] Trial 124 finished with value: 0.3057591500615157 and parameters: {'model_name': 'VAE', 'batch_size': 74, 'iterations': 1353, 'learning_rate': 0.022288322395538848, 'p_miss': 0.20103958416137732}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 17:19:29,784] Trial 6 finished with value: 0.3028649474442784 and parameters: {'model_name': 'VAE', 'batch_size': 196, 'iterations': 4549, 'learning_rate': 0.00045753325240286276, 'p_miss': 0.22163278329484484}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 18:27:43,301] Trial 59 finished with value: 0.30353775450100073 and parameters: {'model_name': 'VAE', 'batch_size': 904, 'iterations': 3269, 'learning_rate': 0.0008219936142890118, 'p_miss': 0.29641812816512425}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 18:40:08,652] Trial 60 finished with value: 0.30299653001729965 and parameters: {'model_name': 'VAE', 'batch_size': 957, 'iterations': 3459, 'learning_rate': 0.0006347205296439765, 'p_miss': 0.2885111702258608}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:15:54,784] Trial 58 finished with value: 0.30388245772998596 and parameters: {'model_name': 'VAE', 'batch_size': 827, 'iterations': 6905, 'learning_rate': 0.0005986520043802293, 'p_miss': 0.2928270789305488}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:16:12,100] Trial 61 finished with value: 0.3029292211741348 and parameters: {'model_name': 'VAE', 'batch_size': 982, 'iterations': 5671, 'learning_rate': 0.0008632864903875546, 'p_miss': 0.29571386121777393}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:18:13,624] Trial 63 finished with value: 0.3027833895401049 and parameters: {'model_name': 'VAE', 'batch_size': 980, 'iterations': 6027, 'learning_rate': 0.0009796051878973129, 'p_miss': 0.2983668094087417}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:37:21,402] Trial 56 finished with value: 0.3037881127010021 and parameters: {'model_name': 'VAE', 'batch_size': 861, 'iterations': 7424, 'learning_rate': 0.0007904006051819979, 'p_miss': 0.297211044939925}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:54:03,647] Trial 54 finished with value: 0.30282611043069185 and parameters: {'model_name': 'VAE', 'batch_size': 871, 'iterations': 7804, 'learning_rate': 0.0007565990470289986, 'p_miss': 0.280275628348553}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:55:27,242] Trial 57 finished with value: 0.30323962930001225 and parameters: {'model_name': 'VAE', 'batch_size': 795, 'iterations': 7843, 'learning_rate': 0.000899971263476697, 'p_miss': 0.2824649744669626}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:55:33,838] Trial 55 finished with value: 0.30396044547576795 and parameters: {'model_name': 'VAE', 'batch_size': 767, 'iterations': 8020, 'learning_rate': 0.0007231178111786199, 'p_miss': 0.28918278202725634}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:56:55,439] Trial 64 finished with value: 0.3026485570069541 and parameters: {'model_name': 'VAE', 'batch_size': 846, 'iterations': 8202, 'learning_rate': 0.0006737933529043664, 'p_miss': 0.2710581692786331}. Best is trial 74 with value: 0.2569526502521461.
[I 2024-10-24 20:58:04,030] Trial 65 finished with value: 0.3029505194593828 and parameters: {'model_name': 'VAE', 'batch_size': 974, 'iterations': 9753, 'learning_rate': 0.0004807442970561581, 'p_miss': 0.28536972283104634}. Best is trial 74 with value: 0.2569526502521461.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
dtype: int64
0.2569526502521461
{'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'arabic'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474175e10> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.7855205746708908
Generation:   4%|▍         | 1/25 [00:24<09:54, 24.76s/it]Generation:  2
Best f1_score score: 0.7880725239837095
Generation:   8%|▊         | 2/25 [00:41<07:43, 20.14s/it]Generation:  3
Best f1_score score: 0.7880725239837095
Generation:  12%|█▏        | 3/25 [00:50<05:25, 14.82s/it]Generation:  4
Best f1_score score: 0.7880725239837095
Generation:  16%|█▌        | 4/25 [00:59<04:25, 12.64s/it]Generation:  5
Best f1_score score: 0.7880725239837095
Generation:  20%|██        | 5/25 [01:08<03:45, 11.27s/it]Generation:  6
Best f1_score score: 0.7880725239837095
Generation:  24%|██▍       | 6/25 [03:46<19:23, 61.25s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741261a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.7880725239837095
Generation:  28%|██▊       | 7/25 [03:55<13:13, 44.11s/it]Generation:  8
Best f1_score score: 0.7880725239837095
Generation:  32%|███▏      | 8/25 [04:03<09:17, 32.78s/it]Generation:  9
Best f1_score score: 0.7880725239837095
Generation:  36%|███▌      | 9/25 [04:11<06:40, 25.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741276d0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  10
Best f1_score score: 0.7880725239837095
Generation:  40%|████      | 10/25 [04:20<04:57, 19.82s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547417a9e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.7899082814113558
Generation:  44%|████▍     | 11/25 [04:30<03:55, 16.82s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d34bd90> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  12
Best f1_score score: 0.7899082814113558
Generation:  48%|████▊     | 12/25 [04:41<03:18, 15.24s/it]Generation:  13
Best f1_score score: 0.7899082814113558
Generation:  52%|█████▏    | 13/25 [04:51<02:41, 13.45s/it]Generation:  14
Best f1_score score: 0.7914543234031848
Generation:  56%|█████▌    | 14/25 [07:17<09:48, 53.49s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546fbc0b20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546fbebfa0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  15
Best f1_score score: 0.7914543234031848
Generation:  60%|██████    | 15/25 [07:28<06:47, 40.75s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d637d90> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  16
Best f1_score score: 0.7914543234031848
Generation:  64%|██████▍   | 16/25 [07:38<04:44, 31.64s/it]Generation:  17
Best f1_score score: 0.7914543234031848
Generation:  68%|██████▊   | 17/25 [07:50<03:24, 25.58s/it]Generation:  18
Best f1_score score: 0.7914543234031848
Generation:  72%|███████▏  | 18/25 [08:42<03:55, 33.68s/it]Generation:  19
Best f1_score score: 0.7914543234031848
Generation:  76%|███████▌  | 19/25 [08:53<02:41, 26.90s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546ce11360> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  20
Best f1_score score: 0.7914543234031848
Generation:  80%|████████  | 20/25 [09:06<01:53, 22.63s/it]Generation:  21
Best f1_score score: 0.7914543234031848
Generation:  84%|████████▍ | 21/25 [11:14<03:37, 54.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546d0350f0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  22
Best f1_score score: 0.7914543234031848
Generation:  88%|████████▊ | 22/25 [11:27<02:05, 41.80s/it]Generation:  23
Best f1_score score: 0.7914543234031848
Generation:  92%|█████████▏| 23/25 [11:55<01:15, 37.82s/it]Generation:  24
Best f1_score score: 0.7914543234031848
Generation:  96%|█████████▌| 24/25 [12:11<00:31, 31.07s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554741b5210> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  25
Best f1_score score: 0.7914543234031848
Generation: 100%|██████████| 25/25 [12:26<00:00, 26.21s/it]Generation: 100%|██████████| 25/25 [12:29<00:00, 29.97s/it]
2024-10-24 21:10:41,783 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42269' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-2cfdd36ea9a64e1d111c958a608d27de', 'ndarray-98384d096df9b91ea418777d7047bef4'} (stimulus_id='handle-worker-cleanup-1729829441.7836483')
Fitted
Pipeline(steps=[('baggingclassifier',
                 BaggingClassifier(bootstrap=False,
                                   max_features=0.7746274723658,
                                   max_samples=0.1765767105059, n_jobs=1))])
score start
train score: {'auroc': 0.9213994258637115, 'accuracy': 0.875038568343104, 'balanced_accuracy': 0.7750691031941032, 'logloss': 0.3260143588575267, 'f1': 0.8063770535113313}
original test score: {'auroc': 0.9966206619993652, 'accuracy': 0.9605425400739828, 'balanced_accuracy': 0.9175257731958764, 'logloss': 0.1815514198016948, 'f1': 0.9424179491275716}
imputed test score: {'auroc': 0.773834984711524, 'accuracy': 0.840937114673243, 'balanced_accuracy': 0.7170002840481879, 'logloss': 0.9518692973389395, 'f1': 0.7458884395380188}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155434ce8520>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745408b0> 
 Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745409a0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.778756090045732
Generation:   4%|▍         | 1/25 [02:21<56:47, 141.96s/it]Generation:  2
Best f1_score score: 0.7861070302943265
Generation:   8%|▊         | 2/25 [03:48<41:53, 109.29s/it]Generation:  3
Best f1_score score: 0.7861070302943265
Generation:  12%|█▏        | 3/25 [05:14<36:13, 98.78s/it] Generation:  4
Best f1_score score: 0.7861070302943265
Generation:  16%|█▌        | 4/25 [06:14<29:09, 83.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bd03430> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  5
Best f1_score score: 0.7868291675085425
Generation:  20%|██        | 5/25 [07:02<23:30, 70.51s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dc887f0> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  6
Best f1_score score: 0.7878331414147406
Generation:  24%|██▍       | 6/25 [07:14<16:01, 50.61s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cefe20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.7880982223564965
Generation:  28%|██▊       | 7/25 [09:28<23:23, 78.00s/it]Generation:  8
Best f1_score score: 0.7880982223564965
Generation:  32%|███▏      | 8/25 [10:16<19:25, 68.59s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e09fd00> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  9
Best f1_score score: 0.7880982223564965
Generation:  36%|███▌      | 9/25 [11:08<16:54, 63.40s/it]Generation:  10
Best f1_score score: 0.7910494086000037
Generation:  40%|████      | 10/25 [11:19<11:44, 46.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545de32350> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.7910494086000037
Generation:  44%|████▍     | 11/25 [12:06<10:57, 46.99s/it]Generation:  12
Best f1_score score: 0.7910494086000037
Generation:  48%|████▊     | 12/25 [13:57<14:26, 66.65s/it]Generation:  13
Best f1_score score: 0.7910494086000037
Generation:  52%|█████▏    | 13/25 [14:47<12:17, 61.47s/it]Generation:  14
Best f1_score score: 0.7910494086000037
Generation:  56%|█████▌    | 14/25 [18:55<21:36, 117.83s/it]Generation:  15
Best f1_score score: 0.7910494086000037
Generation:  60%|██████    | 15/25 [19:07<14:20, 86.03s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459c343a0> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  16
Best f1_score score: 0.7910494086000037
Generation:  64%|██████▍   | 16/25 [19:56<11:13, 74.89s/it]Generation:  17
Best f1_score score: 0.7910494086000037
Generation:  68%|██████▊   | 17/25 [20:44<08:54, 66.76s/it]Generation:  18
Best f1_score score: 0.7917693973435022
Generation:  72%|███████▏  | 18/25 [21:32<07:07, 61.12s/it]Generation:  19
Best f1_score score: 0.7917693973435022
Generation:  76%|███████▌  | 19/25 [25:03<10:37, 106.29s/it]Generation:  20
Best f1_score score: 0.792903937190697
Generation:  80%|████████  | 20/25 [25:11<06:23, 76.74s/it] Generation:  21
Best f1_score score: 0.7945176428750317
Generation:  84%|████████▍ | 21/25 [25:58<04:31, 67.82s/it]Generation:  22
Best f1_score score: 0.7945176428750317
Generation:  88%|████████▊ | 22/25 [26:47<03:06, 62.18s/it]Generation:  23
Best f1_score score: 0.7945176428750317
Generation:  92%|█████████▏| 23/25 [27:01<01:35, 47.61s/it]Generation:  24
Best f1_score score: 0.7945176428750317
Generation:  96%|█████████▌| 24/25 [27:50<00:47, 47.98s/it]Generation:  25
Best f1_score score: 0.7945176428750317
Generation: 100%|██████████| 25/25 [28:01<00:00, 36.93s/it]Generation: 100%|██████████| 25/25 [28:01<00:00, 67.26s/it]
2024-10-24 21:38:50,419 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:32819' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-4ead328d6e7380bb8c09c992092eff92', 'ndarray-98384d096df9b91ea418777d7047bef4'} (stimulus_id='handle-worker-cleanup-1729831130.419715')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=41)),
                ('xgbclassifier',
                 XGBClassifier(base_score=None, booster=None, callbacks=None,
                               colsample_bylevel=None, colsample_bynode=None,
                               colsample_bytree=None, device=None,
                               early_stopping_rounds=None,
                               enable_categorical=False, eval_metric=None,
                               feature_types=None, gamma=0.0005811809137,
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None,
                               learning_rate=0.0748439429667, max_bin=None,
                               max_cat_threshold=None, max_cat_to_onehot=None,
                               max_delta_step=None, max_depth=5,
                               max_leaves=None, min_child_weight=4, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=100, n_jobs=1, nthread=1,
                               num_parallel_tree=None, ...))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9351158614551471, 'accuracy': 0.8812095032397408, 'balanced_accuracy': 0.7579797736047735, 'logloss': 0.25679005185353115, 'f1': 0.8025020714739635}
test score: {'auroc': 0.8260580795000753, 'accuracy': 0.8594327990135635, 'balanced_accuracy': 0.7273889288041571, 'logloss': 0.3572198503115126, 'f1': 0.7656734726981488}
original test score: {'auroc': 0.9981286237029858, 'accuracy': 0.9950678175092479, 'balanced_accuracy': 0.9896907216494846, 'logloss': 0.0443766138962802, 'f1': 0.9931761577813678}
score end
728
lvl
0.5
type
MNAR
num_run
3
class_full
finished
all finished
full run takes
5.69322807153066
hours
DONE
