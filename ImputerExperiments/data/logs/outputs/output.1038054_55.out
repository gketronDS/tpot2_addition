Run: 55
/cm/local/apps/slurm/var/spool/job1038054/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/881/881.pkl
working on 
../data/c/881/class_full_MAR_0.3_3
3.0893807411193848
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-02 03:21:25,616] A new study created in memory with name: no-name-d4b73e50-49d0-4669-8544-ec21db41ccb5
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-02 03:21:26,464] Trial 7 finished with value: 0.5453000594953956 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.5453000594953956.
running
[I 2024-11-02 03:21:26,751] Trial 14 finished with value: 0.4919321230744633 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 14 with value: 0.4919321230744633.
running
[I 2024-11-02 03:21:26,960] Trial 5 finished with value: 0.2955002151061789 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.2955002151061789.
running
[I 2024-11-02 03:21:37,646] Trial 9 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.56005740611778, 'alpha': 58, 'iterations': 1, 'learning_rate': 0.0027121871638800055, 'p_miss': 0.04942889615001147}. Best is trial 5 with value: 0.2955002151061789.
running
[I 2024-11-02 03:21:38,814] Trial 19 finished with value: 0.2955002151061789 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.2955002151061789.
running
[I 2024-11-02 03:21:50,581] Trial 4 finished with value: 0.27388689965286017 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 18310, 'weights': 'uniform'}. Best is trial 4 with value: 0.27388689965286017.
running
[I 2024-11-02 03:21:57,725] Trial 8 finished with value: 0.27084778122164244 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 21151, 'weights': 'distance'}. Best is trial 8 with value: 0.27084778122164244.
running
[I 2024-11-02 03:21:58,388] Trial 17 finished with value: 0.27238557273429087 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 22358, 'weights': 'distance'}. Best is trial 8 with value: 0.27084778122164244.
running
[I 2024-11-02 03:21:59,128] Trial 0 finished with value: 0.5289024848476458 and parameters: {'model_name': 'GAIN', 'batch_size': 677, 'hint_rate': 0.10715245637211603, 'alpha': 48, 'iterations': 17, 'learning_rate': 0.0033821025132991355, 'p_miss': 0.11802101966813722}. Best is trial 8 with value: 0.27084778122164244.
running
[I 2024-11-02 03:21:59,438] Trial 2 finished with value: 0.5282752360827093 and parameters: {'model_name': 'GAIN', 'batch_size': 878, 'hint_rate': 0.754124592198826, 'alpha': 59, 'iterations': 17, 'learning_rate': 0.00030899162787591873, 'p_miss': 0.11459579875739609}. Best is trial 8 with value: 0.27084778122164244.
running
[I 2024-11-02 03:22:03,577] Trial 21 finished with value: 0.2906632942479789 and parameters: {'model_name': 'VAE', 'batch_size': 79, 'iterations': 3, 'learning_rate': 0.00941836447426933, 'p_miss': 0.1301093080797679}. Best is trial 8 with value: 0.27084778122164244.
running
[I 2024-11-02 03:22:22,836] Trial 22 finished with value: 0.25073039880722164 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5549, 'weights': 'uniform'}. Best is trial 22 with value: 0.25073039880722164.
running
[I 2024-11-02 03:22:23,214] Trial 23 finished with value: 0.2918846754656928 and parameters: {'model_name': 'VAE', 'batch_size': 90, 'iterations': 16, 'learning_rate': 0.0028755751617509703, 'p_miss': 0.2606413089113412}. Best is trial 22 with value: 0.25073039880722164.
running
[I 2024-11-02 03:22:32,889] Trial 24 finished with value: 0.27570704327978846 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 31447, 'weights': 'distance'}. Best is trial 22 with value: 0.25073039880722164.
running
[I 2024-11-02 03:22:35,425] Trial 13 finished with value: 0.26884931237335274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 22 with value: 0.25073039880722164.
running
[I 2024-11-02 03:22:41,608] Trial 12 finished with value: 0.23707581846029435 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 12 with value: 0.23707581846029435.
running
[I 2024-11-02 03:22:44,246] Trial 11 finished with value: 0.24375490937506247 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 12 with value: 0.23707581846029435.
running
[I 2024-11-02 03:22:44,482] Trial 26 finished with value: 0.2755751644587566 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 24693, 'weights': 'distance'}. Best is trial 12 with value: 0.23707581846029435.
running
[I 2024-11-02 03:22:44,867] Trial 27 finished with value: 0.22857566339495325 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 228, 'weights': 'distance'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:22:47,061] Trial 28 finished with value: 0.23466184115361313 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1003, 'weights': 'distance'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:22:57,327] Trial 15 finished with value: 0.23860513222676127 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'arabic'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:23:01,134] Trial 20 finished with value: 0.2901839680125471 and parameters: {'model_name': 'VAE', 'batch_size': 444, 'iterations': 14, 'learning_rate': 0.004084617574559214, 'p_miss': 0.031231851980224837}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:23:12,994] Trial 35 finished with value: 0.24498148794568092 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4667, 'weights': 'distance'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:23:38,808] Trial 37 finished with value: 0.22861517153330507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:23:46,550] Trial 30 finished with value: 0.26884931237335274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:23:49,465] Trial 38 finished with value: 0.22861517153330507 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:23:54,859] Trial 25 finished with value: 0.22861942833245047 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:04,063] Trial 32 finished with value: 0.2287422474121077 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'roman', 'sample_posterior': False}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:05,780] Trial 33 finished with value: 0.22925198874654834 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:07,116] Trial 40 finished with value: 0.23369342011870686 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 829, 'weights': 'distance'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:18,711] Trial 39 finished with value: 0.22862042866760265 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:26,212] Trial 41 finished with value: 0.2286170412506791 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:30,772] Trial 42 finished with value: 0.2286170412506791 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:33,684] Trial 34 finished with value: 0.24289584800446246 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:36,507] Trial 43 finished with value: 0.22861493755069992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:38,914] Trial 16 finished with value: 0.28888815903270126 and parameters: {'model_name': 'VAE', 'batch_size': 36, 'iterations': 143, 'learning_rate': 0.012119866975905258, 'p_miss': 0.20939007439694923}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:42,330] Trial 6 finished with value: 0.28842906759585446 and parameters: {'model_name': 'VAE', 'batch_size': 424, 'iterations': 59, 'learning_rate': 0.026013598427674662, 'p_miss': 0.08335011270041774}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:46,821] Trial 46 finished with value: 0.22861522190556985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:24:57,617] Trial 48 finished with value: 0.22861493755069992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:26:57,241] Trial 10 finished with value: 0.29812405777625905 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 265, 'learning_rate': 0.07608200927123568, 'p_miss': 0.11404442163411073}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:38:19,296] Trial 44 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9646175670450016, 'alpha': 1, 'iterations': 4205, 'learning_rate': 0.09292752366675797, 'p_miss': 0.2873263965696386}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:45:03,596] Trial 18 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9454281904351199, 'alpha': 14, 'iterations': 7237, 'learning_rate': 0.005783858138604792, 'p_miss': 0.23251702742498795}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:45:28,083] Trial 57 finished with value: 0.2287153951266167 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:47:17,612] Trial 3 finished with value: 0.29021853497282674 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 646, 'learning_rate': 0.003205515070222197, 'p_miss': 0.1081214377663523}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:50:37,002] Trial 52 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9594617392038235, 'alpha': 0, 'iterations': 8242, 'learning_rate': 0.07705014986733305, 'p_miss': 0.2975289197188154}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:50:43,739] Trial 49 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.02765598650602341, 'alpha': 9, 'iterations': 7760, 'learning_rate': 0.04498043376928775, 'p_miss': 0.29179024472607773}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:52:29,614] Trial 51 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9667866396941138, 'alpha': 1, 'iterations': 8372, 'learning_rate': 0.054266559907118206, 'p_miss': 0.29359343601652577}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:52:34,268] Trial 54 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.011798743447138382, 'alpha': 3, 'iterations': 7871, 'learning_rate': 0.07967383192504345, 'p_miss': 0.28402631217198815}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:54:08,983] Trial 45 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.015605547330181213, 'alpha': 11, 'iterations': 9820, 'learning_rate': 0.09894004134012388, 'p_miss': 0.28138793119398264}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:55:11,298] Trial 1 finished with value: 0.30516036175359385 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 1046, 'learning_rate': 0.0017972451680312632, 'p_miss': 0.20093885666799807}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:55:16,477] Trial 47 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9596685895257844, 'alpha': 1, 'iterations': 9717, 'learning_rate': 0.0733322177869545, 'p_miss': 0.2830494857364627}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 03:55:35,556] Trial 66 finished with value: 0.22861522190556985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:00:48,801] Trial 53 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.011415668389079703, 'alpha': 6, 'iterations': 8645, 'learning_rate': 0.09301058390003061, 'p_miss': 0.2961435194347054}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:01:07,081] Trial 50 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.979942390252027, 'alpha': 0, 'iterations': 9352, 'learning_rate': 0.07912288976214953, 'p_miss': 0.295316104915073}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:03:16,307] Trial 56 finished with value: 0.5062181241235004 and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.014833887400517387, 'alpha': 99, 'iterations': 6325, 'learning_rate': 0.0001315934941417737, 'p_miss': 0.1932110986053442}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:03:39,054] Trial 55 finished with value: 0.513071778496405 and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.9807527705459442, 'alpha': 12, 'iterations': 8030, 'learning_rate': 0.0001364084422439912, 'p_miss': 0.19133180408304098}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:22:03,430] Trial 29 finished with value: 0.26659086449766645 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'random'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:22:12,235] Trial 72 finished with value: 0.22861493755069992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:22:12,471] Trial 73 finished with value: 0.28503575629500494 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:22:22,443] Trial 74 finished with value: 0.22861493755069992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:22:33,211] Trial 75 finished with value: 0.22861493755069992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:22:44,391] Trial 76 finished with value: 0.22861493755069992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:22:55,954] Trial 77 finished with value: 0.2287153951266167 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:23:05,583] Trial 78 finished with value: 0.22861493755069992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:23:15,314] Trial 79 finished with value: 0.22861493755069992 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 04:23:24,931] Trial 80 finished with value: 0.22893951439658808 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 27 with value: 0.22857566339495325.
running
[I 2024-11-02 05:25:41,002] Trial 31 finished with value: 0.2198104627623067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'arabic'}. Best is trial 31 with value: 0.2198104627623067.
running
[I 2024-11-02 05:25:41,212] Trial 82 finished with value: 0.5453000594953956 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 31 with value: 0.2198104627623067.
running
[I 2024-11-02 05:34:31,831] Trial 36 finished with value: 0.2180717529810332 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 36 with value: 0.2180717529810332.
running
[I 2024-11-02 05:34:43,812] Trial 84 finished with value: 0.26314069936351503 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11514, 'weights': 'uniform'}. Best is trial 36 with value: 0.2180717529810332.
running
[I 2024-11-02 05:53:38,863] Trial 58 finished with value: 0.21746450919595822 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.21746450919595822.
running
[I 2024-11-02 05:55:02,958] Trial 59 finished with value: 0.2180314375441746 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.21746450919595822.
running
[I 2024-11-02 05:58:00,384] Trial 61 finished with value: 0.21798828859859296 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.21746450919595822.
running
[I 2024-11-02 05:58:14,075] Trial 60 finished with value: 0.2178861871004337 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.21746450919595822.
running
[I 2024-11-02 05:59:53,038] Trial 63 finished with value: 0.21797710788721067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.21746450919595822.
running
[I 2024-11-02 05:59:54,119] Trial 62 finished with value: 0.21716860560616164 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:01:07,007] Trial 64 finished with value: 0.21718284496523527 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:02:11,559] Trial 65 finished with value: 0.21775693900781007 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:02:12,142] Trial 93 finished with value: 0.29897923486061295 and parameters: {'model_name': 'VAE', 'batch_size': 153, 'iterations': 1, 'learning_rate': 0.0009698274296758904, 'p_miss': 0.15406655436482292}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:02:16,536] Trial 67 finished with value: 0.21772158547797654 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:07:21,988] Trial 68 finished with value: 0.21789665283219567 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:07:47,664] Trial 69 finished with value: 0.2173999546110716 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:09:47,377] Trial 70 finished with value: 0.21790164913715912 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:09:59,379] Trial 71 finished with value: 0.21802047649726192 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 06:29:17,388] Trial 81 finished with value: 0.21844020739058317 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:22:41,142] Trial 83 finished with value: 0.21833974217908425 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:31:44,800] Trial 85 finished with value: 0.21872463837371914 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:50:35,762] Trial 86 finished with value: 0.21948153445769214 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:51:57,309] Trial 87 finished with value: 0.2186816139056146 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:54:54,414] Trial 88 finished with value: 0.21856074362721184 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:54:54,667] Trial 105 finished with value: 0.28503575629500494 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:55:12,354] Trial 89 finished with value: 0.21844351191904215 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:56:55,448] Trial 91 finished with value: 0.21872755442951014 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:57:11,902] Trial 90 finished with value: 0.21879588348688772 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:57:47,310] Trial 92 finished with value: 0.2186895753913058 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:58:45,698] Trial 94 finished with value: 0.21769449363958646 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:58:48,593] Trial 95 finished with value: 0.21781498588848197 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 07:58:51,131] Trial 112 finished with value: 0.29897126987886785 and parameters: {'model_name': 'VAE', 'batch_size': 166, 'iterations': 4, 'learning_rate': 0.0006477522862534401, 'p_miss': 0.07129438403582042}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 08:01:42,287] Trial 110 finished with value: 0.2901135837193707 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 2090, 'learning_rate': 0.0005293440688928224, 'p_miss': 0.06433439543586686}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 08:02:21,969] Trial 111 finished with value: 0.2889213759363892 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 1910, 'learning_rate': 0.0006568660358126629, 'p_miss': 0.013674601792526858}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 08:04:13,800] Trial 96 finished with value: 0.21852811636105973 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 08:06:16,350] Trial 97 finished with value: 0.21880951619930236 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 62 with value: 0.21716860560616164.
running
[I 2024-11-02 08:06:40,636] Trial 98 finished with value: 0.21695497260707325 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 08:07:14,780] Trial 99 finished with value: 0.21909080211305546 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 08:07:47,996] Trial 119 finished with value: 0.32177670196066616 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 08:26:39,800] Trial 100 finished with value: 0.2192575038709796 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 08:27:00,791] Trial 121 finished with value: 0.23775976977459395 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 08:43:59,829] Trial 102 finished with value: 0.23193164334097985 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 08:56:34,997] Trial 109 finished with value: 0.23911916423103835 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:02:41,420] Trial 103 finished with value: 0.23114358817188108 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:07:16,599] Trial 106 finished with value: 0.2313897737653699 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:07:24,335] Trial 107 finished with value: 0.23085508091575546 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:09:13,468] Trial 101 finished with value: 0.22021337538929986 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:26:42,219] Trial 104 finished with value: 0.22234552161262533 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:42:25,154] Trial 120 finished with value: 0.22252924311781475 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:45:31,139] Trial 113 finished with value: 0.21908834823666196 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:47:04,685] Trial 108 finished with value: 0.221362330790084 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:47:04,916] Trial 132 finished with value: 0.4919321230744633 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:47:44,221] Trial 133 finished with value: 0.318404626288444 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:48:09,150] Trial 134 finished with value: 0.24227667085235677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:48:32,541] Trial 114 finished with value: 0.2200281261602321 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:49:20,562] Trial 115 finished with value: 0.2197749606176178 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:51:07,348] Trial 116 finished with value: 0.21961687777472375 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:53:24,296] Trial 117 finished with value: 0.22058760916845704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 09:53:36,917] Trial 118 finished with value: 0.22032636647814113 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 10:31:18,121] Trial 124 finished with value: 0.22140164555640385 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 10:33:23,978] Trial 122 finished with value: 0.2180660593343681 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 10:50:10,253] Trial 123 finished with value: 0.2174593330985995 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 10:50:22,480] Trial 143 finished with value: 0.2663149343577864 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 13429, 'weights': 'uniform'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:08:56,429] Trial 125 finished with value: 0.21749252448926315 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:13:08,378] Trial 126 finished with value: 0.2178210405231506 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:13:14,677] Trial 127 finished with value: 0.21800940095295118 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:15:02,500] Trial 128 finished with value: 0.2177438958025725 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:32:38,609] Trial 129 finished with value: 0.21815728059637643 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:48:06,829] Trial 130 finished with value: 0.21709501291028327 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:51:32,562] Trial 131 finished with value: 0.21759633485536983 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:53:40,925] Trial 135 finished with value: 0.2177809294548541 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 98 with value: 0.21695497260707325.
running
[I 2024-11-02 11:54:10,280] Trial 136 finished with value: 0.2169529414959408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 11:54:52,876] Trial 137 finished with value: 0.2175167982135296 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 11:56:45,075] Trial 138 finished with value: 0.21804458893459083 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 11:58:41,785] Trial 139 finished with value: 0.21772523755902312 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 11:59:10,290] Trial 140 finished with value: 0.21745962655302692 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 12:37:00,500] Trial 141 finished with value: 0.2173890755861673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 12:39:10,949] Trial 142 finished with value: 0.21720059788938562 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 12:55:51,840] Trial 144 finished with value: 0.21795973374407618 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:14:38,554] Trial 145 finished with value: 0.21780812104626102 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:15:17,203] Trial 161 finished with value: 0.3279628865997767 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:19:18,275] Trial 147 finished with value: 0.21737045065959038 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:19:18,544] Trial 163 finished with value: 0.4919321230744633 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:19:24,115] Trial 146 finished with value: 0.2182431715151693 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:19:51,363] Trial 164 finished with value: 0.24227667085235677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:19:56,812] Trial 165 finished with value: 0.24227667085235677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:21:32,028] Trial 148 finished with value: 0.21806819319893309 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:39:00,585] Trial 149 finished with value: 0.21880479869599148 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:54:21,871] Trial 150 finished with value: 0.21746523823544295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 13:57:40,462] Trial 151 finished with value: 0.21797225100230438 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:00:12,624] Trial 152 finished with value: 0.21725586622178858 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:00:23,355] Trial 172 finished with value: 0.28503575629500494 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 32116, 'weights': 'uniform'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:00:28,548] Trial 153 finished with value: 0.2180601853257563 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:01:17,113] Trial 154 finished with value: 0.21793472982142842 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:03:27,863] Trial 155 finished with value: 0.21829016449940092 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:04:51,769] Trial 156 finished with value: 0.21705036592593027 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:05:30,992] Trial 157 finished with value: 0.2174549302007783 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:42:59,310] Trial 158 finished with value: 0.2172267531528435 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 14:46:02,154] Trial 159 finished with value: 0.2183477104493976 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'arabic'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 15:02:37,242] Trial 160 finished with value: 0.21754780092378487 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 15:21:16,602] Trial 162 finished with value: 0.21770762443814068 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 15:25:50,264] Trial 166 finished with value: 0.2178329012820508 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 15:25:53,743] Trial 167 finished with value: 0.21799963697507616 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 15:27:27,362] Trial 168 finished with value: 0.2173125821119625 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 15:45:00,261] Trial 169 finished with value: 0.2169550466000547 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:00:19,343] Trial 170 finished with value: 0.21713311141414882 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:03:47,922] Trial 171 finished with value: 0.2178359955225384 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:06:19,068] Trial 173 finished with value: 0.2177673351764981 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:06:24,648] Trial 174 finished with value: 0.21729372710466754 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:07:12,347] Trial 175 finished with value: 0.21821960994189102 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:07:16,252] Trial 191 finished with value: 0.28896305027588415 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 80, 'learning_rate': 0.02246220222524824, 'p_miss': 0.17180616268299548}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:09:15,053] Trial 176 finished with value: 0.21809901075111152 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:10:52,660] Trial 177 finished with value: 0.21814381444681724 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:11:36,488] Trial 178 finished with value: 0.21838080189990908 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:36:37,543] Trial 190 finished with value: 0.29429771726114856 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:41:55,956] Trial 195 finished with value: 0.2936314036019851 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:48:42,849] Trial 179 finished with value: 0.21777596378367942 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 16:51:57,740] Trial 180 finished with value: 0.21858542127266872 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
running
[I 2024-11-02 17:08:24,742] Trial 181 finished with value: 0.21758533374105307 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 17:27:02,837] Trial 182 finished with value: 0.21735570473875948 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 17:31:25,849] Trial 184 finished with value: 0.21742629795448645 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 17:31:38,182] Trial 183 finished with value: 0.21795833900050857 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 17:32:56,723] Trial 185 finished with value: 0.21801607166632006 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 17:50:22,638] Trial 186 finished with value: 0.21765083046470216 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:04:42,159] Trial 187 finished with value: 0.21782321878707891 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:08:01,998] Trial 188 finished with value: 0.21734306920778979 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:10:46,271] Trial 189 finished with value: 0.2176983404764225 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:11:27,611] Trial 192 finished with value: 0.21737604390037463 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:13:37,193] Trial 193 finished with value: 0.21796995733563182 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:15:00,736] Trial 194 finished with value: 0.21840776529567138 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:40:12,019] Trial 196 finished with value: 0.2181121154530219 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:45:18,668] Trial 197 finished with value: 0.21746877789525515 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:51:20,417] Trial 198 finished with value: 0.2177164303689935 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
[I 2024-11-02 18:55:03,887] Trial 199 finished with value: 0.21818208626608296 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'descending'}. Best is trial 136 with value: 0.2169529414959408.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
dtype: int64
0.2169529414959408
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'descending'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547469cbe0> 

Generation:  1
Best f1_score score: 0.9790832536201783
Generation:   4%|▍         | 1/25 [10:00<4:00:23, 600.98s/it]Generation:  2
Best f1_score score: 0.9808483810479768
Generation:   8%|▊         | 2/25 [14:53<2:40:42, 419.26s/it]Generation:  3
Best f1_score score: 0.9808483810479768
Generation:  12%|█▏        | 3/25 [15:55<1:33:55, 256.15s/it]Generation:  4
Best f1_score score: 0.9808483810479768
Generation:  16%|█▌        | 4/25 [22:57<1:52:39, 321.87s/it]Generation:  5
Best f1_score score: 0.9808483810479768
Generation:  20%|██        | 5/25 [28:05<1:45:34, 316.70s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554748c5330> 

Generation:  6
Best f1_score score: 0.9809455704165305
Generation:  24%|██▍       | 6/25 [38:12<2:11:36, 415.62s/it]Generation:  7
Best f1_score score: 0.9809455704165305
Generation:  28%|██▊       | 7/25 [43:49<1:56:58, 389.92s/it]Generation:  8
Best f1_score score: 0.9809455704165305
Generation:  32%|███▏      | 8/25 [45:38<1:25:04, 300.25s/it]Generation:  9
Best f1_score score: 0.9809455704165305
Generation:  36%|███▌      | 9/25 [46:01<56:58, 213.68s/it]  Generation:  10
Best f1_score score: 0.9809455704165305
Generation:  40%|████      | 10/25 [47:15<42:38, 170.55s/it]Generation:  11
Best f1_score score: 0.9809455704165305
Generation:  44%|████▍     | 11/25 [47:30<28:39, 122.83s/it]Generation:  12
Best f1_score score: 0.9809455704165305
Generation:  48%|████▊     | 12/25 [47:52<19:58, 92.20s/it] Generation:  13
Best f1_score score: 0.9809455704165305
Generation:  52%|█████▏    | 13/25 [48:11<14:00, 70.03s/it]Generation:  14
Best f1_score score: 0.9809455704165305
Generation:  56%|█████▌    | 14/25 [49:54<14:39, 79.96s/it]Generation:  15
Best f1_score score: 0.9809455704165305
Generation:  60%|██████    | 15/25 [54:03<21:49, 130.93s/it]Generation:  16
Best f1_score score: 0.9809455704165305
Generation:  64%|██████▍   | 16/25 [54:20<14:31, 96.83s/it] Generation:  17
Best f1_score score: 0.9809455704165305
Generation:  68%|██████▊   | 17/25 [56:41<14:40, 110.12s/it]Generation:  18
Best f1_score score: 0.9809455704165305
Generation:  72%|███████▏  | 18/25 [1:02:22<20:56, 179.43s/it]Generation:  19
Best f1_score score: 0.9809455704165305
Generation:  76%|███████▌  | 19/25 [1:03:14<14:06, 141.16s/it]Generation:  20
Best f1_score score: 0.9809455704165305
Generation:  80%|████████  | 20/25 [1:05:16<11:16, 135.32s/it]Generation:  21
Best f1_score score: 0.9809455704165305
Generation:  84%|████████▍ | 21/25 [1:06:01<07:12, 108.14s/it]Generation:  22
Best f1_score score: 0.9809455704165305
Generation:  88%|████████▊ | 22/25 [1:08:14<05:47, 115.67s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467a0d930> 
 l1_ratio must be specified when penalty is elasticnet. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1204, in fit
    raise ValueError("l1_ratio must be specified when penalty is elasticnet.")
ValueError: l1_ratio must be specified when penalty is elasticnet.

Generation:  23
Best f1_score score: 0.9809455704165305
Generation:  92%|█████████▏| 23/25 [1:12:28<05:14, 157.13s/it]Generation:  24
Best f1_score score: 0.9809455704165305
Generation:  96%|█████████▌| 24/25 [1:13:20<02:05, 125.73s/it]Generation:  25
Best f1_score score: 0.9809455704165305
Generation: 100%|██████████| 25/25 [1:17:42<00:00, 166.66s/it]Generation: 100%|██████████| 25/25 [1:17:46<00:00, 186.66s/it]
2024-11-02 20:42:50,658 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nosplit_nbytes_bin = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/worker.py", line 1250, in heartbeat
    response = await retry_operation(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 459, in retry_operation
    return await retry(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 438, in retry
    return await coro()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1256, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1015, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 236, in read
    convert_stream_closed_error(self, e)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://127.0.0.1:41510 remote=tcp://127.0.0.1:40621>: Stream is closed
2024-11-02 20:42:50,658 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nosplit_nbytes_bin = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/worker.py", line 1250, in heartbeat
    response = await retry_operation(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 459, in retry_operation
    return await retry(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 438, in retry
    return await coro()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1256, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1015, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 236, in read
    convert_stream_closed_error(self, e)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://127.0.0.1:41502 remote=tcp://127.0.0.1:40621>: Stream is closed
2024-11-02 20:42:50,658 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nosplit_nbytes_bin = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/worker.py", line 1250, in heartbeat
    response = await retry_operation(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 459, in retry_operation
    return await retry(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 438, in retry
    return await coro()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1256, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1015, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 236, in read
    convert_stream_closed_error(self, e)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://127.0.0.1:41506 remote=tcp://127.0.0.1:40621>: Stream is closed
2024-11-02 20:42:50,656 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nosplit_nbytes_bin = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/worker.py", line 1250, in heartbeat
    response = await retry_operation(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 459, in retry_operation
    return await retry(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 438, in retry
    return await coro()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1256, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1015, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 236, in read
    convert_stream_closed_error(self, e)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://127.0.0.1:41500 remote=tcp://127.0.0.1:40621>: Stream is closed
2024-11-02 20:42:50,656 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nosplit_nbytes_bin = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/worker.py", line 1250, in heartbeat
    response = await retry_operation(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 459, in retry_operation
    return await retry(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 438, in retry
    return await coro()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1256, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1015, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 236, in read
    convert_stream_closed_error(self, e)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://127.0.0.1:41504 remote=tcp://127.0.0.1:40621>: Stream is closed
2024-11-02 20:42:50,660 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nosplit_nbytes_bin = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/worker.py", line 1250, in heartbeat
    response = await retry_operation(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 459, in retry_operation
    return await retry(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 438, in retry
    return await coro()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1256, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1015, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 236, in read
    convert_stream_closed_error(self, e)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://127.0.0.1:41508 remote=tcp://127.0.0.1:40621>: Stream is closed
2024-11-02 20:42:50,677 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45735' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-9c3651464f5bdfb87984debb40426f00', 'ndarray-16205b9c29c2cbd81f55a3a14ad321d1'} (stimulus_id='handle-worker-cleanup-1730605370.6775146')
Fitted
Pipeline(steps=[('sgdclassifier',
                 SGDClassifier(alpha=0.0007993109407, eta0=0.3629672697167,
                               l1_ratio=0.8659164537786, loss='modified_huber',
                               n_jobs=1, penalty='elasticnet'))])
score start
train score: {'auroc': 0.9906130199060453, 'accuracy': 0.982185564481511, 'balanced_accuracy': 0.9814643074405114, 'logloss': 0.3249658679857532, 'f1': 0.9814939306423588}
original test score: {'auroc': 0.9999633183690609, 'accuracy': 0.9959529065489331, 'balanced_accuracy': 0.9957716765317549, 'logloss': 0.020267494591620038, 'f1': 0.9957960595334663}
imputed test score: {'auroc': 0.9950720384738442, 'accuracy': 0.9889624724061811, 'balanced_accuracy': 0.988338553331467, 'logloss': 0.18016021063173548, 'f1': 0.9885307479603966}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014670>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.9801439267335759
Generation:   4%|▍         | 1/25 [04:07<1:38:58, 247.44s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fcf70> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0d150> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fd8d0> 

Generation:  2
Best f1_score score: 0.9801439267335759
Generation:   8%|▊         | 2/25 [14:10<2:54:56, 456.38s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ce5f90> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  3
Best f1_score score: 0.9801439267335759
Generation:  12%|█▏        | 3/25 [19:52<2:28:16, 404.38s/it]Generation:  4
Best f1_score score: 0.9804313955778585
Generation:  16%|█▌        | 4/25 [25:07<2:09:10, 369.05s/it]Generation:  5
Best f1_score score: 0.9806928486779063
Generation:  20%|██        | 5/25 [30:50<1:59:52, 359.64s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467ea07c0> 

Generation:  6
Best f1_score score: 0.9806928486779063
Generation:  24%|██▍       | 6/25 [40:56<2:20:25, 443.46s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f593c0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.9806928486779063
Generation:  28%|██▊       | 7/25 [47:44<2:09:35, 431.95s/it]Generation:  8
Best f1_score score: 0.9808535738822501
Generation:  32%|███▏      | 8/25 [53:51<1:56:29, 411.12s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545395c190> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  9
Best f1_score score: 0.9808535738822501
Generation:  36%|███▌      | 9/25 [1:01:34<1:53:57, 427.36s/it]Generation:  10
Best f1_score score: 0.9808535738822501
Generation:  40%|████      | 10/25 [1:08:01<1:43:45, 415.02s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554666f3190> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  11
Best f1_score score: 0.9809159302791952
Generation:  44%|████▍     | 11/25 [1:13:41<1:31:26, 391.91s/it]Generation:  12
Best f1_score score: 0.9811095147731347
Generation:  48%|████▊     | 12/25 [1:19:55<1:23:43, 386.43s/it]Generation:  13
Best f1_score score: 0.9811095147731347
Generation:  52%|█████▏    | 13/25 [1:27:34<1:21:40, 408.39s/it]Generation:  14
Best f1_score score: 0.9811095147731347
Generation:  56%|█████▌    | 14/25 [1:36:55<1:23:20, 454.57s/it]Generation:  15
Best f1_score score: 0.9811099680632569
Generation:  60%|██████    | 15/25 [1:43:21<1:12:18, 433.80s/it]Generation:  16
Best f1_score score: 0.9811099680632569
Generation:  64%|██████▍   | 16/25 [1:49:34<1:02:20, 415.66s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a12dae0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464096860> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f75570> 

Generation:  17
Best f1_score score: 0.9811099680632569
Generation:  68%|██████▊   | 17/25 [1:59:44<1:03:12, 474.06s/it]Generation:  18
Best f1_score score: 0.9811099680632569
Generation:  72%|███████▏  | 18/25 [2:04:42<49:08, 421.16s/it]  WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466f58220> 

Generation:  19
Best f1_score score: 0.9811099680632569
Generation:  76%|███████▌  | 19/25 [2:14:48<47:39, 476.66s/it]Generation:  20
Best f1_score score: 0.9811099680632569
Generation:  80%|████████  | 20/25 [2:20:29<36:20, 436.04s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545355fb20> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  21
Best f1_score score: 0.9811099680632569
Generation:  84%|████████▍ | 21/25 [2:27:19<28:32, 428.02s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554648fe920> 

Generation:  22
Best f1_score score: 0.9811099680632569
Generation:  88%|████████▊ | 22/25 [2:37:26<24:05, 481.81s/it]Generation:  23
Best f1_score score: 0.9811099680632569
Generation:  92%|█████████▏| 23/25 [2:43:36<14:56, 448.14s/it]Generation:  24
Best f1_score score: 0.9811099680632569
Generation:  96%|█████████▌| 24/25 [2:48:50<06:48, 408.08s/it]Generation:  25
Best f1_score score: 0.9811099680632569
Generation: 100%|██████████| 25/25 [2:55:31<00:00, 405.81s/it]Generation: 100%|██████████| 25/25 [2:55:31<00:00, 421.25s/it]
2024-11-02 23:39:18,345 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:42935' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-9eef9bd746e3a4142f6b372426bbb6bb', 'ndarray-16205b9c29c2cbd81f55a3a14ad321d1'} (stimulus_id='handle-worker-cleanup-1730615958.3450637')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=82)),
                ('linearsvc', LinearSVC(C=11.5498745979394, loss='hinge'))])
transform worked
try transform
transform worked
score start
failed on 
../data/c/881/class_full_MAR_0.3_3
local variable 'this_auroc_score' referenced before assignment
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/ImputerExperiments/Locally_run_code/utils.py", line 679, in loop_through_tasks
    train_score = score(tpot_space, X_train_M, y_train, r_or_c=r_or_c)
  File "/common/ketrong/tpotexp/tpot2/ImputerExperiments/Locally_run_code/utils.py", line 50, in score
    return { "auroc": this_auroc_score,
UnboundLocalError: local variable 'this_auroc_score' referenced before assignment

full run takes
20.371055748263995
hours
DONE
