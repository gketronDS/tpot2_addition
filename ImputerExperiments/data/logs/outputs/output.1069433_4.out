Run: 4
/cm/local/apps/slurm/var/spool/job1069433/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/40922/40922.pkl
working on 
../data/c/40922/class_full_MCAR_0.5_1
3.02321457862854
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-23 09:37:35,264] A new study created in memory with name: no-name-8e56704c-c50e-4058-9e36-c9e05af42f2e
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-23 09:37:35,689] Trial 7 finished with value: 0.3649735081722973 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.3649735081722973.
running
[I 2024-11-23 09:37:36,118] Trial 12 finished with value: 0.19182810204512113 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 12 with value: 0.19182810204512113.
running
[I 2024-11-23 09:37:36,289] Trial 11 finished with value: 0.19182810204512113 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 12 with value: 0.19182810204512113.
running
[I 2024-11-23 09:37:36,591] Trial 9 finished with value: 0.2649937900561149 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 12 with value: 0.19182810204512113.
running
[I 2024-11-23 09:37:37,332] Trial 17 finished with value: 0.3649735081722973 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 12 with value: 0.19182810204512113.
running
[I 2024-11-23 09:37:46,463] Trial 5 finished with value: 0.19181009782278297 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.19181009782278297.
running
[I 2024-11-23 09:37:47,006] Trial 0 finished with value: 0.1917997771185595 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 0 with value: 0.1917997771185595.
running
[I 2024-11-23 09:37:47,439] Trial 22 finished with value: 0.19182810204512113 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 0 with value: 0.1917997771185595.
running
[I 2024-11-23 09:37:49,692] Trial 6 finished with value: 0.0981430870770533 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1, 'learning_rate': 0.0008232020522268568, 'p_miss': 0.29683259438558235}. Best is trial 6 with value: 0.0981430870770533.
running
[I 2024-11-23 09:37:50,514] Trial 14 finished with value: 0.19179265161304657 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 6 with value: 0.0981430870770533.
running
[I 2024-11-23 09:37:51,001] Trial 21 finished with value: 0.3378560902714839 and parameters: {'model_name': 'GAIN', 'batch_size': 298, 'hint_rate': 0.16797414853432968, 'alpha': 34, 'iterations': 1, 'learning_rate': 0.02477705057245572, 'p_miss': 0.23371111441753242}. Best is trial 6 with value: 0.0981430870770533.
running
[I 2024-11-23 09:37:51,246] Trial 24 finished with value: 0.3649735081722973 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 6 with value: 0.0981430870770533.
running
[I 2024-11-23 09:37:51,780] Trial 23 finished with value: 0.33147455573900725 and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.316052939517762, 'alpha': 27, 'iterations': 2, 'learning_rate': 0.08616157060183346, 'p_miss': 0.2660873095702068}. Best is trial 6 with value: 0.0981430870770533.
running
[I 2024-11-23 09:37:52,335] Trial 1 finished with value: 0.3477682975860288 and parameters: {'model_name': 'GAIN', 'batch_size': 306, 'hint_rate': 0.29064653016630004, 'alpha': 42, 'iterations': 2, 'learning_rate': 0.03085784867143694, 'p_miss': 0.12953718464800673}. Best is trial 6 with value: 0.0981430870770533.
running
[I 2024-11-23 09:37:53,918] Trial 15 finished with value: 0.10277755104735439 and parameters: {'model_name': 'VAE', 'batch_size': 328, 'iterations': 2, 'learning_rate': 0.0006689834628427366, 'p_miss': 0.13525759606684434}. Best is trial 6 with value: 0.0981430870770533.
running
[I 2024-11-23 09:37:54,484] Trial 25 finished with value: 0.1039721108860426 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 1, 'learning_rate': 0.0007677621475902297, 'p_miss': 0.29484590808232874}. Best is trial 6 with value: 0.0981430870770533.
running
[I 2024-11-23 09:38:32,329] Trial 26 finished with value: 0.09700669600539061 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 51, 'learning_rate': 0.00017545289115486977, 'p_miss': 0.297466574241921}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:38:39,663] Trial 4 finished with value: 0.2663735403738672 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:38:56,127] Trial 2 finished with value: 0.2011910139150288 and parameters: {'model_name': 'VAE', 'batch_size': 166, 'iterations': 26, 'learning_rate': 0.05234422110055232, 'p_miss': 0.08737427830487575}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:39:35,503] Trial 16 finished with value: 0.23997660267394746 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 48461, 'weights': 'distance'}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:39:46,244] Trial 32 finished with value: 0.1917646942422882 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 18744, 'weights': 'uniform'}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:39:46,532] Trial 10 finished with value: 0.2072348972561986 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:39:57,439] Trial 33 finished with value: 0.19168875446120542 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 32235, 'weights': 'uniform'}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:40:05,052] Trial 34 finished with value: 0.23998931307101704 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8274, 'weights': 'distance'}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:44:26,255] Trial 27 finished with value: 0.10417813668988303 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 197, 'learning_rate': 0.00020359024785909056, 'p_miss': 0.28560197530204895}. Best is trial 26 with value: 0.09700669600539061.
running
[I 2024-11-23 09:47:57,791] Trial 31 finished with value: 0.09624189596715724 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 235, 'learning_rate': 0.00014767445320407492, 'p_miss': 0.019723534738400272}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 09:52:05,004] Trial 8 finished with value: 0.2289350210773656 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 357, 'learning_rate': 0.010340923745619037, 'p_miss': 0.065237312135291}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 09:57:42,047] Trial 30 finished with value: 0.14127612949158652 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 444, 'learning_rate': 0.0003078265153176751, 'p_miss': 0.06347316670507365}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 10:32:55,331] Trial 39 finished with value: 0.12328970718438785 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1305, 'learning_rate': 0.00010586132970331812, 'p_miss': 0.1814014282867161}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 10:34:14,228] Trial 44 finished with value: 0.10440614822480276 and parameters: {'model_name': 'VAE', 'batch_size': 24, 'iterations': 27, 'learning_rate': 0.0020250058022293813, 'p_miss': 0.015545558956972905}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 10:58:42,414] Trial 20 finished with value: 0.21031989192138764 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'descending'}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 11:25:50,202] Trial 18 finished with value: 0.20899840979919898 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 11:26:23,791] Trial 47 finished with value: 0.10194292619415371 and parameters: {'model_name': 'VAE', 'batch_size': 66, 'iterations': 9, 'learning_rate': 0.0006460596577875228, 'p_miss': 0.21505160813641636}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 11:27:00,810] Trial 48 finished with value: 0.10019622849711249 and parameters: {'model_name': 'VAE', 'batch_size': 42, 'iterations': 12, 'learning_rate': 0.0005547800938170851, 'p_miss': 0.232613238134573}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 11:30:12,282] Trial 49 finished with value: 0.09884935288975087 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 67, 'learning_rate': 0.0001060429270822104, 'p_miss': 0.2552842737226178}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 11:33:32,572] Trial 3 finished with value: 0.20237465137749128 and parameters: {'model_name': 'VAE', 'batch_size': 51, 'iterations': 2718, 'learning_rate': 0.013268901775492474, 'p_miss': 0.14173424254948438}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 11:39:31,191] Trial 51 finished with value: 0.10085999097520626 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 121, 'learning_rate': 0.00013342642041857148, 'p_miss': 0.2622983211644178}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 11:41:52,700] Trial 52 finished with value: 0.0969631429729347 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 46, 'learning_rate': 0.00029678026862807775, 'p_miss': 0.2969449102266255}. Best is trial 31 with value: 0.09624189596715724.
running
[I 2024-11-23 11:44:30,209] Trial 53 finished with value: 0.09293178361317166 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 51, 'learning_rate': 0.00028718890675264304, 'p_miss': 0.2943636353330722}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:47:12,948] Trial 54 finished with value: 0.09506933604043413 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 59, 'learning_rate': 0.0002761349106130209, 'p_miss': 0.19425585481379531}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:49:23,004] Trial 36 finished with value: 0.18352316109747252 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2705, 'learning_rate': 0.00010185678227614144, 'p_miss': 0.19060201370257798}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:52:26,689] Trial 13 finished with value: 0.20410042722008437 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:52:30,277] Trial 56 finished with value: 0.09812978427344468 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 54, 'learning_rate': 0.0003032051629788326, 'p_miss': 0.2979038613720915}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:54:50,367] Trial 58 finished with value: 0.09906804318308228 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 40, 'learning_rate': 0.00027357579758765263, 'p_miss': 0.27327881927980063}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:55:27,529] Trial 57 finished with value: 0.09341710338397884 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 54, 'learning_rate': 0.0002752352111618297, 'p_miss': 0.2722216184518022}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:58:41,630] Trial 60 finished with value: 0.33382979612524993 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.94338275696354, 'alpha': 93, 'iterations': 138, 'learning_rate': 0.001873990697196513, 'p_miss': 0.24293768054218726}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:59:03,511] Trial 55 finished with value: 0.104819166289041 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 196, 'learning_rate': 0.0003730869993610217, 'p_miss': 0.17436553292399942}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:59:24,317] Trial 61 finished with value: 0.09543324500212859 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 11, 'learning_rate': 0.00040617648561020944, 'p_miss': 0.1958274502091244}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 11:59:36,190] Trial 62 finished with value: 0.10237763332626335 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 11, 'learning_rate': 0.0012262390552079355, 'p_miss': 0.20825049231897483}. Best is trial 53 with value: 0.09293178361317166.
running
[I 2024-11-23 12:00:15,101] Trial 63 finished with value: 0.09080520101160622 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 13, 'learning_rate': 0.0013476462372322352, 'p_miss': 0.2045484941377055}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:00:33,634] Trial 65 finished with value: 0.0980890027548076 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 5, 'learning_rate': 0.0004581699762029836, 'p_miss': 0.1639294395142738}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:00:40,525] Trial 64 finished with value: 0.09765808502021879 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 19, 'learning_rate': 0.00020021877715180385, 'p_miss': 0.15951121920945444}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:01:00,079] Trial 67 finished with value: 0.09541783520128204 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.00348667256212025, 'p_miss': 0.20395626751720464}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:01:03,768] Trial 59 finished with value: 0.09658487167126818 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 115, 'learning_rate': 0.0001958289659934733, 'p_miss': 0.012888965598816733}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:01:15,268] Trial 68 finished with value: 0.09704442744370564 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.003528683001360938, 'p_miss': 0.20200646766327}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:01:17,547] Trial 70 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.7752877986665624, 'alpha': 82, 'iterations': 4, 'learning_rate': 0.004590393342649897, 'p_miss': 0.22639513258909505}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:01:25,813] Trial 69 finished with value: 0.0943347034852905 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 6, 'learning_rate': 0.003961250785680253, 'p_miss': 0.19324842542048967}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:01:48,335] Trial 66 finished with value: 0.11185916738135568 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 24, 'learning_rate': 0.00018381399898532834, 'p_miss': 0.2052610083599954}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:02:02,777] Trial 73 finished with value: 0.09206028485410152 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 4, 'learning_rate': 0.006841168393405843, 'p_miss': 0.11820019049175107}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:02:31,952] Trial 71 finished with value: 0.14535721484888536 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 21, 'learning_rate': 0.006149825970425619, 'p_miss': 0.12044071211024461}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:02:56,713] Trial 74 finished with value: 0.20668578067650123 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:02:59,862] Trial 72 finished with value: 0.13016176469156035 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 24, 'learning_rate': 0.005812670758655643, 'p_miss': 0.12230880585145229}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:12,176] Trial 76 finished with value: 0.09742180724487147 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 3, 'learning_rate': 0.009102339530541528, 'p_miss': 0.10195098639224538}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:16,761] Trial 77 finished with value: 0.09771080093713484 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 4, 'learning_rate': 0.009357922963782595, 'p_miss': 0.1778299641951589}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:27,626] Trial 75 finished with value: 0.20668578067650123 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:36,140] Trial 78 finished with value: 0.11477962579275314 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 6, 'learning_rate': 0.018777219353695758, 'p_miss': 0.14263858723481102}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:41,211] Trial 80 finished with value: 0.09457287944046823 and parameters: {'model_name': 'VAE', 'batch_size': 572, 'iterations': 2, 'learning_rate': 0.002477765042481428, 'p_miss': 0.2476329316174923}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:42,432] Trial 82 finished with value: 0.2649937900561149 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:42,644] Trial 79 finished with value: 0.12156451846332912 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 7, 'learning_rate': 0.019151074770741763, 'p_miss': 0.14956435395113676}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:44,259] Trial 81 finished with value: 0.0981097428145587 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.00240187456155355, 'p_miss': 0.22042744734684813}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:52,241] Trial 83 finished with value: 0.3292134019818433 and parameters: {'model_name': 'GAIN', 'batch_size': 259, 'hint_rate': 0.6125868534810728, 'alpha': 67, 'iterations': 2, 'learning_rate': 0.0021208382380876727, 'p_miss': 0.2688614842342251}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:03:52,588] Trial 85 finished with value: 0.32630696259374764 and parameters: {'model_name': 'GAIN', 'batch_size': 833, 'hint_rate': 0.5644443303040374, 'alpha': 0, 'iterations': 1, 'learning_rate': 0.0009756392362644624, 'p_miss': 0.27521797273823423}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:05:14,417] Trial 84 finished with value: 0.2399829771475662 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 67940, 'weights': 'distance'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:05:22,982] Trial 86 finished with value: 0.2399829771475662 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 70640, 'weights': 'distance'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:05:24,823] Trial 87 finished with value: 0.2399829771475662 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 67925, 'weights': 'distance'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:05:37,772] Trial 89 finished with value: 0.09442801959192422 and parameters: {'model_name': 'VAE', 'batch_size': 102, 'iterations': 3, 'learning_rate': 0.001470240789798994, 'p_miss': 0.2502706884109608}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:05:41,688] Trial 88 finished with value: 0.1008077836112937 and parameters: {'model_name': 'VAE', 'batch_size': 911, 'iterations': 3, 'learning_rate': 0.00345488735923255, 'p_miss': 0.24612591219180674}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:05:50,312] Trial 91 finished with value: 0.09648044535282609 and parameters: {'model_name': 'VAE', 'batch_size': 105, 'iterations': 3, 'learning_rate': 0.0011060193427658597, 'p_miss': 0.24907319508585254}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:06:23,258] Trial 90 finished with value: 0.1036272545343712 and parameters: {'model_name': 'VAE', 'batch_size': 69, 'iterations': 15, 'learning_rate': 0.003306259394500512, 'p_miss': 0.25195520493161966}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:06:30,965] Trial 94 finished with value: 0.0971783859494871 and parameters: {'model_name': 'VAE', 'batch_size': 476, 'iterations': 1, 'learning_rate': 0.0014547789775961133, 'p_miss': 0.2852944061135268}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:07:02,595] Trial 93 finished with value: 0.09517669281845753 and parameters: {'model_name': 'VAE', 'batch_size': 506, 'iterations': 16, 'learning_rate': 0.001556009272516492, 'p_miss': 0.28491719119752423}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:09:00,260] Trial 35 finished with value: 0.209371999099287 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2761, 'learning_rate': 0.00011610565014221724, 'p_miss': 0.21951487382342716}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:09:03,858] Trial 96 finished with value: 0.10154223025548328 and parameters: {'model_name': 'VAE', 'batch_size': 637, 'iterations': 31, 'learning_rate': 0.00158072952335308, 'p_miss': 0.2845030045607014}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:10:29,623] Trial 92 finished with value: 0.1321554093218496 and parameters: {'model_name': 'VAE', 'batch_size': 99, 'iterations': 86, 'learning_rate': 0.001285711782525741, 'p_miss': 0.24512246668086057}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:11:13,457] Trial 99 finished with value: 0.0998490018746461 and parameters: {'model_name': 'VAE', 'batch_size': 193, 'iterations': 8, 'learning_rate': 0.0025909944551233996, 'p_miss': 0.261700505272049}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:11:14,272] Trial 100 finished with value: 0.3649735081722973 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:11:41,511] Trial 95 finished with value: 0.20051425765475056 and parameters: {'model_name': 'VAE', 'batch_size': 152, 'iterations': 83, 'learning_rate': 0.006271248120061523, 'p_miss': 0.23585306016881158}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:12:40,356] Trial 102 finished with value: 0.10470587730447938 and parameters: {'model_name': 'VAE', 'batch_size': 469, 'iterations': 15, 'learning_rate': 0.0008185639954260928, 'p_miss': 0.18751543905305493}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:12:46,906] Trial 37 finished with value: 0.21331378995869393 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3207, 'learning_rate': 0.00010291359993128675, 'p_miss': 0.18749325762617547}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:13:18,779] Trial 97 finished with value: 0.15161735321161104 and parameters: {'model_name': 'VAE', 'batch_size': 431, 'iterations': 78, 'learning_rate': 0.0016658209363930292, 'p_miss': 0.28306833459991143}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:14:08,285] Trial 98 finished with value: 0.19157152512233494 and parameters: {'model_name': 'VAE', 'batch_size': 406, 'iterations': 81, 'learning_rate': 0.0026040281630598, 'p_miss': 0.26199996573650336}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:14:57,833] Trial 103 finished with value: 0.20780780826838616 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 39, 'learning_rate': 0.04902348730955578, 'p_miss': 0.2809376206872273}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:15:39,413] Trial 107 finished with value: 0.0998783746614544 and parameters: {'model_name': 'VAE', 'batch_size': 20, 'iterations': 9, 'learning_rate': 0.004727431259539573, 'p_miss': 0.16745306296922835}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:15:53,472] Trial 106 finished with value: 0.15333869228583966 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 33, 'learning_rate': 0.004256417232286472, 'p_miss': 0.06146033811691023}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:15:54,792] Trial 108 finished with value: 0.09788881229592564 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 4, 'learning_rate': 0.003992425065437, 'p_miss': 0.07383922904852888}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:15:57,467] Trial 105 finished with value: 0.10122016936603695 and parameters: {'model_name': 'VAE', 'batch_size': 637, 'iterations': 38, 'learning_rate': 0.0005849343143516547, 'p_miss': 0.0518437435821702}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:02,579] Trial 104 finished with value: 0.0999563786916299 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 60, 'learning_rate': 0.0005910782632277452, 'p_miss': 0.2824288488723621}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:06,896] Trial 109 finished with value: 0.0989396395382979 and parameters: {'model_name': 'VAE', 'batch_size': 244, 'iterations': 4, 'learning_rate': 0.00747494713529491, 'p_miss': 0.21179311615736202}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:09,789] Trial 101 finished with value: 0.1159470935169026 and parameters: {'model_name': 'VAE', 'batch_size': 404, 'iterations': 88, 'learning_rate': 0.000862380456267299, 'p_miss': 0.28137272359161036}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:12,798] Trial 111 finished with value: 0.19184025351109218 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:13,756] Trial 115 finished with value: 0.2649937900561149 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:25,009] Trial 114 finished with value: 0.19183297504465585 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:26,902] Trial 116 finished with value: 0.11302030759732566 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 14, 'learning_rate': 0.00024126829308482878, 'p_miss': 0.19563583252750433}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:31,012] Trial 110 finished with value: 0.2661164267523743 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:37,206] Trial 117 finished with value: 0.100436169524369 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 12, 'learning_rate': 0.0002436975362075714, 'p_miss': 0.1965408801959215}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:38,387] Trial 112 finished with value: 0.2657996185361828 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:39,912] Trial 118 finished with value: 0.09839320987990449 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 11, 'learning_rate': 0.0003615116320719944, 'p_miss': 0.196827364552543}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:43,269] Trial 113 finished with value: 0.2661164267523743 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman', 'sample_posterior': True}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:44,310] Trial 119 finished with value: 0.09647976501426928 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 11, 'learning_rate': 0.00037270330266954047, 'p_miss': 0.1950274021378484}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:50,224] Trial 121 finished with value: 0.09413766855289249 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6, 'learning_rate': 0.000378248154449287, 'p_miss': 0.2923039079333011}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:50,562] Trial 120 finished with value: 0.10422757735045222 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 6, 'learning_rate': 0.0003822809999854392, 'p_miss': 0.22752848201100243}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:52,505] Trial 123 finished with value: 0.09529637194803019 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.00043393045886938765, 'p_miss': 0.22425710349241637}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:57,147] Trial 122 finished with value: 0.09839664250500332 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6, 'learning_rate': 0.0003996892997221382, 'p_miss': 0.22409516865367063}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:58,995] Trial 125 finished with value: 0.09436984500368403 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 2, 'learning_rate': 0.002996093355621904, 'p_miss': 0.2943414174688253}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:16:59,242] Trial 126 finished with value: 0.09979077876077229 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.00016106955886886694, 'p_miss': 0.2921909003539165}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:00,545] Trial 127 finished with value: 0.09174561566417318 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 2, 'learning_rate': 0.00015067902688152673, 'p_miss': 0.2936338114654639}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:03,543] Trial 124 finished with value: 0.11526699595878172 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 6, 'learning_rate': 0.00016898633731943558, 'p_miss': 0.22787314060221425}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:07,619] Trial 129 finished with value: 0.10365766797970802 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 2, 'learning_rate': 0.00023925091434354455, 'p_miss': 0.2907873991552297}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:08,964] Trial 128 finished with value: 0.09103895529776708 and parameters: {'model_name': 'VAE', 'batch_size': 737, 'iterations': 2, 'learning_rate': 0.0001421231463784681, 'p_miss': 0.29962593973710916}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:11,861] Trial 130 finished with value: 0.10264741875632784 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 3, 'learning_rate': 0.002067538656051142, 'p_miss': 0.29571848395774997}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:13,190] Trial 131 finished with value: 0.1008517332268751 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 3, 'learning_rate': 0.002107354530759054, 'p_miss': 0.2898291146369007}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:16,430] Trial 132 finished with value: 0.09908211952690626 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 3, 'learning_rate': 0.00012586354221114313, 'p_miss': 0.298782446987353}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:17,771] Trial 133 finished with value: 0.3280184729614609 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.09766888056498352, 'alpha': 10, 'iterations': 3, 'learning_rate': 0.002926827011095823, 'p_miss': 0.27469642062709076}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:17:19,183] Trial 134 finished with value: 0.3235822989744281 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.046813075118404435, 'alpha': 7, 'iterations': 3, 'learning_rate': 0.00015205744789644661, 'p_miss': 0.2965501072710652}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:18:19,740] Trial 136 finished with value: 0.10672666360741798 and parameters: {'model_name': 'VAE', 'batch_size': 652, 'iterations': 18, 'learning_rate': 0.00013145282432687686, 'p_miss': 0.2750425036092359}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:18:52,950] Trial 139 finished with value: 0.09803156842627617 and parameters: {'model_name': 'VAE', 'batch_size': 623, 'iterations': 18, 'learning_rate': 0.00028151928964583465, 'p_miss': 0.2713739027849561}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:25:58,419] Trial 141 finished with value: 0.0979008318546005 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 145, 'learning_rate': 0.00020521432979990777, 'p_miss': 0.2548788319005847}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:26:08,707] Trial 142 finished with value: 0.10816662965701665 and parameters: {'model_name': 'VAE', 'batch_size': 975, 'iterations': 1, 'learning_rate': 0.0004903506015044631, 'p_miss': 0.2659852173691918}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:26:59,236] Trial 143 finished with value: 0.19110593301593734 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1071, 'weights': 'uniform'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:30:39,133] Trial 144 finished with value: 0.09994823185379832 and parameters: {'model_name': 'VAE', 'batch_size': 786, 'iterations': 48, 'learning_rate': 0.0007057672805281166, 'p_miss': 0.2999755728833076}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:31:07,028] Trial 145 finished with value: 0.09696466024188358 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 8, 'learning_rate': 0.0010756001779176204, 'p_miss': 0.2905909205211767}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:31:22,552] Trial 146 finished with value: 0.10710709500109919 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 4, 'learning_rate': 0.011493043112437403, 'p_miss': 0.23772520989353815}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:31:31,826] Trial 147 finished with value: 0.09383885104518487 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.0004792463481065525, 'p_miss': 0.10430747007758653}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:31:49,168] Trial 148 finished with value: 0.10188564567027152 and parameters: {'model_name': 'VAE', 'batch_size': 321, 'iterations': 2, 'learning_rate': 0.0017452215644829063, 'p_miss': 0.1190212245246206}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:37:26,955] Trial 137 finished with value: 0.3392143061386136 and parameters: {'model_name': 'GAIN', 'batch_size': 690, 'hint_rate': 0.018428500136199455, 'alpha': 8, 'iterations': 738, 'learning_rate': 0.0002937886018444666, 'p_miss': 0.2709857159877733}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:37:42,249] Trial 150 finished with value: 0.09664958299491595 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 5, 'learning_rate': 0.002925288332785086, 'p_miss': 0.2868240045182467}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:39:25,172] Trial 40 finished with value: 0.2569713319509571 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4108, 'learning_rate': 0.0007697877429415357, 'p_miss': 0.17834220267232487}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:39:31,747] Trial 152 finished with value: 0.09617893947758789 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 1, 'learning_rate': 0.0013020032717572765, 'p_miss': 0.2780546474381521}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:39:33,620] Trial 153 finished with value: 0.3649735081722973 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:44:11,979] Trial 154 finished with value: 0.09216502432139427 and parameters: {'model_name': 'VAE', 'batch_size': 538, 'iterations': 59, 'learning_rate': 0.0002032539298550025, 'p_miss': 0.10314144078828097}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:45:06,133] Trial 140 finished with value: 0.15722087232792809 and parameters: {'model_name': 'VAE', 'batch_size': 577, 'iterations': 452, 'learning_rate': 0.00032351822281231473, 'p_miss': 0.26729527045773765}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:47:44,043] Trial 155 finished with value: 0.09432354350358654 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 65, 'learning_rate': 0.00020655068873209198, 'p_miss': 0.09917892169989723}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:48:09,288] Trial 28 finished with value: 0.23614452198928593 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3973, 'learning_rate': 0.00018547624882958276, 'p_miss': 0.014469862951216383}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:48:20,490] Trial 156 finished with value: 0.09366474128468343 and parameters: {'model_name': 'VAE', 'batch_size': 363, 'iterations': 49, 'learning_rate': 0.0002546622444517844, 'p_miss': 0.08497220089740491}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:50:15,442] Trial 38 finished with value: 0.21320115867140763 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3505, 'learning_rate': 0.0001019948758433127, 'p_miss': 0.18552282160619343}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:50:34,930] Trial 157 finished with value: 0.0934286028138746 and parameters: {'model_name': 'VAE', 'batch_size': 28, 'iterations': 63, 'learning_rate': 0.00020361027074675735, 'p_miss': 0.09947403358375863}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:51:45,409] Trial 158 finished with value: 0.09959091248951303 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 61, 'learning_rate': 0.0002103259679020256, 'p_miss': 0.09870335833345474}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:53:00,934] Trial 135 finished with value: 0.1758197358146689 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 783, 'learning_rate': 0.0003080671644123347, 'p_miss': 0.27365415065208887}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:53:02,414] Trial 160 finished with value: 0.09315545260531431 and parameters: {'model_name': 'VAE', 'batch_size': 546, 'iterations': 43, 'learning_rate': 0.00021522968572230158, 'p_miss': 0.09473381926955797}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:54:18,434] Trial 159 finished with value: 0.10039349898456788 and parameters: {'model_name': 'VAE', 'batch_size': 349, 'iterations': 101, 'learning_rate': 0.00020479826813101708, 'p_miss': 0.09480101775343772}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:54:22,697] Trial 161 finished with value: 0.0920952924523218 and parameters: {'model_name': 'VAE', 'batch_size': 38, 'iterations': 56, 'learning_rate': 0.00021953409484419024, 'p_miss': 0.10201446553553101}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:56:42,369] Trial 165 finished with value: 0.09848942336522507 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 49, 'learning_rate': 0.00023474377849827438, 'p_miss': 0.10975617552849966}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:58:06,482] Trial 163 finished with value: 0.09528346285998761 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 104, 'learning_rate': 0.000234966082388001, 'p_miss': 0.09786080186050974}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:58:07,454] Trial 166 finished with value: 0.09358990627981902 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 51, 'learning_rate': 0.00022879424063638665, 'p_miss': 0.1088165903177277}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 12:58:28,428] Trial 162 finished with value: 0.09422785144261514 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 108, 'learning_rate': 0.00022916830327310322, 'p_miss': 0.10699614360585807}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:00:08,301] Trial 168 finished with value: 0.09796058707557559 and parameters: {'model_name': 'VAE', 'batch_size': 31, 'iterations': 30, 'learning_rate': 0.0001732793094296608, 'p_miss': 0.08282785154029228}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:00:24,401] Trial 138 finished with value: 0.13008076069578106 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 826, 'learning_rate': 0.00013918127062012795, 'p_miss': 0.2693779809063812}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:00:57,793] Trial 167 finished with value: 0.10234306027199343 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 65, 'learning_rate': 0.0001447949980904876, 'p_miss': 0.0847390708990012}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:02:07,312] Trial 170 finished with value: 0.09557232570953103 and parameters: {'model_name': 'VAE', 'batch_size': 36, 'iterations': 65, 'learning_rate': 0.00013845352397406376, 'p_miss': 0.08582082887582311}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:02:21,783] Trial 169 finished with value: 0.09965452541114292 and parameters: {'model_name': 'VAE', 'batch_size': 37, 'iterations': 69, 'learning_rate': 0.00014026762653287519, 'p_miss': 0.08665015100504464}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:02:32,843] Trial 164 finished with value: 0.09810082444381656 and parameters: {'model_name': 'VAE', 'batch_size': 382, 'iterations': 102, 'learning_rate': 0.000238625681970543, 'p_miss': 0.0972861246374603}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:04:40,429] Trial 175 finished with value: 0.10748139319072528 and parameters: {'model_name': 'VAE', 'batch_size': 53, 'iterations': 42, 'learning_rate': 0.0002648564923416743, 'p_miss': 0.11146683744123577}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:05:01,551] Trial 171 finished with value: 0.09949012922093156 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 73, 'learning_rate': 0.00014395263408216845, 'p_miss': 0.10838051492278782}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:07:15,735] Trial 29 finished with value: 0.23686972219555322 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 4499, 'learning_rate': 0.00013414700936919462, 'p_miss': 0.02472524333188042}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:08:00,701] Trial 178 finished with value: 0.10179378648455131 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 50, 'learning_rate': 0.00018380928230549704, 'p_miss': 0.10485810411230777}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:08:26,505] Trial 172 finished with value: 0.09870335514510957 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 139, 'learning_rate': 0.00011256960374328263, 'p_miss': 0.11075237899580398}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:09:37,451] Trial 173 finished with value: 0.09482203073187126 and parameters: {'model_name': 'VAE', 'batch_size': 35, 'iterations': 145, 'learning_rate': 0.00018407312264435714, 'p_miss': 0.10896711099710032}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:09:39,900] Trial 181 finished with value: 0.19177206493002483 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 48163, 'weights': 'uniform'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:10:49,118] Trial 182 finished with value: 0.19173993488613 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 43496, 'weights': 'uniform'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:12:19,083] Trial 177 finished with value: 0.09458689123769878 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 157, 'learning_rate': 0.00017695827582644307, 'p_miss': 0.10771037326610826}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:12:28,448] Trial 184 finished with value: 0.10076254730338778 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 36, 'learning_rate': 0.000318137547604924, 'p_miss': 0.09123790605686206}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:12:58,483] Trial 176 finished with value: 0.09493889651840226 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 171, 'learning_rate': 0.0001855554689805059, 'p_miss': 0.10665120763955534}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:14:19,083] Trial 185 finished with value: 0.0958922008311538 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 33, 'learning_rate': 0.00031244703295166775, 'p_miss': 0.12895985924178222}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:14:59,695] Trial 187 finished with value: 0.09395521034178086 and parameters: {'model_name': 'VAE', 'batch_size': 760, 'iterations': 26, 'learning_rate': 0.00021909854610713755, 'p_miss': 0.11860585992731729}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:15:30,769] Trial 186 finished with value: 0.09526527983485784 and parameters: {'model_name': 'VAE', 'batch_size': 72, 'iterations': 55, 'learning_rate': 0.0002179171149911691, 'p_miss': 0.12961202662436694}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:16:58,355] Trial 189 finished with value: 0.09596200657909386 and parameters: {'model_name': 'VAE', 'batch_size': 845, 'iterations': 28, 'learning_rate': 0.00021937466529723865, 'p_miss': 0.12923697636460765}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:17:20,505] Trial 188 finished with value: 0.09838138101884385 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 52, 'learning_rate': 0.00020937916119017459, 'p_miss': 0.11630223605003845}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:17:21,399] Trial 192 finished with value: 0.3649735081722973 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:18:27,793] Trial 180 finished with value: 0.11176828344830705 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 187, 'learning_rate': 0.00033549304029834433, 'p_miss': 0.12828991536676837}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:18:48,347] Trial 191 finished with value: 0.09365725807867761 and parameters: {'model_name': 'VAE', 'batch_size': 520, 'iterations': 22, 'learning_rate': 0.00027214407233161145, 'p_miss': 0.07902764792978006}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:19:20,392] Trial 183 finished with value: 0.105891887231747 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 195, 'learning_rate': 0.0003410322355872547, 'p_miss': 0.09145714016690192}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:21:52,073] Trial 195 finished with value: 0.0973650844862327 and parameters: {'model_name': 'VAE', 'batch_size': 522, 'iterations': 43, 'learning_rate': 0.00025986631482117443, 'p_miss': 0.07617897371643828}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:22:28,613] Trial 196 finished with value: 0.09670069330909188 and parameters: {'model_name': 'VAE', 'batch_size': 474, 'iterations': 45, 'learning_rate': 0.0002595724748209784, 'p_miss': 0.10247341701300475}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:24:03,675] Trial 197 finished with value: 0.10891331895419627 and parameters: {'model_name': 'VAE', 'batch_size': 535, 'iterations': 26, 'learning_rate': 0.00027238709567017227, 'p_miss': 0.07759903278567433}. Best is trial 63 with value: 0.09080520101160622.
running
[I 2024-11-23 13:24:52,511] Trial 194 finished with value: 0.09794234401724286 and parameters: {'model_name': 'VAE', 'batch_size': 469, 'iterations': 88, 'learning_rate': 0.00027247320571202355, 'p_miss': 0.07768798747644916}. Best is trial 63 with value: 0.09080520101160622.
[I 2024-11-23 13:24:54,273] Trial 198 finished with value: 0.08898766163347446 and parameters: {'model_name': 'VAE', 'batch_size': 752, 'iterations': 26, 'learning_rate': 0.0004972650957115346, 'p_miss': 0.07001738081720024}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 13:28:54,847] Trial 42 finished with value: 0.2506179184216305 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5572, 'learning_rate': 0.00010920278424291143, 'p_miss': 0.20933385952056885}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 13:29:45,463] Trial 19 finished with value: 0.2344905481935709 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 4783, 'learning_rate': 0.039472204183932984, 'p_miss': 0.14904773677410138}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 13:30:42,597] Trial 199 finished with value: 0.10193982606103065 and parameters: {'model_name': 'VAE', 'batch_size': 722, 'iterations': 82, 'learning_rate': 0.00016417972163149702, 'p_miss': 0.11696079834179107}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 14:07:26,325] Trial 41 finished with value: 0.2364114771753793 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5154, 'learning_rate': 0.00010476302278805649, 'p_miss': 0.04013864872021293}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 14:56:42,499] Trial 43 finished with value: 0.20714024259073155 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 7774, 'learning_rate': 0.00013231768675047296, 'p_miss': 0.2063958970539261}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 15:06:44,304] Trial 45 finished with value: 0.19967060130939815 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 7334, 'learning_rate': 0.00048809890360510753, 'p_miss': 0.2186419765152395}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 15:39:42,764] Trial 46 finished with value: 0.20407830815542302 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 7530, 'learning_rate': 0.0005906508766611847, 'p_miss': 0.2072843239771178}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 15:53:31,762] Trial 50 finished with value: 0.19759080295812473 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 8736, 'learning_rate': 0.00011823763983088504, 'p_miss': 0.25702023255549533}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 16:14:21,298] Trial 174 finished with value: 0.2014122612569662 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 6671, 'learning_rate': 0.00011401634814631255, 'p_miss': 0.10857202144049653}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 16:14:46,026] Trial 149 finished with value: 0.20262167439134077 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 7612, 'learning_rate': 0.0014448354299877821, 'p_miss': 0.28663876584083425}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 16:17:35,153] Trial 193 finished with value: 0.19961535418783646 and parameters: {'model_name': 'VAE', 'batch_size': 514, 'iterations': 6396, 'learning_rate': 0.0002668662666596562, 'p_miss': 0.07735997963649606}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 16:20:09,530] Trial 179 finished with value: 0.20726138325909488 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 6551, 'learning_rate': 0.00017907849951115094, 'p_miss': 0.1307552681109829}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 16:24:59,702] Trial 151 finished with value: 0.19942273560010312 and parameters: {'model_name': 'VAE', 'batch_size': 531, 'iterations': 8525, 'learning_rate': 0.001365613172346456, 'p_miss': 0.10996277803365571}. Best is trial 198 with value: 0.08898766163347446.
[I 2024-11-23 16:25:15,580] Trial 190 finished with value: 0.1994090283190054 and parameters: {'model_name': 'VAE', 'batch_size': 780, 'iterations': 7445, 'learning_rate': 0.0002549334826720316, 'p_miss': 0.1183250706419486}. Best is trial 198 with value: 0.08898766163347446.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.08898766163347446
{'model_name': 'VAE', 'batch_size': 752, 'iterations': 26, 'learning_rate': 0.0004972650957115346, 'p_miss': 0.07001738081720024}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0c10> 

Generation:  1
Best f1_score score: 0.5022438113492832
Generation:   4%|▍         | 1/25 [10:03<4:01:13, 603.08s/it]Generation:  2
Best f1_score score: 0.5026376709965713
Generation:   8%|▊         | 2/25 [12:38<2:10:12, 339.67s/it]Generation:  3
Best f1_score score: 0.5026376709965713
Generation:  12%|█▏        | 3/25 [14:02<1:21:42, 222.82s/it]Generation:  4
Best f1_score score: 0.5026376709965713
Generation:  16%|█▌        | 4/25 [16:15<1:05:35, 187.43s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d235b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  5
Best f1_score score: 0.5026376709965713
Generation:  20%|██        | 5/25 [18:44<57:55, 173.77s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474711ab0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  6
Best f1_score score: 0.5026376709965713
Generation:  24%|██▍       | 6/25 [21:15<52:33, 165.97s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f6560> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467abdea0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.5026376709965713
Generation:  28%|██▊       | 7/25 [27:05<1:07:52, 226.23s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f077c0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.5026544130378955
Generation:  32%|███▏      | 8/25 [32:25<1:12:28, 255.80s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f2260> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  9
Best f1_score score: 0.5026544130378955
Generation:  36%|███▌      | 9/25 [33:54<54:20, 203.79s/it]  Generation:  10
Best f1_score score: 0.5026544130378955
Generation:  40%|████      | 10/25 [40:27<1:05:34, 262.31s/it]Generation:  11
Best f1_score score: 0.5026544130378955
Generation:  44%|████▍     | 11/25 [42:23<50:45, 217.56s/it]  Generation:  12
Best f1_score score: 0.5026544130378955
Generation:  48%|████▊     | 12/25 [49:00<58:55, 271.94s/it]Generation:  13
Best f1_score score: 0.5026544130378955
Generation:  52%|█████▏    | 13/25 [53:41<54:56, 274.74s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f29c90> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d50e20> 

Generation:  14
Best f1_score score: 0.5026544130378955
Generation:  56%|█████▌    | 14/25 [1:03:49<1:08:51, 375.55s/it]Generation:  15
Best f1_score score: 0.5026544130378955
Generation:  60%|██████    | 15/25 [1:08:47<58:41, 352.15s/it]  Generation:  16
Best f1_score score: 0.5026544130378955
Generation:  64%|██████▍   | 16/25 [1:11:29<44:13, 294.89s/it]Generation:  17
Best f1_score score: 0.5026544130378955
Generation:  68%|██████▊   | 17/25 [1:17:37<42:13, 316.69s/it]Generation:  18
Best f1_score score: 0.5026544130378955
Generation:  72%|███████▏  | 18/25 [1:22:59<37:09, 318.43s/it]Generation:  19
Best f1_score score: 0.5026544130378955
Generation:  76%|███████▌  | 19/25 [1:26:13<28:06, 281.04s/it]Generation:  20
Best f1_score score: 0.5026544130378955
Generation:  80%|████████  | 20/25 [1:30:12<22:21, 268.25s/it]Generation:  21
Best f1_score score: 0.5026544130378955
Generation:  84%|████████▍ | 21/25 [1:35:47<19:13, 288.41s/it]Generation:  22
Best f1_score score: 0.5026544130378955
Generation:  88%|████████▊ | 22/25 [1:41:02<14:49, 296.49s/it]Generation:  23
Best f1_score score: 0.5026544130378955
Generation:  92%|█████████▏| 23/25 [1:49:05<11:44, 352.35s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554679088b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.5026544130378955
Generation:  96%|█████████▌| 24/25 [1:50:21<04:29, 269.58s/it]Generation:  25
Best f1_score score: 0.5026544130378955
Generation: 100%|██████████| 25/25 [1:55:51<00:00, 287.60s/it]Generation: 100%|██████████| 25/25 [1:55:54<00:00, 278.19s/it]
2024-11-23 18:21:22,061 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:39407' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-71f5dcfcd85261a0dd04dc6c1210a691', 'ndarray-89eccf6bf6a2f74b785b9e31bcffba6d'} (stimulus_id='handle-worker-cleanup-1732414882.0616481')
Fitted
Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.0621793632833, class_weight='balanced',
                                    l1_ratio=0.5410693965205, max_iter=1000,
                                    n_jobs=1, penalty='elasticnet',
                                    solver='saga'))])
score start
train score: {'auroc': 0.5081995046309504, 'accuracy': 0.5054324820093128, 'balanced_accuracy': 0.5054141790534361, 'logloss': 0.6930317784846279, 'f1': 0.5053589641653066}
original test score: {'auroc': 0.7344200114969499, 'accuracy': 0.671125409188396, 'balanced_accuracy': 0.671415980683901, 'logloss': 0.6927265879384087, 'f1': 0.6597547789940023}
imputed test score: {'auroc': 0.5108833672467659, 'accuracy': 0.5038379049554126, 'balanced_accuracy': 0.5038233761163512, 'logloss': 0.6929163184966471, 'f1': 0.5037883845645214}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014550>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0eb0> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a18d0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a1180> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0eb0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a1180> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a1000> 

Generation:  1
Best f1_score score: 0.6263078509129159
Generation:   4%|▍         | 1/25 [10:04<4:01:37, 604.07s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f277f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f26050> 

Generation:  2
Best f1_score score: 0.6263078509129159
Generation:   8%|▊         | 2/25 [20:07<3:51:30, 603.94s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fba30> 

Generation:  3
Best f1_score score: 0.8190709008766743
Generation:  12%|█▏        | 3/25 [30:12<3:41:28, 604.02s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467298310> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546712a140> 

Generation:  4
Best f1_score score: 0.8190709008766743
Generation:  16%|█▌        | 4/25 [40:16<3:31:28, 604.21s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f03e20> 

Generation:  5
Best f1_score score: 0.8191783684793696
Generation:  20%|██        | 5/25 [50:21<3:21:30, 604.53s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464f8f700> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fdf00> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fd9c0> 

Generation:  6
Best f1_score score: 0.8258401442165461
Generation:  24%|██▍       | 6/25 [1:00:26<3:11:27, 604.60s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546688ad40> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464f184c0> 

Generation:  7
Best f1_score score: 0.8359558987340858
Generation:  28%|██▊       | 7/25 [1:10:30<3:01:20, 604.45s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467da25f0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e60f10> 

Generation:  8
Best f1_score score: 0.8490979074906662
Generation:  32%|███▏      | 8/25 [1:20:36<2:51:21, 604.79s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464f46560> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466cd4c40> 

Generation:  9
Best f1_score score: 0.8626481850977121
Generation:  36%|███▌      | 9/25 [1:30:42<2:41:25, 605.37s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554643ab5e0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554674ca6b0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554646b8490> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466c70ca0> 

Generation:  10
Best f1_score score: 0.8626481850977121
Generation:  40%|████      | 10/25 [1:40:48<2:31:23, 605.54s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464ebb5b0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554673039d0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d1a080> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467d1c880> 

Generation:  11
Best f1_score score: 0.8626481850977121
Generation:  44%|████▍     | 11/25 [1:50:54<2:21:20, 605.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464c3b400> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554672e93c0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546412efe0> 

Generation:  12
Best f1_score score: 0.8626481850977121
Generation:  48%|████▊     | 12/25 [2:01:01<2:11:16, 605.90s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466907cd0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c00370> 

Generation:  13
Best f1_score score: 0.8652717774412781
Generation:  52%|█████▏    | 13/25 [2:11:06<2:01:10, 605.87s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546597fe20> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466666ad0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554657a1e70> 

Generation:  14
Best f1_score score: 0.8652717774412781
Generation:  56%|█████▌    | 14/25 [2:21:13<1:51:05, 605.99s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467e21450> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15543e368e20> 

Generation:  15
Best f1_score score: 0.8652717774412781
Generation:  60%|██████    | 15/25 [2:31:19<1:41:01, 606.16s/it]Generation:  16
Best f1_score score: 0.8658050703275407
Generation:  64%|██████▍   | 16/25 [2:39:35<1:25:57, 573.08s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554641f5780> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155356dcee90> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f56ce0> 

Generation:  17
Best f1_score score: 0.8658050703275407
Generation:  68%|██████▊   | 17/25 [2:49:43<1:17:46, 583.34s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155459a86140> 

Generation:  18
Best f1_score score: 0.8658050703275407
Generation:  72%|███████▏  | 18/25 [2:59:50<1:08:54, 590.65s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465e84400> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554528800d0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546655e650> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155464b9bb20> 

Generation:  19
Best f1_score score: 0.8658050703275407
Generation:  76%|███████▌  | 19/25 [3:09:58<59:35, 595.89s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546741d570> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0af0> 

Generation:  20
Best f1_score score: 0.8658050703275407
Generation:  80%|████████  | 20/25 [3:20:03<49:53, 598.60s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466f824a0> 

Generation:  21
Best f1_score score: 0.8658050703275407
Generation:  84%|████████▍ | 21/25 [3:30:11<40:05, 601.25s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f572e0> 

Generation:  22
Best f1_score score: 0.8658050703275407
Generation:  88%|████████▊ | 22/25 [3:40:17<30:07, 602.62s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553f1c08bb0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554643c2500> 

Generation:  23
Best f1_score score: 0.8658050703275407
Generation:  92%|█████████▏| 23/25 [3:50:24<20:08, 604.09s/it]Generation:  24
Best f1_score score: 0.8658050703275407
Generation:  96%|█████████▌| 24/25 [3:52:52<07:47, 467.12s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467320f10> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155466fdd840> 

Generation:  25
Best f1_score score: 0.8658050703275407
Generation: 100%|██████████| 25/25 [4:03:00<00:00, 509.33s/it]Generation: 100%|██████████| 25/25 [4:03:00<00:00, 583.20s/it]
2024-11-23 22:24:33,604 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46665' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-6462e0edfcec94537ac003837b72f44f', 'ndarray-89eccf6bf6a2f74b785b9e31bcffba6d'} (stimulus_id='handle-worker-cleanup-1732429473.6040013')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer()),
                ('extratreesclassifier',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.5400569890374,
                                      min_samples_split=17, n_jobs=1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9739989398806457, 'accuracy': 0.9008607309157612, 'balanced_accuracy': 0.9009152665437805, 'logloss': 0.23062037353080345, 'f1': 0.9007562025452542}
test score: {'auroc': 0.9467511432762943, 'accuracy': 0.8673100801444859, 'balanced_accuracy': 0.8673676348819472, 'logloss': 0.28598343003023513, 'f1': 0.8671468781094231}
original test score: {'auroc': 0.9986652682087547, 'accuracy': 0.985720735974715, 'balanced_accuracy': 0.9857248923745712, 'logloss': 0.07385200555636708, 'f1': 0.9857207195543}
score end
40922
lvl
0.5
type
MCAR
num_run
1
class_full
finished
all finished
full run takes
12.787641248835458
hours
DONE
