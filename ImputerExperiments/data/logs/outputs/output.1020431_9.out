Run: 9
/cm/local/apps/slurm/var/spool/job1020431/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/737/737.pkl
working on 
../data/c/737/class_full_MNAR_0.01_1
2.7400588989257812
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-25 17:54:58,757] A new study created in memory with name: no-name-7cfe95bc-2ac0-4cd2-92fd-8eaa7c67140e
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-25 17:54:59,261] Trial 8 finished with value: 0.5778917106797801 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 8 with value: 0.5778917106797801.
running
[I 2024-10-25 17:54:59,576] Trial 14 finished with value: 0.15623167414591269 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 14 with value: 0.15623167414591269.
[I 2024-10-25 17:54:59,725] Trial 5 finished with value: 0.5778917106797801 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 14 with value: 0.15623167414591269.
[I 2024-10-25 17:54:59,828] Trial 1 finished with value: 0.5778917106797801 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 14 with value: 0.15623167414591269.
running
running
running
[I 2024-10-25 17:55:00,044] Trial 16 finished with value: 0.15490522444389687 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.15490522444389687.
running
[I 2024-10-25 17:55:00,185] Trial 17 finished with value: 0.15623167414591269 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 16 with value: 0.15490522444389687.
running
[I 2024-10-25 17:55:00,951] Trial 0 finished with value: 0.13497434309112008 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1834, 'weights': 'distance'}. Best is trial 0 with value: 0.13497434309112008.
[I 2024-10-25 17:55:01,077] Trial 20 finished with value: 0.13582306684847023 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2351, 'weights': 'distance'}. Best is trial 0 with value: 0.13497434309112008.
running
running
[I 2024-10-25 17:55:05,836] Trial 12 finished with value: 0.13016223734446067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 12 with value: 0.13016223734446067.
running
[I 2024-10-25 17:55:06,193] Trial 24 finished with value: 0.15490522444389687 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 12 with value: 0.13016223734446067.
running
[I 2024-10-25 17:55:08,303] Trial 21 finished with value: 0.11250051751591698 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'descending'}. Best is trial 21 with value: 0.11250051751591698.
running
[I 2024-10-25 17:55:11,233] Trial 3 finished with value: 0.15786310887445554 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 21 with value: 0.11250051751591698.
running
[I 2024-10-25 17:55:12,913] Trial 25 finished with value: 0.13016223734446067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 21 with value: 0.11250051751591698.
running
[I 2024-10-25 17:55:14,196] Trial 26 finished with value: 0.13016223734446067 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 21 with value: 0.11250051751591698.
running
[I 2024-10-25 17:55:15,318] Trial 27 finished with value: 0.12353945732345673 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 21 with value: 0.11250051751591698.
running
[I 2024-10-25 17:55:31,872] Trial 28 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.7226490833826886, 'alpha': 29, 'iterations': 14, 'learning_rate': 0.0483035237813422, 'p_miss': 0.25868660314353376}. Best is trial 21 with value: 0.11250051751591698.
running
[I 2024-10-25 17:55:42,308] Trial 30 finished with value: 0.2125157703392607 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3, 'learning_rate': 0.0008972574410780817, 'p_miss': 0.28408251226264325}. Best is trial 21 with value: 0.11250051751591698.
running
[I 2024-10-25 17:55:42,708] Trial 6 finished with value: 0.19744999100059085 and parameters: {'model_name': 'VAE', 'batch_size': 294, 'iterations': 2, 'learning_rate': 0.0033402431633048177, 'p_miss': 0.06641474504530596}. Best is trial 21 with value: 0.11250051751591698.
running
[I 2024-10-25 17:55:50,176] Trial 32 finished with value: 0.1098859939719321 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:55:50,571] Trial 33 finished with value: 0.1098859939719321 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:02,252] Trial 29 finished with value: 0.2053069534428777 and parameters: {'model_name': 'VAE', 'batch_size': 237, 'iterations': 9, 'learning_rate': 0.0006951495923177011, 'p_miss': 0.21410548853208722}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:03,989] Trial 4 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.1150758588802159, 'alpha': 75, 'iterations': 184, 'learning_rate': 0.00014749389425481384, 'p_miss': 0.08828312071437533}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:09,733] Trial 36 finished with value: 0.1098859939719321 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:10,893] Trial 37 finished with value: 0.1098859939719321 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:16,260] Trial 39 finished with value: 0.1098907862292163 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:16,482] Trial 38 finished with value: 0.1098859939719321 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending'}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:19,340] Trial 2 finished with value: 0.34269072053145233 and parameters: {'model_name': 'GAIN', 'batch_size': 26, 'hint_rate': 0.905749219551062, 'alpha': 37, 'iterations': 67, 'learning_rate': 0.08339953863092725, 'p_miss': 0.17504480254324503}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:22,789] Trial 41 finished with value: 0.1098880806630345 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:23,859] Trial 40 finished with value: 0.10988626792481557 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 32 with value: 0.1098859939719321.
running
[I 2024-10-25 17:56:25,050] Trial 44 finished with value: 0.10876893811514447 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 132, 'weights': 'uniform'}. Best is trial 44 with value: 0.10876893811514447.
running
[I 2024-10-25 17:56:26,434] Trial 45 finished with value: 0.1061084548164402 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 59, 'weights': 'uniform'}. Best is trial 45 with value: 0.1061084548164402.
running
[I 2024-10-25 17:56:26,973] Trial 42 finished with value: 0.1098880806630345 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 45 with value: 0.1061084548164402.
running
[I 2024-10-25 17:56:28,180] Trial 46 finished with value: 0.10939420978960683 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10, 'weights': 'uniform'}. Best is trial 45 with value: 0.1061084548164402.
running
[I 2024-10-25 17:56:28,745] Trial 47 finished with value: 0.10498071395796664 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 26, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:29,526] Trial 48 finished with value: 0.13234175065432224 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:30,390] Trial 49 finished with value: 0.10572706083785106 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 18, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:31,044] Trial 50 finished with value: 0.10523117239332613 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 25, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:32,059] Trial 51 finished with value: 0.10831322844141508 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 114, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:32,849] Trial 52 finished with value: 0.12153764172185286 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 536, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:33,903] Trial 53 finished with value: 0.1263235466980567 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 725, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:34,691] Trial 54 finished with value: 0.12493758516248799 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 667, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:35,451] Trial 55 finished with value: 0.12148737746943819 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 534, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:36,687] Trial 56 finished with value: 0.11333715106752484 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 259, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:36,938] Trial 57 finished with value: 0.11274212139085452 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 244, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:38,269] Trial 58 finished with value: 0.11149712073480453 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:38,612] Trial 59 finished with value: 0.10609271125187425 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 74, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:56:40,172] Trial 60 finished with value: 0.11618228897572405 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 339, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:58:50,207] Trial 23 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.7545391899908584, 'alpha': 99, 'iterations': 839, 'learning_rate': 0.02774295355685228, 'p_miss': 0.03485214125664235}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:58:51,895] Trial 63 finished with value: 0.11647607485777187 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 351, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:58:53,808] Trial 64 finished with value: 0.12946853879753398 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 868, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:58:56,340] Trial 65 finished with value: 0.12489559486020378 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1139, 'weights': 'distance'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:58:57,680] Trial 66 finished with value: 0.1412632111291125 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:58:59,667] Trial 67 finished with value: 0.11325260829961001 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 257, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:59:32,025] Trial 22 finished with value: 0.1885278856641303 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 94, 'learning_rate': 0.000682222237709423, 'p_miss': 0.26747333951875557}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 17:59:51,782] Trial 13 finished with value: 0.17478490896992738 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 125, 'learning_rate': 0.0015628711906943511, 'p_miss': 0.16075447030856538}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:06:06,984] Trial 7 finished with value: 0.11783754533470678 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'arabic'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:06:12,419] Trial 11 finished with value: 0.12232035436914908 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:06:24,279] Trial 9 finished with value: 0.11646346310395408 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:06:25,331] Trial 73 finished with value: 0.11231407524247713 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 230, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:08:12,884] Trial 43 finished with value: 0.11281038282021971 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:08:16,344] Trial 18 finished with value: 0.16498329305042006 and parameters: {'model_name': 'VAE', 'batch_size': 46, 'iterations': 229, 'learning_rate': 0.090662873775733, 'p_miss': 0.15162321114395672}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:08:17,222] Trial 76 finished with value: 0.10864636018599842 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 130, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:08:17,950] Trial 77 finished with value: 0.11038379867126731 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 170, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:10:33,236] Trial 10 finished with value: 0.18999520216714202 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 248, 'learning_rate': 0.00021427203941754467, 'p_miss': 0.27856228535784106}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:20:22,628] Trial 62 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 29, 'hint_rate': 0.23204661700192653, 'alpha': 94, 'iterations': 4698, 'learning_rate': 0.010184202975076183, 'p_miss': 0.019838510627731093}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:20:23,658] Trial 80 finished with value: 0.10498071395796664 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 26, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:20:24,598] Trial 81 finished with value: 0.10841861472164271 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 11, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:20:25,608] Trial 82 finished with value: 0.1196755849109458 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 463, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:20:26,519] Trial 83 finished with value: 0.11036803783738029 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 171, 'weights': 'uniform'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:20:26,766] Trial 84 finished with value: 0.5778917106797801 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:42:52,226] Trial 61 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 33, 'hint_rate': 0.01993551129390214, 'alpha': 98, 'iterations': 9324, 'learning_rate': 0.009806553191881276, 'p_miss': 0.011173619929210149}. Best is trial 47 with value: 0.10498071395796664.
running
[I 2024-10-25 18:42:53,042] Trial 86 finished with value: 0.10493372412177562 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 14, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 18:42:54,062] Trial 87 finished with value: 0.10836957298590985 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 120, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 18:42:54,853] Trial 88 finished with value: 0.13234175065432224 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 18:42:56,475] Trial 89 finished with value: 0.13582306684847023 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1910, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 18:42:57,566] Trial 90 finished with value: 0.11675495960826543 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 362, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 18:42:58,873] Trial 91 finished with value: 0.1079548913910239 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 153, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 18:43:00,164] Trial 92 finished with value: 0.1330128782479382 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1706, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:36,979] Trial 78 finished with value: 0.34236595096288425 and parameters: {'model_name': 'GAIN', 'batch_size': 814, 'hint_rate': 0.21749201885333408, 'alpha': 0, 'iterations': 2605, 'learning_rate': 0.00933016489702926, 'p_miss': 0.018403659278445728}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:45,612] Trial 94 finished with value: 0.21528260698926288 and parameters: {'model_name': 'VAE', 'batch_size': 94, 'iterations': 1, 'learning_rate': 0.004069308467668678, 'p_miss': 0.11227578236557945}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:46,022] Trial 95 finished with value: 0.15490522444389687 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:46,950] Trial 96 finished with value: 0.10783774466594313 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 147, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:48,090] Trial 97 finished with value: 0.10742118768502025 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 121, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:48,917] Trial 98 finished with value: 0.10744733973005902 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 120, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:49,567] Trial 99 finished with value: 0.1064703577856396 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 61, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:50,300] Trial 100 finished with value: 0.13934208329880188 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:51,246] Trial 101 finished with value: 0.11168757536750964 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 326, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:52,263] Trial 102 finished with value: 0.10647670990315558 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 81, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:53,278] Trial 103 finished with value: 0.11657019146853136 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:54,035] Trial 104 finished with value: 0.11869119138168518 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 424, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:54,975] Trial 105 finished with value: 0.11281387880408404 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 248, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:55,919] Trial 106 finished with value: 0.10744030307678329 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 113, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:56,717] Trial 107 finished with value: 0.10715944308723566 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 103, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:57,780] Trial 108 finished with value: 0.10647670990315558 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 81, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:22:58,876] Trial 109 finished with value: 0.11245843390691439 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 236, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:45,824] Trial 110 finished with value: 0.17319011716450491 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 14, 'learning_rate': 0.024654695992355164, 'p_miss': 0.2291512154267017}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:46,695] Trial 111 finished with value: 0.10634762006345419 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 75, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:47,684] Trial 112 finished with value: 0.11249198963494533 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 237, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:48,551] Trial 113 finished with value: 0.10656713981793373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 66, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:48,836] Trial 114 finished with value: 0.5778917106797801 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:50,025] Trial 115 finished with value: 0.1115214292748116 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 208, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:51,079] Trial 116 finished with value: 0.1066988332379043 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 84, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:52,541] Trial 117 finished with value: 0.13582306684847023 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2463, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:53,387] Trial 118 finished with value: 0.10655240942398345 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 72, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:23:54,331] Trial 119 finished with value: 0.15279531595425744 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:34,093] Trial 120 finished with value: 0.366548468920386 and parameters: {'model_name': 'GAIN', 'batch_size': 928, 'hint_rate': 0.42018851330384, 'alpha': 65, 'iterations': 1176, 'learning_rate': 0.00042171891143861785, 'p_miss': 0.11331848970197786}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:34,845] Trial 121 finished with value: 0.11581649808747987 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 328, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:35,473] Trial 122 finished with value: 0.10609271125187425 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 74, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:36,349] Trial 123 finished with value: 0.11111150264581145 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 194, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:37,363] Trial 124 finished with value: 0.13755066642465302 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1249, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:38,093] Trial 125 finished with value: 0.10649552519712571 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 67, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:38,723] Trial 126 finished with value: 0.10649552519712571 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 67, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:39,467] Trial 127 finished with value: 0.1105461286403262 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 174, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:40,142] Trial 128 finished with value: 0.10663450317671364 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 83, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:40,878] Trial 129 finished with value: 0.15279531595425744 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:57:41,770] Trial 130 finished with value: 0.11325260829961001 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 257, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:59:06,734] Trial 131 finished with value: 0.20827678369963115 and parameters: {'model_name': 'VAE', 'batch_size': 157, 'iterations': 31, 'learning_rate': 0.0001092057220278198, 'p_miss': 0.20195639110750227}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:59:07,555] Trial 132 finished with value: 0.1100464567389097 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 165, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:59:08,300] Trial 133 finished with value: 0.10662184418938256 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 63, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 19:59:09,021] Trial 134 finished with value: 0.11483738385466455 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 301, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:22,061] Trial 135 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.512193261082176, 'alpha': 5, 'iterations': 691, 'learning_rate': 0.0017817479613123097, 'p_miss': 0.29926365697779456}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:22,598] Trial 136 finished with value: 0.10699549690304763 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 86, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:23,488] Trial 137 finished with value: 0.10656713981793373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 66, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:24,661] Trial 138 finished with value: 0.1105461286403262 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 174, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:25,654] Trial 139 finished with value: 0.10617317566716819 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 61, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:26,556] Trial 140 finished with value: 0.13093820189548108 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 933, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:27,008] Trial 141 finished with value: 0.5778917106797801 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:27,843] Trial 142 finished with value: 0.10871504471866597 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 184, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:28,487] Trial 143 finished with value: 0.13234175065432224 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:29,342] Trial 144 finished with value: 0.11352835416038384 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 418, 'weights': 'distance'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:30,409] Trial 145 finished with value: 0.10879958603686228 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 134, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:31,145] Trial 146 finished with value: 0.10603361150882269 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 58, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:32,091] Trial 147 finished with value: 0.10656713981793373 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 66, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:33,046] Trial 148 finished with value: 0.10914705194911971 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 143, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:33,816] Trial 149 finished with value: 0.11389755578669278 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 274, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:34,686] Trial 150 finished with value: 0.10593056478359471 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 55, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:35,426] Trial 151 finished with value: 0.10619704913173275 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 46, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:36,212] Trial 152 finished with value: 0.10594902837229023 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 38, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:36,800] Trial 153 finished with value: 0.12031974991355962 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:37,424] Trial 154 finished with value: 0.15623167414591269 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2134, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:54,456] Trial 155 finished with value: 0.2064635341385035 and parameters: {'model_name': 'VAE', 'batch_size': 71, 'iterations': 5, 'learning_rate': 0.0002575141122741568, 'p_miss': 0.05777167928730663}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:55,351] Trial 156 finished with value: 0.10879958603686228 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 134, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:56,108] Trial 157 finished with value: 0.10627544409854739 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 45, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:56,840] Trial 158 finished with value: 0.10654899640131207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 39, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:57,506] Trial 159 finished with value: 0.11133314263755498 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 202, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:58,491] Trial 160 finished with value: 0.1425588626236726 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1467, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:02:59,274] Trial 161 finished with value: 0.10842922223608217 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 122, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:00,024] Trial 162 finished with value: 0.10585457130207754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 36, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:00,835] Trial 163 finished with value: 0.10585457130207754 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 36, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:01,518] Trial 164 finished with value: 0.10888062742274014 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 135, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:01,855] Trial 165 finished with value: 0.15623167414591269 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:02,848] Trial 166 finished with value: 0.10654899640131207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 39, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:03,852] Trial 167 finished with value: 0.10559902049367909 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 35, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:04,787] Trial 168 finished with value: 0.10848354615400739 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 126, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:05,481] Trial 169 finished with value: 0.11151076339858157 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 206, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:03:06,173] Trial 170 finished with value: 0.13234175065432224 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:03,103] Trial 171 finished with value: 0.3641765671645322 and parameters: {'model_name': 'GAIN', 'batch_size': 379, 'hint_rate': 0.49828666300014, 'alpha': 53, 'iterations': 34, 'learning_rate': 0.005151628860199418, 'p_miss': 0.23596659799583675}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:03,889] Trial 172 finished with value: 0.12335692830470277 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 606, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:04,500] Trial 173 finished with value: 0.10610198623946057 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 41, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:05,211] Trial 174 finished with value: 0.10792635628961733 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 106, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:06,230] Trial 175 finished with value: 0.10654899640131207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 39, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:07,132] Trial 176 finished with value: 0.10620573842293138 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 42, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:07,825] Trial 177 finished with value: 0.10760353083957963 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 99, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:08,528] Trial 178 finished with value: 0.11095301245543747 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 187, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:09,168] Trial 179 finished with value: 0.10605120773061845 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 40, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:09,882] Trial 180 finished with value: 0.1082168568796292 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 110, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:10,702] Trial 181 finished with value: 0.10654899640131207 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 39, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:18,278] Trial 182 finished with value: 0.1216905684464605 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:19,221] Trial 183 finished with value: 0.10987926383656288 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 162, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:19,920] Trial 184 finished with value: 0.12031974991355962 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:20,546] Trial 185 finished with value: 0.1123619777492825 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 232, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:21,435] Trial 186 finished with value: 0.10627544409854739 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 45, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:22,236] Trial 187 finished with value: 0.10717169893695981 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 91, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:23,082] Trial 188 finished with value: 0.10760353083957963 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 99, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:23,895] Trial 189 finished with value: 0.10605120773061845 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 40, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:24,699] Trial 190 finished with value: 0.10969424189187275 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 157, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:25,332] Trial 191 finished with value: 0.10619704913173275 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 46, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:04:26,109] Trial 192 finished with value: 0.15279531595425744 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:16:47,784] Trial 85 finished with value: 0.3526998922784427 and parameters: {'model_name': 'GAIN', 'batch_size': 612, 'hint_rate': 0.40603700854458913, 'alpha': 0, 'iterations': 4433, 'learning_rate': 0.006450287440783297, 'p_miss': 0.10771151593912694}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:16:54,128] Trial 194 finished with value: 0.19438465604135177 and parameters: {'model_name': 'VAE', 'batch_size': 115, 'iterations': 1, 'learning_rate': 0.019121896724587268, 'p_miss': 0.14425218276789561}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:16:54,758] Trial 195 finished with value: 0.10800377637057348 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 105, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:16:55,495] Trial 196 finished with value: 0.10593056478359471 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 55, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:16:56,434] Trial 197 finished with value: 0.10604686014195477 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 75, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:16:57,109] Trial 198 finished with value: 0.10910232159196254 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 145, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
running
[I 2024-10-25 20:16:57,993] Trial 199 finished with value: 0.10629030094768879 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 80, 'weights': 'uniform'}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 20:19:04,482] Trial 19 finished with value: 0.3500799957943134 and parameters: {'model_name': 'GAIN', 'batch_size': 38, 'hint_rate': 0.5132155448022782, 'alpha': 98, 'iterations': 6047, 'learning_rate': 0.0003466939216100231, 'p_miss': 0.08238187169708884}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 20:22:02,276] Trial 193 finished with value: 0.16586023757775462 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 374, 'learning_rate': 0.02385739138952191, 'p_miss': 0.1305058763050314}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 20:22:26,455] Trial 93 finished with value: 0.1605480892065212 and parameters: {'model_name': 'VAE', 'batch_size': 842, 'iterations': 1511, 'learning_rate': 0.0052433517796317735, 'p_miss': 0.10416496449662888}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 20:26:26,852] Trial 72 finished with value: 0.35337019880531334 and parameters: {'model_name': 'GAIN', 'batch_size': 82, 'hint_rate': 0.21815164653021896, 'alpha': 1, 'iterations': 5921, 'learning_rate': 0.010660304209209472, 'p_miss': 0.10835608002797678}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 20:30:35,004] Trial 34 finished with value: 0.3428788253972203 and parameters: {'model_name': 'GAIN', 'batch_size': 513, 'hint_rate': 0.010522371595713342, 'alpha': 88, 'iterations': 5870, 'learning_rate': 0.0001216406258874999, 'p_miss': 0.014482607020731897}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 20:36:25,940] Trial 15 finished with value: 0.16099879881693854 and parameters: {'model_name': 'VAE', 'batch_size': 113, 'iterations': 3114, 'learning_rate': 0.00021778320029908503, 'p_miss': 0.13428695437678814}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 20:45:59,622] Trial 68 finished with value: 0.3726874915842338 and parameters: {'model_name': 'GAIN', 'batch_size': 54, 'hint_rate': 0.1807657886729711, 'alpha': 8, 'iterations': 7739, 'learning_rate': 0.003453409404885466, 'p_miss': 0.12776627415566133}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 20:54:07,431] Trial 75 finished with value: 0.37449008594838934 and parameters: {'model_name': 'GAIN', 'batch_size': 872, 'hint_rate': 0.02573880915951876, 'alpha': 3, 'iterations': 7054, 'learning_rate': 0.008153914053296645, 'p_miss': 0.11119219548014952}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 21:04:49,635] Trial 35 finished with value: 0.352505068937757 and parameters: {'model_name': 'GAIN', 'batch_size': 732, 'hint_rate': 0.11512725415257063, 'alpha': 90, 'iterations': 8659, 'learning_rate': 0.00012895223542607332, 'p_miss': 0.035282096516701986}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 21:05:03,658] Trial 71 finished with value: 0.355654374243336 and parameters: {'model_name': 'GAIN', 'batch_size': 995, 'hint_rate': 0.012442409111294295, 'alpha': 4, 'iterations': 8115, 'learning_rate': 0.01300937822956693, 'p_miss': 0.10801612072682523}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 21:05:24,288] Trial 69 finished with value: 0.38382457383125707 and parameters: {'model_name': 'GAIN', 'batch_size': 749, 'hint_rate': 0.19733370578753184, 'alpha': 0, 'iterations': 8587, 'learning_rate': 0.010363109659946634, 'p_miss': 0.1224946970999512}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 21:06:01,155] Trial 70 finished with value: 0.36504385523543637 and parameters: {'model_name': 'GAIN', 'batch_size': 640, 'hint_rate': 0.22117077718836808, 'alpha': 0, 'iterations': 8975, 'learning_rate': 0.010063608731941528, 'p_miss': 0.10376515858597654}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 21:06:03,084] Trial 74 finished with value: 0.3521576499929694 and parameters: {'model_name': 'GAIN', 'batch_size': 81, 'hint_rate': 0.016480861455884732, 'alpha': 0, 'iterations': 9975, 'learning_rate': 0.008323083955921814, 'p_miss': 0.10624439033251766}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 21:07:57,468] Trial 79 finished with value: 0.3433954734511964 and parameters: {'model_name': 'GAIN', 'batch_size': 961, 'hint_rate': 0.2248404904584717, 'alpha': 3, 'iterations': 9685, 'learning_rate': 0.011783052218690873, 'p_miss': 0.019256243983837157}. Best is trial 86 with value: 0.10493372412177562.
[I 2024-10-25 21:15:15,588] Trial 31 finished with value: 0.16059394676224906 and parameters: {'model_name': 'VAE', 'batch_size': 913, 'iterations': 6300, 'learning_rate': 0.000177413616990531, 'p_miss': 0.033567388846750895}. Best is trial 86 with value: 0.10493372412177562.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
dtype: int64
0.10493372412177562
{'model_name': 'KNNImputer', 'n_neighbors': 14, 'weights': 'uniform'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.841963924253092
Generation:   4%|▍         | 1/25 [00:06<02:37,  6.55s/it]Generation:  2
Best f1_score score: 0.841963924253092
Generation:   8%|▊         | 2/25 [00:14<02:49,  7.35s/it]Generation:  3
Best f1_score score: 0.841963924253092
Generation:  12%|█▏        | 3/25 [00:23<03:02,  8.29s/it]Generation:  4
Best f1_score score: 0.8453859403492803
Generation:  16%|█▌        | 4/25 [00:33<03:02,  8.68s/it]Generation:  5
Best f1_score score: 0.8453859403492803
Generation:  20%|██        | 5/25 [01:31<08:52, 26.64s/it]Generation:  6
Best f1_score score: 0.8453859403492803
Generation:  24%|██▍       | 6/25 [01:42<06:46, 21.40s/it]Generation:  7
Best f1_score score: 0.8453859403492803
Generation:  28%|██▊       | 7/25 [01:56<05:36, 18.70s/it]Generation:  8
Best f1_score score: 0.8453859403492803
Generation:  32%|███▏      | 8/25 [02:08<04:43, 16.68s/it]Generation:  9
Best f1_score score: 0.8453859403492803
Generation:  36%|███▌      | 9/25 [02:19<03:59, 15.00s/it]Generation:  10
Best f1_score score: 0.8453859403492803
Generation:  40%|████      | 10/25 [02:30<03:27, 13.81s/it]Generation:  11
Best f1_score score: 0.8453859403492803
Generation:  44%|████▍     | 11/25 [02:46<03:21, 14.38s/it]Generation:  12
Best f1_score score: 0.8453859403492803
Generation:  48%|████▊     | 12/25 [02:58<02:56, 13.57s/it]Generation:  13
Best f1_score score: 0.8453859403492803
Generation:  52%|█████▏    | 13/25 [03:10<02:38, 13.17s/it]Generation:  14
Best f1_score score: 0.8453859403492803
Generation:  56%|█████▌    | 14/25 [03:23<02:24, 13.16s/it]Generation:  15
Best f1_score score: 0.8453859403492803
Generation:  60%|██████    | 15/25 [03:35<02:07, 12.71s/it]Generation:  16
Best f1_score score: 0.8453859403492803
Generation:  64%|██████▍   | 16/25 [03:52<02:07, 14.14s/it]Generation:  17
Best f1_score score: 0.8453859403492803
Generation:  68%|██████▊   | 17/25 [04:07<01:55, 14.39s/it]Generation:  18
Best f1_score score: 0.8474753068678169
Generation:  72%|███████▏  | 18/25 [09:12<11:50, 101.51s/it]Generation:  19
Best f1_score score: 0.8474753068678169
Generation:  76%|███████▌  | 19/25 [09:44<08:04, 80.69s/it] Generation:  20
Best f1_score score: 0.8474753068678169
Generation:  80%|████████  | 20/25 [10:21<05:38, 67.62s/it]Generation:  21
Best f1_score score: 0.8474753068678169
Generation:  84%|████████▍ | 21/25 [12:49<06:07, 91.90s/it]Generation:  22
Best f1_score score: 0.8474753068678169
Generation:  88%|████████▊ | 22/25 [16:06<06:09, 123.25s/it]Generation:  23
Best f1_score score: 0.8474753068678169
Generation:  92%|█████████▏| 23/25 [16:51<03:19, 99.91s/it] Generation:  24
Best f1_score score: 0.8474753068678169
Generation:  96%|█████████▌| 24/25 [18:44<01:43, 103.89s/it]Generation:  25
Best f1_score score: 0.8474753068678169
Generation: 100%|██████████| 25/25 [19:44<00:00, 90.51s/it] Generation: 100%|██████████| 25/25 [19:48<00:00, 47.52s/it]
2024-10-25 21:36:14,812 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:43167' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-e53e3827b1fa2d9ef04014351d024d89', 'ndarray-bc1ee22df90b340c13f4c4b70d48b351'} (stimulus_id='handle-worker-cleanup-1729917374.8124282')
2024-10-25 21:36:18,716 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,716 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,716 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,717 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,717 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,717 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,718 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,719 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,719 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,719 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,752 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,761 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,761 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,762 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,762 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 21:36:18,762 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(activation='tanh', alpha=0.0037552403073,
                               hidden_layer_sizes=[508, 508, 508],
                               learning_rate='invscaling',
                               learning_rate_init=0.0012907064853,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9286727610519033, 'accuracy': 0.8708249496981891, 'balanced_accuracy': 0.8704081579772445, 'logloss': 0.33369905565097496, 'f1': 0.8703398388945861}
original test score: {'auroc': 0.933534618247994, 'accuracy': 0.860128617363344, 'balanced_accuracy': 0.8596037720241543, 'logloss': 0.3320842463644747, 'f1': 0.8595765550922118}
imputed test score: {'auroc': 0.9320560013235173, 'accuracy': 0.8569131832797428, 'balanced_accuracy': 0.856357018777401, 'logloss': 0.3371694829159502, 'f1': 0.8562887620293715}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd53c0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd5150> 
 Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_classification.py", line 238, in fit
    return self._fit(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 475, in _fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.8358292584025732
Generation:   4%|▍         | 1/25 [03:57<1:34:49, 237.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1de10> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d3b520> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.8446153817465291
Generation:   8%|▊         | 2/25 [10:26<2:05:11, 326.58s/it]Generation:  3
Best f1_score score: 0.8485939999109423
Generation:  12%|█▏        | 3/25 [15:54<2:00:03, 327.44s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d66d10> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  4
Best f1_score score: 0.8494129330604929
Generation:  16%|█▌        | 4/25 [20:35<1:48:06, 308.90s/it]Generation:  5
Best f1_score score: 0.8494129330604929
Generation:  20%|██        | 5/25 [25:50<1:43:45, 311.27s/it]Generation:  6
Best f1_score score: 0.8494129330604929
Generation:  24%|██▍       | 6/25 [29:50<1:30:54, 287.09s/it]Generation:  7
Best f1_score score: 0.8494129330604929
Generation:  28%|██▊       | 7/25 [34:03<1:22:45, 275.88s/it]Generation:  8
Best f1_score score: 0.8494129330604929
Generation:  32%|███▏      | 8/25 [38:03<1:14:57, 264.55s/it]Generation:  9
Best f1_score score: 0.8494129330604929
Generation:  36%|███▌      | 9/25 [42:01<1:08:15, 255.98s/it]Generation:  10
Best f1_score score: 0.8494129330604929
Generation:  40%|████      | 10/25 [46:04<1:02:59, 251.98s/it]Generation:  11
Best f1_score score: 0.8494129330604929
Generation:  44%|████▍     | 11/25 [50:03<57:52, 248.00s/it]  Generation:  12
Best f1_score score: 0.8494129330604929
Generation:  48%|████▊     | 12/25 [53:56<52:47, 243.65s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742f13f0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.8494129330604929
Generation:  52%|█████▏    | 13/25 [59:32<54:19, 271.61s/it]Generation:  14
Best f1_score score: 0.8494129330604929
Generation:  56%|█████▌    | 14/25 [1:03:26<47:42, 260.27s/it]Generation:  15
Best f1_score score: 0.8494129330604929
Generation:  60%|██████    | 15/25 [1:07:22<42:08, 252.84s/it]Generation:  16
Best f1_score score: 0.8494129330604929
Generation:  64%|██████▍   | 16/25 [1:12:54<41:30, 276.73s/it]malloc(): invalid next size (unsorted)
2024-10-25 22:50:23,792 - distributed.scheduler - WARNING - Removing worker 'tcp://127.0.0.1:37197' caused the cluster to lose already computed task(s), which will be recomputed elsewhere: {'eval_objective_list-4797701092e891dfe8d226e06c741476'} (stimulus_id='handle-worker-cleanup-1729921823.7926328')
2024-10-25 22:50:23,944 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
2024-10-25 22:50:43,773 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
Generation:  17
Best f1_score score: 0.8494129330604929
Generation:  68%|██████▊   | 17/25 [1:17:31<36:53, 276.71s/it]Generation:  18
Best f1_score score: 0.8494129330604929
Generation:  72%|███████▏  | 18/25 [1:21:38<31:14, 267.72s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d76da0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.8494129330604929
Generation:  76%|███████▌  | 19/25 [1:25:35<25:51, 258.53s/it]Generation:  20
Best f1_score score: 0.8494129330604929
Generation:  80%|████████  | 20/25 [1:29:28<20:54, 250.96s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456d42f20> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545b986fb0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  21
Best f1_score score: 0.8494129330604929
Generation:  84%|████████▍ | 21/25 [1:35:25<18:51, 282.80s/it]Generation:  22
Best f1_score score: 0.8494129330604929
Generation:  88%|████████▊ | 22/25 [1:39:22<13:27, 269.08s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155435062020> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.8494129330604929
Generation:  92%|█████████▏| 23/25 [1:43:34<08:47, 263.78s/it]Generation:  24
Best f1_score score: 0.8494129330604929
Generation:  96%|█████████▌| 24/25 [1:47:34<04:16, 256.83s/it]Generation:  25
Best f1_score score: 0.8494129330604929
Generation: 100%|██████████| 25/25 [1:51:30<00:00, 250.60s/it]Generation: 100%|██████████| 25/25 [1:51:30<00:00, 267.63s/it]
2024-10-25 23:29:05,978 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:34259' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-b817bfabe05639a5b509c55677b8a0c6', 'ndarray-bc1ee22df90b340c13f4c4b70d48b351'} (stimulus_id='handle-worker-cleanup-1729924145.9787712')
2024-10-25 23:29:09,931 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,932 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,932 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,932 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,932 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,933 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,934 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,934 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,934 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,936 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,936 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,936 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,937 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,937 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
2024-10-25 23:29:09,938 - distributed.nanny - WARNING - Worker process still alive after 4.0 seconds, killing
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=RandomForestRegressor(),
                                  imputation_order='roman',
                                  n_nearest_features=15)),
                ('lineardiscriminantanalysis', LinearDiscriminantAnalysis())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9038119705956276, 'accuracy': 0.8458752515090543, 'balanced_accuracy': 0.8455246949568445, 'logloss': 0.39604009179107613, 'f1': 0.8454522942520897}
test score: {'auroc': 0.904830837951857, 'accuracy': 0.8344051446945338, 'balanced_accuracy': 0.8336917859210853, 'logloss': 0.39130718785466184, 'f1': 0.8332843243130714}
original test score: {'auroc': 0.9089151294565307, 'accuracy': 0.837620578778135, 'balanced_accuracy': 0.8369075192323601, 'logloss': 0.3838815928673814, 'f1': 0.8365215218992252}
score end
737
lvl
0.01
type
MNAR
num_run
1
class_full
finished
all finished
full run takes
5.578612395524979
hours
DONE
