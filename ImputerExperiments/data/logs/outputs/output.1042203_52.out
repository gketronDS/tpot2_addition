Run: 52
/cm/local/apps/slurm/var/spool/job1042203/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/1046/1046.pkl
working on 
../data/c/1046/class_full_MCAR_0.5_3
3.5841221809387207
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-06 07:14:06,571] A new study created in memory with name: no-name-30ea916c-603e-409b-b249-83df832b4104
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-06 07:14:06,762] Trial 7 finished with value: 0.24689377003707028 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 7 with value: 0.24689377003707028.
running
[I 2024-11-06 07:14:07,105] Trial 4 finished with value: 0.3376524021935613 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.24689377003707028.
running
[I 2024-11-06 07:14:13,471] Trial 9 finished with value: 0.2426004564196648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:13,852] Trial 2 finished with value: 0.2585459339940472 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3853, 'weights': 'distance'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:14,208] Trial 12 finished with value: 0.24678759877362344 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8747, 'weights': 'uniform'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:14,751] Trial 13 finished with value: 0.2585952696829156 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4200, 'weights': 'distance'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:15,023] Trial 14 finished with value: 0.25887817130873747 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10629, 'weights': 'distance'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:15,381] Trial 17 finished with value: 0.2586275176146926 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4568, 'weights': 'distance'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:15,588] Trial 22 finished with value: 0.3376524021935613 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:15,884] Trial 11 finished with value: 0.25871716128965716 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6139, 'weights': 'distance'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:19,341] Trial 6 finished with value: 0.2801486656302409 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 1, 'learning_rate': 0.02335502725577887, 'p_miss': 0.02856908187267953}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:21,731] Trial 21 finished with value: 0.24766516559624324 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4067, 'weights': 'uniform'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:22,191] Trial 19 finished with value: 0.25887817130873747 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 10861, 'weights': 'distance'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:22,490] Trial 8 finished with value: 0.26200283469611724 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.028703061202952188, 'p_miss': 0.01503864774606737}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:27,748] Trial 25 finished with value: 0.2426004564196648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:31,417] Trial 26 finished with value: 0.2426004564196648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:33,693] Trial 27 finished with value: 0.2426004564196648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:34,274] Trial 29 finished with value: 0.2426004564196648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:34,838] Trial 28 finished with value: 0.2426004564196648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:37,756] Trial 20 finished with value: 0.2541254820490978 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:38,104] Trial 30 finished with value: 0.2426004564196648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:40,163] Trial 31 finished with value: 0.2426004564196648 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:14:45,566] Trial 23 finished with value: 0.31160020251209575 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:15:55,219] Trial 24 finished with value: 0.25448476331974523 and parameters: {'model_name': 'VAE', 'batch_size': 389, 'iterations': 31, 'learning_rate': 0.010887715814106122, 'p_miss': 0.09263920495200849}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:18:43,541] Trial 10 finished with value: 0.335865285998478 and parameters: {'model_name': 'GAIN', 'batch_size': 30, 'hint_rate': 0.17865375168004993, 'alpha': 79, 'iterations': 240, 'learning_rate': 0.00013172971198358908, 'p_miss': 0.0936735967506115}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:19:55,747] Trial 3 finished with value: 0.25947331288811115 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 155, 'learning_rate': 0.03027762114856204, 'p_miss': 0.10703416274314062}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:24:48,363] Trial 15 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 7, 'hint_rate': 0.21401207532455013, 'alpha': 39, 'iterations': 2697, 'learning_rate': 0.005194714296556848, 'p_miss': 0.20102837552731953}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:26:40,233] Trial 5 finished with value: 0.34182090625477135 and parameters: {'model_name': 'GAIN', 'batch_size': 39, 'hint_rate': 0.7289017677572347, 'alpha': 94, 'iterations': 609, 'learning_rate': 0.006328488867342049, 'p_miss': 0.2659791978679744}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:27:05,331] Trial 38 finished with value: 0.24951902200762968 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:27:14,119] Trial 44 finished with value: 0.2436660349538414 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:27:21,841] Trial 18 finished with value: 0.2459848217757783 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 9 with value: 0.2426004564196648.
running
[I 2024-11-06 07:27:23,388] Trial 45 finished with value: 0.24225940290380707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 45 with value: 0.24225940290380707.
running
[I 2024-11-06 07:27:28,268] Trial 16 finished with value: 0.2579932541208474 and parameters: {'model_name': 'VAE', 'batch_size': 17, 'iterations': 356, 'learning_rate': 0.01571067515602005, 'p_miss': 0.04484842761292137}. Best is trial 45 with value: 0.24225940290380707.
running
[I 2024-11-06 07:27:30,460] Trial 46 finished with value: 0.24225940290380707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 45 with value: 0.24225940290380707.
running
[I 2024-11-06 07:27:31,682] Trial 47 finished with value: 0.24225940290380707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 45 with value: 0.24225940290380707.
running
[I 2024-11-06 07:27:34,817] Trial 49 finished with value: 0.2418478995615768 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:27:35,830] Trial 50 finished with value: 0.24184789957240854 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:27:36,439] Trial 52 finished with value: 0.3376524021935613 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:27:36,769] Trial 48 finished with value: 0.24225940290380707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:27:51,211] Trial 53 finished with value: 0.2521007679671872 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:27:51,701] Trial 51 finished with value: 0.2555173803215696 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:27:52,151] Trial 55 finished with value: 0.3369634445390873 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:28:08,168] Trial 57 finished with value: 0.33876788778661315 and parameters: {'model_name': 'GAIN', 'batch_size': 704, 'hint_rate': 0.9512553186704777, 'alpha': 0, 'iterations': 9, 'learning_rate': 0.0006938848856912048, 'p_miss': 0.28077030144579}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:28:12,095] Trial 56 finished with value: 0.33853502182929507 and parameters: {'model_name': 'GAIN', 'batch_size': 770, 'hint_rate': 0.8821866832546004, 'alpha': 3, 'iterations': 14, 'learning_rate': 0.0006804004033878152, 'p_miss': 0.29591780108866467}. Best is trial 49 with value: 0.2418478995615768.
running
[I 2024-11-06 07:28:12,380] Trial 58 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:28:15,887] Trial 59 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:28:19,213] Trial 60 finished with value: 0.2419059377574841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:28:24,127] Trial 61 finished with value: 0.24190594483081457 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:29:41,613] Trial 1 finished with value: 0.2462029795051046 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:31:10,539] Trial 0 finished with value: 0.33306069470642946 and parameters: {'model_name': 'GAIN', 'batch_size': 123, 'hint_rate': 0.12872696956346588, 'alpha': 75, 'iterations': 879, 'learning_rate': 0.00019658998364524083, 'p_miss': 0.23631495906541705}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:37:10,662] Trial 42 finished with value: 0.2494169230297242 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:37:18,976] Trial 66 finished with value: 0.24190594483081457 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:37:28,372] Trial 67 finished with value: 0.24190594483081457 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 07:39:14,494] Trial 43 finished with value: 0.246547141525414 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:31:47,590] Trial 40 finished with value: 0.35791030966253456 and parameters: {'model_name': 'GAIN', 'batch_size': 784, 'hint_rate': 0.9538269431376947, 'alpha': 0, 'iterations': 5375, 'learning_rate': 0.0005400865864883102, 'p_miss': 0.2955523361535122}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:31:55,855] Trial 70 finished with value: 0.24190599186092218 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:34:44,697] Trial 71 finished with value: 0.28849074526472385 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 58, 'learning_rate': 0.09879375205195574, 'p_miss': 0.16991381409324488}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:34:52,612] Trial 72 finished with value: 0.2419059377574841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:35:01,154] Trial 73 finished with value: 0.2419059377574841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:35:13,568] Trial 74 finished with value: 0.2827432239125768 and parameters: {'model_name': 'VAE', 'batch_size': 140, 'iterations': 4, 'learning_rate': 0.0018791784076333347, 'p_miss': 0.14910845065586673}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:35:14,314] Trial 75 finished with value: 0.3376524021935613 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:35:22,959] Trial 76 finished with value: 0.2419059377574841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:35:30,824] Trial 77 finished with value: 0.2419059377574841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:35:38,020] Trial 78 finished with value: 0.24190593775748415 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:02,172] Trial 79 finished with value: 0.3131730999282154 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:10,325] Trial 37 finished with value: 0.3596437791648667 and parameters: {'model_name': 'GAIN', 'batch_size': 860, 'hint_rate': 0.5892073677246169, 'alpha': 77, 'iterations': 5854, 'learning_rate': 0.00010565744775819179, 'p_miss': 0.2950345937330412}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:10,615] Trial 80 finished with value: 0.2419059377574841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:15,495] Trial 82 finished with value: 0.2418479025894415 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:19,467] Trial 83 finished with value: 0.2497411146647069 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 24, 'weights': 'uniform'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:20,614] Trial 81 finished with value: 0.2419059377574841 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:23,952] Trial 84 finished with value: 0.2418479025894415 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:25,064] Trial 85 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:28,783] Trial 86 finished with value: 0.2418479025894415 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:29,487] Trial 87 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:34,018] Trial 89 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:34,308] Trial 88 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:38,520] Trial 90 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:38,747] Trial 91 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:42,529] Trial 93 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:46,338] Trial 94 finished with value: 0.28596741580523916 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1, 'learning_rate': 0.001943703536588808, 'p_miss': 0.2236401181138607}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:50,540] Trial 95 finished with value: 0.24689377003707028 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 12382, 'weights': 'uniform'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:54,664] Trial 96 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:36:58,564] Trial 97 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:37:01,858] Trial 98 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:37:05,812] Trial 99 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:37:08,428] Trial 100 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:37:11,774] Trial 101 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:37:14,874] Trial 102 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:37:15,352] Trial 103 finished with value: 0.24689377003707028 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:37:17,901] Trial 104 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:41:24,091] Trial 65 finished with value: 0.28714637752912753 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3455, 'learning_rate': 0.09706018356640403, 'p_miss': 0.17462897229874252}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:41:27,641] Trial 106 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:41:31,392] Trial 107 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:41:35,483] Trial 108 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 09:41:39,113] Trial 109 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:08:01,366] Trial 39 finished with value: 0.36900025631231426 and parameters: {'model_name': 'GAIN', 'batch_size': 573, 'hint_rate': 0.012423444876238143, 'alpha': 14, 'iterations': 7353, 'learning_rate': 0.00013051084683677377, 'p_miss': 0.2991854005134169}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:08:04,858] Trial 111 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:08:09,185] Trial 112 finished with value: 0.24184789588560376 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:08:13,819] Trial 113 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:14:43,713] Trial 105 finished with value: 0.3354651545475319 and parameters: {'model_name': 'GAIN', 'batch_size': 105, 'hint_rate': 0.4087863913181001, 'alpha': 38, 'iterations': 1668, 'learning_rate': 0.0998881200490624, 'p_miss': 0.14232895900491896}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:14:44,957] Trial 110 finished with value: 0.33875970016086615 and parameters: {'model_name': 'GAIN', 'batch_size': 99, 'hint_rate': 0.40507810883395057, 'alpha': 34, 'iterations': 1448, 'learning_rate': 0.00032871801488234046, 'p_miss': 0.13540515146258988}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:14:50,194] Trial 116 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:14:55,564] Trial 117 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:22:25,034] Trial 35 finished with value: 0.3585914914479599 and parameters: {'model_name': 'GAIN', 'batch_size': 947, 'hint_rate': 0.5758257931077664, 'alpha': 88, 'iterations': 7581, 'learning_rate': 0.0001371631139445216, 'p_miss': 0.2841496305473221}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:22:30,645] Trial 119 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:24:54,499] Trial 41 finished with value: 0.36451612416423995 and parameters: {'model_name': 'GAIN', 'batch_size': 881, 'hint_rate': 0.9294267203356041, 'alpha': 1, 'iterations': 7744, 'learning_rate': 0.000570881969668219, 'p_miss': 0.2888865958124862}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:28:48,945] Trial 114 finished with value: 0.25113693031837114 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:05,800] Trial 122 finished with value: 0.2528773556991896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:10,712] Trial 123 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:14,728] Trial 124 finished with value: 0.24634679229842749 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 126, 'weights': 'uniform'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:20,803] Trial 125 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:26,832] Trial 126 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:32,809] Trial 127 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:39,063] Trial 128 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:44,192] Trial 129 finished with value: 0.24184789956157685 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:50,076] Trial 130 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:55,717] Trial 131 finished with value: 0.241847895878063 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:29:56,409] Trial 132 finished with value: 0.3369634445390873 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:30:08,977] Trial 133 finished with value: 0.24225940290380707 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:13,860] Trial 115 finished with value: 0.25106441020290343 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:19,996] Trial 135 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:26,124] Trial 136 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:27,998] Trial 118 finished with value: 0.25071128910209584 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:32,279] Trial 137 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:33,644] Trial 138 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:37,707] Trial 139 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:39,612] Trial 140 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:36:54,296] Trial 141 finished with value: 0.2528773556991896 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:39:32,904] Trial 143 finished with value: 0.26530457187297213 and parameters: {'model_name': 'VAE', 'batch_size': 305, 'iterations': 51, 'learning_rate': 0.0013528949421020326, 'p_miss': 0.06064931629541549}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:39:38,224] Trial 144 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:39:43,349] Trial 145 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:39:48,257] Trial 146 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:39:53,495] Trial 147 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:39:59,308] Trial 148 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:04,740] Trial 149 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:09,728] Trial 150 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:15,629] Trial 151 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:21,871] Trial 152 finished with value: 0.2466655758488802 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8189, 'weights': 'uniform'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:29,541] Trial 142 finished with value: 0.25304863618972967 and parameters: {'model_name': 'VAE', 'batch_size': 281, 'iterations': 85, 'learning_rate': 0.002091321033557571, 'p_miss': 0.06721057870695653}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:34,171] Trial 153 finished with value: 0.24222133365399096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:40,040] Trial 155 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:42,913] Trial 154 finished with value: 0.24222133365399096 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:45,041] Trial 156 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:48,426] Trial 157 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:51,095] Trial 158 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:53,559] Trial 159 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:56,277] Trial 160 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:56,983] Trial 162 finished with value: 0.3376524021935613 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:40:58,794] Trial 161 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:41:02,183] Trial 163 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:41:03,767] Trial 164 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:41:07,386] Trial 165 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:41:08,853] Trial 166 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:41:12,201] Trial 167 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:41:14,105] Trial 168 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 58 with value: 0.2418478732242264.
running
[I 2024-11-06 10:41:16,692] Trial 169 finished with value: 0.24184785883629964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:19,670] Trial 170 finished with value: 0.24184789478182295 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:23,863] Trial 172 finished with value: 0.24184785883629964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:28,664] Trial 171 finished with value: 0.24221353435234388 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:41,860] Trial 173 finished with value: 0.2560852438547149 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:46,803] Trial 175 finished with value: 0.24184785883629964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:47,837] Trial 174 finished with value: 0.25160397193267886 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:51,803] Trial 176 finished with value: 0.24184785883629964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:52,254] Trial 177 finished with value: 0.24184785883629964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:55,737] Trial 178 finished with value: 0.24184785883629964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:41:56,259] Trial 179 finished with value: 0.24184785883629964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:00,313] Trial 180 finished with value: 0.24184785883629964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:00,526] Trial 181 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:04,886] Trial 182 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:05,826] Trial 183 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:15,915] Trial 184 finished with value: 0.3302802837793868 and parameters: {'model_name': 'GAIN', 'batch_size': 56, 'hint_rate': 0.7686471984792471, 'alpha': 61, 'iterations': 7, 'learning_rate': 0.0442445947423652, 'p_miss': 0.24279499853891268}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:17,945] Trial 185 finished with value: 0.33191795582072614 and parameters: {'model_name': 'GAIN', 'batch_size': 16, 'hint_rate': 0.751918735550513, 'alpha': 59, 'iterations': 7, 'learning_rate': 0.04590970933601957, 'p_miss': 0.2548423442041711}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:21,255] Trial 186 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:21,755] Trial 33 finished with value: 0.35865512798047733 and parameters: {'model_name': 'GAIN', 'batch_size': 733, 'hint_rate': 0.6598156947687853, 'alpha': 59, 'iterations': 8490, 'learning_rate': 0.00010029516641609499, 'p_miss': 0.2906994801438786}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:22,917] Trial 187 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:26,409] Trial 189 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:26,701] Trial 188 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:29,345] Trial 190 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:33,799] Trial 192 finished with value: 0.2583364655570287 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2156, 'weights': 'distance'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:42:36,858] Trial 193 finished with value: 0.25833045023023343 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1917, 'weights': 'distance'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:44:54,091] Trial 120 finished with value: 0.24792403179559713 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:44:55,500] Trial 36 finished with value: 0.35103863095606613 and parameters: {'model_name': 'GAIN', 'batch_size': 717, 'hint_rate': 0.6370650427133264, 'alpha': 27, 'iterations': 8519, 'learning_rate': 0.00010900269678434428, 'p_miss': 0.2971190309634809}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:45:01,263] Trial 196 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:45:02,718] Trial 197 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
running
[I 2024-11-06 10:45:08,200] Trial 198 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 10:45:08,806] Trial 199 finished with value: 0.2418478732242264 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 10:46:43,573] Trial 92 finished with value: 0.29683982268787273 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1739, 'learning_rate': 0.002589313870909783, 'p_miss': 0.22663053787023837}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 10:47:05,165] Trial 121 finished with value: 0.2500081120967633 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 10:50:34,226] Trial 54 finished with value: 0.3490447147873071 and parameters: {'model_name': 'GAIN', 'batch_size': 407, 'hint_rate': 0.9715720175595287, 'alpha': 8, 'iterations': 9069, 'learning_rate': 0.0006392638500117594, 'p_miss': 0.27981246918666336}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 10:51:03,101] Trial 134 finished with value: 0.2496560664701144 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 10:59:24,893] Trial 191 finished with value: 0.24818752972960095 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 10:59:39,791] Trial 194 finished with value: 0.24850158435619069 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 10:59:49,373] Trial 195 finished with value: 0.24915430593151938 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 4, 'imputation_order': 'ascending'}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 11:02:02,446] Trial 32 finished with value: 0.36443655740592457 and parameters: {'model_name': 'GAIN', 'batch_size': 813, 'hint_rate': 0.03474759278221551, 'alpha': 75, 'iterations': 9552, 'learning_rate': 0.00010828312730425171, 'p_miss': 0.2956021022533526}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 11:04:43,822] Trial 34 finished with value: 0.35872884256893045 and parameters: {'model_name': 'GAIN', 'batch_size': 804, 'hint_rate': 0.7989569124886693, 'alpha': 86, 'iterations': 9952, 'learning_rate': 0.0001512489745416311, 'p_miss': 0.2606095963817199}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 11:05:38,650] Trial 69 finished with value: 0.28982059704813884 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 5760, 'learning_rate': 0.06965912698686176, 'p_miss': 0.16795706287192919}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 11:09:10,928] Trial 68 finished with value: 0.30236732884747364 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7298, 'learning_rate': 0.0013098216630453008, 'p_miss': 0.181093797824948}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 11:09:39,979] Trial 63 finished with value: 0.2902844689862869 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 6475, 'learning_rate': 0.08850961850969671, 'p_miss': 0.1976982530638091}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 11:09:40,591] Trial 62 finished with value: 0.3033913229886058 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7990, 'learning_rate': 0.00127248666344529, 'p_miss': 0.19319192760961093}. Best is trial 169 with value: 0.24184785883629964.
[I 2024-11-06 11:10:07,223] Trial 64 finished with value: 0.2863615500291031 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8393, 'learning_rate': 0.001102269150555191, 'p_miss': 0.2047359077805043}. Best is trial 169 with value: 0.24184785883629964.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.24184785883629964
{'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'roman'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.772158368058418
Generation:   4%|▍         | 1/25 [02:03<49:17, 123.22s/it]Generation:  2
Best f1_score score: 0.772158368058418
Generation:   8%|▊         | 2/25 [05:14<1:02:41, 163.54s/it]Generation:  3
Best f1_score score: 0.7735995304605676
Generation:  12%|█▏        | 3/25 [05:38<36:35, 99.81s/it]   WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f05540> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  4
Best f1_score score: 0.7787910720512426
Generation:  16%|█▌        | 4/25 [05:59<23:59, 68.53s/it]Generation:  5
Best f1_score score: 0.7800769652253388
Generation:  20%|██        | 5/25 [06:22<17:21, 52.05s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465bb1690> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  6
Best f1_score score: 0.7800769652253388
Generation:  24%|██▍       | 6/25 [06:54<14:18, 45.18s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467bb8610> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  7
Best f1_score score: 0.7800769652253388
Generation:  28%|██▊       | 7/25 [07:21<11:48, 39.38s/it]Generation:  8
Best f1_score score: 0.7800769652253388
Generation:  32%|███▏      | 8/25 [07:47<09:58, 35.18s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467af6b90> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  9
Best f1_score score: 0.7800769652253388
Generation:  36%|███▌      | 9/25 [10:33<20:15, 75.98s/it]Generation:  10
Best f1_score score: 0.7800769652253388
Generation:  40%|████      | 10/25 [10:47<14:13, 56.90s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554655ed450> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  11
Best f1_score score: 0.7800769652253388
Generation:  44%|████▍     | 11/25 [11:11<10:56, 46.92s/it]Generation:  12
Best f1_score score: 0.7803087689767919
Generation:  48%|████▊     | 12/25 [11:34<08:33, 39.47s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554652f69e0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  13
Best f1_score score: 0.7803087689767919
Generation:  52%|█████▏    | 13/25 [11:52<06:34, 32.89s/it]Generation:  14
Best f1_score score: 0.7807539350582358
Generation:  56%|█████▌    | 14/25 [12:18<05:38, 30.80s/it]Generation:  15
Best f1_score score: 0.7807539350582358
Generation:  60%|██████    | 15/25 [12:43<04:52, 29.22s/it]Generation:  16
Best f1_score score: 0.7807539350582358
Generation:  64%|██████▍   | 16/25 [13:12<04:22, 29.19s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554652867a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.7807539350582358
Generation:  68%|██████▊   | 17/25 [13:59<04:34, 34.31s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465467280> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  18
Best f1_score score: 0.7816045944505461
Generation:  72%|███████▏  | 18/25 [14:29<03:51, 33.09s/it]Generation:  19
Best f1_score score: 0.7816045944505461
Generation:  76%|███████▌  | 19/25 [14:54<03:05, 30.86s/it]Generation:  20
Best f1_score score: 0.7816045944505461
Generation:  80%|████████  | 20/25 [15:08<02:09, 25.81s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f7a30> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465493fd0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  21
Best f1_score score: 0.7816045944505461
Generation:  84%|████████▍ | 21/25 [15:23<01:29, 22.27s/it]Generation:  22
Best f1_score score: 0.7816045944505461
Generation:  88%|████████▊ | 22/25 [15:40<01:02, 20.98s/it]Generation:  23
Best f1_score score: 0.7816045944505461
Generation:  92%|█████████▏| 23/25 [16:36<01:02, 31.46s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465815810> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.7816045944505461
Generation:  96%|█████████▌| 24/25 [17:15<00:33, 33.63s/it]Generation:  25
Best f1_score score: 0.7816045944505461
Generation: 100%|██████████| 25/25 [17:51<00:00, 34.43s/it]Generation: 100%|██████████| 25/25 [17:55<00:00, 43.01s/it]
2024-11-06 11:28:09,314 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:36117' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-579345a51609ee95c00b98330f72c2da', 'ndarray-026b20b7ec51f4cbe466a196a755f702'} (stimulus_id='handle-worker-cleanup-1730921289.3140094')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(class_weight='balanced', max_depth=8,
                                n_estimators=77, n_jobs=1, num_leaves=36,
                                verbose=-1))])
score start
train score: {'auroc': 0.9231686113822282, 'accuracy': 0.8493084593116758, 'balanced_accuracy': 0.828232580360571, 'logloss': 0.3536759331832163, 'f1': 0.8288889567636879}
original test score: {'auroc': 0.9678020304616126, 'accuracy': 0.9205532325506594, 'balanced_accuracy': 0.9133617201631196, 'logloss': 0.2305303295412772, 'f1': 0.9105864082137414}
imputed test score: {'auroc': 0.863526377528583, 'accuracy': 0.7935027339980701, 'balanced_accuracy': 0.7630544410135618, 'logloss': 0.41837060918295765, 'f1': 0.7646241255854981}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d400a0> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 727, in predict
    pred = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 788, in decision_function
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 98, in _check_X
    return self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.7788641054225394
Generation:   4%|▍         | 1/25 [06:00<2:24:05, 360.24s/it]Generation:  2
Best f1_score score: 0.7788641054225394
Generation:   8%|▊         | 2/25 [15:09<3:00:37, 471.19s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15543037c0a0> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 101, in predict
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1178, in _check_X
    X = super()._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 574, in _check_X
    return self._validate_data(X, accept_sparse="csr", reset=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  3
Best f1_score score: 0.7788641054225394
Generation:  12%|█▏        | 3/25 [18:52<2:11:19, 358.16s/it]Generation:  4
Best f1_score score: 0.7800629479817351
Generation:  16%|█▌        | 4/25 [19:54<1:24:22, 241.07s/it]Generation:  5
Best f1_score score: 0.7800629479817351
Generation:  20%|██        | 5/25 [26:09<1:36:25, 289.28s/it]Generation:  6
Best f1_score score: 0.7800629479817351
Generation:  24%|██▍       | 6/25 [32:30<1:41:33, 320.71s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bd83880> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 727, in predict
    pred = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 788, in decision_function
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 98, in _check_X
    return self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1b460> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 727, in predict
    pred = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 788, in decision_function
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 98, in _check_X
    return self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155475079300> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 727, in predict
    pred = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 788, in decision_function
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 98, in _check_X
    return self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.7800629479817351
Generation:  28%|██▊       | 7/25 [33:37<1:11:19, 237.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155457078f40> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in cross_val_score_objective
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 31, in <listcomp>
    this_fold_scores = [sklearn.metrics.get_scorer(scorer)(this_fold_pipeline, X_test, y_test) for scorer in scorers]
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 279, in __call__
    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 371, in _score
    y_pred = method_caller(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 89, in _cached_call
    result, _ = _get_response_values(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_response.py", line 211, in _get_response_values
    y_pred = prediction_method(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 601, in predict
    return self.steps[-1][1].predict(Xt, **params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 727, in predict
    pred = self.decision_function(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 788, in decision_function
    X = self._check_X(X)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 98, in _check_X
    return self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  8
Best f1_score score: 0.7836247435878235
Generation:  32%|███▏      | 8/25 [36:31<1:01:37, 217.52s/it]Generation:  9
Best f1_score score: 0.7873676825112678
Generation:  36%|███▌      | 9/25 [41:41<1:05:38, 246.18s/it]Generation:  10
Best f1_score score: 0.7879786837366136
Generation:  40%|████      | 10/25 [42:26<46:01, 184.13s/it] Generation:  11
Best f1_score score: 0.7882470709133736
Generation:  44%|████▍     | 11/25 [43:23<33:52, 145.18s/it]Generation:  12
Best f1_score score: 0.79170993017994
Generation:  48%|████▊     | 12/25 [48:40<42:48, 197.54s/it]Generation:  13
Best f1_score score: 0.79170993017994
Generation:  52%|█████▏    | 13/25 [49:27<30:22, 151.87s/it]Generation:  14
Best f1_score score: 0.791911799610542
Generation:  56%|█████▌    | 14/25 [50:12<21:57, 119.74s/it]Generation:  15
Best f1_score score: 0.7968779600761524
Generation:  60%|██████    | 15/25 [52:40<21:21, 128.12s/it]Generation:  16
Best f1_score score: 0.7968779600761524
Generation:  64%|██████▍   | 16/25 [54:15<17:42, 118.05s/it]Generation:  17
Best f1_score score: 0.7968779600761524
Generation:  68%|██████▊   | 17/25 [56:48<17:09, 128.67s/it]Generation:  18
Best f1_score score: 0.7968779600761524
Generation:  72%|███████▏  | 18/25 [58:16<13:35, 116.54s/it]Generation:  19
Best f1_score score: 0.7968779600761524
Generation:  76%|███████▌  | 19/25 [59:51<10:59, 109.88s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155477284640> 
 Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GaussianNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.7968779600761524
Generation:  80%|████████  | 20/25 [1:08:30<19:25, 233.00s/it]Generation:  21
Best f1_score score: 0.7968779600761524
Generation:  84%|████████▍ | 21/25 [1:09:16<11:47, 176.83s/it]Generation:  22
Best f1_score score: 0.7968779600761524
Generation:  88%|████████▊ | 22/25 [1:14:23<10:47, 215.73s/it]Generation:  23
Best f1_score score: 0.7980237440762854
Generation:  92%|█████████▏| 23/25 [1:16:21<06:12, 186.36s/it]Generation:  24
Best f1_score score: 0.7980237440762854
Generation:  96%|█████████▌| 24/25 [1:18:54<02:56, 176.39s/it]Generation:  25
Best f1_score score: 0.7980237440762854
Generation: 100%|██████████| 25/25 [1:20:51<00:00, 158.75s/it]Generation: 100%|██████████| 25/25 [1:20:51<00:00, 194.08s/it]
2024-11-06 12:49:09,181 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:38687' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-533960d323d33af339f7409a5204285d', 'ndarray-579345a51609ee95c00b98330f72c2da'} (stimulus_id='handle-worker-cleanup-1730926149.1817348')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer()),
                ('lgbmclassifier',
                 LGBMClassifier(class_weight='balanced', max_depth=10,
                                n_estimators=77, n_jobs=1, num_leaves=197,
                                verbose=-1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9428926434942158, 'accuracy': 0.8608877452557092, 'balanced_accuracy': 0.8475409240256638, 'logloss': 0.31014608499189905, 'f1': 0.8439416566132667}
test score: {'auroc': 0.8862471717096893, 'accuracy': 0.8102283692505629, 'balanced_accuracy': 0.7887444125735965, 'logloss': 0.38852659588936356, 'f1': 0.7865755185547857}
original test score: {'auroc': 0.9756553710088639, 'accuracy': 0.941781923448054, 'balanced_accuracy': 0.9274262816034777, 'logloss': 0.1574070619590853, 'f1': 0.9331354711056628}
score end
1046
lvl
0.5
type
MCAR
num_run
3
class_full
finished
all finished
full run takes
5.587406848669052
hours
DONE
