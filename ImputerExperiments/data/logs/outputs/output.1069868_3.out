Run: 3
/cm/local/apps/slurm/var/spool/job1069868/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/42192/42192.pkl
working on 
../data/c/42192/class_full_MCAR_0.3_1
4.697605133056641
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-24 23:43:45,153] A new study created in memory with name: no-name-f8e73ea1-9e01-46bd-bb23-c50d1401798e
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-24 23:43:45,405] Trial 2 finished with value: 0.42009243637344085 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 2 with value: 0.42009243637344085.
running
[I 2024-11-24 23:43:45,587] Trial 13 finished with value: 0.456606646339465 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 2 with value: 0.42009243637344085.
[I 2024-11-24 23:43:45,686] Trial 0 finished with value: 0.42009243637344085 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 2 with value: 0.42009243637344085.
running
running
[I 2024-11-24 23:43:45,911] Trial 1 finished with value: 0.42009243637344085 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 2 with value: 0.42009243637344085.
running
[I 2024-11-24 23:43:46,148] Trial 18 finished with value: 0.3225232898221972 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 18 with value: 0.3225232898221972.
running
[I 2024-11-24 23:43:46,284] Trial 12 finished with value: 0.42308690611144273 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 18 with value: 0.3225232898221972.
[I 2024-11-24 23:43:46,464] Trial 20 finished with value: 0.42009243637344085 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 18 with value: 0.3225232898221972.
running
running
[I 2024-11-24 23:43:47,802] Trial 6 finished with value: 0.3225232898221972 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3318, 'weights': 'uniform'}. Best is trial 18 with value: 0.3225232898221972.
running
[I 2024-11-24 23:43:48,349] Trial 5 finished with value: 0.2981722845552889 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1122, 'weights': 'uniform'}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:43:50,788] Trial 9 finished with value: 0.30982703822645447 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:43:51,728] Trial 4 finished with value: 0.4045700562481998 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 1, 'learning_rate': 0.002261577704060953, 'p_miss': 0.10621278298139686}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:43:52,037] Trial 16 finished with value: 0.40209616139002013 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1, 'learning_rate': 0.002400277834318438, 'p_miss': 0.07271116990291564}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:43:54,532] Trial 24 finished with value: 0.4566544672843305 and parameters: {'model_name': 'GAIN', 'batch_size': 133, 'hint_rate': 0.965156298231052, 'alpha': 94, 'iterations': 4, 'learning_rate': 0.00013180737305690439, 'p_miss': 0.012706729267656676}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:44:01,041] Trial 22 finished with value: 0.4869737949839147 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.4462322533347562, 'alpha': 79, 'iterations': 20, 'learning_rate': 0.0002694266600851958, 'p_miss': 0.22736747733426327}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:44:03,659] Trial 27 finished with value: 0.30982703822645447 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:44:04,269] Trial 26 finished with value: 0.30982703822645447 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:44:07,139] Trial 28 finished with value: 0.30982703822645447 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.2981722845552889.
running
[I 2024-11-24 23:44:08,104] Trial 31 finished with value: 0.2800315715567976 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 202, 'weights': 'uniform'}. Best is trial 31 with value: 0.2800315715567976.
running
[I 2024-11-24 23:44:11,381] Trial 32 finished with value: 0.3080686852606053 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 52, 'weights': 'distance'}. Best is trial 31 with value: 0.2800315715567976.
running
[I 2024-11-24 23:44:12,244] Trial 33 finished with value: 0.2778790848530056 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 157, 'weights': 'uniform'}. Best is trial 33 with value: 0.2778790848530056.
running
[I 2024-11-24 23:44:15,627] Trial 29 finished with value: 0.30982703822645447 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 33 with value: 0.2778790848530056.
running
[I 2024-11-24 23:44:15,838] Trial 35 finished with value: 0.27123362483186425 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 44, 'weights': 'uniform'}. Best is trial 35 with value: 0.27123362483186425.
running
[I 2024-11-24 23:44:16,542] Trial 34 finished with value: 0.28802590065339195 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 495, 'weights': 'uniform'}. Best is trial 35 with value: 0.27123362483186425.
running
[I 2024-11-24 23:44:19,338] Trial 37 finished with value: 0.2703895911897348 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 35, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:19,515] Trial 36 finished with value: 0.2841918808511028 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 315, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:20,721] Trial 38 finished with value: 0.27587332827346467 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 85, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:24,031] Trial 39 finished with value: 0.3018496786305523 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1426, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:24,726] Trial 40 finished with value: 0.3039026818802653 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1603, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:25,392] Trial 41 finished with value: 0.3027732433434575 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1499, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:29,200] Trial 42 finished with value: 0.3121087675523929 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1188, 'weights': 'distance'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:30,438] Trial 43 finished with value: 0.31478193682300415 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2844, 'weights': 'distance'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:33,288] Trial 25 finished with value: 0.3273883182396456 and parameters: {'model_name': 'VAE', 'batch_size': 96, 'iterations': 33, 'learning_rate': 0.09446359330718936, 'p_miss': 0.07238722454478888}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:34,374] Trial 46 finished with value: 0.2926397425699502 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 730, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:37,352] Trial 48 finished with value: 0.27613105543050387 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 97, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:37,623] Trial 47 finished with value: 0.29155838322856453 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 672, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:40,783] Trial 50 finished with value: 0.27106088577506976 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 18, 'weights': 'uniform'}. Best is trial 37 with value: 0.2703895911897348.
running
[I 2024-11-24 23:44:45,972] Trial 14 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:45:04,895] Trial 21 finished with value: 0.38288785110785895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 6, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:46:04,914] Trial 52 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:46:21,882] Trial 11 finished with value: 0.46734071427039436 and parameters: {'model_name': 'GAIN', 'batch_size': 24, 'hint_rate': 0.28441466483799543, 'alpha': 19, 'iterations': 300, 'learning_rate': 0.0001456229770688788, 'p_miss': 0.23882689943545402}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:46:41,583] Trial 7 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.6128480022290028, 'alpha': 67, 'iterations': 443, 'learning_rate': 0.07295469192438404, 'p_miss': 0.1239627579325586}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:47:02,688] Trial 54 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:47:10,223] Trial 15 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.9143349564468182, 'alpha': 68, 'iterations': 2142, 'learning_rate': 0.036571184271351115, 'p_miss': 0.04908375129107629}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:47:18,712] Trial 55 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:47:35,321] Trial 56 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:47:58,614] Trial 57 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:48:04,603] Trial 58 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:48:15,533] Trial 59 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:48:33,083] Trial 60 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:48:59,433] Trial 61 finished with value: 0.2702129332657495 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:49:11,295] Trial 62 finished with value: 0.27021371144852047 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:49:44,478] Trial 63 finished with value: 0.27022217074492677 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:49:51,560] Trial 65 finished with value: 0.2845659544658242 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:50:05,490] Trial 3 finished with value: 0.4974258740910866 and parameters: {'model_name': 'GAIN', 'batch_size': 995, 'hint_rate': 0.8744041832172602, 'alpha': 5, 'iterations': 250, 'learning_rate': 0.00038782466980192475, 'p_miss': 0.2654452692462725}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-24 23:50:08,946] Trial 64 finished with value: 0.27022376252715036 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-25 00:15:15,056] Trial 17 finished with value: 0.2810874262526323 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 9, 'imputation_order': 'descending'}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-25 00:15:40,327] Trial 10 finished with value: 0.28019699463563613 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-25 00:16:12,705] Trial 30 finished with value: 0.28143510642874636 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 14 with value: 0.2702129332657495.
running
[I 2024-11-25 00:16:24,895] Trial 71 finished with value: 0.27021260811925524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 71 with value: 0.27021260811925524.
running
[I 2024-11-25 00:16:55,815] Trial 72 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 00:19:52,567] Trial 67 finished with value: 0.284158149176963 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 00:20:13,873] Trial 69 finished with value: 0.2831817958004364 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 00:20:20,228] Trial 66 finished with value: 0.28359524786167833 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 00:20:25,921] Trial 68 finished with value: 0.2825860267878023 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 00:20:37,423] Trial 70 finished with value: 0.2817538266682335 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 00:21:17,181] Trial 79 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 01:50:55,589] Trial 23 finished with value: 0.3314316635740654 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 2925, 'learning_rate': 0.006112828462522132, 'p_miss': 0.05570769891533018}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:43:12,772] Trial 76 finished with value: 0.3259438083047298 and parameters: {'model_name': 'VAE', 'batch_size': 825, 'iterations': 1705, 'learning_rate': 0.014319637194840388, 'p_miss': 0.18488197114220417}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:43:13,174] Trial 83 finished with value: 0.3225232898221972 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:43:16,850] Trial 84 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.013852371792674734, 'alpha': 35, 'iterations': 10, 'learning_rate': 0.0010215328985229881, 'p_miss': 0.17049811870794085}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:44:07,979] Trial 77 finished with value: 0.3693756860228762 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 2279, 'learning_rate': 0.013563445134704082, 'p_miss': 0.18743285464363885}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:44:09,860] Trial 85 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:45:01,526] Trial 86 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:45:04,374] Trial 87 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:45:56,601] Trial 88 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:46:02,841] Trial 89 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:46:53,472] Trial 90 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:47:02,340] Trial 91 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:47:52,943] Trial 92 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:47:53,534] Trial 93 finished with value: 0.29339694438833747 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:47:54,572] Trial 95 finished with value: 0.42308690611144273 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:48:33,547] Trial 94 finished with value: 0.28613153044045403 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:48:51,941] Trial 96 finished with value: 0.2702120340891193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 72 with value: 0.2702120340891193.
running
[I 2024-11-25 02:49:31,320] Trial 97 finished with value: 0.27021202670114175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:50:00,290] Trial 98 finished with value: 0.39461300085037865 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:50:26,661] Trial 99 finished with value: 0.39461300085037865 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:52:57,470] Trial 101 finished with value: 0.46451975768616405 and parameters: {'model_name': 'GAIN', 'batch_size': 48, 'hint_rate': 0.033727459113913616, 'alpha': 42, 'iterations': 95, 'learning_rate': 0.0006153818183920556, 'p_miss': 0.2930335680929741}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:54:14,679] Trial 102 finished with value: 0.2702758578947536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:55:05,984] Trial 103 finished with value: 0.27021202670114175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:55:54,205] Trial 104 finished with value: 0.27021202670114175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:57:13,161] Trial 105 finished with value: 0.2702758578947536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:58:03,174] Trial 106 finished with value: 0.27021202670114175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:58:58,321] Trial 107 finished with value: 0.27021202670114175 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 02:59:57,678] Trial 108 finished with value: 0.27021271131732083 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 03:01:13,617] Trial 49 finished with value: 0.4800663387425326 and parameters: {'model_name': 'GAIN', 'batch_size': 938, 'hint_rate': 0.09624722953561332, 'alpha': 6, 'iterations': 5568, 'learning_rate': 0.09955830032028051, 'p_miss': 0.2925241978749142}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 03:01:16,172] Trial 109 finished with value: 0.2702758578947536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 97 with value: 0.27021202670114175.
running
[I 2024-11-25 03:01:33,282] Trial 111 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:01:49,770] Trial 112 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:02:09,276] Trial 113 finished with value: 0.3445551405600765 and parameters: {'model_name': 'VAE', 'batch_size': 320, 'iterations': 6, 'learning_rate': 0.009365062516469963, 'p_miss': 0.13430280627234134}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:02:09,634] Trial 114 finished with value: 0.456606646339465 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:02:25,848] Trial 115 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:02:40,759] Trial 110 finished with value: 0.2702758578947536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:02:41,454] Trial 116 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:02:53,432] Trial 117 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:02:53,946] Trial 118 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:04,957] Trial 120 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:06,413] Trial 119 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:17,302] Trial 121 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:19,124] Trial 122 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:30,164] Trial 123 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:31,872] Trial 124 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:42,667] Trial 125 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:43,895] Trial 126 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:55,219] Trial 127 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:03:55,893] Trial 128 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:04:07,354] Trial 129 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:04:08,357] Trial 130 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:04:19,533] Trial 131 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:04:21,691] Trial 132 finished with value: 0.2700052027258837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:05:04,577] Trial 133 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 17, 'hint_rate': 0.679858723486503, 'alpha': 93, 'iterations': 80, 'learning_rate': 0.02493373790119515, 'p_miss': 0.01539354674356777}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:05:18,461] Trial 135 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:05:31,835] Trial 136 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:05:45,268] Trial 137 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:05:58,535] Trial 138 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:11,991] Trial 139 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:17,776] Trial 51 finished with value: 0.5006658731268138 and parameters: {'model_name': 'GAIN', 'batch_size': 716, 'hint_rate': 0.02456189016948701, 'alpha': 5, 'iterations': 7352, 'learning_rate': 0.0819954757375848, 'p_miss': 0.26793636169429813}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:22,415] Trial 140 finished with value: 0.40269339053827313 and parameters: {'model_name': 'VAE', 'batch_size': 178, 'iterations': 2, 'learning_rate': 0.0012556782401773505, 'p_miss': 0.23034899955449215}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:26,233] Trial 141 finished with value: 0.3988744087343766 and parameters: {'model_name': 'VAE', 'batch_size': 175, 'iterations': 2, 'learning_rate': 0.00393924286649442, 'p_miss': 0.21102810400705668}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:35,626] Trial 142 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:36,439] Trial 144 finished with value: 0.42308690611144273 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:40,518] Trial 143 finished with value: 0.2700057975783389 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:50,830] Trial 145 finished with value: 0.2700057975783389 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:06:53,763] Trial 146 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:07:03,988] Trial 147 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:07:07,242] Trial 148 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:07:17,354] Trial 149 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:07:20,560] Trial 150 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:07:31,954] Trial 151 finished with value: 0.270005783034227 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:07:34,958] Trial 152 finished with value: 0.270005783034227 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:07:45,400] Trial 153 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:07:48,760] Trial 154 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:01,659] Trial 156 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:05,697] Trial 155 finished with value: 0.27203820571692783 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 7, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:15,175] Trial 157 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:19,711] Trial 158 finished with value: 0.27000507577523003 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:30,050] Trial 159 finished with value: 0.29332800298112044 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:33,630] Trial 160 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:44,356] Trial 161 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:46,836] Trial 162 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:08:59,770] Trial 163 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:09:01,267] Trial 164 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:09:14,494] Trial 165 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:09:16,904] Trial 166 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:09:29,202] Trial 167 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:09:31,313] Trial 168 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:09:45,229] Trial 169 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:10:09,878] Trial 170 finished with value: 0.2952292046418528 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:10:24,347] Trial 172 finished with value: 0.2700057947115239 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:10:24,665] Trial 173 finished with value: 0.456606646339465 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:10:26,764] Trial 171 finished with value: 0.2952292046418528 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:10:39,428] Trial 174 finished with value: 0.27000506249259704 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 111 with value: 0.27000506249259704.
running
[I 2024-11-25 03:10:49,400] Trial 175 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:11:01,443] Trial 176 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:11:10,822] Trial 177 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:11:22,577] Trial 178 finished with value: 0.2701409833909817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:25:31,856] Trial 179 finished with value: 0.456882081486532 and parameters: {'model_name': 'GAIN', 'batch_size': 15, 'hint_rate': 0.30550569825502594, 'alpha': 55, 'iterations': 560, 'learning_rate': 0.040926304771015894, 'p_miss': 0.14985483777969869}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:25:51,331] Trial 181 finished with value: 0.27014577579715787 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:26:12,370] Trial 182 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:34:59,384] Trial 180 finished with value: 0.4751370411306565 and parameters: {'model_name': 'GAIN', 'batch_size': 47, 'hint_rate': 0.2939746665514582, 'alpha': 60, 'iterations': 948, 'learning_rate': 0.03735815282783165, 'p_miss': 0.14793763099649948}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:36:16,844] Trial 53 finished with value: 0.5101932507872972 and parameters: {'model_name': 'GAIN', 'batch_size': 392, 'hint_rate': 0.02559570892572327, 'alpha': 1, 'iterations': 9318, 'learning_rate': 0.08869138419196947, 'p_miss': 0.28458739206488337}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:49:14,284] Trial 183 finished with value: 0.2805720220293827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:49:39,575] Trial 186 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:50:04,752] Trial 187 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:50:30,342] Trial 188 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:50:55,370] Trial 189 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:51:20,838] Trial 190 finished with value: 0.2701409833909817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:51:46,482] Trial 191 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:52:10,360] Trial 192 finished with value: 0.2701409833909817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:52:36,471] Trial 193 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:53:00,234] Trial 194 finished with value: 0.2701409833909817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:53:25,205] Trial 195 finished with value: 0.27056583880949614 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:53:51,425] Trial 196 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:54:17,087] Trial 197 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:54:41,406] Trial 198 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
running
[I 2024-11-25 03:55:06,346] Trial 199 finished with value: 0.26981575171950156 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 03:59:20,618] Trial 184 finished with value: 0.2820948236327979 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 04:00:58,536] Trial 185 finished with value: 0.28021512843252183 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 04:11:51,797] Trial 44 finished with value: 0.3261585579626717 and parameters: {'model_name': 'VAE', 'batch_size': 964, 'iterations': 3356, 'learning_rate': 0.09285550567341211, 'p_miss': 0.2908030060949216}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 04:54:29,685] Trial 8 finished with value: 0.3522087354471948 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7231, 'learning_rate': 0.00013453544851286397, 'p_miss': 0.275246719604952}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 05:19:51,341] Trial 19 finished with value: 0.3266824155163529 and parameters: {'model_name': 'VAE', 'batch_size': 37, 'iterations': 9429, 'learning_rate': 0.014625613344484511, 'p_miss': 0.14268863584456742}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 05:37:05,009] Trial 100 finished with value: 0.5104275022780465 and parameters: {'model_name': 'GAIN', 'batch_size': 26, 'hint_rate': 0.04434390612879646, 'alpha': 44, 'iterations': 9782, 'learning_rate': 0.0011581252687179993, 'p_miss': 0.297431700643929}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 05:58:19,262] Trial 134 finished with value: 0.4615208224182533 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.6598027078821858, 'alpha': 94, 'iterations': 9635, 'learning_rate': 0.02742254156201009, 'p_miss': 0.21631874163052314}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 06:12:08,184] Trial 45 finished with value: 0.32837991787258414 and parameters: {'model_name': 'VAE', 'batch_size': 435, 'iterations': 8972, 'learning_rate': 0.0793914161781132, 'p_miss': 0.2974219224899215}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 06:40:50,741] Trial 73 finished with value: 0.3271787631463189 and parameters: {'model_name': 'VAE', 'batch_size': 434, 'iterations': 9397, 'learning_rate': 0.01284280798203967, 'p_miss': 0.1915709872061227}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 07:08:45,997] Trial 75 finished with value: 0.3261441422885957 and parameters: {'model_name': 'VAE', 'batch_size': 935, 'iterations': 8348, 'learning_rate': 0.011465269644721835, 'p_miss': 0.1777761113346191}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 07:10:57,264] Trial 80 finished with value: 0.3260318317342974 and parameters: {'model_name': 'VAE', 'batch_size': 748, 'iterations': 6999, 'learning_rate': 0.012249656705686961, 'p_miss': 0.18403352827556468}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 07:17:30,338] Trial 78 finished with value: 0.3260776962083575 and parameters: {'model_name': 'VAE', 'batch_size': 806, 'iterations': 8472, 'learning_rate': 0.013938744496225224, 'p_miss': 0.17083565459702144}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 07:20:01,183] Trial 74 finished with value: 0.3262176470870508 and parameters: {'model_name': 'VAE', 'batch_size': 947, 'iterations': 7334, 'learning_rate': 0.012364112831298547, 'p_miss': 0.18570569395881048}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 07:24:44,427] Trial 82 finished with value: 0.3258897853327368 and parameters: {'model_name': 'VAE', 'batch_size': 919, 'iterations': 7601, 'learning_rate': 0.012003081170235153, 'p_miss': 0.1824987196022092}. Best is trial 175 with value: 0.26981575171950156.
[I 2024-11-25 07:28:25,215] Trial 81 finished with value: 0.3257420701614455 and parameters: {'model_name': 'VAE', 'batch_size': 810, 'iterations': 9703, 'learning_rate': 0.014248322315859386, 'p_miss': 0.18012511543334128}. Best is trial 175 with value: 0.26981575171950156.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
dtype: int64
0.26981575171950156
{'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'ascending'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0d30> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a0040> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  1
Best f1_score score: 0.882251744307301
Generation:   4%|▍         | 1/25 [00:59<23:44, 59.35s/it]Generation:  2
Best f1_score score: 0.882251744307301
Generation:   8%|▊         | 2/25 [01:37<17:58, 46.89s/it]Generation:  3
Best f1_score score: 0.882251744307301
Generation:  12%|█▏        | 3/25 [01:50<11:27, 31.23s/it]Generation:  4
Best f1_score score: 0.882251744307301
Generation:  16%|█▌        | 4/25 [02:25<11:29, 32.85s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474713220> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467b4fc70> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  5
Best f1_score score: 0.882451755573363
Generation:  20%|██        | 5/25 [02:37<08:23, 25.20s/it]Generation:  6
Best f1_score score: 0.882451755573363
Generation:  24%|██▍       | 6/25 [02:45<06:11, 19.56s/it]Generation:  7
Best f1_score score: 0.8834932352791955
Generation:  28%|██▊       | 7/25 [03:23<07:38, 25.50s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a1a50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.8834932352791955
Generation:  32%|███▏      | 8/25 [04:10<09:10, 32.39s/it]Generation:  9
Best f1_score score: 0.8834932352791955
Generation:  36%|███▌      | 9/25 [04:24<07:07, 26.73s/it]Generation:  10
Best f1_score score: 0.8839128660232373
Generation:  40%|████      | 10/25 [04:42<06:00, 24.02s/it]Generation:  11
Best f1_score score: 0.8846949899394371
Generation:  44%|████▍     | 11/25 [05:30<07:17, 31.22s/it]Generation:  12
Best f1_score score: 0.8846949899394371
Generation:  48%|████▊     | 12/25 [06:15<07:41, 35.52s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465b5d420> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  13
Best f1_score score: 0.8846949899394371
Generation:  52%|█████▏    | 13/25 [06:30<05:50, 29.20s/it]Generation:  14
Best f1_score score: 0.8846949899394371
Generation:  56%|█████▌    | 14/25 [06:43<04:27, 24.30s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467b67160> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  15
Best f1_score score: 0.8846949899394371
Generation:  60%|██████    | 15/25 [06:59<03:37, 21.79s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467a6bb50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  16
Best f1_score score: 0.8846949899394371
Generation:  64%|██████▍   | 16/25 [07:16<03:02, 20.28s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15546572ac20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.8846949899394371
Generation:  68%|██████▊   | 17/25 [07:31<02:30, 18.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f6b60> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  18
Best f1_score score: 0.8846949899394371
Generation:  72%|███████▏  | 18/25 [07:49<02:10, 18.60s/it]Generation:  19
Best f1_score score: 0.8846949899394371
Generation:  76%|███████▌  | 19/25 [08:06<01:49, 18.17s/it]Generation:  20
Best f1_score score: 0.8846949899394371
Generation:  80%|████████  | 20/25 [08:21<01:25, 17.20s/it]Generation:  21
Best f1_score score: 0.8846949899394371
Generation:  84%|████████▍ | 21/25 [08:36<01:06, 16.62s/it]Generation:  22
Best f1_score score: 0.8846949899394371
Generation:  88%|████████▊ | 22/25 [08:52<00:48, 16.31s/it]Generation:  23
Best f1_score score: 0.8846949899394371
Generation:  92%|█████████▏| 23/25 [09:56<01:00, 30.48s/it]Generation:  24
Best f1_score score: 0.8846949899394371
Generation:  96%|█████████▌| 24/25 [10:12<00:26, 26.37s/it]Generation:  25
Best f1_score score: 0.8846949899394371
Generation: 100%|██████████| 25/25 [10:58<00:00, 32.12s/it]Generation: 100%|██████████| 25/25 [11:01<00:00, 26.45s/it]
2024-11-25 07:39:37,141 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:45607' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-f110e23c3629b04843b0771c21ad41f2', 'ndarray-103607508d7163cdd4faa49b098bf1e4'} (stimulus_id='handle-worker-cleanup-1732549177.1413286')
Fitted
Pipeline(steps=[('xgbclassifier',
                 XGBClassifier(base_score=None, booster=None, callbacks=None,
                               colsample_bylevel=None, colsample_bynode=None,
                               colsample_bytree=None, device=None,
                               early_stopping_rounds=None,
                               enable_categorical=False, eval_metric=None,
                               feature_types=None, gamma=2.1610016547353,
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None,
                               learning_rate=0.8472649314016, max_bin=None,
                               max_cat_threshold=None, max_cat_to_onehot=None,
                               max_delta_step=None, max_depth=11,
                               max_leaves=None, min_child_weight=13,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=100, n_jobs=1,
                               nthread=1, num_parallel_tree=None, ...))])
score start
train score: {'auroc': 0.9639453310393925, 'accuracy': 0.9019422074846044, 'balanced_accuracy': 0.8656801237937035, 'logloss': 0.22788532800363517, 'f1': 0.8851593346985287}
original test score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 0.057978081892637166, 'f1': 1.0}
imputed test score: {'auroc': 0.9565948085187058, 'accuracy': 0.9005681818181818, 'balanced_accuracy': 0.8655523255813953, 'logloss': 0.24067220695695435, 'f1': 0.8840088499741091}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014550>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1fca0> 
 Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_base.py", line 190, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0d30> 
 Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MultinomialNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.8774581555949148
Generation:   4%|▍         | 1/25 [00:22<08:58, 22.43s/it]Generation:  2
Best f1_score score: 0.8800578904060309
Generation:   8%|▊         | 2/25 [01:45<22:13, 57.96s/it]Generation:  3
Best f1_score score: 0.8811357573761647
Generation:  12%|█▏        | 3/25 [05:15<46:48, 127.65s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd27a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  4
Best f1_score score: 0.881456396627852
Generation:  16%|█▌        | 4/25 [08:42<55:35, 158.83s/it]Generation:  5
Best f1_score score: 0.881456396627852
Generation:  20%|██        | 5/25 [12:10<58:52, 176.65s/it]Generation:  6
Best f1_score score: 0.881456396627852
Generation:  24%|██▍       | 6/25 [15:37<59:10, 186.88s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f925a80> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  7
Best f1_score score: 0.8814766560475448
Generation:  28%|██▊       | 7/25 [19:03<57:54, 193.06s/it]Generation:  8
Best f1_score score: 0.8828714646297217
Generation:  32%|███▏      | 8/25 [22:24<55:27, 195.71s/it]Generation:  9
Best f1_score score: 0.8828714646297217
Generation:  36%|███▌      | 9/25 [25:50<53:00, 198.81s/it]Generation:  10
Best f1_score score: 0.8828714646297217
Generation:  40%|████      | 10/25 [29:19<50:30, 202.01s/it]Generation:  11
Best f1_score score: 0.8828714646297217
Generation:  44%|████▍     | 11/25 [32:45<47:24, 203.17s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d720b0> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  12
Best f1_score score: 0.8828714646297217
Generation:  48%|████▊     | 12/25 [33:05<31:56, 147.42s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d1c730> 
 Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 911, in fit
    X, y = self._validate_data(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.8828714646297217
Generation:  52%|█████▏    | 13/25 [36:33<33:10, 165.85s/it]Generation:  14
Best f1_score score: 0.8832528361269038
Generation:  56%|█████▌    | 14/25 [36:51<22:14, 121.33s/it]Generation:  15
Best f1_score score: 0.8832528361269038
Generation:  60%|██████    | 15/25 [40:17<24:28, 146.83s/it]Generation:  16
Best f1_score score: 0.8832528361269038
Generation:  64%|██████▍   | 16/25 [43:41<24:34, 163.87s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155455204b50> 
 Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 911, in fit
    X, y = self._validate_data(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
QuadraticDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  17
Best f1_score score: 0.8832528361269038
Generation:  68%|██████▊   | 17/25 [47:03<23:24, 175.54s/it]Generation:  18
Best f1_score score: 0.8832528361269038
Generation:  72%|███████▏  | 18/25 [50:27<21:28, 184.10s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545693df90> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.8832528361269038
Generation:  76%|███████▌  | 19/25 [53:55<19:06, 191.13s/it]Generation:  20
Best f1_score score: 0.8832528361269038
Generation:  80%|████████  | 20/25 [55:25<13:24, 160.80s/it]Generation:  21
Best f1_score score: 0.8832528361269038
Generation:  84%|████████▍ | 21/25 [55:45<07:54, 118.57s/it]Generation:  22
Best f1_score score: 0.8832528361269038
Generation:  88%|████████▊ | 22/25 [1:01:33<09:22, 187.50s/it]Generation:  23
Best f1_score score: 0.8832528361269038
Generation:  92%|█████████▏| 23/25 [1:01:49<04:31, 135.84s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a3a5360> 
 Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py", line 589, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearDiscriminantAnalysis does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d58280> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  24
Best f1_score score: 0.8832528361269038
Generation:  96%|█████████▌| 24/25 [1:05:16<02:37, 157.36s/it]Generation:  25
Best f1_score score: 0.883329815688473
Generation: 100%|██████████| 25/25 [1:08:44<00:00, 172.54s/it]Generation: 100%|██████████| 25/25 [1:08:44<00:00, 164.99s/it]
2024-11-25 08:48:29,305 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:46617' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-ca157ea7c79713b5646cb349545c1992', 'ndarray-103607508d7163cdd4faa49b098bf1e4'} (stimulus_id='handle-worker-cleanup-1732553309.30554')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=Ridge(), imputation_order='random',
                                  initial_strategy='most_frequent',
                                  n_nearest_features=25)),
                ('lineardiscriminantanalysis', LinearDiscriminantAnalysis())])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.963562430786268, 'accuracy': 0.8990999526290857, 'balanced_accuracy': 0.8603308910773612, 'logloss': 0.2565451943951839, 'f1': 0.8811185316793045}
test score: {'auroc': 0.9574637417846309, 'accuracy': 0.9015151515151515, 'balanced_accuracy': 0.8650151668351871, 'logloss': 0.2748912066938226, 'f1': 0.8846289604168418}
original test score: {'auroc': 1.0, 'accuracy': 1.0, 'balanced_accuracy': 1.0, 'logloss': 0.0005848250202611535, 'f1': 1.0}
score end
42192
lvl
0.3
type
MCAR
num_run
1
class_full
finished
all finished
full run takes
9.08198410027557
hours
DONE
