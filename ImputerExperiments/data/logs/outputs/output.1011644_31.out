Run: 31
/cm/local/apps/slurm/var/spool/job1011644/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/725/725.pkl
working on 
../data/c/725/class_full_MAR_0.3_2
0.6671373844146729
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-23 12:45:23,328] A new study created in memory with name: no-name-70d01786-cf59-40ad-8dce-20221023f359
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-23 12:45:23,582] Trial 6 finished with value: 0.36333192404397235 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 6 with value: 0.36333192404397235.
running
[I 2024-10-23 12:45:23,797] Trial 5 finished with value: 0.21013284233690782 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 5 with value: 0.21013284233690782.
[I 2024-10-23 12:45:23,899] Trial 8 finished with value: 0.2308834130431679 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.21013284233690782.
running
running
[I 2024-10-23 12:45:24,042] Trial 7 finished with value: 0.2308834130431679 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.21013284233690782.
running
[I 2024-10-23 12:45:25,824] Trial 11 finished with value: 0.20733647383087597 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 519, 'weights': 'uniform'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:26,009] Trial 10 finished with value: 0.21013284233690782 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6267, 'weights': 'uniform'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:26,310] Trial 9 finished with value: 0.20875461597420425 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2829, 'weights': 'uniform'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:26,461] Trial 2 finished with value: 0.2090049227837983 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3369, 'weights': 'uniform'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:26,579] Trial 13 finished with value: 0.20968656062751928 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4668, 'weights': 'uniform'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:28,309] Trial 23 finished with value: 0.20822959149143547 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:29,007] Trial 21 finished with value: 0.2092130428529196 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5358, 'weights': 'distance'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:29,590] Trial 24 finished with value: 0.20818851744115485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 7, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:30,269] Trial 14 finished with value: 0.20867561120895 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'constant', 'n_nearest_features': 5, 'imputation_order': 'random'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:31,929] Trial 26 finished with value: 0.20822959149143547 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 7, 'imputation_order': 'descending'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:32,607] Trial 19 finished with value: 0.29904012617332976 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:32,877] Trial 12 finished with value: 0.27505740688536834 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 1, 'learning_rate': 0.09194404653643563, 'p_miss': 0.21658589625503372}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:33,121] Trial 25 finished with value: 0.3505994477141082 and parameters: {'model_name': 'GAIN', 'batch_size': 787, 'hint_rate': 0.7721088509241867, 'alpha': 37, 'iterations': 1, 'learning_rate': 0.009653772368893348, 'p_miss': 0.08565951238990757}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:33,671] Trial 22 finished with value: 0.3483901503925739 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.3373871528299748, 'alpha': 87, 'iterations': 4, 'learning_rate': 0.03169474458698935, 'p_miss': 0.1137610891304879}. Best is trial 11 with value: 0.20733647383087597.
[I 2024-10-23 12:45:33,812] Trial 15 finished with value: 0.3084904720441909 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 2, 'learning_rate': 0.0038152583818661773, 'p_miss': 0.11824421908950934}. Best is trial 11 with value: 0.20733647383087597.
running
running
[I 2024-10-23 12:45:35,751] Trial 30 finished with value: 0.34913932724310986 and parameters: {'model_name': 'GAIN', 'batch_size': 64, 'hint_rate': 0.813199578477535, 'alpha': 27, 'iterations': 3, 'learning_rate': 0.001753619834771435, 'p_miss': 0.24790024642948835}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:38,294] Trial 28 finished with value: 0.36745242599247824 and parameters: {'model_name': 'GAIN', 'batch_size': 891, 'hint_rate': 0.10310463740959758, 'alpha': 95, 'iterations': 10, 'learning_rate': 0.0003062117332599496, 'p_miss': 0.26367741299973074}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:40,901] Trial 18 finished with value: 0.3558463285785824 and parameters: {'model_name': 'GAIN', 'batch_size': 592, 'hint_rate': 0.9680856540510836, 'alpha': 5, 'iterations': 15, 'learning_rate': 0.0367681762158193, 'p_miss': 0.028929315025355583}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:44,093] Trial 3 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.5830685862836031, 'alpha': 79, 'iterations': 155, 'learning_rate': 0.036714753602626195, 'p_miss': 0.08548972104672638}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:45,385] Trial 17 finished with value: 0.2265655272484172 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'roman'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:51,089] Trial 36 finished with value: 0.2081885172206281 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:54,764] Trial 33 finished with value: 0.22522942495776138 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:55,048] Trial 38 finished with value: 0.2081885172206281 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:56,053] Trial 16 finished with value: 0.3006585907460827 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 8, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:57,702] Trial 35 finished with value: 0.22522942495776138 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:45:59,662] Trial 44 finished with value: 0.22447784009934385 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5, 'weights': 'distance'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:02,277] Trial 29 finished with value: 0.2775398337964833 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 36, 'learning_rate': 0.002174008017409014, 'p_miss': 0.2439595559508423}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:02,589] Trial 27 finished with value: 0.20774943315916322 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:19,078] Trial 1 finished with value: 0.3436497337963841 and parameters: {'model_name': 'GAIN', 'batch_size': 9, 'hint_rate': 0.7482546792633161, 'alpha': 56, 'iterations': 112, 'learning_rate': 0.00043440027297650245, 'p_miss': 0.2629878100464852}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:19,777] Trial 40 finished with value: 0.20821745218746085 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:24,340] Trial 41 finished with value: 0.20774943315916322 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:25,576] Trial 42 finished with value: 0.20819566069664885 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:27,215] Trial 50 finished with value: 0.20918701543474452 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 66, 'weights': 'uniform'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:27,839] Trial 52 finished with value: 0.3626437316970845 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 11 with value: 0.20733647383087597.
running
[I 2024-10-23 12:46:28,319] Trial 51 finished with value: 0.20673308876817834 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 352, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:31,520] Trial 54 finished with value: 0.20807673084905526 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1629, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:33,317] Trial 47 finished with value: 0.20841736099450708 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:34,647] Trial 55 finished with value: 0.20785650490207624 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1496, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:36,596] Trial 46 finished with value: 0.2080175000353009 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'ascending', 'sample_posterior': False}. Best is trial 51 with value: 0.20673308876817834.
[I 2024-10-23 12:46:36,733] Trial 56 finished with value: 0.20791997662494127 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1540, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
running
[I 2024-10-23 12:46:37,868] Trial 57 finished with value: 0.2076590134414257 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1265, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:39,740] Trial 59 finished with value: 0.20761820219606184 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1205, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:40,064] Trial 58 finished with value: 0.20760361681666203 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1186, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:41,131] Trial 60 finished with value: 0.20738760722131588 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 850, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:42,660] Trial 61 finished with value: 0.20724892480859697 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 555, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:43,593] Trial 62 finished with value: 0.20748150090869083 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1059, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:44,052] Trial 63 finished with value: 0.20733105647842306 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 704, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:45,490] Trial 64 finished with value: 0.2073333317760393 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 682, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:46,176] Trial 65 finished with value: 0.2072975528649577 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 471, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:47,757] Trial 66 finished with value: 0.20737879790453828 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 495, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:48,486] Trial 67 finished with value: 0.2071980408991309 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 434, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:49,142] Trial 68 finished with value: 0.20728193410013535 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 459, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:50,526] Trial 69 finished with value: 0.20731426101645928 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 443, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:51,534] Trial 70 finished with value: 0.20738184709422827 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 506, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:51,979] Trial 73 finished with value: 0.36333192404397235 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:52,165] Trial 71 finished with value: 0.21205079651625275 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 20, 'weights': 'distance'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:53,601] Trial 72 finished with value: 0.20924911429702736 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 57, 'weights': 'distance'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:46:56,058] Trial 76 finished with value: 0.2074199113316479 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 628, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:47:08,099] Trial 48 finished with value: 0.20819566069664885 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 5, 'imputation_order': 'arabic', 'sample_posterior': False}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 12:49:31,057] Trial 32 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.016002912052559937, 'alpha': 91, 'iterations': 1540, 'learning_rate': 0.00011069793617126428, 'p_miss': 0.010160903754978329}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 13:06:04,182] Trial 49 finished with value: 0.23333909024924906 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'arabic'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 13:09:11,164] Trial 53 finished with value: 0.22823740072869728 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 13:15:00,603] Trial 39 finished with value: 0.21174218450705004 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 6, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 13:17:20,218] Trial 37 finished with value: 0.209165622335167 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 13:17:40,651] Trial 34 finished with value: 0.21165912493160452 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 14:24:01,331] Trial 4 finished with value: 0.21459826859791656 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 1789, 'learning_rate': 0.0001352952931766539, 'p_miss': 0.13150463672698684}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 14:45:16,345] Trial 85 finished with value: 0.21354506137242976 and parameters: {'model_name': 'VAE', 'batch_size': 160, 'iterations': 427, 'learning_rate': 0.0007287798200153808, 'p_miss': 0.19062195323385528}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 14:45:18,268] Trial 86 finished with value: 0.2074033393328179 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 624, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 14:45:20,125] Trial 87 finished with value: 0.20731862509816418 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 703, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 14:45:21,989] Trial 88 finished with value: 0.20710546860016796 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 420, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 14:45:24,039] Trial 89 finished with value: 0.20713264706486179 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 426, 'weights': 'uniform'}. Best is trial 51 with value: 0.20673308876817834.
running
[I 2024-10-23 14:45:25,718] Trial 90 finished with value: 0.20661343615141012 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 279, 'weights': 'uniform'}. Best is trial 90 with value: 0.20661343615141012.
running
[I 2024-10-23 14:45:28,186] Trial 91 finished with value: 0.20858259129302753 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2100, 'weights': 'uniform'}. Best is trial 90 with value: 0.20661343615141012.
running
[I 2024-10-23 14:45:30,040] Trial 92 finished with value: 0.20664604086597485 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 296, 'weights': 'uniform'}. Best is trial 90 with value: 0.20661343615141012.
running
[I 2024-10-23 14:45:31,584] Trial 93 finished with value: 0.20642030638819878 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 210, 'weights': 'uniform'}. Best is trial 93 with value: 0.20642030638819878.
running
[I 2024-10-23 14:45:33,888] Trial 94 finished with value: 0.20889465432484053 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3179, 'weights': 'uniform'}. Best is trial 93 with value: 0.20642030638819878.
running
[I 2024-10-23 14:59:30,134] Trial 43 finished with value: 0.21279135911627928 and parameters: {'model_name': 'VAE', 'batch_size': 68, 'iterations': 2858, 'learning_rate': 0.0001796687608625925, 'p_miss': 0.18962564587223105}. Best is trial 93 with value: 0.20642030638819878.
running
[I 2024-10-23 14:59:32,050] Trial 96 finished with value: 0.20656889051569127 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 242, 'weights': 'uniform'}. Best is trial 93 with value: 0.20642030638819878.
running
[I 2024-10-23 14:59:33,654] Trial 97 finished with value: 0.2063178407687825 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 215, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 14:59:35,459] Trial 98 finished with value: 0.2065937273954886 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 186, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 14:59:36,769] Trial 99 finished with value: 0.20696446356637138 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 162, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 14:59:37,229] Trial 100 finished with value: 0.21013284233690782 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 14:59:38,783] Trial 101 finished with value: 0.206898279866363 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 135, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 14:59:40,405] Trial 102 finished with value: 0.20965523748885406 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 49, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 14:59:42,290] Trial 103 finished with value: 0.2128776942707959 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 17, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 16:39:49,834] Trial 31 finished with value: 0.3555532778165611 and parameters: {'model_name': 'GAIN', 'batch_size': 738, 'hint_rate': 0.05927585698254689, 'alpha': 84, 'iterations': 8552, 'learning_rate': 0.000106017302473077, 'p_miss': 0.018103046818510243}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:00:18,916] Trial 105 finished with value: 0.21085728742724447 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 368, 'learning_rate': 0.007589494296533983, 'p_miss': 0.2900834822752163}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:00:20,462] Trial 106 finished with value: 0.20661343615141012 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 279, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:00:22,697] Trial 107 finished with value: 0.20936852652340163 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4153, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:00:24,466] Trial 108 finished with value: 0.20636900048502263 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 222, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:00:25,942] Trial 109 finished with value: 0.20660263754885877 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 293, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:00:27,921] Trial 110 finished with value: 0.20742615018328708 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 971, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:00:30,010] Trial 111 finished with value: 0.21013284233690782 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 6536, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:00:31,573] Trial 112 finished with value: 0.20672418053542793 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 274, 'weights': 'distance'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:10,592] Trial 113 finished with value: 0.3520871490613247 and parameters: {'model_name': 'GAIN', 'batch_size': 264, 'hint_rate': 0.3873415615618835, 'alpha': 4, 'iterations': 26, 'learning_rate': 0.000914359492993647, 'p_miss': 0.0594804011955261}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:12,283] Trial 114 finished with value: 0.20676259296845312 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 231, 'weights': 'distance'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:14,437] Trial 115 finished with value: 0.20723525805154278 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 914, 'weights': 'distance'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:16,114] Trial 116 finished with value: 0.206822705096757 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 262, 'weights': 'distance'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:17,976] Trial 117 finished with value: 0.20673718045803507 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 259, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:19,468] Trial 118 finished with value: 0.20659778659324596 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 273, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:21,142] Trial 119 finished with value: 0.20726476924437948 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 794, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:23,224] Trial 120 finished with value: 0.20677231651633227 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 269, 'weights': 'distance'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:25,315] Trial 121 finished with value: 0.21013284233690782 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5531, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:26,291] Trial 122 finished with value: 0.3626437316970845 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:28,188] Trial 123 finished with value: 0.20680162300868954 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 260, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:29,690] Trial 124 finished with value: 0.20723754332128524 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 801, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:31,110] Trial 125 finished with value: 0.21303497311358943 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 16, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:32,897] Trial 126 finished with value: 0.20667722568823796 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 313, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:34,233] Trial 127 finished with value: 0.20657413069552785 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 289, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:36,034] Trial 128 finished with value: 0.2068715362097778 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 328, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:01:38,158] Trial 129 finished with value: 0.20864157574996617 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2319, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:10:07,144] Trial 74 finished with value: 0.21199781620347086 and parameters: {'model_name': 'VAE', 'batch_size': 67, 'iterations': 5834, 'learning_rate': 0.00011090848017961485, 'p_miss': 0.18815727744561395}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:10:08,993] Trial 131 finished with value: 0.2074033393328179 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 624, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:22:58,650] Trial 132 finished with value: 0.35913337212458857 and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.26243440966992393, 'alpha': 64, 'iterations': 573, 'learning_rate': 0.00898517959607119, 'p_miss': 0.1597132351172911}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:00,780] Trial 133 finished with value: 0.2075071352655337 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1025, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:02,404] Trial 134 finished with value: 0.20732797077395917 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 564, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:04,578] Trial 135 finished with value: 0.206790337625493 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 360, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:06,240] Trial 136 finished with value: 0.20657694801854953 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 239, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:07,824] Trial 137 finished with value: 0.20655085371165005 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 178, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:09,430] Trial 138 finished with value: 0.21114783548089727 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 20, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:11,695] Trial 139 finished with value: 0.20729309004995958 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 561, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:13,239] Trial 140 finished with value: 0.20648649638190922 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 238, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:14,745] Trial 141 finished with value: 0.20693052176840668 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 163, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:16,741] Trial 142 finished with value: 0.2073030358121699 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 729, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:18,535] Trial 143 finished with value: 0.20734575893780746 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 447, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:18,942] Trial 144 finished with value: 0.21013284233690782 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:20,415] Trial 145 finished with value: 0.2069483782322527 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 149, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:22,302] Trial 146 finished with value: 0.2071980408991309 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 434, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:24,130] Trial 147 finished with value: 0.20648644246748046 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 189, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:25,516] Trial 148 finished with value: 0.21847559441396508 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 7, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:27,348] Trial 149 finished with value: 0.20724695613532726 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 542, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:52,076] Trial 150 finished with value: 0.2270652779776306 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 6, 'learning_rate': 0.0205746664483787, 'p_miss': 0.29856529026839895}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:53,469] Trial 151 finished with value: 0.2065320594726193 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 180, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:55,267] Trial 152 finished with value: 0.2075302932962809 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 117, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:56,764] Trial 153 finished with value: 0.20703216804909985 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 397, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:23:58,865] Trial 154 finished with value: 0.20732211976319131 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 690, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:00,656] Trial 155 finished with value: 0.20654574418689253 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 184, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:02,164] Trial 156 finished with value: 0.20701301004086586 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 169, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:03,708] Trial 157 finished with value: 0.20634784834417147 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 203, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:06,154] Trial 158 finished with value: 0.20918734699350688 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3883, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:07,865] Trial 159 finished with value: 0.20660234000046734 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 182, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:09,331] Trial 160 finished with value: 0.20696862817100614 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 145, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:24,961] Trial 161 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.5759105952718087, 'alpha': 27, 'iterations': 53, 'learning_rate': 0.004473011618285838, 'p_miss': 0.046109175226660304}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:26,339] Trial 162 finished with value: 0.20737879790453828 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 495, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:28,107] Trial 163 finished with value: 0.20701301004086586 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 169, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:29,996] Trial 164 finished with value: 0.20703414222416824 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 400, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:31,407] Trial 165 finished with value: 0.21259721758828243 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 18, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:32,715] Trial 166 finished with value: 0.20691777073257853 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 336, 'weights': 'uniform'}. Best is trial 97 with value: 0.2063178407687825.
running
[I 2024-10-23 17:24:34,581] Trial 167 finished with value: 0.20630869615390587 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 208, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:36,391] Trial 168 finished with value: 0.2069149085475141 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 159, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:38,419] Trial 169 finished with value: 0.20739313879007043 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 595, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:39,987] Trial 170 finished with value: 0.2066832211129231 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 175, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:41,312] Trial 171 finished with value: 0.2069666173790239 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 389, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:43,295] Trial 172 finished with value: 0.20723248281425571 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 813, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:44,857] Trial 173 finished with value: 0.2073387635976184 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 520, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:45,713] Trial 174 finished with value: 0.3626437316970845 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:47,231] Trial 175 finished with value: 0.21988852382382945 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 8, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:48,822] Trial 176 finished with value: 0.2066580330346926 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 282, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:50,393] Trial 177 finished with value: 0.20664172350925353 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 256, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:51,821] Trial 178 finished with value: 0.2068837970029802 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 377, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:53,469] Trial 179 finished with value: 0.20654621404381962 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 188, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:24:55,166] Trial 180 finished with value: 0.20709894909759932 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 133, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:29:49,269] Trial 84 finished with value: 0.21299306011521352 and parameters: {'model_name': 'VAE', 'batch_size': 138, 'iterations': 4620, 'learning_rate': 0.0006053510148667214, 'p_miss': 0.16236580396821026}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:29:51,212] Trial 182 finished with value: 0.20740949118036006 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 612, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:29:52,920] Trial 183 finished with value: 0.20699606074253177 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 128, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:29:54,670] Trial 184 finished with value: 0.20729074886868268 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 469, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:29:56,841] Trial 185 finished with value: 0.20767093399781594 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1313, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:29:58,736] Trial 186 finished with value: 0.20667442666193167 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 263, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:30:00,367] Trial 187 finished with value: 0.20681581247909878 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 317, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:30:02,498] Trial 188 finished with value: 0.20829140009272434 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1833, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:30:03,986] Trial 189 finished with value: 0.20767738037053837 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 101, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:30:06,355] Trial 190 finished with value: 0.20874093146879386 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2584, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:30:07,592] Trial 191 finished with value: 0.2897447687105106 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:30:09,592] Trial 192 finished with value: 0.20699682113298926 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 398, 'weights': 'uniform'}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:33:47,299] Trial 181 finished with value: 0.21687322153451372 and parameters: {'model_name': 'VAE', 'batch_size': 243, 'iterations': 161, 'learning_rate': 0.001371038404817896, 'p_miss': 0.15791953757557345}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:52:13,729] Trial 193 finished with value: 0.3616182194231572 and parameters: {'model_name': 'GAIN', 'batch_size': 27, 'hint_rate': 0.21764728986263376, 'alpha': 67, 'iterations': 923, 'learning_rate': 0.07900336784592302, 'p_miss': 0.2271442602713759}. Best is trial 167 with value: 0.20630869615390587.
running
[I 2024-10-23 17:52:15,836] Trial 195 finished with value: 0.2062630070979327 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 213, 'weights': 'uniform'}. Best is trial 195 with value: 0.2062630070979327.
running
[I 2024-10-23 17:52:17,710] Trial 196 finished with value: 0.20658942984974066 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 245, 'weights': 'uniform'}. Best is trial 195 with value: 0.2062630070979327.
running
[I 2024-10-23 17:52:19,241] Trial 197 finished with value: 0.20630869615390587 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 208, 'weights': 'uniform'}. Best is trial 195 with value: 0.2062630070979327.
running
[I 2024-10-23 17:52:21,066] Trial 198 finished with value: 0.20666166051177823 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 252, 'weights': 'uniform'}. Best is trial 195 with value: 0.2062630070979327.
running
[I 2024-10-23 17:52:22,837] Trial 199 finished with value: 0.20726956251218817 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 475, 'weights': 'uniform'}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 17:57:18,565] Trial 194 finished with value: 0.3840582603593069 and parameters: {'model_name': 'GAIN', 'batch_size': 20, 'hint_rate': 0.2079525178104727, 'alpha': 67, 'iterations': 1038, 'learning_rate': 0.015120592052101544, 'p_miss': 0.21645886381146068}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 18:11:43,041] Trial 81 finished with value: 0.21250171721532923 and parameters: {'model_name': 'VAE', 'batch_size': 63, 'iterations': 6633, 'learning_rate': 0.0007930246068186318, 'p_miss': 0.18533297669652982}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 18:13:47,071] Trial 104 finished with value: 0.42992604144985114 and parameters: {'model_name': 'GAIN', 'batch_size': 21, 'hint_rate': 0.29094971527102736, 'alpha': 4, 'iterations': 9400, 'learning_rate': 0.008140273945548556, 'p_miss': 0.2963400659610404}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 18:48:18,633] Trial 77 finished with value: 0.21194266404455703 and parameters: {'model_name': 'VAE', 'batch_size': 54, 'iterations': 8409, 'learning_rate': 0.0001062854245575596, 'p_miss': 0.18658129484025254}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 18:50:41,966] Trial 78 finished with value: 0.21000164923751355 and parameters: {'model_name': 'VAE', 'batch_size': 56, 'iterations': 9871, 'learning_rate': 0.0007685446538263175, 'p_miss': 0.18082669333184095}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 18:55:06,084] Trial 45 finished with value: 0.21379947786035522 and parameters: {'model_name': 'VAE', 'batch_size': 75, 'iterations': 8207, 'learning_rate': 0.00011062220686054486, 'p_miss': 0.1818514994429487}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 18:55:27,888] Trial 83 finished with value: 0.21362835789156992 and parameters: {'model_name': 'VAE', 'batch_size': 64, 'iterations': 7193, 'learning_rate': 0.0006695058732154284, 'p_miss': 0.16627553461107683}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 18:56:44,430] Trial 20 finished with value: 0.21324982887245358 and parameters: {'model_name': 'VAE', 'batch_size': 70, 'iterations': 8571, 'learning_rate': 0.003184990549159191, 'p_miss': 0.05109346499627999}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 19:08:16,300] Trial 82 finished with value: 0.21318947391054804 and parameters: {'model_name': 'VAE', 'batch_size': 72, 'iterations': 7863, 'learning_rate': 0.0007041157779362661, 'p_miss': 0.18461188477115278}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 19:08:34,717] Trial 80 finished with value: 0.21312072327961368 and parameters: {'model_name': 'VAE', 'batch_size': 89, 'iterations': 8848, 'learning_rate': 0.0007388950560571218, 'p_miss': 0.18018911876832727}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 19:11:48,898] Trial 79 finished with value: 0.21480077786190108 and parameters: {'model_name': 'VAE', 'batch_size': 74, 'iterations': 8781, 'learning_rate': 0.0007167640658361427, 'p_miss': 0.1890614575848219}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 19:12:15,292] Trial 75 finished with value: 0.21178032522026857 and parameters: {'model_name': 'VAE', 'batch_size': 100, 'iterations': 9844, 'learning_rate': 0.00010849704947512269, 'p_miss': 0.1716569015984572}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 19:12:19,097] Trial 0 finished with value: 0.2150669922193195 and parameters: {'model_name': 'VAE', 'batch_size': 392, 'iterations': 8495, 'learning_rate': 0.0006324941755860454, 'p_miss': 0.060998708392648135}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 19:14:01,240] Trial 95 finished with value: 0.21341526341801337 and parameters: {'model_name': 'VAE', 'batch_size': 19, 'iterations': 7747, 'learning_rate': 0.007190878784186775, 'p_miss': 0.29936206839086055}. Best is trial 195 with value: 0.2062630070979327.
[I 2024-10-23 19:15:50,122] Trial 130 finished with value: 0.21653223980015285 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 8948, 'learning_rate': 0.012690875553485336, 'p_miss': 0.18470145612196248}. Best is trial 195 with value: 0.2062630070979327.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
5    0
6    0
7    0
dtype: int64
0.2062630070979327
{'model_name': 'KNNImputer', 'n_neighbors': 213, 'weights': 'uniform'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8857410479747865
Generation:   4%|▍         | 1/25 [00:16<06:37, 16.56s/it]Generation:  2
Best f1_score score: 0.8883885215210622
Generation:   8%|▊         | 2/25 [02:52<37:50, 98.73s/it]Generation:  3
Best f1_score score: 0.8893374228715125
Generation:  12%|█▏        | 3/25 [03:05<21:52, 59.65s/it]Generation:  4
Best f1_score score: 0.8893374228715125
Generation:  16%|█▌        | 4/25 [04:47<26:37, 76.07s/it]Generation:  5
Best f1_score score: 0.8893374228715125
Generation:  20%|██        | 5/25 [05:05<18:26, 55.34s/it]Generation:  6
Best f1_score score: 0.8893374228715125
Generation:  24%|██▍       | 6/25 [11:14<51:17, 161.96s/it]Generation:  7
Best f1_score score: 0.8893374228715125
Generation:  28%|██▊       | 7/25 [11:32<34:24, 114.72s/it]Generation:  8
Best f1_score score: 0.8893374228715125
Generation:  32%|███▏      | 8/25 [11:52<24:00, 84.76s/it] Generation:  9
Best f1_score score: 0.8893374228715125
Generation:  36%|███▌      | 9/25 [19:40<54:33, 204.56s/it]Generation:  10
Best f1_score score: 0.8893374228715125
Generation:  40%|████      | 10/25 [21:37<44:22, 177.48s/it]Generation:  11
Best f1_score score: 0.8893374228715125
Generation:  44%|████▍     | 11/25 [22:00<30:21, 130.08s/it]Generation:  12
Best f1_score score: 0.8893374228715125
Generation:  48%|████▊     | 12/25 [22:30<21:34, 99.58s/it] Generation:  13
Best f1_score score: 0.8893374228715125
Generation:  52%|█████▏    | 13/25 [22:45<14:48, 74.06s/it]Generation:  14
Best f1_score score: 0.8893374228715125
Generation:  56%|█████▌    | 14/25 [24:15<14:27, 78.86s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465a50310> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  15
Best f1_score score: 0.8893374228715125
Generation:  60%|██████    | 15/25 [26:07<14:48, 88.86s/it]Generation:  16
Best f1_score score: 0.8893374228715125
Generation:  64%|██████▍   | 16/25 [26:31<10:23, 69.24s/it]Generation:  17
Best f1_score score: 0.8893374228715125
Generation:  68%|██████▊   | 17/25 [27:53<09:46, 73.30s/it]Generation:  18
Best f1_score score: 0.8893374228715125
Generation:  72%|███████▏  | 18/25 [34:53<20:40, 177.27s/it]Generation:  19
Best f1_score score: 0.8893374228715125
Generation:  76%|███████▌  | 19/25 [35:38<13:46, 137.81s/it]Generation:  20
Best f1_score score: 0.8893374228715125
Generation:  80%|████████  | 20/25 [36:09<08:48, 105.60s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554659e5510> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  21
Best f1_score score: 0.8893374228715125
Generation:  84%|████████▍ | 21/25 [37:09<06:07, 91.79s/it] WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f0ae00> 

Generation:  22
Best f1_score score: 0.8893374228715125
Generation:  88%|████████▊ | 22/25 [47:23<12:26, 248.75s/it]Generation:  23
Best f1_score score: 0.8893374228715125
Generation:  92%|█████████▏| 23/25 [47:42<05:59, 179.67s/it]Generation:  24
Best f1_score score: 0.8893374228715125
Generation:  96%|█████████▌| 24/25 [49:41<02:41, 161.53s/it]Generation:  25
Best f1_score score: 0.8893374228715125
Generation: 100%|██████████| 25/25 [52:18<00:00, 160.27s/it]Generation: 100%|██████████| 25/25 [52:22<00:00, 125.70s/it]
2024-10-23 20:08:24,055 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37835' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'ndarray-29e6ff2bde8e4b068647abefebb2e614'} (stimulus_id='handle-worker-cleanup-1729739304.0551696')
Fitted
Pipeline(steps=[('mlpclassifier',
                 MLPClassifier(alpha=0.0029612081942, early_stopping=True,
                               hidden_layer_sizes=[381],
                               learning_rate='invscaling',
                               learning_rate_init=0.0121930954792,
                               n_iter_no_change=32))])
score start
train score: {'auroc': 0.9583137106183235, 'accuracy': 0.8943995116740424, 'balanced_accuracy': 0.8778623849483296, 'logloss': 0.2563987877010179, 'f1': 0.8870554223646939}
original test score: {'auroc': 0.9898990992216756, 'accuracy': 0.937156802928615, 'balanced_accuracy': 0.9280498288428416, 'logloss': 0.14983294430310762, 'f1': 0.9337822195706398}
imputed test score: {'auroc': 0.9480776901978125, 'accuracy': 0.8938377059182429, 'balanced_accuracy': 0.8766160977404782, 'logloss': 0.28005275177372857, 'f1': 0.8862619008116801}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145e0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4d90> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.8874137759300652
Generation:   4%|▍         | 1/25 [01:17<31:10, 77.95s/it]Generation:  2
Best f1_score score: 0.8895855619109099
Generation:   8%|▊         | 2/25 [02:11<24:29, 63.88s/it]Generation:  3
Best f1_score score: 0.8895855619109099
Generation:  12%|█▏        | 3/25 [03:53<29:42, 81.04s/it]Generation:  4
Best f1_score score: 0.8895855619109099
Generation:  16%|█▌        | 4/25 [04:20<20:54, 59.73s/it]Generation:  5
Best f1_score score: 0.8895855619109099
Generation:  20%|██        | 5/25 [12:00<1:08:04, 204.21s/it]Generation:  6
Best f1_score score: 0.8895855619109099
Generation:  24%|██▍       | 6/25 [13:06<49:45, 157.11s/it]  Generation:  7
Best f1_score score: 0.8895855619109099
Generation:  28%|██▊       | 7/25 [18:09<1:01:24, 204.71s/it]Generation:  8
Best f1_score score: 0.8895855619109099
Generation:  32%|███▏      | 8/25 [23:15<1:07:09, 237.05s/it]Generation:  9
Best f1_score score: 0.8895855619109099
Generation:  36%|███▌      | 9/25 [25:36<55:11, 206.95s/it]  Generation:  10
Best f1_score score: 0.8895855619109099
Generation:  40%|████      | 10/25 [34:28<1:16:52, 307.49s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554772845e0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554742426e0> 

Generation:  11
Best f1_score score: 0.8895855619109099
Generation:  44%|████▍     | 11/25 [44:34<1:33:03, 398.83s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d9b36d0> 

Generation:  12
Best f1_score score: 0.8895855619109099
Generation:  48%|████▊     | 12/25 [54:41<1:40:07, 462.14s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fe79690> 
 Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 732, in fit
    X, y = self._check_X_y(X, y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 1184, in _check_X_y
    X, y = super()._check_X_y(X, y, reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 578, in _check_X_y
    return self._validate_data(X, y, accept_sparse="csr", reset=reset)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BernoulliNB does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.8895855619109099
Generation:  52%|█████▏    | 13/25 [55:46<1:08:22, 341.84s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452dc1e10> 

Generation:  14
Best f1_score score: 0.8895855619109099
Generation:  56%|█████▌    | 14/25 [1:05:53<1:17:20, 421.88s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d2d030> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  15
Best f1_score score: 0.8895855619109099
Generation:  60%|██████    | 15/25 [1:06:18<50:21, 302.11s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bf48b80> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bbdb850> 

Generation:  16
Best f1_score score: 0.8895855619109099
Generation:  64%|██████▍   | 16/25 [1:16:24<59:03, 393.72s/it]Generation:  17
Best f1_score score: 0.8895855619109099
Generation:  68%|██████▊   | 17/25 [1:19:02<43:03, 322.93s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15544b502ce0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474058850> 

Generation:  18
Best f1_score score: 0.8895855619109099
Generation:  72%|███████▏  | 18/25 [1:29:09<47:37, 408.24s/it]Generation:  19
Best f1_score score: 0.8895855619109099
Generation:  76%|███████▌  | 19/25 [1:29:31<29:12, 292.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1553cb9303a0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bfa3370> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155451ef48b0> 

Generation:  20
Best f1_score score: 0.8895855619109099
Generation:  80%|████████  | 20/25 [1:39:37<32:11, 386.30s/it]Generation:  21
Best f1_score score: 0.8895855619109099
Generation:  84%|████████▍ | 21/25 [1:40:13<18:44, 281.13s/it]Generation:  22
Best f1_score score: 0.8895855619109099
Generation:  88%|████████▊ | 22/25 [1:41:15<10:46, 215.53s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fbfb940> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  23
Best f1_score score: 0.8895855619109099
Generation:  92%|█████████▏| 23/25 [1:43:37<06:27, 193.53s/it]Generation:  24
Best f1_score score: 0.8895855619109099
Generation:  96%|█████████▌| 24/25 [1:44:08<02:24, 144.50s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545275d930> 

Generation:  25
Best f1_score score: 0.8895855619109099
Generation: 100%|██████████| 25/25 [1:54:15<00:00, 283.39s/it]Generation: 100%|██████████| 25/25 [1:54:15<00:00, 274.22s/it]
2024-10-23 22:02:49,080 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:33253' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-422b2c53f5e51e71a00dd009dc06b86a', 'DataFrame-0e46d4f029b4e1dc1d231d2598af622a'} (stimulus_id='handle-worker-cleanup-1729746169.080711')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer()),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.0027002449771, early_stopping=True,
                               hidden_layer_sizes=[114, 114, 114],
                               learning_rate='invscaling',
                               learning_rate_init=0.0398744214135,
                               n_iter_no_change=32))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9534364098267719, 'accuracy': 0.8847855943842515, 'balanced_accuracy': 0.8862971694918862, 'logloss': 0.282961717883407, 'f1': 0.8816417525005571}
test score: {'auroc': 0.9483080643315903, 'accuracy': 0.8901769371568029, 'balanced_accuracy': 0.8903480968622735, 'logloss': 0.2858432849993323, 'f1': 0.8868996503710973}
original test score: {'auroc': 0.9898774533299112, 'accuracy': 0.9395973154362416, 'balanced_accuracy': 0.944220856125942, 'logloss': 0.16140580156228418, 'f1': 0.9380625760328152}
score end
725
lvl
0.3
type
MAR
num_run
2
class_full
finished
all finished
full run takes
9.29262381878164
hours
DONE
