Run: 4
/cm/local/apps/slurm/var/spool/job1028644/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/803/803.pkl
working on 
../data/c/803/class_full_MCAR_0.5_1
2.9298624992370605
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-28 11:19:44,031] A new study created in memory with name: no-name-b51ab281-1ce5-4811-a7fe-6daf41211955
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-28 11:19:44,289] Trial 1 finished with value: 0.20888911268928984 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.20888911268928984.
running
[I 2024-10-28 11:19:44,437] Trial 0 finished with value: 0.3796193509451758 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.20888911268928984.
running
[I 2024-10-28 11:19:44,617] Trial 15 finished with value: 0.3796193509451758 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 1 with value: 0.20888911268928984.
running
[I 2024-10-28 11:19:44,873] Trial 2 finished with value: 0.3796193509451758 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.20888911268928984.
[I 2024-10-28 11:19:44,983] Trial 13 finished with value: 0.20888911268928984 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 1 with value: 0.20888911268928984.
running
running
[I 2024-10-28 11:19:45,118] Trial 8 finished with value: 0.37266185892117887 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 1 with value: 0.20888911268928984.
running
[I 2024-10-28 11:19:45,332] Trial 10 finished with value: 0.3796193509451758 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.20888911268928984.
running
[I 2024-10-28 11:19:46,011] Trial 19 finished with value: 0.3796193509451758 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 1 with value: 0.20888911268928984.
running
[I 2024-10-28 11:19:47,953] Trial 7 finished with value: 0.20888911268928984 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4629, 'weights': 'uniform'}. Best is trial 1 with value: 0.20888911268928984.
running
[I 2024-10-28 11:19:54,160] Trial 5 finished with value: 0.20132581584867779 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.20132581584867779.
running
[I 2024-10-28 11:19:54,575] Trial 23 finished with value: 0.20855448051196818 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.20132581584867779.
running
[I 2024-10-28 11:19:54,899] Trial 18 finished with value: 0.22743884212641152 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'ascending'}. Best is trial 5 with value: 0.20132581584867779.
running
[I 2024-10-28 11:19:56,479] Trial 9 finished with value: 0.2296933613277629 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.20132581584867779.
running
[I 2024-10-28 11:19:56,791] Trial 4 finished with value: 0.22913532590341212 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'descending'}. Best is trial 5 with value: 0.20132581584867779.
[I 2024-10-28 11:19:56,898] Trial 17 finished with value: 0.22716384131569453 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'random'}. Best is trial 5 with value: 0.20132581584867779.
running
running
[I 2024-10-28 11:19:58,849] Trial 27 finished with value: 0.20883185676997193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 5 with value: 0.20132581584867779.
running
[I 2024-10-28 11:19:59,847] Trial 25 finished with value: 0.20132581584867779 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.20132581584867779.
running
[I 2024-10-28 11:20:00,112] Trial 26 finished with value: 0.20132581584867779 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'arabic'}. Best is trial 5 with value: 0.20132581584867779.
running
[I 2024-10-28 11:20:13,353] Trial 22 finished with value: 0.3367286437943737 and parameters: {'model_name': 'GAIN', 'batch_size': 14, 'hint_rate': 0.09108163822278152, 'alpha': 14, 'iterations': 2, 'learning_rate': 0.008768626985658045, 'p_miss': 0.2816362608532738}. Best is trial 5 with value: 0.20132581584867779.
running
[I 2024-10-28 11:20:15,370] Trial 31 finished with value: 0.12200034716879596 and parameters: {'model_name': 'VAE', 'batch_size': 730, 'iterations': 1, 'learning_rate': 0.001558683065665375, 'p_miss': 0.2507591794778848}. Best is trial 31 with value: 0.12200034716879596.
running
[I 2024-10-28 11:20:21,637] Trial 28 finished with value: 0.33786304832124575 and parameters: {'model_name': 'GAIN', 'batch_size': 86, 'hint_rate': 0.48388037042454757, 'alpha': 97, 'iterations': 7, 'learning_rate': 0.00031996369620148805, 'p_miss': 0.26776598464189016}. Best is trial 31 with value: 0.12200034716879596.
running
[I 2024-10-28 11:20:24,489] Trial 30 finished with value: 0.12430312981904093 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 5, 'learning_rate': 0.004730007610539041, 'p_miss': 0.07677033535965404}. Best is trial 31 with value: 0.12200034716879596.
running
[I 2024-10-28 11:20:29,360] Trial 37 finished with value: 0.12571014700361444 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1, 'learning_rate': 0.0030065130762409686, 'p_miss': 0.053898843637794305}. Best is trial 31 with value: 0.12200034716879596.
running
[I 2024-10-28 11:20:34,304] Trial 38 finished with value: 0.11835839557883268 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1, 'learning_rate': 0.0023357244711179385, 'p_miss': 0.042738389531350535}. Best is trial 38 with value: 0.11835839557883268.
running
[I 2024-10-28 11:20:39,240] Trial 39 finished with value: 0.12183172920045018 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1, 'learning_rate': 0.0016858639957856004, 'p_miss': 0.04074213541186375}. Best is trial 38 with value: 0.11835839557883268.
running
[I 2024-10-28 11:20:47,208] Trial 33 finished with value: 0.11882925851748911 and parameters: {'model_name': 'VAE', 'batch_size': 465, 'iterations': 7, 'learning_rate': 0.002611736737727167, 'p_miss': 0.028487446474179945}. Best is trial 38 with value: 0.11835839557883268.
running
[I 2024-10-28 11:21:17,553] Trial 32 finished with value: 0.11831829120294872 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 19, 'learning_rate': 0.0001766353934686274, 'p_miss': 0.20605666446554488}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:21:28,828] Trial 11 finished with value: 0.12322036076934013 and parameters: {'model_name': 'VAE', 'batch_size': 15, 'iterations': 20, 'learning_rate': 0.0007948498560940573, 'p_miss': 0.2706122594335981}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:21:53,906] Trial 24 finished with value: 0.12353551919778043 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 25, 'learning_rate': 0.0021510561032125936, 'p_miss': 0.09636204124386354}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:21:58,421] Trial 29 finished with value: 0.1329841432795051 and parameters: {'model_name': 'VAE', 'batch_size': 367, 'iterations': 20, 'learning_rate': 0.002761182398538983, 'p_miss': 0.05933120582856913}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:22:01,276] Trial 45 finished with value: 0.22881901594041482 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 237, 'weights': 'distance'}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:29:28,314] Trial 42 finished with value: 0.22347504021422968 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 140, 'learning_rate': 0.04921200571560107, 'p_miss': 0.1514741889565177}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:31:28,259] Trial 21 finished with value: 0.21287322477318912 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:31:32,500] Trial 43 finished with value: 0.21799257048666315 and parameters: {'model_name': 'VAE', 'batch_size': 681, 'iterations': 155, 'learning_rate': 0.06903084379295815, 'p_miss': 0.17214218793818392}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:31:32,775] Trial 48 finished with value: 0.11942431492139371 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1, 'learning_rate': 0.00016352425226257884, 'p_miss': 0.0291503661025809}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:33:12,564] Trial 20 finished with value: 0.2198064214139687 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:34:18,012] Trial 41 finished with value: 0.2749587342434466 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 269, 'learning_rate': 0.09650427337395998, 'p_miss': 0.011949166402235808}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:38:23,269] Trial 16 finished with value: 0.27719964887631954 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 330, 'learning_rate': 0.08044652240341822, 'p_miss': 0.04211044980143137}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:38:25,362] Trial 53 finished with value: 0.20868635987515768 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1388, 'weights': 'uniform'}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:44:59,081] Trial 44 finished with value: 0.21554561989009158 and parameters: {'model_name': 'VAE', 'batch_size': 193, 'iterations': 430, 'learning_rate': 0.07907534677463876, 'p_miss': 0.19278877028216537}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:49:28,606] Trial 46 finished with value: 0.2823444987817458 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 484, 'learning_rate': 0.06544692475993714, 'p_miss': 0.018533526708324248}. Best is trial 32 with value: 0.11831829120294872.
running
[I 2024-10-28 11:49:39,613] Trial 56 finished with value: 0.11773188538425901 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 3, 'learning_rate': 0.00011986203495427737, 'p_miss': 0.11239772876085363}. Best is trial 56 with value: 0.11773188538425901.
running
[I 2024-10-28 11:49:57,446] Trial 57 finished with value: 0.11563374930906734 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 4, 'learning_rate': 0.00010543235141093104, 'p_miss': 0.1177632896770218}. Best is trial 57 with value: 0.11563374930906734.
running
[I 2024-10-28 11:50:15,930] Trial 58 finished with value: 0.1183603932359859 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 5, 'learning_rate': 0.0001397481533888129, 'p_miss': 0.10879898612155982}. Best is trial 57 with value: 0.11563374930906734.
running
[I 2024-10-28 11:50:23,138] Trial 59 finished with value: 0.3629560873373663 and parameters: {'model_name': 'GAIN', 'batch_size': 8, 'hint_rate': 0.9420961915609012, 'alpha': 80, 'iterations': 3, 'learning_rate': 0.00012174139652710801, 'p_miss': 0.1175821299782674}. Best is trial 57 with value: 0.11563374930906734.
running
[I 2024-10-28 11:50:54,393] Trial 60 finished with value: 0.11545388414330801 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 9, 'learning_rate': 0.0002396935145111273, 'p_miss': 0.1262140154369796}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 11:57:23,237] Trial 14 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.07623734270962443, 'alpha': 22, 'iterations': 7357, 'learning_rate': 0.0011329758542684158, 'p_miss': 0.12698926573126976}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 11:58:10,539] Trial 62 finished with value: 0.11662434894657465 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 13, 'learning_rate': 0.000314816925930152, 'p_miss': 0.20382660710256065}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 11:58:12,868] Trial 63 finished with value: 0.22828738929122544 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5557, 'weights': 'distance'}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 11:59:25,435] Trial 64 finished with value: 0.12026137282504568 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 19, 'learning_rate': 0.00032902119116967615, 'p_miss': 0.2136542903965954}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:00:04,449] Trial 65 finished with value: 0.11611290809195145 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 11, 'learning_rate': 0.0002662706483744579, 'p_miss': 0.13908433249812077}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:02:32,773] Trial 66 finished with value: 0.11695844639945892 and parameters: {'model_name': 'VAE', 'batch_size': 53, 'iterations': 46, 'learning_rate': 0.0002586120131133199, 'p_miss': 0.1464420115604941}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:06:00,994] Trial 67 finished with value: 0.11847163505914231 and parameters: {'model_name': 'VAE', 'batch_size': 60, 'iterations': 52, 'learning_rate': 0.0003201612359479353, 'p_miss': 0.14646719544526082}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:06:31,007] Trial 68 finished with value: 0.11551476501666588 and parameters: {'model_name': 'VAE', 'batch_size': 48, 'iterations': 10, 'learning_rate': 0.0005683446791364542, 'p_miss': 0.13356321296135287}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:08:50,632] Trial 69 finished with value: 0.11609693981530393 and parameters: {'model_name': 'VAE', 'batch_size': 52, 'iterations': 40, 'learning_rate': 0.00043551368572519364, 'p_miss': 0.13537582978001644}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:08:51,280] Trial 70 finished with value: 0.37266185892117887 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:09:31,341] Trial 71 finished with value: 0.11758080147098345 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 11, 'learning_rate': 0.0005949921163782837, 'p_miss': 0.17032310258614655}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:10:19,707] Trial 72 finished with value: 0.12502676983554778 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 11, 'learning_rate': 0.0005904793548838721, 'p_miss': 0.13202455897594503}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:10:53,131] Trial 50 finished with value: 0.14458825324719293 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 722, 'learning_rate': 0.0001295719030110734, 'p_miss': 0.014528550783828201}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:11:54,440] Trial 74 finished with value: 0.36806574520216945 and parameters: {'model_name': 'GAIN', 'batch_size': 99, 'hint_rate': 0.9560929456150976, 'alpha': 54, 'iterations': 38, 'learning_rate': 0.0005908542641262463, 'p_miss': 0.08640198492056142}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:11:54,925] Trial 75 finished with value: 0.20888911268928984 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:12:17,154] Trial 73 finished with value: 0.1170865079971998 and parameters: {'model_name': 'VAE', 'batch_size': 103, 'iterations': 34, 'learning_rate': 0.0006397631489409975, 'p_miss': 0.08871563947148237}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:12:55,060] Trial 77 finished with value: 0.1199821197389435 and parameters: {'model_name': 'VAE', 'batch_size': 59, 'iterations': 11, 'learning_rate': 0.00026259957861525404, 'p_miss': 0.13415359313250907}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:17:45,006] Trial 76 finished with value: 0.11697887191288503 and parameters: {'model_name': 'VAE', 'batch_size': 60, 'iterations': 84, 'learning_rate': 0.00023716251230982837, 'p_miss': 0.13083991415630375}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:18:09,922] Trial 78 finished with value: 0.11704775705598292 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 102, 'learning_rate': 0.0002317068714563318, 'p_miss': 0.16230999024724407}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:18:48,978] Trial 80 finished with value: 0.12107504765427561 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 13, 'learning_rate': 0.000358590361896033, 'p_miss': 0.14562075099635066}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:19:22,644] Trial 40 finished with value: 0.21719807546610195 and parameters: {'model_name': 'VAE', 'batch_size': 758, 'iterations': 869, 'learning_rate': 0.0008174701568942042, 'p_miss': 0.01759729805324871}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:19:25,795] Trial 82 finished with value: 0.22830392900340976 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3136, 'weights': 'distance'}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:19:51,583] Trial 83 finished with value: 0.1247378498170146 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 7, 'learning_rate': 0.0004396607253409538, 'p_miss': 0.10629185507417999}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:20:10,451] Trial 12 finished with value: 0.37197036148737606 and parameters: {'model_name': 'GAIN', 'batch_size': 180, 'hint_rate': 0.055760782283565964, 'alpha': 64, 'iterations': 2247, 'learning_rate': 0.0009279916019817762, 'p_miss': 0.14104891753996127}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:21:08,655] Trial 84 finished with value: 0.12589446143634883 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 29, 'learning_rate': 0.00018828742397871364, 'p_miss': 0.1772787641491926}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:21:42,081] Trial 79 finished with value: 0.11889112814936802 and parameters: {'model_name': 'VAE', 'batch_size': 38, 'iterations': 67, 'learning_rate': 0.00045798248202304367, 'p_miss': 0.14692293822410218}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:21:54,208] Trial 81 finished with value: 0.11958998642434437 and parameters: {'model_name': 'VAE', 'batch_size': 152, 'iterations': 47, 'learning_rate': 0.0008870441766253803, 'p_miss': 0.11035265707665629}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:21:57,935] Trial 87 finished with value: 0.11592916820823758 and parameters: {'model_name': 'VAE', 'batch_size': 68, 'iterations': 4, 'learning_rate': 0.00022003645711214296, 'p_miss': 0.12703422849667612}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:22:05,072] Trial 89 finished with value: 0.11675553131954272 and parameters: {'model_name': 'VAE', 'batch_size': 74, 'iterations': 2, 'learning_rate': 0.00010202641357187952, 'p_miss': 0.1263300399295225}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:22:07,020] Trial 88 finished with value: 0.11850415143642742 and parameters: {'model_name': 'VAE', 'batch_size': 62, 'iterations': 4, 'learning_rate': 0.00022824830966098277, 'p_miss': 0.12548544606895087}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:22:13,835] Trial 90 finished with value: 0.12903597308312026 and parameters: {'model_name': 'VAE', 'batch_size': 84, 'iterations': 2, 'learning_rate': 0.00018790120077757838, 'p_miss': 0.12393186854905275}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:22:17,131] Trial 91 finished with value: 0.1305448720733688 and parameters: {'model_name': 'VAE', 'batch_size': 145, 'iterations': 2, 'learning_rate': 0.00010572065249974973, 'p_miss': 0.12122362291414734}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:22:17,508] Trial 93 finished with value: 0.3796193509451758 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:22:22,037] Trial 92 finished with value: 0.11753211344753985 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 2, 'learning_rate': 0.00010476121319763475, 'p_miss': 0.23291367412402605}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:22:35,752] Trial 95 finished with value: 0.3527788154347338 and parameters: {'model_name': 'GAIN', 'batch_size': 24, 'hint_rate': 0.5930684787375237, 'alpha': 34, 'iterations': 7, 'learning_rate': 0.0004406256837499124, 'p_miss': 0.16089470915927484}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:22:41,314] Trial 94 finished with value: 0.12817075000853356 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 7, 'learning_rate': 0.0004235407001725622, 'p_miss': 0.2258050540653195}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:23:23,187] Trial 85 finished with value: 0.11662792522669294 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 51, 'learning_rate': 0.00020574134998049362, 'p_miss': 0.18411867126133616}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:23:29,856] Trial 96 finished with value: 0.12613734807698532 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 16, 'learning_rate': 0.00016482511542123863, 'p_miss': 0.13616913101718672}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:23:43,034] Trial 6 finished with value: 0.3759833563132969 and parameters: {'model_name': 'GAIN', 'batch_size': 373, 'hint_rate': 0.22310540299543213, 'alpha': 31, 'iterations': 2274, 'learning_rate': 0.006331512319111096, 'p_miss': 0.07938318917281162}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:23:43,657] Trial 97 finished with value: 0.11831259727084846 and parameters: {'model_name': 'VAE', 'batch_size': 46, 'iterations': 18, 'learning_rate': 0.0002569592071802143, 'p_miss': 0.13795176148738225}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:23:47,778] Trial 99 finished with value: 0.1257739984160812 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 4, 'learning_rate': 0.007829850569723119, 'p_miss': 0.19254128639654514}. Best is trial 60 with value: 0.11545388414330801.
running
[I 2024-10-28 12:23:57,449] Trial 100 finished with value: 0.11543762683048889 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 4, 'learning_rate': 0.0001586666637812331, 'p_miss': 0.185336746837942}. Best is trial 100 with value: 0.11543762683048889.
running
[I 2024-10-28 12:24:14,919] Trial 98 finished with value: 0.1267888417526113 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 15, 'learning_rate': 0.00016551453381661514, 'p_miss': 0.0985675134917045}. Best is trial 100 with value: 0.11543762683048889.
running
[I 2024-10-28 12:24:17,095] Trial 102 finished with value: 0.11848947370269236 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 9, 'learning_rate': 0.0011737003000404243, 'p_miss': 0.18976354115728614}. Best is trial 100 with value: 0.11543762683048889.
running
[I 2024-10-28 12:24:18,899] Trial 86 finished with value: 0.12346481380964738 and parameters: {'model_name': 'VAE', 'batch_size': 62, 'iterations': 55, 'learning_rate': 0.0002085470550048037, 'p_miss': 0.12488791835043266}. Best is trial 100 with value: 0.11543762683048889.
running
[I 2024-10-28 12:24:21,475] Trial 105 finished with value: 0.20875434999290055 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 3, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 100 with value: 0.11543762683048889.
running
[I 2024-10-28 12:24:25,718] Trial 106 finished with value: 0.12580463558826677 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 3, 'learning_rate': 0.00014599563341873974, 'p_miss': 0.1581931684575417}. Best is trial 100 with value: 0.11543762683048889.
running
[I 2024-10-28 12:24:30,342] Trial 104 finished with value: 0.11954812452680341 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 6, 'learning_rate': 0.0010629194093157426, 'p_miss': 0.18397372534856155}. Best is trial 100 with value: 0.11543762683048889.
running
[I 2024-10-28 12:24:33,569] Trial 107 finished with value: 0.11262329398977103 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.00014070440646894833, 'p_miss': 0.2016379585141313}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:24:36,191] Trial 110 finished with value: 0.20862975061652614 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2689, 'weights': 'uniform'}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:24:42,585] Trial 108 finished with value: 0.11844710659956789 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 5, 'learning_rate': 0.00029130823076212734, 'p_miss': 0.18286075879551858}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:25:17,648] Trial 103 finished with value: 0.11791629328303777 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 27, 'learning_rate': 0.000159855817496043, 'p_miss': 0.19078822881348897}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:25:35,132] Trial 113 finished with value: 0.1215034663513824 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 4, 'learning_rate': 0.004609099286935725, 'p_miss': 0.20320266089559103}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:25:56,654] Trial 109 finished with value: 0.23527633958629085 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 24, 'learning_rate': 0.013066196098228707, 'p_miss': 0.10123107643167961}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:26:05,392] Trial 112 finished with value: 0.1217627928379728 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 25, 'learning_rate': 0.00035715087726243016, 'p_miss': 0.2036684067841245}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:26:16,470] Trial 116 finished with value: 0.12460127388274952 and parameters: {'model_name': 'VAE', 'batch_size': 77, 'iterations': 3, 'learning_rate': 0.00012726548598320604, 'p_miss': 0.20988504560411805}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:26:19,371] Trial 111 finished with value: 0.12135232651745609 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 24, 'learning_rate': 0.00029583169301975663, 'p_miss': 0.20894428882137497}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:26:36,850] Trial 115 finished with value: 0.11735926951909878 and parameters: {'model_name': 'VAE', 'batch_size': 18, 'iterations': 10, 'learning_rate': 0.0003713300858411414, 'p_miss': 0.21219678527824615}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:26:46,785] Trial 119 finished with value: 0.12848763507943012 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 3, 'learning_rate': 0.00019764381157940172, 'p_miss': 0.171283237748744}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:26:52,491] Trial 118 finished with value: 0.12182485245957012 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 9, 'learning_rate': 0.00020425069070910772, 'p_miss': 0.22961024889965279}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:26:53,113] Trial 121 finished with value: 0.37266185892117887 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:26:58,773] Trial 117 finished with value: 0.12045756205180758 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 10, 'learning_rate': 0.00019161995541538013, 'p_miss': 0.11961350856078484}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:27:01,002] Trial 123 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.6415005382179984, 'alpha': 0, 'iterations': 5, 'learning_rate': 0.00010686742163635501, 'p_miss': 0.15148000247447546}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:27:09,054] Trial 122 finished with value: 0.1184071477201402 and parameters: {'model_name': 'VAE', 'batch_size': 119, 'iterations': 4, 'learning_rate': 0.00010280518711532333, 'p_miss': 0.11647849833712547}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:27:30,609] Trial 125 finished with value: 0.28708610746824964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'descending', 'sample_posterior': True}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:29:41,575] Trial 126 finished with value: 0.12758732075647666 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 40, 'learning_rate': 0.00014344254393128738, 'p_miss': 0.13977140019583045}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 12:36:28,644] Trial 127 finished with value: 0.11969665422777556 and parameters: {'model_name': 'VAE', 'batch_size': 46, 'iterations': 113, 'learning_rate': 0.00025737158052151595, 'p_miss': 0.1430821196211438}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:05:37,147] Trial 36 finished with value: 0.21741186562756676 and parameters: {'model_name': 'VAE', 'batch_size': 645, 'iterations': 1414, 'learning_rate': 0.0007436756919606649, 'p_miss': 0.010662587982817912}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:05:45,048] Trial 129 finished with value: 0.11698702339698423 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 2, 'learning_rate': 0.00013981255184892738, 'p_miss': 0.16586167415454012}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:09:38,995] Trial 130 finished with value: 0.11958288662018343 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 68, 'learning_rate': 0.0002575319640971677, 'p_miss': 0.1531837561956149}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:12:54,108] Trial 47 finished with value: 0.24088969308408498 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 1936, 'learning_rate': 0.00023033585363132247, 'p_miss': 0.013058076251531513}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:13:15,354] Trial 132 finished with value: 0.11882795221946989 and parameters: {'model_name': 'VAE', 'batch_size': 76, 'iterations': 6, 'learning_rate': 0.00029626176800532034, 'p_miss': 0.12865262335217653}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:13:17,734] Trial 54 finished with value: 0.19771605799507252 and parameters: {'model_name': 'VAE', 'batch_size': 111, 'iterations': 1877, 'learning_rate': 0.00011210727714749102, 'p_miss': 0.21679062774820265}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:13:20,383] Trial 134 finished with value: 0.2086123340020723 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3469, 'weights': 'uniform'}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:20:43,964] Trial 131 finished with value: 0.12693286657242964 and parameters: {'model_name': 'VAE', 'batch_size': 70, 'iterations': 212, 'learning_rate': 0.00030164514340468913, 'p_miss': 0.13378088315936404}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:24:05,119] Trial 133 finished with value: 0.1215468168496652 and parameters: {'model_name': 'VAE', 'batch_size': 72, 'iterations': 174, 'learning_rate': 0.00016985028225893628, 'p_miss': 0.19927642268544202}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:25:16,376] Trial 135 finished with value: 0.15272896885979537 and parameters: {'model_name': 'VAE', 'batch_size': 68, 'iterations': 213, 'learning_rate': 0.0005014287998751956, 'p_miss': 0.13160166171826954}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:26:44,727] Trial 137 finished with value: 0.11955675289358843 and parameters: {'model_name': 'VAE', 'batch_size': 40, 'iterations': 52, 'learning_rate': 0.00023352486788416464, 'p_miss': 0.13013041644294732}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:27:01,265] Trial 35 finished with value: 0.21104071166967892 and parameters: {'model_name': 'VAE', 'batch_size': 862, 'iterations': 1859, 'learning_rate': 0.00017929815799924042, 'p_miss': 0.21229271191031335}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:27:01,604] Trial 136 finished with value: 0.13121565119523507 and parameters: {'model_name': 'VAE', 'batch_size': 49, 'iterations': 87, 'learning_rate': 0.0005048932865991646, 'p_miss': 0.13157224194800488}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:27:53,435] Trial 138 finished with value: 0.12167156730078518 and parameters: {'model_name': 'VAE', 'batch_size': 39, 'iterations': 44, 'learning_rate': 0.00022284952921844728, 'p_miss': 0.2209960360338437}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:30:43,208] Trial 140 finished with value: 0.11441997244926638 and parameters: {'model_name': 'VAE', 'batch_size': 90, 'iterations': 70, 'learning_rate': 0.0001295187517763045, 'p_miss': 0.11269366956513252}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:31:36,395] Trial 141 finished with value: 0.11699631606122182 and parameters: {'model_name': 'VAE', 'batch_size': 94, 'iterations': 80, 'learning_rate': 0.00012270511082824274, 'p_miss': 0.11220349125112915}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:31:36,702] Trial 143 finished with value: 0.11504503687438565 and parameters: {'model_name': 'VAE', 'batch_size': 87, 'iterations': 14, 'learning_rate': 0.0001217515986333305, 'p_miss': 0.1053873652159513}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:32:09,342] Trial 139 finished with value: 0.13202485380696122 and parameters: {'model_name': 'VAE', 'batch_size': 50, 'iterations': 94, 'learning_rate': 0.000125665692552377, 'p_miss': 0.1430759777119629}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:32:12,955] Trial 144 finished with value: 0.12138507202935538 and parameters: {'model_name': 'VAE', 'batch_size': 54, 'iterations': 13, 'learning_rate': 0.0001415786148878895, 'p_miss': 0.1430909181773769}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:32:22,325] Trial 145 finished with value: 0.12531756921664908 and parameters: {'model_name': 'VAE', 'batch_size': 130, 'iterations': 15, 'learning_rate': 0.0001426614628943824, 'p_miss': 0.07390274528609206}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:32:24,800] Trial 142 finished with value: 0.12282309653134182 and parameters: {'model_name': 'VAE', 'batch_size': 98, 'iterations': 87, 'learning_rate': 0.00013033533386982234, 'p_miss': 0.24083018931508063}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:33:05,230] Trial 146 finished with value: 0.11615942836502317 and parameters: {'model_name': 'VAE', 'batch_size': 121, 'iterations': 14, 'learning_rate': 0.00014592669311129427, 'p_miss': 0.10121972003024696}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:33:25,783] Trial 147 finished with value: 0.11806541826937245 and parameters: {'model_name': 'VAE', 'batch_size': 124, 'iterations': 15, 'learning_rate': 0.00015601754269965347, 'p_miss': 0.09039010456146993}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:33:26,356] Trial 151 finished with value: 0.37266185892117887 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:33:38,528] Trial 150 finished with value: 0.11626277227846397 and parameters: {'model_name': 'VAE', 'batch_size': 220, 'iterations': 8, 'learning_rate': 0.00016588799845818373, 'p_miss': 0.09066652579640536}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:33:55,044] Trial 152 finished with value: 0.12109736942679228 and parameters: {'model_name': 'VAE', 'batch_size': 172, 'iterations': 8, 'learning_rate': 0.00010114819211011887, 'p_miss': 0.10246803930587776}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:34:12,816] Trial 149 finished with value: 0.11914883812526719 and parameters: {'model_name': 'VAE', 'batch_size': 56, 'iterations': 32, 'learning_rate': 0.00016730250414357712, 'p_miss': 0.10424998695039661}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:34:14,342] Trial 154 finished with value: 0.3682902644188432 and parameters: {'model_name': 'GAIN', 'batch_size': 13, 'hint_rate': 0.3622244308799951, 'alpha': 94, 'iterations': 12, 'learning_rate': 0.00017897115891470628, 'p_miss': 0.08087661723471044}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:34:30,662] Trial 148 finished with value: 0.1259808448830171 and parameters: {'model_name': 'VAE', 'batch_size': 92, 'iterations': 33, 'learning_rate': 0.00010002609392716449, 'p_miss': 0.10649997127670431}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:34:33,265] Trial 155 finished with value: 0.3710760555301529 and parameters: {'model_name': 'GAIN', 'batch_size': 272, 'hint_rate': 0.35669814498896235, 'alpha': 83, 'iterations': 12, 'learning_rate': 0.000375407941085624, 'p_miss': 0.07188382923365073}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:34:40,520] Trial 156 finished with value: 0.12585220142048642 and parameters: {'model_name': 'VAE', 'batch_size': 323, 'iterations': 6, 'learning_rate': 0.0001148735266950115, 'p_miss': 0.09199585132520988}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:34:56,210] Trial 158 finished with value: 0.12438596498438821 and parameters: {'model_name': 'VAE', 'batch_size': 231, 'iterations': 6, 'learning_rate': 0.00011998829424234413, 'p_miss': 0.1147129586546837}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:34:59,452] Trial 157 finished with value: 0.1215596891359719 and parameters: {'model_name': 'VAE', 'batch_size': 344, 'iterations': 7, 'learning_rate': 0.00012317248742385546, 'p_miss': 0.1209552273869765}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:35:09,755] Trial 160 finished with value: 0.28546805787607293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:35:11,893] Trial 159 finished with value: 0.11752363847810336 and parameters: {'model_name': 'VAE', 'batch_size': 213, 'iterations': 8, 'learning_rate': 0.0002083504246204085, 'p_miss': 0.11483824430689382}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:35:12,600] Trial 161 finished with value: 0.28546805787607293 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 2, 'imputation_order': 'ascending', 'sample_posterior': True}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:36:09,384] Trial 162 finished with value: 0.11852171942033105 and parameters: {'model_name': 'VAE', 'batch_size': 153, 'iterations': 19, 'learning_rate': 0.00018371649320930692, 'p_miss': 0.29472869757661974}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:36:17,213] Trial 164 finished with value: 0.12024371157201522 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 20, 'learning_rate': 0.00018143824487614185, 'p_miss': 0.10930483012870092}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:36:22,641] Trial 165 finished with value: 0.12137000340989723 and parameters: {'model_name': 'VAE', 'batch_size': 82, 'iterations': 4, 'learning_rate': 0.00015498695209706674, 'p_miss': 0.19681758168975724}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:36:26,971] Trial 166 finished with value: 0.12418232710516308 and parameters: {'model_name': 'VAE', 'batch_size': 85, 'iterations': 3, 'learning_rate': 0.0001527890871914521, 'p_miss': 0.09471781524467}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:36:40,398] Trial 163 finished with value: 0.11988688831507036 and parameters: {'model_name': 'VAE', 'batch_size': 452, 'iterations': 20, 'learning_rate': 0.00018343116805726517, 'p_miss': 0.09564357621871614}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:36:55,107] Trial 168 finished with value: 0.11970101777453794 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 9, 'learning_rate': 0.00026990802682782264, 'p_miss': 0.12404795532830923}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:37:10,891] Trial 170 finished with value: 0.11591074124243857 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 5, 'learning_rate': 0.0002205667300014939, 'p_miss': 0.18045544246762163}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:37:26,402] Trial 171 finished with value: 0.1259921870933607 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 5, 'learning_rate': 0.018246514633359745, 'p_miss': 0.17918723924077085}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:37:28,019] Trial 172 finished with value: 0.2307580135155344 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 33, 'weights': 'distance'}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:37:35,757] Trial 173 finished with value: 0.1216612260474533 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 2, 'learning_rate': 0.00021933071983463437, 'p_miss': 0.17708805548550022}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:37:45,798] Trial 174 finished with value: 0.12240636937133816 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 3, 'learning_rate': 0.0003356951361195084, 'p_miss': 0.18723985598160758}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:38:07,672] Trial 51 finished with value: 0.20655184524503123 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 2285, 'learning_rate': 0.00011557392449600357, 'p_miss': 0.012043414348981266}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:38:23,073] Trial 176 finished with value: 0.12173318922278979 and parameters: {'model_name': 'VAE', 'batch_size': 113, 'iterations': 5, 'learning_rate': 0.00026764108504575597, 'p_miss': 0.13778131404735555}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 13:41:40,058] Trial 177 finished with value: 0.11729420555270768 and parameters: {'model_name': 'VAE', 'batch_size': 68, 'iterations': 54, 'learning_rate': 0.00020561438462221435, 'p_miss': 0.14830962324428093}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:19:52,600] Trial 124 finished with value: 0.2165309945776163 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 1984, 'learning_rate': 0.0001313030688595705, 'p_miss': 0.1160432578256042}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:20:23,049] Trial 49 finished with value: 0.21310839740578236 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 3163, 'learning_rate': 0.00010200456064135694, 'p_miss': 0.013005820583805481}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:20:49,095] Trial 180 finished with value: 0.11757514370159491 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 8, 'learning_rate': 0.0003763064424604069, 'p_miss': 0.19643316307868927}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:24:32,167] Trial 181 finished with value: 0.12674549019123668 and parameters: {'model_name': 'VAE', 'batch_size': 63, 'iterations': 65, 'learning_rate': 0.00024356607790046835, 'p_miss': 0.12362530007149437}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:24:44,280] Trial 182 finished with value: 0.12838043107271785 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 4, 'learning_rate': 0.00030293390772075064, 'p_miss': 0.12583100475684744}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:25:32,682] Trial 183 finished with value: 0.12381493895680082 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 14, 'learning_rate': 0.00021604792008470312, 'p_miss': 0.1562176442336288}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:25:35,482] Trial 179 finished with value: 0.12208488076845152 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 121, 'learning_rate': 0.00024076786827166487, 'p_miss': 0.12427429490109416}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:26:09,658] Trial 184 finished with value: 0.11975172628441204 and parameters: {'model_name': 'VAE', 'batch_size': 8, 'iterations': 11, 'learning_rate': 0.00014864478052024508, 'p_miss': 0.1368237785441193}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:26:12,357] Trial 185 finished with value: 0.11909097442177097 and parameters: {'model_name': 'VAE', 'batch_size': 22, 'iterations': 11, 'learning_rate': 0.00015544389960486321, 'p_miss': 0.16596367853133473}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:29:30,675] Trial 186 finished with value: 0.12461956314770103 and parameters: {'model_name': 'VAE', 'batch_size': 55, 'iterations': 62, 'learning_rate': 0.0003251697038853498, 'p_miss': 0.16611619018557314}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:29:38,445] Trial 187 finished with value: 0.12041483279751049 and parameters: {'model_name': 'VAE', 'batch_size': 57, 'iterations': 63, 'learning_rate': 0.00032211296977159354, 'p_miss': 0.12883482497709364}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:29:39,101] Trial 189 finished with value: 0.3796193509451758 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:29:46,286] Trial 188 finished with value: 0.12470785561600461 and parameters: {'model_name': 'VAE', 'batch_size': 61, 'iterations': 5, 'learning_rate': 0.00019344076027366186, 'p_miss': 0.08177123383026846}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:32:07,670] Trial 190 finished with value: 0.13545459536882035 and parameters: {'model_name': 'VAE', 'batch_size': 43, 'iterations': 42, 'learning_rate': 0.0016966284396904647, 'p_miss': 0.08581332090805266}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:32:11,503] Trial 191 finished with value: 0.11904403653685924 and parameters: {'model_name': 'VAE', 'batch_size': 44, 'iterations': 41, 'learning_rate': 0.0002774368160408459, 'p_miss': 0.11953393864992982}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:32:26,868] Trial 192 finished with value: 0.11793058562233942 and parameters: {'model_name': 'VAE', 'batch_size': 79, 'iterations': 6, 'learning_rate': 0.00042234058031971394, 'p_miss': 0.09982819396517553}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:32:37,502] Trial 194 finished with value: 0.11662570647584684 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 4, 'learning_rate': 0.00023568396866809247, 'p_miss': 0.13915723464361604}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:32:52,350] Trial 195 finished with value: 0.12228351659408113 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 4, 'learning_rate': 0.0001332759308965053, 'p_miss': 0.1503998833889249}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:33:02,784] Trial 196 finished with value: 0.12472703413045401 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 2, 'learning_rate': 0.0006838983856733799, 'p_miss': 0.1382551408251333}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:33:32,880] Trial 197 finished with value: 0.11679523426692288 and parameters: {'model_name': 'VAE', 'batch_size': 27, 'iterations': 9, 'learning_rate': 0.00021533929594887431, 'p_miss': 0.13097319964562693}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:34:05,458] Trial 198 finished with value: 0.11987865255815822 and parameters: {'model_name': 'VAE', 'batch_size': 26, 'iterations': 9, 'learning_rate': 0.00016853266145756428, 'p_miss': 0.13431640469776093}. Best is trial 107 with value: 0.11262329398977103.
running
[I 2024-10-28 14:34:28,344] Trial 199 finished with value: 0.12228120039752322 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 7, 'learning_rate': 0.00022608531213532044, 'p_miss': 0.14273903633434362}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 14:39:33,365] Trial 3 finished with value: 0.25687550020065797 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 3723, 'learning_rate': 0.0005060577673752368, 'p_miss': 0.012685368681050762}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 15:03:53,050] Trial 52 finished with value: 0.2320892681500478 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 3989, 'learning_rate': 0.00010656212491562568, 'p_miss': 0.19071958212063983}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 15:15:09,421] Trial 61 finished with value: 0.22191173963791763 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 4844, 'learning_rate': 0.00031439723879898905, 'p_miss': 0.1348038926754156}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 16:16:23,425] Trial 153 finished with value: 0.3686654053969576 and parameters: {'model_name': 'GAIN', 'batch_size': 90, 'hint_rate': 0.3581173163516286, 'alpha': 76, 'iterations': 7779, 'learning_rate': 0.00016760411050534746, 'p_miss': 0.10348860154858806}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 16:16:26,955] Trial 167 finished with value: 0.2449265931819779 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 4081, 'learning_rate': 0.00028151107056987576, 'p_miss': 0.09566001044887575}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 16:22:15,448] Trial 55 finished with value: 0.24501337573568974 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 6532, 'learning_rate': 0.00010497544967351581, 'p_miss': 0.11076375834658911}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:07:47,976] Trial 128 finished with value: 0.2165829104065459 and parameters: {'model_name': 'VAE', 'batch_size': 239, 'iterations': 6639, 'learning_rate': 0.00013413879727917194, 'p_miss': 0.130756429982626}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:09:46,976] Trial 34 finished with value: 0.21749532564371568 and parameters: {'model_name': 'VAE', 'batch_size': 528, 'iterations': 6722, 'learning_rate': 0.00021108146155855736, 'p_miss': 0.025261033557029605}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:18:27,806] Trial 120 finished with value: 0.24141112409978338 and parameters: {'model_name': 'VAE', 'batch_size': 6, 'iterations': 7662, 'learning_rate': 0.00013571146532447283, 'p_miss': 0.11634850529898258}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:20:58,612] Trial 114 finished with value: 0.26812717567745475 and parameters: {'model_name': 'VAE', 'batch_size': 3, 'iterations': 8109, 'learning_rate': 0.0003540612405138011, 'p_miss': 0.16739090192702702}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:25:43,151] Trial 178 finished with value: 0.2505686330618803 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 8394, 'learning_rate': 0.00023641455638280246, 'p_miss': 0.08319203235544786}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:26:08,954] Trial 169 finished with value: 0.23662198271665597 and parameters: {'model_name': 'VAE', 'batch_size': 7, 'iterations': 8361, 'learning_rate': 0.0002737078060282965, 'p_miss': 0.12345169782903717}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:27:12,701] Trial 101 finished with value: 0.23980197538164888 and parameters: {'model_name': 'VAE', 'batch_size': 9, 'iterations': 8481, 'learning_rate': 0.010772629928820462, 'p_miss': 0.19795677517663324}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:27:46,933] Trial 175 finished with value: 0.22913226738625786 and parameters: {'model_name': 'VAE', 'batch_size': 16, 'iterations': 8093, 'learning_rate': 0.00040741248616550234, 'p_miss': 0.08368443677688042}. Best is trial 107 with value: 0.11262329398977103.
[I 2024-10-28 17:28:43,443] Trial 193 finished with value: 0.22323719375577725 and parameters: {'model_name': 'VAE', 'batch_size': 32, 'iterations': 8741, 'learning_rate': 0.00011375363811256808, 'p_miss': 0.10158716126790404}. Best is trial 107 with value: 0.11262329398977103.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.11262329398977103
{'model_name': 'VAE', 'batch_size': 3, 'iterations': 3, 'learning_rate': 0.00014070440646894833, 'p_miss': 0.2016379585141313}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746a4b50> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fa6b0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  1
Best f1_score score: 0.5193236297254858
Generation:   4%|▍         | 1/25 [00:11<04:47, 12.00s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554747354b0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  2
Best f1_score score: 0.5193236297254858
Generation:   8%|▊         | 2/25 [00:29<05:54, 15.41s/it]Generation:  3
Best f1_score score: 0.5194934000242462
Generation:  12%|█▏        | 3/25 [00:48<06:15, 17.08s/it]Generation:  4
Best f1_score score: 0.5196620831885799
Generation:  16%|█▌        | 4/25 [01:07<06:13, 17.80s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746f9de0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  5
Best f1_score score: 0.5196620831885799
Generation:  20%|██        | 5/25 [01:35<07:10, 21.51s/it]Generation:  6
Best f1_score score: 0.5203933269411242
Generation:  24%|██▍       | 6/25 [01:56<06:41, 21.11s/it]Generation:  7
Best f1_score score: 0.5203933269411242
Generation:  28%|██▊       | 7/25 [02:24<07:04, 23.58s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554659e7400> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467c6ffd0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  8
Best f1_score score: 0.5203933269411242
Generation:  32%|███▏      | 8/25 [02:36<05:34, 19.70s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467f096f0> 
 l1_ratio must be specified when penalty is elasticnet. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1204, in fit
    raise ValueError("l1_ratio must be specified when penalty is elasticnet.")
ValueError: l1_ratio must be specified when penalty is elasticnet.

Generation:  9
Best f1_score score: 0.5203933269411242
Generation:  36%|███▌      | 9/25 [02:53<05:04, 19.01s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554657f0a30> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554654a1150> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  10
Best f1_score score: 0.5203933269411242
Generation:  40%|████      | 10/25 [03:01<03:52, 15.51s/it]Generation:  11
Best f1_score score: 0.5203933269411242
Generation:  44%|████▍     | 11/25 [03:14<03:27, 14.82s/it]Generation:  12
Best f1_score score: 0.5203933269411242
Generation:  48%|████▊     | 12/25 [03:37<03:44, 17.27s/it]Generation:  13
Best f1_score score: 0.5203933269411242
Generation:  52%|█████▏    | 13/25 [03:58<03:40, 18.40s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fbe20> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.5209049884812985
Generation:  56%|█████▌    | 14/25 [12:35<31:00, 169.10s/it]Generation:  15
Best f1_score score: 0.5209049884812985
Generation:  60%|██████    | 15/25 [14:03<24:05, 144.57s/it]Generation:  16
Best f1_score score: 0.5209049884812985
Generation:  64%|██████▍   | 16/25 [14:25<16:08, 107.62s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746fa590> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  17
Best f1_score score: 0.5209049884812985
Generation:  68%|██████▊   | 17/25 [14:57<11:20, 85.03s/it] Generation:  18
Best f1_score score: 0.5209049884812985
Generation:  72%|███████▏  | 18/25 [15:18<07:40, 65.73s/it]Generation:  19
Best f1_score score: 0.5209049884812985
Generation:  76%|███████▌  | 19/25 [15:35<05:06, 51.12s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465640820> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  20
Best f1_score score: 0.5209049884812985
Generation:  80%|████████  | 20/25 [16:15<03:59, 47.81s/it]Generation:  21
Best f1_score score: 0.5209049884812985
Generation:  84%|████████▍ | 21/25 [16:30<02:31, 37.78s/it]Generation:  22
Best f1_score score: 0.5209049884812985
Generation:  88%|████████▊ | 22/25 [16:44<01:32, 30.84s/it]Generation:  23
Best f1_score score: 0.5209049884812985
Generation:  92%|█████████▏| 23/25 [17:29<01:10, 35.10s/it]Generation:  24
Best f1_score score: 0.5209049884812985
Generation:  96%|█████████▌| 24/25 [17:49<00:30, 30.43s/it]Generation:  25
Best f1_score score: 0.5209049884812985
Generation: 100%|██████████| 25/25 [18:04<00:00, 25.68s/it]Generation: 100%|██████████| 25/25 [18:08<00:00, 43.53s/it]
2024-10-28 17:46:59,559 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:35721' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-582d7d183af8cedc419ecc82f5b1ea53', 'ndarray-153e64aa033277eb0f345ac9cae968f7'} (stimulus_id='handle-worker-cleanup-1730162819.5590804')
Fitted
Pipeline(steps=[('logisticregression',
                 LogisticRegression(C=0.2041080472192, class_weight='balanced',
                                    l1_ratio=0.8825206909984, max_iter=1000,
                                    n_jobs=1, penalty='elasticnet',
                                    solver='saga'))])
score start
train score: {'auroc': 0.5325708509071301, 'accuracy': 0.524986849026828, 'balanced_accuracy': 0.5253446595697455, 'logloss': 0.6914220296212137, 'f1': 0.5246580110602799}
original test score: {'auroc': 0.9540195840318464, 'accuracy': 0.8934081346423562, 'balanced_accuracy': 0.8890909557631512, 'logloss': 0.687665137535703, 'f1': 0.8917210179679007}
imputed test score: {'auroc': 0.5160021167656925, 'accuracy': 0.5007012622720898, 'balanced_accuracy': 0.49905318176343166, 'logloss': 0.69238875752823, 'f1': 0.49904477706201844}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x1554350145b0>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd4c70> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.8179131702890287
Generation:   4%|▍         | 1/25 [06:49<2:43:44, 409.34s/it]Generation:  2
Best f1_score score: 0.8179131702890287
Generation:   8%|▊         | 2/25 [09:32<1:41:26, 264.62s/it]Generation:  3
Best f1_score score: 0.8219349451958724
Generation:  12%|█▏        | 3/25 [12:19<1:20:43, 220.16s/it]Generation:  4
Best f1_score score: 0.8219349451958724
Generation:  16%|█▌        | 4/25 [15:07<1:09:44, 199.28s/it]Generation:  5
Best f1_score score: 0.822210541724447
Generation:  20%|██        | 5/25 [17:54<1:02:35, 187.78s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545ee18ee0> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  6
Best f1_score score: 0.822210541724447
Generation:  24%|██▍       | 6/25 [20:41<57:09, 180.52s/it]  Generation:  7
Best f1_score score: 0.822210541724447
Generation:  28%|██▊       | 7/25 [23:28<52:52, 176.22s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545791dfc0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  8
Best f1_score score: 0.822210541724447
Generation:  32%|███▏      | 8/25 [23:43<35:22, 124.83s/it]Generation:  9
Best f1_score score: 0.8233100440932454
Generation:  36%|███▌      | 9/25 [24:02<24:29, 91.85s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554552fc760> 
 Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/svm/_classes.py", line 302, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearSVC does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  10
Best f1_score score: 0.8233100440932454
Generation:  40%|████      | 10/25 [24:20<17:17, 69.17s/it]Generation:  11
Best f1_score score: 0.8233100440932454
Generation:  44%|████▍     | 11/25 [24:40<12:35, 53.98s/it]Generation:  12
Best f1_score score: 0.8233100440932454
Generation:  48%|████▊     | 12/25 [27:26<19:03, 87.94s/it]Generation:  13
Best f1_score score: 0.8233100440932454
Generation:  52%|█████▏    | 13/25 [28:03<14:31, 72.65s/it]Generation:  14
Best f1_score score: 0.8233100440932454
Generation:  56%|█████▌    | 14/25 [30:49<18:29, 100.83s/it]Generation:  15
Best f1_score score: 0.8233100440932454
Generation:  60%|██████    | 15/25 [31:04<12:30, 75.09s/it] Generation:  16
Best f1_score score: 0.8233100440932454
Generation:  64%|██████▍   | 16/25 [31:19<08:31, 56.87s/it]Generation:  17
Best f1_score score: 0.8233100440932454
Generation:  68%|██████▊   | 17/25 [32:11<07:23, 55.40s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155453bdf730> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  18
Best f1_score score: 0.8249455293788228
Generation:  72%|███████▏  | 18/25 [35:06<10:39, 91.29s/it]Generation:  19
Best f1_score score: 0.8249455293788228
Generation:  76%|███████▌  | 19/25 [37:54<11:26, 114.45s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15544173ad70> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  20
Best f1_score score: 0.8249455293788228
Generation:  80%|████████  | 20/25 [38:08<07:01, 84.37s/it] Generation:  21
Best f1_score score: 0.8249455293788228
Generation:  84%|████████▍ | 21/25 [42:18<08:55, 133.83s/it]Generation:  22
Best f1_score score: 0.8249455293788228
Generation:  88%|████████▊ | 22/25 [42:32<04:53, 97.96s/it] WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456dba260> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545f3f0d00> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.8249455293788228
Generation:  92%|█████████▏| 23/25 [43:06<02:37, 78.68s/it]Generation:  24
Best f1_score score: 0.8249455293788228
Generation:  96%|█████████▌| 24/25 [45:57<01:46, 106.43s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155453208b80> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  25
Best f1_score score: 0.8249455293788228
Generation: 100%|██████████| 25/25 [50:57<00:00, 164.60s/it]Generation: 100%|██████████| 25/25 [50:57<00:00, 122.30s/it]
2024-10-28 18:38:07,937 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nosplit_nbytes_bin = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/worker.py", line 1250, in heartbeat
    response = await retry_operation(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 459, in retry_operation
    return await retry(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 438, in retry
    return await coro()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1256, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1015, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 236, in read
    convert_stream_closed_error(self, e)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://127.0.0.1:47228 remote=tcp://127.0.0.1:33395>: Stream is closed
2024-10-28 18:38:07,938 - distributed.worker - ERROR - Failed to communicate with scheduler during heartbeat.
Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 225, in read
    frames_nosplit_nbytes_bin = await stream.read_bytes(fmt_size)
tornado.iostream.StreamClosedError: Stream is closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/worker.py", line 1250, in heartbeat
    response = await retry_operation(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 459, in retry_operation
    return await retry(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/utils_comm.py", line 438, in retry
    return await coro()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1256, in send_recv_from_rpc
    return await send_recv(comm=comm, op=key, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/core.py", line 1015, in send_recv
    response = await comm.read(deserializers=deserializers)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 236, in read
    convert_stream_closed_error(self, e)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/distributed/comm/tcp.py", line 142, in convert_stream_closed_error
    raise CommClosedError(f"in {obj}: {exc}") from exc
distributed.comm.core.CommClosedError: in <TCP (closed) ConnectionPool.heartbeat_worker local=tcp://127.0.0.1:47230 remote=tcp://127.0.0.1:33395>: Stream is closed
2024-10-28 18:38:07,946 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:35887' caused the cluster to lose scattered data, which can't be recovered: {'DataFrame-5f33735033a2108c2b61b938b00bb4d9', 'ndarray-582d7d183af8cedc419ecc82f5b1ea53'} (stimulus_id='handle-worker-cleanup-1730165887.946842')
Fitted
Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='median')),
                ('xgbclassifier',
                 XGBClassifier(base_score=None, booster=None, callbacks=None,
                               colsample_bylevel=None, colsample_bynode=None,
                               colsample_bytree=None, device=None,
                               early_stopping_rounds=None,
                               enable_categorical=False, eval_metric=None,
                               feature_types=None, gamma=0.1062219688972,
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None,
                               learning_rate=0.0769160733912, max_bin=None,
                               max_cat_threshold=None, max_cat_to_onehot=None,
                               max_delta_step=None, max_depth=7,
                               max_leaves=None, min_child_weight=3, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=100, n_jobs=1, nthread=1,
                               num_parallel_tree=None, ...))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9354775731482672, 'accuracy': 0.8470980185867087, 'balanced_accuracy': 0.8451015122085987, 'logloss': 0.32472634646447174, 'f1': 0.846002557594177}
test score: {'auroc': 0.911083993341666, 'accuracy': 0.8190743338008415, 'balanced_accuracy': 0.8160368696352726, 'logloss': 0.37383785444798934, 'f1': 0.8172623021171086}
original test score: {'auroc': 0.9799361416021467, 'accuracy': 0.9417952314165497, 'balanced_accuracy': 0.9410948733593585, 'logloss': 0.17251782943142105, 'f1': 0.9415133358864443}
score end
803
lvl
0.5
type
MCAR
num_run
1
class_full
finished
all finished
full run takes
7.310750836465094
hours
DONE
