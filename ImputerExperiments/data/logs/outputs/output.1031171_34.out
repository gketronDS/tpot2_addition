Run: 34
/cm/local/apps/slurm/var/spool/job1031171/slurm_script: line 27: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/847/847.pkl
working on 
../data/c/847/class_full_MNAR_0.1_2
1.1270713806152344
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-10-29 15:35:55,442] A new study created in memory with name: no-name-eee5de83-74e0-4b40-80f4-61addac964d3
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-10-29 15:35:55,882] Trial 7 finished with value: 0.38581319157335525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.38581319157335525.
running
[I 2024-10-29 15:35:56,021] Trial 13 finished with value: 0.38581319157335525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 7 with value: 0.38581319157335525.
[I 2024-10-29 15:35:56,125] Trial 5 finished with value: 0.19191191201789584 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.19191191201789584.
running
running
[I 2024-10-29 15:35:56,551] Trial 18 finished with value: 0.19191191201789584 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 5 with value: 0.19191191201789584.
running
[I 2024-10-29 15:35:59,845] Trial 9 finished with value: 0.19068856826825747 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4018, 'weights': 'uniform'}. Best is trial 9 with value: 0.19068856826825747.
running
[I 2024-10-29 15:36:00,432] Trial 19 finished with value: 0.19069045330917517 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4294, 'weights': 'uniform'}. Best is trial 9 with value: 0.19068856826825747.
running
[I 2024-10-29 15:36:01,147] Trial 15 finished with value: 0.1856287293211814 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 4258, 'weights': 'distance'}. Best is trial 15 with value: 0.1856287293211814.
running
[I 2024-10-29 15:36:01,371] Trial 16 finished with value: 0.18211259957215314 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2724, 'weights': 'uniform'}. Best is trial 16 with value: 0.18211259957215314.
running
[I 2024-10-29 15:36:01,562] Trial 23 finished with value: 0.38581319157335525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 16 with value: 0.18211259957215314.
running
[I 2024-10-29 15:36:01,944] Trial 24 finished with value: 0.19191191201789584 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 16 with value: 0.18211259957215314.
running
[I 2024-10-29 15:36:02,302] Trial 10 finished with value: 0.18190825707596303 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3222, 'weights': 'distance'}. Best is trial 10 with value: 0.18190825707596303.
running
[I 2024-10-29 15:36:04,726] Trial 21 finished with value: 0.18552320289517105 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3314, 'weights': 'uniform'}. Best is trial 10 with value: 0.18190825707596303.
running
[I 2024-10-29 15:36:14,961] Trial 14 finished with value: 0.2585030919777098 and parameters: {'model_name': 'VAE', 'batch_size': 185, 'iterations': 4, 'learning_rate': 0.0003886260339369142, 'p_miss': 0.18368467596248197}. Best is trial 10 with value: 0.18190825707596303.
running
[I 2024-10-29 15:36:20,235] Trial 12 finished with value: 0.15289273351731913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 12 with value: 0.15289273351731913.
running
[I 2024-10-29 15:36:29,915] Trial 27 finished with value: 0.19592679814573638 and parameters: {'model_name': 'VAE', 'batch_size': 167, 'iterations': 7, 'learning_rate': 0.04230372678629532, 'p_miss': 0.2311309324546505}. Best is trial 12 with value: 0.15289273351731913.
running
[I 2024-10-29 15:36:43,670] Trial 11 finished with value: 0.16586032973264203 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 6, 'imputation_order': 'roman'}. Best is trial 12 with value: 0.15289273351731913.
running
[I 2024-10-29 15:36:53,585] Trial 29 finished with value: 0.15289273351731913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 12 with value: 0.15289273351731913.
running
[I 2024-10-29 15:37:02,737] Trial 30 finished with value: 0.15289273351731913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 12 with value: 0.15289273351731913.
running
[I 2024-10-29 15:37:06,505] Trial 2 finished with value: 0.1947840902527857 and parameters: {'model_name': 'VAE', 'batch_size': 139, 'iterations': 43, 'learning_rate': 0.013909508877538963, 'p_miss': 0.10178434794413234}. Best is trial 12 with value: 0.15289273351731913.
running
[I 2024-10-29 15:37:06,725] Trial 6 finished with value: 0.1686884056237347 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 10, 'imputation_order': 'arabic'}. Best is trial 12 with value: 0.15289273351731913.
running
[I 2024-10-29 15:37:17,113] Trial 25 finished with value: 0.17094084588089925 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'roman'}. Best is trial 12 with value: 0.15289273351731913.
running
[I 2024-10-29 15:37:25,707] Trial 32 finished with value: 0.15288101881269428 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:37:30,301] Trial 1 finished with value: 0.15297519433814427 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:37:39,959] Trial 31 finished with value: 0.16547046326695963 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'mean', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:37:41,062] Trial 36 finished with value: 0.15289273351731913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:41:58,661] Trial 3 finished with value: 0.3785473237757423 and parameters: {'model_name': 'GAIN', 'batch_size': 12, 'hint_rate': 0.6137435029760518, 'alpha': 20, 'iterations': 368, 'learning_rate': 0.014002847610377353, 'p_miss': 0.16849794519914388}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:48:05,488] Trial 8 finished with value: 0.40273110060687245 and parameters: {'model_name': 'GAIN', 'batch_size': 378, 'hint_rate': 0.809229487459578, 'alpha': 97, 'iterations': 523, 'learning_rate': 0.007474632761482801, 'p_miss': 0.23319479460592613}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:48:21,449] Trial 42 finished with value: 0.1738096481430524 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:48:47,178] Trial 22 finished with value: 0.38219567387994624 and parameters: {'model_name': 'GAIN', 'batch_size': 110, 'hint_rate': 0.36667566839477117, 'alpha': 18, 'iterations': 662, 'learning_rate': 0.00949984142969783, 'p_miss': 0.1446631462945761}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:50:24,795] Trial 4 finished with value: 0.20369208901305744 and parameters: {'model_name': 'VAE', 'batch_size': 34, 'iterations': 451, 'learning_rate': 0.0001796178590455739, 'p_miss': 0.2804879435407369}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:51:20,095] Trial 34 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.2175370328225858, 'alpha': 45, 'iterations': 3915, 'learning_rate': 0.00013358821819857498, 'p_miss': 0.027390400837466078}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:51:44,046] Trial 46 finished with value: 0.15289273351731913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:52:08,053] Trial 47 finished with value: 0.15305502055080247 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:52:32,600] Trial 48 finished with value: 0.1542351224497124 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 8, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:52:53,285] Trial 35 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.43294282110977783, 'alpha': 84, 'iterations': 4409, 'learning_rate': 0.00015560213755916517, 'p_miss': 0.015193619627692556}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:53:13,036] Trial 33 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.5997686185056254, 'alpha': 10, 'iterations': 4825, 'learning_rate': 0.00010089930405944536, 'p_miss': 0.011999787122443317}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 15:56:18,169] Trial 17 finished with value: 0.1993801420770592 and parameters: {'model_name': 'VAE', 'batch_size': 5, 'iterations': 651, 'learning_rate': 0.0014291375117832772, 'p_miss': 0.041774092991411715}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:02:29,413] Trial 37 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 3, 'hint_rate': 0.07744366059520957, 'alpha': 48, 'iterations': 6775, 'learning_rate': 0.00011315313974110938, 'p_miss': 0.011775100896675827}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:04:53,224] Trial 40 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.24695690585255892, 'alpha': 0, 'iterations': 7772, 'learning_rate': 0.0001083391928822611, 'p_miss': 0.01961548561049828}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:07:23,253] Trial 39 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.9070968336422187, 'alpha': 29, 'iterations': 8431, 'learning_rate': 0.0001298333384462321, 'p_miss': 0.015427377798139547}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:07:26,034] Trial 28 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.3575315986051517, 'alpha': 27, 'iterations': 9037, 'learning_rate': 0.058872023480582555, 'p_miss': 0.038184614853805046}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:07:35,031] Trial 38 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.14145461736721054, 'alpha': 11, 'iterations': 8568, 'learning_rate': 0.00014421681446173622, 'p_miss': 0.015502811644630937}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:07:58,493] Trial 56 finished with value: 0.15289273351731913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:08:02,176] Trial 41 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.0650075265285992, 'alpha': 100, 'iterations': 7611, 'learning_rate': 0.00019364093469172592, 'p_miss': 0.03878989240270203}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:08:07,142] Trial 57 finished with value: 0.15289273351731913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:08:26,622] Trial 58 finished with value: 0.1530487156643822 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:08:29,786] Trial 59 finished with value: 0.1530487156643822 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'ascending'}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:13:40,356] Trial 20 finished with value: 0.19464956165106723 and parameters: {'model_name': 'VAE', 'batch_size': 114, 'iterations': 2336, 'learning_rate': 0.015261913226573104, 'p_miss': 0.09521185507690139}. Best is trial 32 with value: 0.15288101881269428.
running
[I 2024-10-29 16:27:04,766] Trial 26 finished with value: 0.14991777522565836 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 26 with value: 0.14991777522565836.
running
[I 2024-10-29 16:27:26,326] Trial 0 finished with value: 0.14955948774315536 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 0 with value: 0.14955948774315536.
running
[I 2024-10-29 16:35:52,015] Trial 43 finished with value: 0.14927874525445753 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:35:58,339] Trial 44 finished with value: 0.15021395853289954 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:36:31,578] Trial 49 finished with value: 0.1508410020401535 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:37:00,776] Trial 51 finished with value: 0.14951023670301208 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:37:03,861] Trial 50 finished with value: 0.1502891526954448 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:37:13,248] Trial 45 finished with value: 0.14929221243135687 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:39:23,440] Trial 52 finished with value: 0.14931564290500574 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:43:59,193] Trial 53 finished with value: 0.14973861550937087 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:45:27,974] Trial 54 finished with value: 0.14941882940039425 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 43 with value: 0.14927874525445753.
running
[I 2024-10-29 16:47:39,330] Trial 55 finished with value: 0.14896476727840624 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 16:47:52,553] Trial 60 finished with value: 0.15083715901852193 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 16:50:07,715] Trial 61 finished with value: 0.15000464640943337 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 16:50:11,647] Trial 62 finished with value: 0.14908129076962573 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 16:54:33,619] Trial 63 finished with value: 0.14917945458251505 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'ascending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:08:02,159] Trial 64 finished with value: 0.14898283429322473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:08:21,097] Trial 65 finished with value: 0.1497859079617166 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:08:22,258] Trial 81 finished with value: 0.25362750778795573 and parameters: {'model_name': 'VAE', 'batch_size': 731, 'iterations': 1, 'learning_rate': 0.0014939461844189126, 'p_miss': 0.2948293761062364}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:08:22,540] Trial 82 finished with value: 0.38581319157335525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:08:24,549] Trial 83 finished with value: 0.16425169003857026 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 260, 'weights': 'distance'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:09:31,570] Trial 84 finished with value: 0.2263267889230039 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'most_frequent', 'n_nearest_features': 14, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:17:37,120] Trial 66 finished with value: 0.15031293332380494 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:17:48,458] Trial 67 finished with value: 0.1491657282560411 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:18:21,516] Trial 68 finished with value: 0.1500809021873965 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:18:34,673] Trial 69 finished with value: 0.14988690202406457 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:18:51,328] Trial 70 finished with value: 0.1491347660857758 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:19:11,072] Trial 71 finished with value: 0.1493510279773448 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:20:57,899] Trial 72 finished with value: 0.14953714669241228 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:21:02,514] Trial 92 finished with value: 0.19797318615095064 and parameters: {'model_name': 'VAE', 'batch_size': 41, 'iterations': 47, 'learning_rate': 0.09584276846693793, 'p_miss': 0.0807591162615134}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:21:30,166] Trial 93 finished with value: 0.15282523551718347 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'descending', 'sample_posterior': False}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:26:06,338] Trial 73 finished with value: 0.15012513831903967 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:26:06,611] Trial 95 finished with value: 0.19069045330917517 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:27:43,241] Trial 74 finished with value: 0.15064458151292243 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:29:54,496] Trial 75 finished with value: 0.1499703332960694 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:29:56,453] Trial 98 finished with value: 0.17093671428207008 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1025, 'weights': 'distance'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:30:06,363] Trial 76 finished with value: 0.15004163605523693 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:32:17,360] Trial 77 finished with value: 0.14922119136541453 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:32:33,957] Trial 78 finished with value: 0.1489839789731084 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:32:40,333] Trial 101 finished with value: 0.17132454028535143 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:32:56,318] Trial 102 finished with value: 0.17132454028535143 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:36:55,930] Trial 79 finished with value: 0.14917112993132772 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:51:20,723] Trial 104 finished with value: 0.1605554140570326 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 4, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:51:25,170] Trial 80 finished with value: 0.14958516176573405 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:51:48,575] Trial 105 finished with value: 0.16260089486225499 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 17:52:27,967] Trial 85 finished with value: 0.14945443928928978 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 14, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:00:18,491] Trial 86 finished with value: 0.15000119744215995 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:00:58,654] Trial 87 finished with value: 0.1496671926896564 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:01:39,655] Trial 89 finished with value: 0.1495899743636308 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:01:40,613] Trial 88 finished with value: 0.15012201064886907 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:02:00,397] Trial 112 finished with value: 0.2553414735149869 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 9, 'learning_rate': 0.0005864267192790247, 'p_miss': 0.21786469457113292}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:02:00,867] Trial 114 finished with value: 0.19069045330917517 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:02:02,140] Trial 90 finished with value: 0.14938089844518593 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:02:04,490] Trial 115 finished with value: 0.1755855403443038 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1559, 'weights': 'uniform'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:02:25,515] Trial 91 finished with value: 0.1498061983924762 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:02:33,035] Trial 113 finished with value: 0.21178941785809666 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 122, 'learning_rate': 0.0006359152396344547, 'p_miss': 0.13358210326369968}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:04:25,170] Trial 94 finished with value: 0.15017618320022594 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:08:37,690] Trial 96 finished with value: 0.14985831302031144 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:10:41,145] Trial 97 finished with value: 0.15000082667387485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:11:40,099] Trial 122 finished with value: 0.22098143854477756 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:13:20,173] Trial 99 finished with value: 0.14968600892028966 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 55 with value: 0.14896476727840624.
running
[I 2024-10-29 18:13:33,365] Trial 100 finished with value: 0.14895991848338452 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 13, 'imputation_order': 'arabic'}. Best is trial 100 with value: 0.14895991848338452.
running
[I 2024-10-29 18:15:41,306] Trial 103 finished with value: 0.14993618885985835 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 13, 'imputation_order': 'roman'}. Best is trial 100 with value: 0.14895991848338452.
running
[I 2024-10-29 18:33:52,193] Trial 106 finished with value: 0.14913019552414625 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 100 with value: 0.14895991848338452.
running
[I 2024-10-29 18:34:16,552] Trial 107 finished with value: 0.14981863450350233 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 100 with value: 0.14895991848338452.
running
[I 2024-10-29 18:34:28,958] Trial 108 finished with value: 0.15004798037992773 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'descending'}. Best is trial 100 with value: 0.14895991848338452.
running
[I 2024-10-29 18:35:10,446] Trial 109 finished with value: 0.14964803609153 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 100 with value: 0.14895991848338452.
running
[I 2024-10-29 18:40:51,483] Trial 118 finished with value: 0.1489487883245509 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 118 with value: 0.1489487883245509.
running
[I 2024-10-29 18:41:23,022] Trial 119 finished with value: 0.14871757906799937 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 119 with value: 0.14871757906799937.
running
[I 2024-10-29 18:43:02,414] Trial 110 finished with value: 0.14954441872873425 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 119 with value: 0.14871757906799937.
running
[I 2024-10-29 18:43:35,685] Trial 111 finished with value: 0.14983115659570964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 119 with value: 0.14871757906799937.
running
[I 2024-10-29 18:44:02,465] Trial 123 finished with value: 0.1511388081690145 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 119 with value: 0.14871757906799937.
running
[I 2024-10-29 18:45:00,358] Trial 116 finished with value: 0.14873632236594622 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 119 with value: 0.14871757906799937.
running
[I 2024-10-29 18:45:04,651] Trial 117 finished with value: 0.14900244378427163 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 13, 'imputation_order': 'random'}. Best is trial 119 with value: 0.14871757906799937.
running
[I 2024-10-29 18:45:59,835] Trial 125 finished with value: 0.1523375180080342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 9, 'imputation_order': 'random'}. Best is trial 119 with value: 0.14871757906799937.
running
[I 2024-10-29 18:46:56,909] Trial 120 finished with value: 0.1493005591742958 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 119 with value: 0.14871757906799937.
running
[I 2024-10-29 18:47:23,889] Trial 121 finished with value: 0.14835853224923276 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 18:47:31,518] Trial 139 finished with value: 0.16574013719401476 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 18:47:47,884] Trial 140 finished with value: 0.16788246485128203 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 18:55:51,533] Trial 124 finished with value: 0.15012512549381338 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 18:58:11,515] Trial 126 finished with value: 0.14925106789965245 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:17:07,133] Trial 127 finished with value: 0.15032080305522913 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:17:07,509] Trial 145 finished with value: 0.38581319157335525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:17:30,850] Trial 128 finished with value: 0.14879242929927874 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:17:44,015] Trial 129 finished with value: 0.15029053684560018 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:18:48,764] Trial 130 finished with value: 0.14933819104049123 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:20:27,333] Trial 132 finished with value: 0.14956504865674355 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:22:19,591] Trial 133 finished with value: 0.1484317846141284 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:22:42,535] Trial 134 finished with value: 0.14996748218863706 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:22:45,442] Trial 152 finished with value: 0.1856287293211814 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 5199, 'weights': 'distance'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:22:46,119] Trial 153 finished with value: 0.3593360760850056 and parameters: {'model_name': 'GAIN', 'batch_size': 829, 'hint_rate': 0.7410223332436481, 'alpha': 72, 'iterations': 1, 'learning_rate': 0.004238187942525951, 'p_miss': 0.2643927981323233}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:23:29,926] Trial 135 finished with value: 0.1495368154117282 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:24:09,793] Trial 131 finished with value: 0.15029412137046122 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 14, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:24:32,021] Trial 137 finished with value: 0.14924238971041254 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:25:15,077] Trial 138 finished with value: 0.14847716722507837 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:26:41,824] Trial 136 finished with value: 0.14907078387892964 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:26:51,865] Trial 141 finished with value: 0.1487630591139568 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:27:38,854] Trial 142 finished with value: 0.14900611467018116 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:35:22,178] Trial 143 finished with value: 0.14942138729922566 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:36:46,258] Trial 162 finished with value: 0.23246462837468473 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random', 'sample_posterior': True}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:38:38,275] Trial 144 finished with value: 0.14955873445822615 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:58:32,054] Trial 146 finished with value: 0.1492218273054368 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 19:58:32,906] Trial 147 finished with value: 0.14909565633574035 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:00:36,115] Trial 148 finished with value: 0.14896820066431724 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:02:21,710] Trial 149 finished with value: 0.14920797410913808 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:03:16,077] Trial 150 finished with value: 0.14849735331865777 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:05:16,787] Trial 151 finished with value: 0.1483998476022153 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:05:32,318] Trial 154 finished with value: 0.14898985910864332 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:06:46,383] Trial 155 finished with value: 0.14854718238528344 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:07:11,117] Trial 156 finished with value: 0.14868249173240788 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:07:49,963] Trial 157 finished with value: 0.1486037472279437 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:08:07,074] Trial 158 finished with value: 0.14887804957765902 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:08:28,294] Trial 175 finished with value: 0.1526354381248974 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:09:42,208] Trial 159 finished with value: 0.1497324947676014 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:10:21,514] Trial 160 finished with value: 0.1487296282313499 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 121 with value: 0.14835853224923276.
running
[I 2024-10-29 20:10:53,029] Trial 161 finished with value: 0.14823244460361557 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:14:35,103] Trial 163 finished with value: 0.14990078566117815 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:16:24,042] Trial 164 finished with value: 0.1491746293825567 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:16:30,214] Trial 181 finished with value: 0.19598352897804394 and parameters: {'model_name': 'VAE', 'batch_size': 62, 'iterations': 18, 'learning_rate': 0.029855361306955607, 'p_miss': 0.20928382208814966}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:36:53,637] Trial 165 finished with value: 0.15026953532822807 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:37:13,217] Trial 183 finished with value: 0.37094730347913496 and parameters: {'model_name': 'GAIN', 'batch_size': 361, 'hint_rate': 0.9756700228846529, 'alpha': 66, 'iterations': 193, 'learning_rate': 0.0030945847768776465, 'p_miss': 0.06686461770770645}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:41:17,117] Trial 168 finished with value: 0.14952439731521583 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:41:47,290] Trial 166 finished with value: 0.1495548698746607 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'ascending'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:42:30,075] Trial 169 finished with value: 0.1494208986693718 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:44:20,744] Trial 167 finished with value: 0.14942896404079303 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:45:32,398] Trial 173 finished with value: 0.15078776399918342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:46:35,064] Trial 174 finished with value: 0.14910646212473505 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:48:25,738] Trial 170 finished with value: 0.14950647928728955 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:48:26,344] Trial 191 finished with value: 0.38581319157335525 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:48:33,941] Trial 171 finished with value: 0.14944772079393712 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:48:38,296] Trial 193 finished with value: 0.17579338014203383 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1909, 'weights': 'distance'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:49:27,329] Trial 179 finished with value: 0.14877677335862421 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:49:39,614] Trial 178 finished with value: 0.14992119662617936 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 10, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:50:05,331] Trial 172 finished with value: 0.14844662180310936 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:51:24,636] Trial 176 finished with value: 0.14987773500953183 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 161 with value: 0.14823244460361557.
running
[I 2024-10-29 20:52:43,848] Trial 177 finished with value: 0.14815975783475485 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 177 with value: 0.14815975783475485.
running
[I 2024-10-29 20:57:02,660] Trial 180 finished with value: 0.14971254665406447 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 20:59:07,486] Trial 182 finished with value: 0.1484148738951208 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:17:43,936] Trial 184 finished with value: 0.15047472074288443 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:22:21,466] Trial 186 finished with value: 0.14984090250330856 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:22:31,471] Trial 185 finished with value: 0.14977742840759636 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:22:37,511] Trial 187 finished with value: 0.150176188541766 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'random'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:23:53,127] Trial 188 finished with value: 0.14956131901332817 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:25:00,631] Trial 189 finished with value: 0.15122450411585758 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:26:02,144] Trial 190 finished with value: 0.1500310019547342 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:26:41,245] Trial 195 finished with value: 0.1500575738032586 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:27:41,510] Trial 192 finished with value: 0.15102161959755991 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:27:54,352] Trial 194 finished with value: 0.1502957355704695 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:28:18,945] Trial 198 finished with value: 0.15105571468879803 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 11, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:28:40,131] Trial 196 finished with value: 0.15069261083911917 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:29:12,013] Trial 199 finished with value: 0.14900891976536404 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 11, 'imputation_order': 'random'}. Best is trial 177 with value: 0.14815975783475485.
[I 2024-10-29 21:29:37,336] Trial 197 finished with value: 0.15004892366243547 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'most_frequent', 'n_nearest_features': 12, 'imputation_order': 'arabic'}. Best is trial 177 with value: 0.14815975783475485.
fit
auto fit
auto transform
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
dtype: int64
0     0
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
dtype: int64
0.14815975783475485
{'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'median', 'n_nearest_features': 12, 'imputation_order': 'random'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.855077247385843
Generation:   4%|▍         | 1/25 [01:54<45:59, 114.97s/it]Generation:  2
Best f1_score score: 0.8572118209810762
Generation:   8%|▊         | 2/25 [02:45<29:36, 77.24s/it] Generation:  3
Best f1_score score: 0.8605392948590047
Generation:  12%|█▏        | 3/25 [03:38<24:10, 65.93s/it]Generation:  4
Best f1_score score: 0.8605392948590047
Generation:  16%|█▌        | 4/25 [03:52<15:53, 45.41s/it]Generation:  5
Best f1_score score: 0.8605392948590047
Generation:  20%|██        | 5/25 [04:04<11:08, 33.43s/it]Generation:  6
Best f1_score score: 0.8605392948590047
Generation:  24%|██▍       | 6/25 [04:25<09:13, 29.14s/it]Generation:  7
Best f1_score score: 0.8605392948590047
Generation:  28%|██▊       | 7/25 [04:34<06:47, 22.66s/it]Generation:  8
Best f1_score score: 0.8607808056400781
Generation:  32%|███▏      | 8/25 [04:57<06:26, 22.74s/it]Generation:  9
Best f1_score score: 0.8607808056400781
Generation:  36%|███▌      | 9/25 [05:24<06:27, 24.19s/it]Generation:  10
Best f1_score score: 0.8607808056400781
Generation:  40%|████      | 10/25 [05:41<05:26, 21.79s/it]Generation:  11
Best f1_score score: 0.8607808056400781
Generation:  44%|████▍     | 11/25 [05:56<04:36, 19.78s/it]Generation:  12
Best f1_score score: 0.8607808056400781
Generation:  48%|████▊     | 12/25 [06:13<04:07, 19.02s/it]Generation:  13
Best f1_score score: 0.8607808056400781
Generation:  52%|█████▏    | 13/25 [06:34<03:53, 19.48s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155467fd4880> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  14
Best f1_score score: 0.861230481433297
Generation:  56%|█████▌    | 14/25 [07:05<04:11, 22.88s/it]Generation:  15
Best f1_score score: 0.861230481433297
Generation:  60%|██████    | 15/25 [07:20<03:26, 20.63s/it]Generation:  16
Best f1_score score: 0.8621097146118887
Generation:  64%|██████▍   | 16/25 [07:36<02:53, 19.30s/it]Generation:  17
Best f1_score score: 0.8621097146118887
Generation:  68%|██████▊   | 17/25 [07:49<02:18, 17.32s/it]Generation:  18
Best f1_score score: 0.8622534614648378
Generation:  72%|███████▏  | 18/25 [08:10<02:08, 18.33s/it]Generation:  19
Best f1_score score: 0.8622534614648378
Generation:  76%|███████▌  | 19/25 [08:34<02:00, 20.08s/it]Generation:  20
Best f1_score score: 0.8624745558095203
Generation:  80%|████████  | 20/25 [08:50<01:34, 18.81s/it]Generation:  21
Best f1_score score: 0.8624745558095203
Generation:  84%|████████▍ | 21/25 [09:22<01:31, 22.93s/it]Generation:  22
Best f1_score score: 0.8624745558095203
Generation:  88%|████████▊ | 22/25 [09:45<01:08, 22.85s/it]Generation:  23
Best f1_score score: 0.8624745558095203
Generation:  92%|█████████▏| 23/25 [10:04<00:43, 21.65s/it]Generation:  24
Best f1_score score: 0.8624745558095203
Generation:  96%|█████████▌| 24/25 [10:43<00:27, 27.08s/it]Generation:  25
Best f1_score score: 0.8624745558095203
Generation: 100%|██████████| 25/25 [11:15<00:00, 28.60s/it]Generation: 100%|██████████| 25/25 [11:19<00:00, 27.19s/it]
2024-10-29 21:49:12,255 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:35855' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-75556c436dd71b66be36a6e72cf17556', 'ndarray-8d226af04d9dc1f59191cd99443f85be'} (stimulus_id='handle-worker-cleanup-1730263752.2555034')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(class_weight='balanced', max_depth=6,
                                n_estimators=38, n_jobs=1, num_leaves=16,
                                verbose=-1))])
score start
train score: {'auroc': 0.9599939461351272, 'accuracy': 0.8925651264498954, 'balanced_accuracy': 0.8928409997708013, 'logloss': 0.27230586207243107, 'f1': 0.89225089909225}
original test score: {'auroc': 0.937569105691057, 'accuracy': 0.8585551330798479, 'balanced_accuracy': 0.8586527293844366, 'logloss': 0.32312043417086306, 'f1': 0.858141590456703}
imputed test score: {'auroc': 0.9316178861788619, 'accuracy': 0.8562737642585552, 'balanced_accuracy': 0.8565098722415796, 'logloss': 0.33686719262655923, 'f1': 0.8558884054920529}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014610>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.8557875105718965
Generation:   4%|▍         | 1/25 [00:43<17:27, 43.63s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d22a10> 
 Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 938, in fit
    return self._fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 725, in _fit
    self._partial_fit(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SGDClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  2
Best f1_score score: 0.8557875105718965
Generation:   8%|▊         | 2/25 [01:22<15:44, 41.08s/it]Generation:  3
Best f1_score score: 0.8570681362006903
Generation:  12%|█▏        | 3/25 [01:47<12:22, 33.76s/it]Generation:  4
Best f1_score score: 0.8574352692922986
Generation:  16%|█▌        | 4/25 [02:34<13:34, 38.79s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d7a170> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547425d630> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d58dc0> 

Generation:  5
Best f1_score score: 0.858170851346115
Generation:  20%|██        | 5/25 [12:39<1:21:00, 243.01s/it]Generation:  6
Best f1_score score: 0.858465514741097
Generation:  24%|██▍       | 6/25 [21:16<1:46:29, 336.29s/it]Generation:  7
Best f1_score score: 0.858465514741097
Generation:  28%|██▊       | 7/25 [21:55<1:11:39, 238.89s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e5ecd90> 

Generation:  8
Best f1_score score: 0.858465514741097
Generation:  32%|███▏      | 8/25 [31:58<1:40:33, 354.94s/it]Generation:  9
Best f1_score score: 0.858465514741097
Generation:  36%|███▌      | 9/25 [34:15<1:16:25, 286.60s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545fd16650> 

Generation:  10
Best f1_score score: 0.858465514741097
Generation:  40%|████      | 10/25 [44:20<1:36:16, 385.12s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474595420> 

Generation:  11
Best f1_score score: 0.8597061073508705
Generation:  44%|████▍     | 11/25 [54:25<1:45:33, 452.39s/it]Generation:  12
Best f1_score score: 0.8597061073508705
Generation:  48%|████▊     | 12/25 [56:47<1:17:31, 357.81s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545a37c5b0> 

Generation:  13
Best f1_score score: 0.8608816082838342
Generation:  52%|█████▏    | 13/25 [1:06:54<1:26:39, 433.31s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745c5cf0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  14
Best f1_score score: 0.8652396726639019
Generation:  56%|█████▌    | 14/25 [1:09:23<1:03:41, 347.37s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d3fb20> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554745cb1f0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bf26c50> 

Generation:  15
Best f1_score score: 0.8652396726639019
Generation:  60%|██████    | 15/25 [1:19:28<1:10:51, 425.14s/it]Generation:  16
Best f1_score score: 0.8652396726639019
Generation:  64%|██████▍   | 16/25 [1:21:51<51:01, 340.18s/it]  WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454da16f0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545d932bc0> 

WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474d26950> 

Generation:  17
Best f1_score score: 0.8652396726639019
Generation:  68%|██████▊   | 17/25 [1:31:58<56:02, 420.35s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dabf1c0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545bd38b80> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  18
Best f1_score score: 0.8661287408818481
Generation:  72%|███████▏  | 18/25 [1:33:07<36:43, 314.76s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545dd0dcc0> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  19
Best f1_score score: 0.8669408411814112
Generation:  76%|███████▌  | 19/25 [1:34:28<24:28, 244.77s/it]Generation:  20
Best f1_score score: 0.8669408411814112
Generation:  80%|████████  | 20/25 [1:37:07<18:15, 219.03s/it]Generation:  21
Best f1_score score: 0.8669408411814112
Generation:  84%|████████▍ | 21/25 [1:38:51<12:18, 184.57s/it]Generation:  22
Best f1_score score: 0.8669408411814112
Generation:  88%|████████▊ | 22/25 [1:39:42<07:13, 144.37s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15545e625600> 
 Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 751, in fit
    return self._fit(X, y, incremental=False)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 441, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 1096, in _validate_input
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
MLPClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  23
Best f1_score score: 0.8669408411814112
Generation:  92%|█████████▏| 23/25 [1:42:22<04:57, 148.90s/it]WARNING AN INDIVIDUAL TIMED OUT: 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554572d3ee0> 

Generation:  24
Best f1_score score: 0.8669408411814112
Generation:  96%|█████████▌| 24/25 [1:52:26<04:45, 285.59s/it]Generation:  25
Best f1_score score: 0.8669408411814112
Generation: 100%|██████████| 25/25 [2:02:26<00:00, 379.96s/it]Generation: 100%|██████████| 25/25 [2:02:26<00:00, 293.87s/it]
2024-10-29 23:51:53,072 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:40477' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-75556c436dd71b66be36a6e72cf17556', 'DataFrame-07612ee218adb0543f07f0dfe99501d8'} (stimulus_id='handle-worker-cleanup-1730271113.0719051')
Fitted
Pipeline(steps=[('knnimputer', KNNImputer(n_neighbors=84)),
                ('mlpclassifier',
                 MLPClassifier(alpha=0.0080318963675, hidden_layer_sizes=[309],
                               learning_rate='adaptive',
                               learning_rate_init=0.0020071135214,
                               n_iter_no_change=32))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9473016001201477, 'accuracy': 0.874500855675984, 'balanced_accuracy': 0.8740394500511122, 'logloss': 0.292497158955482, 'f1': 0.873983390353416}
test score: {'auroc': 0.9372706155632985, 'accuracy': 0.8577946768060837, 'balanced_accuracy': 0.8575435540069687, 'logloss': 0.321055921038719, 'f1': 0.8572925837177573}
original test score: {'auroc': 0.9441184668989547, 'accuracy': 0.8661596958174905, 'balanced_accuracy': 0.8657955865272938, 'logloss': 0.30214497997834555, 'f1': 0.8656499468265431}
score end
847
lvl
0.1
type
MNAR
num_run
2
class_full
finished
all finished
full run takes
8.270391777621375
hours
DONE
