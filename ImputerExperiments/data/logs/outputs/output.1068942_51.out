Run: 51
/cm/local/apps/slurm/var/spool/job1068942/slurm_script: line 26: 
pip install -e tpot2
pip install -r tpot2/ImputerExperiments/requirements_.txt
: No such file or directory
RunStart
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
starting loops
../data/c/40983/40983.pkl
working on 
../data/c/40983/class_full_MCAR_0.3_3
1.6474976539611816
running experiment 1/3 - Does large hyperparameter space improve reconstruction accuracy over simple
[I 2024-11-21 21:38:26,140] A new study created in memory with name: no-name-505ba86c-3d14-4056-b0e6-78ad654323e4
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
running
[I 2024-11-21 21:38:26,386] Trial 6 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 6 with value: 0.2886684558576481.
running
[I 2024-11-21 21:38:26,507] Trial 12 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 6 with value: 0.2886684558576481.
running
[I 2024-11-21 21:38:26,603] Trial 4 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:26,724] Trial 3 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:26,834] Trial 14 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:27,107] Trial 20 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:27,613] Trial 8 finished with value: 0.10327048269019348 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3588, 'weights': 'uniform'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:27,840] Trial 13 finished with value: 0.10316691753182741 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1503, 'weights': 'uniform'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:27,950] Trial 1 finished with value: 0.1030715414060269 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1696, 'weights': 'uniform'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:28,153] Trial 5 finished with value: 0.10337227338753471 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1042, 'weights': 'uniform'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:28,286] Trial 15 finished with value: 0.10299529795773524 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2565, 'weights': 'uniform'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:28,426] Trial 22 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:28,565] Trial 21 finished with value: 0.1099303053996403 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 24, 'weights': 'uniform'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:28,707] Trial 19 finished with value: 0.10326681468074214 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2249, 'weights': 'uniform'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:28,829] Trial 16 finished with value: 0.10307579673983829 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 1803, 'weights': 'uniform'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:32,358] Trial 23 finished with value: 0.290135640378182 and parameters: {'model_name': 'GAIN', 'batch_size': 6, 'hint_rate': 0.2957068999589828, 'alpha': 45, 'iterations': 1, 'learning_rate': 0.0036135034290670385, 'p_miss': 0.12040747048977092}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:32,854] Trial 29 finished with value: 0.28515575938281745 and parameters: {'model_name': 'GAIN', 'batch_size': 176, 'hint_rate': 0.09859674658391687, 'alpha': 81, 'iterations': 1, 'learning_rate': 0.007468957467919396, 'p_miss': 0.1132988661211137}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:38:33,341] Trial 9 finished with value: 0.2851222014246846 and parameters: {'model_name': 'GAIN', 'batch_size': 78, 'hint_rate': 0.3065249664858551, 'alpha': 40, 'iterations': 1, 'learning_rate': 0.0178300909122508, 'p_miss': 0.08404878573446728}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:09,825] Trial 17 finished with value: 0.23392168322990808 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 11, 'learning_rate': 0.009395158304296327, 'p_miss': 0.24194966347304447}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:18,368] Trial 34 finished with value: 0.11499040219245367 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'arabic'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:27,395] Trial 24 finished with value: 0.29734944444071826 and parameters: {'model_name': 'VAE', 'batch_size': 21, 'iterations': 16, 'learning_rate': 0.000101622051056185, 'p_miss': 0.05466644963183174}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:28,149] Trial 18 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 1, 'hint_rate': 0.3800037426069214, 'alpha': 81, 'iterations': 214, 'learning_rate': 0.0004634572823333063, 'p_miss': 0.1447745287276018}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:33,212] Trial 37 finished with value: 0.10309721590155671 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'median', 'n_nearest_features': 1, 'imputation_order': 'ascending'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:33,663] Trial 38 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:34,073] Trial 39 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:34,401] Trial 40 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:34,737] Trial 41 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:35,075] Trial 42 finished with value: 0.10327048269019348 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:35,461] Trial 43 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:41,767] Trial 28 finished with value: 0.1293584720606716 and parameters: {'model_name': 'VAE', 'batch_size': 29, 'iterations': 22, 'learning_rate': 0.011369356283021607, 'p_miss': 0.2573575167456925}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:58,050] Trial 26 finished with value: 0.28706835822592847 and parameters: {'model_name': 'GAIN', 'batch_size': 173, 'hint_rate': 0.8393794637399359, 'alpha': 23, 'iterations': 56, 'learning_rate': 0.0001962344395322551, 'p_miss': 0.0997447228538807}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:58,498] Trial 46 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:59,047] Trial 47 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:59,469] Trial 48 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:39:59,853] Trial 49 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:00,244] Trial 50 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:10,312] Trial 51 finished with value: 0.10222423778938032 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'random', 'sample_posterior': False}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:10,757] Trial 52 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:11,007] Trial 53 finished with value: 0.10327048269019348 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:11,517] Trial 54 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:11,942] Trial 55 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:12,381] Trial 56 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:12,836] Trial 57 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:13,322] Trial 58 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:13,832] Trial 59 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:40:14,215] Trial 60 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:42:50,388] Trial 25 finished with value: 0.2800148670193467 and parameters: {'model_name': 'GAIN', 'batch_size': 103, 'hint_rate': 0.9319419090063331, 'alpha': 41, 'iterations': 157, 'learning_rate': 0.0033047314985634227, 'p_miss': 0.2938300279402861}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:46:29,750] Trial 30 finished with value: 0.10841739475618421 and parameters: {'model_name': 'VAE', 'batch_size': 85, 'iterations': 113, 'learning_rate': 0.024362594118240946, 'p_miss': 0.2595951675664992}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:46:30,188] Trial 63 finished with value: 0.10327048269019348 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:46:56,791] Trial 11 finished with value: 0.2820525121547085 and parameters: {'model_name': 'GAIN', 'batch_size': 70, 'hint_rate': 0.8750030446235023, 'alpha': 36, 'iterations': 327, 'learning_rate': 0.00023987879022522297, 'p_miss': 0.1756436499465697}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:48:19,290] Trial 36 finished with value: 0.12714485155510297 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 1, 'imputation_order': 'random'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:48:19,805] Trial 66 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:48:20,299] Trial 67 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:48:20,715] Trial 68 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:48:21,107] Trial 69 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:48:24,766] Trial 70 finished with value: 0.11878493255361895 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3135, 'weights': 'distance'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:48:25,416] Trial 71 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:48:40,226] Trial 2 finished with value: 0.12253481214698407 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 2, 'imputation_order': 'ascending'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:50:59,123] Trial 44 finished with value: 0.11746636006389966 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'constant', 'n_nearest_features': 3, 'imputation_order': 'roman'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:51:07,924] Trial 45 finished with value: 0.11408418713844401 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 3, 'imputation_order': 'random'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:53:39,787] Trial 10 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.9303889363913929, 'alpha': 97, 'iterations': 2683, 'learning_rate': 0.005223644293287982, 'p_miss': 0.1946990628523411}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:53:40,188] Trial 76 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:53:40,766] Trial 77 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:55:47,225] Trial 64 finished with value: 0.12982942697733274 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'descending'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 21:55:51,200] Trial 65 finished with value: 0.125740705369124 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'RFR', 'initial_strategy': 'mean', 'n_nearest_features': 1, 'imputation_order': 'roman'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 22:22:46,141] Trial 0 finished with value: 0.13241861306850874 and parameters: {'model_name': 'VAE', 'batch_size': 4, 'iterations': 701, 'learning_rate': 0.0005481066450864372, 'p_miss': 0.2909678247372159}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 22:32:17,569] Trial 27 finished with value: 0.11946973442645954 and parameters: {'model_name': 'VAE', 'batch_size': 2, 'iterations': 819, 'learning_rate': 0.07960255772574543, 'p_miss': 0.12642958647283115}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 22:32:18,026] Trial 82 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 22:32:18,537] Trial 83 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 22:32:18,824] Trial 84 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 23:28:56,546] Trial 7 finished with value: 0.11645850762786387 and parameters: {'model_name': 'VAE', 'batch_size': 65, 'iterations': 1671, 'learning_rate': 0.00016027419343445142, 'p_miss': 0.12257724797217324}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 23:28:57,115] Trial 86 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 23:28:57,527] Trial 87 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 23:28:58,128] Trial 88 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-21 23:28:58,449] Trial 89 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:37,470] Trial 78 finished with value: 0.10974057629798498 and parameters: {'model_name': 'VAE', 'batch_size': 900, 'iterations': 3469, 'learning_rate': 0.08159191930891209, 'p_miss': 0.014197933626724474}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:37,934] Trial 91 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:38,381] Trial 92 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:39,850] Trial 93 finished with value: 0.11977613642203663 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 348, 'weights': 'distance'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:49,750] Trial 94 finished with value: 0.2796840495809412 and parameters: {'model_name': 'GAIN', 'batch_size': 789, 'hint_rate': 0.652121763482174, 'alpha': 0, 'iterations': 4, 'learning_rate': 0.0015878445780234725, 'p_miss': 0.2048069653815739}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:50,232] Trial 95 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:50,610] Trial 96 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:51,047] Trial 97 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:51,391] Trial 98 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:51,827] Trial 99 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:52,201] Trial 100 finished with value: 0.10327048269019348 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:52,775] Trial 101 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:05:53,235] Trial 102 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:54,748] Trial 35 finished with value: 0.11314240537370412 and parameters: {'model_name': 'VAE', 'batch_size': 757, 'iterations': 3882, 'learning_rate': 0.00012718630805163262, 'p_miss': 0.2964101161166254}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:55,303] Trial 104 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:55,682] Trial 105 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:56,213] Trial 106 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:56,677] Trial 107 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:57,054] Trial 108 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:57,510] Trial 109 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:59,168] Trial 110 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 11, 'hint_rate': 0.03612745098875669, 'alpha': 67, 'iterations': 4, 'learning_rate': 0.0012529717896544452, 'p_miss': 0.047856601931997894}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:47:59,681] Trial 111 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 02:48:01,652] Trial 112 finished with value: 0.11878493255361895 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 3812, 'weights': 'distance'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:35,917] Trial 75 finished with value: 0.11162288691602582 and parameters: {'model_name': 'VAE', 'batch_size': 910, 'iterations': 4564, 'learning_rate': 0.06995551512183078, 'p_miss': 0.02781979111930588}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:36,343] Trial 114 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:36,637] Trial 115 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:37,117] Trial 116 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:37,629] Trial 117 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:37,935] Trial 118 finished with value: 0.10327048269019348 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:38,368] Trial 119 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:38,948] Trial 120 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:39,387] Trial 121 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:39,697] Trial 122 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:40,143] Trial 123 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:22:40,554] Trial 124 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:45,095] Trial 125 finished with value: 0.11087055979724147 and parameters: {'model_name': 'VAE', 'batch_size': 358, 'iterations': 39, 'learning_rate': 0.031021961046548835, 'p_miss': 0.21673803264543362}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:45,499] Trial 126 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:45,923] Trial 127 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:46,307] Trial 128 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:46,733] Trial 129 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:47,311] Trial 130 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:47,825] Trial 131 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:56,461] Trial 132 finished with value: 0.2853909427409902 and parameters: {'model_name': 'GAIN', 'batch_size': 26, 'hint_rate': 0.6008212055541896, 'alpha': 0, 'iterations': 4, 'learning_rate': 0.0014824215664813506, 'p_miss': 0.1707120329017777}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:58,409] Trial 133 finished with value: 0.1190817238534567 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 872, 'weights': 'distance'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:58,827] Trial 134 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:59,169] Trial 135 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:25:59,635] Trial 136 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:00,044] Trial 137 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:09,873] Trial 138 finished with value: 0.11795983434922855 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'KNN', 'initial_strategy': 'most_frequent', 'n_nearest_features': 5, 'imputation_order': 'descending'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:10,250] Trial 139 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:10,794] Trial 140 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:11,181] Trial 141 finished with value: 0.10327048269019348 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:11,530] Trial 142 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:11,986] Trial 143 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:12,385] Trial 144 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:12,751] Trial 145 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:13,181] Trial 146 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:13,796] Trial 147 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:14,100] Trial 148 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:14,453] Trial 149 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 03:26:14,937] Trial 150 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:26,831] Trial 73 finished with value: 0.11055127973364617 and parameters: {'model_name': 'VAE', 'batch_size': 448, 'iterations': 5807, 'learning_rate': 0.08983824287674431, 'p_miss': 0.19353441642956942}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:27,218] Trial 152 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:27,807] Trial 153 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:28,091] Trial 154 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:31,911] Trial 155 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 2, 'hint_rate': 0.705164569378619, 'alpha': 22, 'iterations': 10, 'learning_rate': 0.0007320445867649547, 'p_miss': 0.07968077963407971}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:32,251] Trial 156 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:32,656] Trial 157 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:33,131] Trial 158 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:33,612] Trial 159 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:34,010] Trial 160 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:53,854] Trial 161 finished with value: 0.16688670002471054 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Bayesian', 'initial_strategy': 'median', 'n_nearest_features': 4, 'imputation_order': 'arabic', 'sample_posterior': True}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:56,469] Trial 162 finished with value: 0.11875860113972689 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 2858, 'weights': 'distance'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:56,854] Trial 163 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 04:24:57,393] Trial 164 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:52,912] Trial 72 finished with value: 0.11133936265120048 and parameters: {'model_name': 'VAE', 'batch_size': 867, 'iterations': 6396, 'learning_rate': 0.09967469982733927, 'p_miss': 0.023249363307888044}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:53,433] Trial 166 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:53,896] Trial 167 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:54,294] Trial 168 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:54,699] Trial 169 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:55,033] Trial 170 finished with value: 0.10327048269019348 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'mean'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:55,381] Trial 171 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:55,823] Trial 172 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:56,197] Trial 173 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:08:56,530] Trial 174 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:04,793] Trial 175 finished with value: 0.25609612704710455 and parameters: {'model_name': 'VAE', 'batch_size': 13, 'iterations': 2, 'learning_rate': 0.03198389898876731, 'p_miss': 0.22584096574383766}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:05,200] Trial 176 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:05,617] Trial 177 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:06,079] Trial 178 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:06,427] Trial 179 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:06,735] Trial 180 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:07,264] Trial 181 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:07,806] Trial 182 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'most_frequent'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:08,186] Trial 183 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:08,585] Trial 184 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:09,006] Trial 185 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:09,321] Trial 186 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:09,744] Trial 187 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:10,128] Trial 188 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:09:10,523] Trial 189 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:11:58,001] Trial 190 finished with value: inf and parameters: {'model_name': 'GAIN', 'batch_size': 4, 'hint_rate': 0.4838337981415393, 'alpha': 58, 'iterations': 547, 'learning_rate': 0.0004267205072154538, 'p_miss': 0.15151873338551664}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:11:58,422] Trial 191 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:12:00,395] Trial 192 finished with value: 0.11903829595589577 and parameters: {'model_name': 'KNNImputer', 'n_neighbors': 980, 'weights': 'distance'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:12:00,797] Trial 193 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:12:05,002] Trial 194 finished with value: 0.10254926289271389 and parameters: {'model_name': 'IterativeImputer', 'estimator': 'Ridge', 'initial_strategy': 'most_frequent', 'n_nearest_features': 4, 'imputation_order': 'arabic'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:12:05,266] Trial 195 finished with value: 0.2886684558576481 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'constant'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:12:05,703] Trial 196 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:12:06,114] Trial 197 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:12:06,475] Trial 198 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
running
[I 2024-11-22 05:12:06,806] Trial 199 finished with value: 0.06495187188319893 and parameters: {'model_name': 'SimpleImputer', 'strategy': 'median'}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 05:35:37,277] Trial 81 finished with value: 0.11127409929675873 and parameters: {'model_name': 'VAE', 'batch_size': 705, 'iterations': 5902, 'learning_rate': 0.0742471132440479, 'p_miss': 0.014853624979699803}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 05:36:58,543] Trial 80 finished with value: 0.11051254796393213 and parameters: {'model_name': 'VAE', 'batch_size': 536, 'iterations': 7214, 'learning_rate': 0.06002753198886284, 'p_miss': 0.018718494646701306}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 05:41:40,273] Trial 32 finished with value: 0.21395454728234195 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 7870, 'learning_rate': 0.00010820478345660671, 'p_miss': 0.25179855993629524}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 05:55:42,127] Trial 33 finished with value: 0.17398847816139096 and parameters: {'model_name': 'VAE', 'batch_size': 1, 'iterations': 8207, 'learning_rate': 0.0001123242963937704, 'p_miss': 0.29226362732290234}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 06:00:15,498] Trial 85 finished with value: 0.11103283525013574 and parameters: {'model_name': 'VAE', 'batch_size': 427, 'iterations': 6827, 'learning_rate': 0.09243830114840822, 'p_miss': 0.05395073830350755}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 06:16:13,859] Trial 90 finished with value: 0.11162147291599527 and parameters: {'model_name': 'VAE', 'batch_size': 942, 'iterations': 6196, 'learning_rate': 0.0009444230868904098, 'p_miss': 0.014514691079389741}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 06:19:04,093] Trial 62 finished with value: 0.11136338688548333 and parameters: {'model_name': 'VAE', 'batch_size': 591, 'iterations': 7630, 'learning_rate': 0.0995138555493827, 'p_miss': 0.026902734252492927}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 06:24:31,494] Trial 79 finished with value: 0.11241583880446396 and parameters: {'model_name': 'VAE', 'batch_size': 758, 'iterations': 7725, 'learning_rate': 0.09723542510207121, 'p_miss': 0.020313166673620875}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 06:44:37,421] Trial 31 finished with value: 0.11125033018719468 and parameters: {'model_name': 'VAE', 'batch_size': 703, 'iterations': 8528, 'learning_rate': 0.00015838536710300051, 'p_miss': 0.2970030523333405}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 06:45:29,854] Trial 74 finished with value: 0.1112364468159958 and parameters: {'model_name': 'VAE', 'batch_size': 994, 'iterations': 7705, 'learning_rate': 0.08784889792006598, 'p_miss': 0.018492054622470888}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 06:58:04,630] Trial 61 finished with value: 0.11197448325741624 and parameters: {'model_name': 'VAE', 'batch_size': 679, 'iterations': 9898, 'learning_rate': 0.04440245677722503, 'p_miss': 0.20134601216725612}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 07:00:23,179] Trial 113 finished with value: 0.10977681782128457 and parameters: {'model_name': 'VAE', 'batch_size': 405, 'iterations': 6888, 'learning_rate': 0.042028725125047774, 'p_miss': 0.21849876791718587}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 07:01:10,312] Trial 151 finished with value: 0.10777937849109132 and parameters: {'model_name': 'VAE', 'batch_size': 10, 'iterations': 6776, 'learning_rate': 0.0005722295937850152, 'p_miss': 0.07913551080628885}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 07:02:04,483] Trial 103 finished with value: 0.1089754509977187 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 9054, 'learning_rate': 0.0015262532204387428, 'p_miss': 0.02991896240708139}. Best is trial 4 with value: 0.06495187188319893.
[I 2024-11-22 07:02:10,326] Trial 165 finished with value: 0.11775401957007792 and parameters: {'model_name': 'VAE', 'batch_size': 12, 'iterations': 8140, 'learning_rate': 0.041861072553182666, 'p_miss': 0.15584686711647314}. Best is trial 4 with value: 0.06495187188319893.
fit
auto fit
auto transform
0    0
1    0
2    0
3    0
4    0
dtype: int64
0    0
1    0
2    0
3    0
4    0
dtype: int64
0.06495187188319893
{'model_name': 'SimpleImputer', 'strategy': 'median'}
running experiment 2/3 - Does reconstruction give good automl predictions
Start est fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]Generation:  1
Best f1_score score: 0.6452616294725885
Generation:   4%|▍         | 1/25 [00:09<03:45,  9.40s/it]Generation:  2
Best f1_score score: 0.66562051222916
Generation:   8%|▊         | 2/25 [00:19<03:43,  9.70s/it]Generation:  3
Best f1_score score: 0.6715968135867871
Generation:  12%|█▏        | 3/25 [00:34<04:27, 12.15s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554746ff4c0> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  4
Best f1_score score: 0.6843862621011126
Generation:  16%|█▌        | 4/25 [00:46<04:17, 12.27s/it]Generation:  5
Best f1_score score: 0.7122003915570331
Generation:  20%|██        | 5/25 [00:58<03:58, 11.92s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474733970> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  6
Best f1_score score: 0.7290438818034615
Generation:  24%|██▍       | 6/25 [01:05<03:20, 10.54s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155465671f00> 
 The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead. 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1466, in wrapper
    estimator._validate_params()
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'min_samples_split' parameter of DecisionTreeClassifier must be an int in the range [2, inf) or a float in the range (0.0, 1.0]. Got 1 instead.

Generation:  7
Best f1_score score: 0.7290438818034615
Generation:  28%|██▊       | 7/25 [01:17<03:16, 10.94s/it]Generation:  8
Best f1_score score: 0.7290438818034615
Generation:  32%|███▏      | 8/25 [01:28<03:03, 10.81s/it]Generation:  9
Best f1_score score: 0.7290438818034615
Generation:  36%|███▌      | 9/25 [01:37<02:46, 10.39s/it]Generation:  10
Best f1_score score: 0.7290438818034615
Generation:  40%|████      | 10/25 [01:46<02:26,  9.76s/it]Generation:  11
Best f1_score score: 0.7290438818034615
Generation:  44%|████▍     | 11/25 [01:54<02:12,  9.47s/it]Generation:  12
Best f1_score score: 0.7290438818034615
Generation:  48%|████▊     | 12/25 [02:50<05:06, 23.59s/it]Generation:  13
Best f1_score score: 0.7290438818034615
Generation:  52%|█████▏    | 13/25 [02:59<03:50, 19.19s/it]Generation:  14
Best f1_score score: 0.7290438818034615
Generation:  56%|█████▌    | 14/25 [03:15<03:19, 18.09s/it]Generation:  15
Best f1_score score: 0.7290438818034615
Generation:  60%|██████    | 15/25 [03:26<02:38, 15.86s/it]Generation:  16
Best f1_score score: 0.7290438818034615
Generation:  64%|██████▍   | 16/25 [03:36<02:07, 14.13s/it]Generation:  17
Best f1_score score: 0.7290438818034615
Generation:  68%|██████▊   | 17/25 [03:50<01:52, 14.12s/it]Generation:  18
Best f1_score score: 0.7290438818034615
Generation:  72%|███████▏  | 18/25 [04:01<01:33, 13.29s/it]Generation:  19
Best f1_score score: 0.7290438818034615
Generation:  76%|███████▌  | 19/25 [04:14<01:19, 13.23s/it]Generation:  20
Best f1_score score: 0.7290438818034615
Generation:  80%|████████  | 20/25 [04:33<01:13, 14.79s/it]Generation:  21
Best f1_score score: 0.7290438818034615
Generation:  84%|████████▍ | 21/25 [04:50<01:02, 15.68s/it]Generation:  22
Best f1_score score: 0.7290438818034615
Generation:  88%|████████▊ | 22/25 [05:02<00:43, 14.59s/it]Generation:  23
Best f1_score score: 0.7290438818034615
Generation:  92%|█████████▏| 23/25 [05:51<00:49, 24.82s/it]Generation:  24
Best f1_score score: 0.7290438818034615
Generation:  96%|█████████▌| 24/25 [06:07<00:22, 22.14s/it]Generation:  25
Best f1_score score: 0.7303424221107796
Generation: 100%|██████████| 25/25 [06:23<00:00, 20.38s/it]Generation: 100%|██████████| 25/25 [06:27<00:00, 15.50s/it]
2024-11-22 07:08:48,992 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:34249' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-75d5a44bfb61c926a4eb87c2e37393eb', 'ndarray-ebd5ec05bb0f66b412969f9be33321b3'} (stimulus_id='handle-worker-cleanup-1732288128.992296')
Fitted
Pipeline(steps=[('lgbmclassifier',
                 LGBMClassifier(max_depth=9, n_estimators=92, n_jobs=1,
                                num_leaves=205, verbose=-1))])
score start
train score: {'auroc': 0.9986548778480135, 'accuracy': 0.9883750968741927, 'balanced_accuracy': 0.8946003046940125, 'logloss': 0.039742725504116054, 'f1': 0.9369458395547713}
original test score: {'auroc': 0.9527418542156533, 'accuracy': 0.9741735537190083, 'balanced_accuracy': 0.7868239838763855, 'logloss': 0.08469911488032426, 'f1': 0.8461880700416309}
imputed test score: {'auroc': 0.8939788377561304, 'accuracy': 0.9628099173553719, 'balanced_accuracy': 0.6538461538461539, 'logloss': 0.1353757856184481, 'f1': 0.7256581433429903}
score end
check intended
EXP2 Finished
running experiment 3/3 - What is the best automl settings?
<tpot2.search_spaces.pipelines.sequential.SequentialPipeline object at 0x155435014670>
Start tpot fit
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
  0%|          | 0/25 [00:00<?, ?it/s]Generation:   0%|          | 0/25 [00:00<?, ?it/s]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0df0> 
 Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py", line 1223, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LogisticRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0df0> 
 Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/tree/_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 213, in assert_all_finite
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  1
Best f1_score score: 0.7140452837518947
Generation:   4%|▍         | 1/25 [03:31<1:24:33, 211.39s/it]Generation:  2
Best f1_score score: 0.7140452837518947
Generation:   8%|▊         | 2/25 [07:05<1:21:45, 213.27s/it]Generation:  3
Best f1_score score: 0.7140452837518947
Generation:  12%|█▏        | 3/25 [10:47<1:19:35, 217.09s/it]Generation:  4
Best f1_score score: 0.7236802000147512
Generation:  16%|█▌        | 4/25 [14:24<1:15:54, 216.86s/it]malloc(): invalid next size (unsorted)
2024-11-22 07:24:07,071 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
malloc(): invalid next size (unsorted)
2024-11-22 07:24:48,135 - distributed.scheduler - ERROR - Task eval_objective_list-cc05825d0752a30cb6ee33996d9fc311 marked as failed because 2 workers died while trying to run it
Exception in future
Attempted to run task 'eval_objective_list-cc05825d0752a30cb6ee33996d9fc311' on 2 different workers, but all those workers died while running it. The last worker that attempt to run the task was tcp://127.0.0.1:39963. Inspecting worker logs is often a good next step to diagnose what went wrong. For more information see https://distributed.dask.org/en/stable/killed.html.
2024-11-22 07:24:48,140 - distributed.nanny - WARNING - Restarting worker
Version 0.1.7a0 of tpot2 is outdated. Version 0.1.8a0 was released Tuesday September 17, 2024.
Generation:  5
Best f1_score score: 0.7236802000147512
Generation:  20%|██        | 5/25 [18:05<1:12:46, 218.33s/it]Generation:  6
Best f1_score score: 0.7236802000147512
Generation:  24%|██▍       | 6/25 [24:43<1:28:30, 279.48s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155454cfe770> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  7
Best f1_score score: 0.7236802000147512
Generation:  28%|██▊       | 7/25 [28:17<1:17:27, 258.21s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x15547458eaa0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155474cd0e80> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  8
Best f1_score score: 0.7236802000147512
Generation:  32%|███▏      | 8/25 [31:54<1:09:28, 245.20s/it]Generation:  9
Best f1_score score: 0.7236802000147512
Generation:  36%|███▌      | 9/25 [35:31<1:03:01, 236.36s/it]Generation:  10
Best f1_score score: 0.7236802000147512
Generation:  40%|████      | 10/25 [39:07<57:31, 230.07s/it] Generation:  11
Best f1_score score: 0.7236802000147512
Generation:  44%|████▍     | 11/25 [42:43<52:40, 225.76s/it]Generation:  12
Best f1_score score: 0.7236802000147512
Generation:  48%|████▊     | 12/25 [46:20<48:17, 222.90s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x1554744e8f70> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  13
Best f1_score score: 0.7236802000147512
Generation:  52%|█████▏    | 13/25 [49:56<44:10, 220.84s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155456cf0c40> 
 Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1301, in check_X_y
    X = check_array(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values

Generation:  14
Best f1_score score: 0.7509595396080648
Generation:  56%|█████▌    | 14/25 [53:28<39:59, 218.09s/it]Generation:  15
Best f1_score score: 0.7509595396080648
Generation:  60%|██████    | 15/25 [57:02<36:09, 216.98s/it]WARNING THIS INDIVIDUAL CAUSED AND EXCEPTION 
 <tpot2.search_spaces.pipelines.sequential.SequentialPipelineIndividual object at 0x155452c643a0> 
 Negative values in data passed to MultinomialNB (input X) 
 Traceback (most recent call last):
  File "/common/ketrong/tpotexp/tpot2/tpot2/utils/eval_utils.py", line 53, in objective_nan_wrapper
    value = func_timeout.func_timeout(timeout, objective_function, args=[individual], kwargs=objective_kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/dafunc.py", line 108, in func_timeout
    raise_exception(exception)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/func_timeout/py3_raise.py", line 7, in raise_exception
    raise exception[0] from None
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator.py", line 623, in objective_function
    return objective_function_generator(
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/estimator_utils.py", line 55, in objective_function_generator
    cv_obj_scores = cross_val_score_objective(sklearn.base.clone(pipeline),x,y,scorers=scorers, cv=cv , fold=step)
  File "/common/ketrong/tpotexp/tpot2/tpot2/tpot_estimator/cross_val_utils.py", line 28, in cross_val_score_objective
    this_fold_pipeline.fit(X_train,y_train)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/pipeline.py", line 473, in fit
    self._final_estimator.fit(Xt, y, **last_step_params["fit"])
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 759, in fit
    self._count(X, Y)
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/naive_bayes.py", line 881, in _count
    check_non_negative(X, "MultinomialNB (input X)")
  File "/common/ketrong/tpotexp/env/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1689, in check_non_negative
    raise ValueError("Negative values in data passed to %s" % whom)
ValueError: Negative values in data passed to MultinomialNB (input X)

Generation:  16
Best f1_score score: 0.7526724908700198
Generation:  64%|██████▍   | 16/25 [1:00:39<32:33, 217.08s/it]Generation:  17
Best f1_score score: 0.7526724908700198
Generation:  68%|██████▊   | 17/25 [1:04:16<28:55, 216.98s/it]Generation:  18
Best f1_score score: 0.7526724908700198
Generation:  72%|███████▏  | 18/25 [1:07:54<25:20, 217.25s/it]Generation:  19
Best f1_score score: 0.7526724908700198
Generation:  76%|███████▌  | 19/25 [1:11:28<21:38, 216.42s/it]Generation:  20
Best f1_score score: 0.7526724908700198
Generation:  80%|████████  | 20/25 [1:17:07<21:05, 253.19s/it]Generation:  21
Best f1_score score: 0.7531289538191711
Generation:  84%|████████▍ | 21/25 [1:20:40<16:04, 241.00s/it]Generation:  22
Best f1_score score: 0.7531289538191711
Generation:  88%|████████▊ | 22/25 [1:24:17<11:41, 233.88s/it]Generation:  23
Best f1_score score: 0.7566514342718813
Generation:  92%|█████████▏| 23/25 [1:27:48<07:33, 226.97s/it]Generation:  24
Best f1_score score: 0.7566514342718813
Generation:  96%|█████████▌| 24/25 [1:31:22<03:43, 223.13s/it]Generation:  25
Best f1_score score: 0.7566514342718813
Generation: 100%|██████████| 25/25 [1:33:33<00:00, 195.48s/it]Generation: 100%|██████████| 25/25 [1:33:33<00:00, 224.55s/it]
2024-11-22 08:42:30,963 - distributed.scheduler - ERROR - Removing worker 'tcp://127.0.0.1:37319' caused the cluster to lose scattered data, which can't be recovered: {'ndarray-ebd5ec05bb0f66b412969f9be33321b3', 'DataFrame-396abfed0fcfe96851533caca4afab34'} (stimulus_id='handle-worker-cleanup-1732293750.963182')
Fitted
Pipeline(steps=[('iterativeimputer',
                 IterativeImputer(estimator=Ridge(),
                                  initial_strategy='most_frequent',
                                  n_nearest_features=28)),
                ('lgbmclassifier',
                 LGBMClassifier(boosting_type='dart', max_depth=9,
                                n_estimators=77, n_jobs=1, num_leaves=248,
                                verbose=-1))])
transform worked
try transform
transform worked
score start
train score: {'auroc': 0.9982315465442315, 'accuracy': 0.9801084990958409, 'balanced_accuracy': 0.8180452807705675, 'logloss': 0.06412691237217302, 'f1': 0.8825516961751587}
test score: {'auroc': 0.8501847497480686, 'accuracy': 0.9597107438016529, 'balanced_accuracy': 0.6612781323480014, 'logloss': 0.14760786257887082, 'f1': 0.7224097236009088}
original test score: {'auroc': 0.9760875041988579, 'accuracy': 0.9762396694214877, 'balanced_accuracy': 0.8241938192811555, 'logloss': 0.07874812984802423, 'f1': 0.8673933112957504}
score end
40983
lvl
0.3
type
MCAR
num_run
3
class_full
finished
all finished
full run takes
11.070040509170957
hours
DONE
